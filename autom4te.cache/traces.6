m4trace:/usr/share/aclocal/ltargz.m4:12: -1- AC_DEFUN([LT_FUNC_ARGZ], [
AC_CHECK_HEADERS([argz.h], [], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_TYPES([error_t],
  [],
  [AC_DEFINE([error_t], [int],
   [Define to a type to use for 'error_t' if it is not otherwise available.])
   AC_DEFINE([__error_t_defined], [1], [Define so that glibc/gnulib argp.h
    does not typedef error_t.])],
  [#if defined(HAVE_ARGZ_H)
#  include <argz.h>
#endif])

LT_ARGZ_H=
AC_CHECK_FUNCS([argz_add argz_append argz_count argz_create_sep argz_insert \
	argz_next argz_stringify], [], [LT_ARGZ_H=lt__argz.h; AC_LIBOBJ([lt__argz])])

dnl if have system argz functions, allow forced use of
dnl libltdl-supplied implementation (and default to do so
dnl on "known bad" systems). Could use a runtime check, but
dnl (a) detecting malloc issues is notoriously unreliable
dnl (b) only known system that declares argz functions,
dnl     provides them, yet they are broken, is cygwin
dnl     releases prior to 16-Mar-2007 (1.5.24 and earlier)
dnl So, it's more straightforward simply to special case
dnl this for known bad systems.
AS_IF([test -z "$LT_ARGZ_H"],
    [AC_CACHE_CHECK(
        [if argz actually works],
        [lt_cv_sys_argz_works],
        [[case $host_os in #(
	 *cygwin*)
	   lt_cv_sys_argz_works=no
	   if test no != "$cross_compiling"; then
	     lt_cv_sys_argz_works="guessing no"
	   else
	     lt_sed_extract_leading_digits='s/^\([0-9\.]*\).*/\1/'
	     save_IFS=$IFS
	     IFS=-.
	     set x `uname -r | sed -e "$lt_sed_extract_leading_digits"`
	     IFS=$save_IFS
	     lt_os_major=${2-0}
	     lt_os_minor=${3-0}
	     lt_os_micro=${4-0}
	     if test 1 -lt "$lt_os_major" \
		|| { test 1 -eq "$lt_os_major" \
		  && { test 5 -lt "$lt_os_minor" \
		    || { test 5 -eq "$lt_os_minor" \
		      && test 24 -lt "$lt_os_micro"; }; }; }; then
	       lt_cv_sys_argz_works=yes
	     fi
	   fi
	   ;; #(
	 *) lt_cv_sys_argz_works=yes ;;
	 esac]])
     AS_IF([test yes = "$lt_cv_sys_argz_works"],
        [AC_DEFINE([HAVE_WORKING_ARGZ], 1,
                   [This value is set to 1 to indicate that the system argz facility works])],
        [LT_ARGZ_H=lt__argz.h
        AC_LIBOBJ([lt__argz])])])

AC_SUBST([LT_ARGZ_H])
])
m4trace:/usr/share/aclocal/ltdl.m4:16: -1- AC_DEFUN([LT_CONFIG_LTDL_DIR], [AC_BEFORE([$0], [LTDL_INIT])
_$0($*)
])
m4trace:/usr/share/aclocal/ltdl.m4:68: -1- AC_DEFUN([LTDL_CONVENIENCE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_CONVENIENCE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/share/aclocal/ltdl.m4:81: -1- AU_DEFUN([AC_LIBLTDL_CONVENIENCE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/share/aclocal/ltdl.m4:81: -1- AC_DEFUN([AC_LIBLTDL_CONVENIENCE], [m4_warn([obsolete], [The macro `AC_LIBLTDL_CONVENIENCE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/share/aclocal/ltdl.m4:124: -1- AC_DEFUN([LTDL_INSTALLABLE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_INSTALLABLE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/share/aclocal/ltdl.m4:137: -1- AU_DEFUN([AC_LIBLTDL_INSTALLABLE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/share/aclocal/ltdl.m4:137: -1- AC_DEFUN([AC_LIBLTDL_INSTALLABLE], [m4_warn([obsolete], [The macro `AC_LIBLTDL_INSTALLABLE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/share/aclocal/ltdl.m4:213: -1- AC_DEFUN([_LT_LIBOBJ], [
  m4_pattern_allow([^_LT_LIBOBJS$])
  _LT_LIBOBJS="$_LT_LIBOBJS $1.$ac_objext"
])
m4trace:/usr/share/aclocal/ltdl.m4:226: -1- AC_DEFUN([LTDL_INIT], [dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

dnl We need to keep our own list of libobjs separate from our parent project,
dnl and the easiest way to do that is redefine the AC_LIBOBJs macro while
dnl we look for our own LIBOBJs.
m4_pushdef([AC_LIBOBJ], m4_defn([_LT_LIBOBJ]))
m4_pushdef([AC_LIBSOURCES])

dnl If not otherwise defined, default to the 1.5.x compatible subproject mode:
m4_if(_LTDL_MODE, [],
        [m4_define([_LTDL_MODE], m4_default([$2], [subproject]))
        m4_if([-1], [m4_bregexp(_LTDL_MODE, [\(subproject\|\(non\)?recursive\)])],
                [m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])

AC_ARG_WITH([included_ltdl],
    [AS_HELP_STRING([--with-included-ltdl],
                    [use the GNU ltdl sources included here])])

if test yes != "$with_included_ltdl"; then
  # We are not being forced to use the included libltdl sources, so
  # decide whether there is a useful installed version we can use.
  AC_CHECK_HEADER([ltdl.h],
      [AC_CHECK_DECL([lt_dlinterface_register],
	   [AC_CHECK_LIB([ltdl], [lt_dladvise_preload],
	       [with_included_ltdl=no],
	       [with_included_ltdl=yes])],
	   [with_included_ltdl=yes],
	   [AC_INCLUDES_DEFAULT
	    #include <ltdl.h>])],
      [with_included_ltdl=yes],
      [AC_INCLUDES_DEFAULT]
  )
fi

dnl If neither LT_CONFIG_LTDL_DIR, LTDL_CONVENIENCE nor LTDL_INSTALLABLE
dnl was called yet, then for old times' sake, we assume libltdl is in an
dnl eponymous directory:
AC_PROVIDE_IFELSE([LT_CONFIG_LTDL_DIR], [], [_LT_CONFIG_LTDL_DIR([libltdl])])

AC_ARG_WITH([ltdl_include],
    [AS_HELP_STRING([--with-ltdl-include=DIR],
                    [use the ltdl headers installed in DIR])])

if test -n "$with_ltdl_include"; then
  if test -f "$with_ltdl_include/ltdl.h"; then :
  else
    AC_MSG_ERROR([invalid ltdl include directory: '$with_ltdl_include'])
  fi
else
  with_ltdl_include=no
fi

AC_ARG_WITH([ltdl_lib],
    [AS_HELP_STRING([--with-ltdl-lib=DIR],
                    [use the libltdl.la installed in DIR])])

if test -n "$with_ltdl_lib"; then
  if test -f "$with_ltdl_lib/libltdl.la"; then :
  else
    AC_MSG_ERROR([invalid ltdl library directory: '$with_ltdl_lib'])
  fi
else
  with_ltdl_lib=no
fi

case ,$with_included_ltdl,$with_ltdl_include,$with_ltdl_lib, in
  ,yes,no,no,)
	m4_case(m4_default(_LTDL_TYPE, [convenience]),
	    [convenience], [_LTDL_CONVENIENCE],
	    [installable], [_LTDL_INSTALLABLE],
	  [m4_fatal([unknown libltdl build type: ]_LTDL_TYPE)])
	;;
  ,no,no,no,)
	# If the included ltdl is not to be used, then use the
	# preinstalled libltdl we found.
	AC_DEFINE([HAVE_LTDL], [1],
	  [Define this if a modern libltdl is already installed])
	LIBLTDL=-lltdl
	LTDLDEPS=
	LTDLINCL=
	;;
  ,no*,no,*)
	AC_MSG_ERROR(['--with-ltdl-include' and '--with-ltdl-lib' options must be used together])
	;;
  *)	with_included_ltdl=no
	LIBLTDL="-L$with_ltdl_lib -lltdl"
	LTDLDEPS=
	LTDLINCL=-I$with_ltdl_include
	;;
esac
INCLTDL=$LTDLINCL

# Report our decision...
AC_MSG_CHECKING([where to find libltdl headers])
AC_MSG_RESULT([$LTDLINCL])
AC_MSG_CHECKING([where to find libltdl library])
AC_MSG_RESULT([$LIBLTDL])

_LTDL_SETUP

dnl restore autoconf definition.
m4_popdef([AC_LIBOBJ])
m4_popdef([AC_LIBSOURCES])

AC_CONFIG_COMMANDS_PRE([
    _ltdl_libobjs=
    _ltdl_ltlibobjs=
    if test -n "$_LT_LIBOBJS"; then
      # Remove the extension.
      _lt_sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $_LT_LIBOBJS; do echo "$i"; done | sed "$_lt_sed_drop_objext" | sort -u`; do
        _ltdl_libobjs="$_ltdl_libobjs $lt_libobj_prefix$i.$ac_objext"
        _ltdl_ltlibobjs="$_ltdl_ltlibobjs $lt_libobj_prefix$i.lo"
      done
    fi
    AC_SUBST([ltdl_LIBOBJS], [$_ltdl_libobjs])
    AC_SUBST([ltdl_LTLIBOBJS], [$_ltdl_ltlibobjs])
])

# Only expand once:
m4_define([LTDL_INIT])
])
m4trace:/usr/share/aclocal/ltdl.m4:352: -1- AU_DEFUN([AC_LIB_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:352: -1- AC_DEFUN([AC_LIB_LTDL], [m4_warn([obsolete], [The macro `AC_LIB_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:353: -1- AU_DEFUN([AC_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:353: -1- AC_DEFUN([AC_WITH_LTDL], [m4_warn([obsolete], [The macro `AC_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:354: -1- AU_DEFUN([LT_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:354: -1- AC_DEFUN([LT_WITH_LTDL], [m4_warn([obsolete], [The macro `LT_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:367: -1- AC_DEFUN([_LTDL_SETUP], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([LT_SYS_MODULE_EXT])dnl
AC_REQUIRE([LT_SYS_MODULE_PATH])dnl
AC_REQUIRE([LT_SYS_DLSEARCH_PATH])dnl
AC_REQUIRE([LT_LIB_DLLOAD])dnl
AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl
AC_REQUIRE([LT_FUNC_DLSYM_USCORE])dnl
AC_REQUIRE([LT_SYS_DLOPEN_DEPLIBS])dnl
AC_REQUIRE([LT_FUNC_ARGZ])dnl

m4_require([_LT_CHECK_OBJDIR])dnl
m4_require([_LT_HEADER_DLFCN])dnl
m4_require([_LT_CHECK_DLPREOPEN])dnl
m4_require([_LT_DECL_SED])dnl

dnl Don't require this, or it will be expanded earlier than the code
dnl that sets the variables it relies on:
_LT_ENABLE_INSTALL

dnl _LTDL_MODE specific code must be called at least once:
_LTDL_MODE_DISPATCH

# In order that ltdl.c can compile, find out the first AC_CONFIG_HEADERS
# the user used.  This is so that ltdl.h can pick up the parent projects
# config.h file, The first file in AC_CONFIG_HEADERS must contain the
# definitions required by ltdl.c.
# FIXME: Remove use of undocumented AC_LIST_HEADERS (2.59 compatibility).
AC_CONFIG_COMMANDS_PRE([dnl
m4_pattern_allow([^LT_CONFIG_H$])dnl
m4_ifset([AH_HEADER],
    [LT_CONFIG_H=AH_HEADER],
    [m4_ifset([AC_LIST_HEADERS],
	    [LT_CONFIG_H=`echo "AC_LIST_HEADERS" | $SED 's|^[[      ]]*||;s|[[ :]].*$||'`],
	[])])])
AC_SUBST([LT_CONFIG_H])

AC_CHECK_HEADERS([unistd.h dl.h sys/dl.h dld.h mach-o/dyld.h dirent.h],
	[], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_FUNCS([closedir opendir readdir], [], [AC_LIBOBJ([lt__dirent])])
AC_CHECK_FUNCS([strlcat strlcpy], [], [AC_LIBOBJ([lt__strl])])

m4_pattern_allow([LT_LIBEXT])dnl
AC_DEFINE_UNQUOTED([LT_LIBEXT],["$libext"],[The archive extension])

name=
eval "lt_libprefix=\"$libname_spec\""
m4_pattern_allow([LT_LIBPREFIX])dnl
AC_DEFINE_UNQUOTED([LT_LIBPREFIX],["$lt_libprefix"],[The archive prefix])

name=ltdl
eval "LTDLOPEN=\"$libname_spec\""
AC_SUBST([LTDLOPEN])
])
m4trace:/usr/share/aclocal/ltdl.m4:443: -1- AC_DEFUN([LT_SYS_DLOPEN_DEPLIBS], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_CACHE_CHECK([whether deplibs are loaded by dlopen],
  [lt_cv_sys_dlopen_deplibs],
  [# PORTME does your system automatically load deplibs for dlopen?
  # or its logical equivalent (e.g. shl_load for HP-UX < 11)
  # For now, we just catch OSes we know something about -- in the
  # future, we'll try test this programmatically.
  lt_cv_sys_dlopen_deplibs=unknown
  case $host_os in
  aix3*|aix4.1.*|aix4.2.*)
    # Unknown whether this is true for these versions of AIX, but
    # we want this 'case' here to explicitly catch those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  aix[[4-9]]*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  amigaos*)
    case $host_cpu in
    powerpc)
      lt_cv_sys_dlopen_deplibs=no
      ;;
    esac
    ;;
  bitrig*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  darwin*)
    # Assuming the user has installed a libdl from somewhere, this is true
    # If you are looking for one http://www.opendarwin.org/projects/dlcompat
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  freebsd* | dragonfly*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  gnu* | linux* | k*bsd*-gnu | kopensolaris*-gnu)
    # GNU and its variants, using gnu ld.so (Glibc)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  hpux10*|hpux11*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  interix*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  irix[[12345]]*|irix6.[[01]]*)
    # Catch all versions of IRIX before 6.2, and indicate that we don't
    # know how it worked for any of those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  irix*)
    # The case above catches anything before 6.2, and it's known that
    # at 6.2 and later dlopen does load deplibs.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  netbsd* | netbsdelf*-gnu)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  openbsd*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  osf[[1234]]*)
    # dlopen did load deplibs (at least at 4.x), but until the 5.x series,
    # it did *not* use an RPATH in a shared library to find objects the
    # library depends on, so we explicitly say 'no'.
    lt_cv_sys_dlopen_deplibs=no
    ;;
  osf5.0|osf5.0a|osf5.1)
    # dlopen *does* load deplibs and with the right loader patch applied
    # it even uses RPATH in a shared library to search for shared objects
    # that the library depends on, but there's no easy way to know if that
    # patch is installed.  Since this is the case, all we can really
    # say is unknown -- it depends on the patch being installed.  If
    # it is, this changes to 'yes'.  Without it, it would be 'no'.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  osf*)
    # the two cases above should catch all versions of osf <= 5.1.  Read
    # the comments above for what we know about them.
    # At > 5.1, deplibs are loaded *and* any RPATH in a shared library
    # is used to find them so we can finally say 'yes'.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  qnx*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  solaris*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
    libltdl_cv_sys_dlopen_deplibs=yes
    ;;
  esac
  ])
if test yes != "$lt_cv_sys_dlopen_deplibs"; then
 AC_DEFINE([LTDL_DLOPEN_DEPLIBS], [1],
    [Define if the OS needs help to load dependent libraries for dlopen().])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:545: -1- AU_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])], [], [])
m4trace:/usr/share/aclocal/ltdl.m4:545: -1- AC_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [m4_warn([obsolete], [The macro `AC_LTDL_SYS_DLOPEN_DEPLIBS' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:552: -1- AC_DEFUN([LT_SYS_MODULE_EXT], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([what extension is used for runtime loadable modules],
  [libltdl_cv_shlibext],
[
module=yes
eval libltdl_cv_shlibext=$shrext_cmds
module=no
eval libltdl_cv_shrext=$shrext_cmds
  ])
if test -n "$libltdl_cv_shlibext"; then
  m4_pattern_allow([LT_MODULE_EXT])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_EXT], ["$libltdl_cv_shlibext"],
    [Define to the extension used for runtime loadable modules, say, ".so".])
fi
if test "$libltdl_cv_shrext" != "$libltdl_cv_shlibext"; then
  m4_pattern_allow([LT_SHARED_EXT])dnl
  AC_DEFINE_UNQUOTED([LT_SHARED_EXT], ["$libltdl_cv_shrext"],
    [Define to the shared library suffix, say, ".dylib".])
fi
if test -n "$shared_archive_member_spec"; then
  m4_pattern_allow([LT_SHARED_LIB_MEMBER])dnl
  AC_DEFINE_UNQUOTED([LT_SHARED_LIB_MEMBER], ["($shared_archive_member_spec.o)"],
    [Define to the shared archive member specification, say "(shr.o)".])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:580: -1- AU_DEFUN([AC_LTDL_SHLIBEXT], [m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])], [], [])
m4trace:/usr/share/aclocal/ltdl.m4:580: -1- AC_DEFUN([AC_LTDL_SHLIBEXT], [m4_warn([obsolete], [The macro `AC_LTDL_SHLIBEXT' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:587: -1- AC_DEFUN([LT_SYS_MODULE_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([what variable specifies run-time module search path],
  [lt_cv_module_path_var], [lt_cv_module_path_var=$shlibpath_var])
if test -n "$lt_cv_module_path_var"; then
  m4_pattern_allow([LT_MODULE_PATH_VAR])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_PATH_VAR], ["$lt_cv_module_path_var"],
    [Define to the name of the environment variable that determines the run-time module search path.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:599: -1- AU_DEFUN([AC_LTDL_SHLIBPATH], [m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])], [], [])
m4trace:/usr/share/aclocal/ltdl.m4:599: -1- AC_DEFUN([AC_LTDL_SHLIBPATH], [m4_warn([obsolete], [The macro `AC_LTDL_SHLIBPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:606: -1- AC_DEFUN([LT_SYS_DLSEARCH_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([for the default library search path],
  [lt_cv_sys_dlsearch_path],
  [lt_cv_sys_dlsearch_path=$sys_lib_dlsearch_path_spec])
if test -n "$lt_cv_sys_dlsearch_path"; then
  sys_dlsearch_path=
  for dir in $lt_cv_sys_dlsearch_path; do
    if test -z "$sys_dlsearch_path"; then
      sys_dlsearch_path=$dir
    else
      sys_dlsearch_path=$sys_dlsearch_path$PATH_SEPARATOR$dir
    fi
  done
  m4_pattern_allow([LT_DLSEARCH_PATH])dnl
  AC_DEFINE_UNQUOTED([LT_DLSEARCH_PATH], ["$sys_dlsearch_path"],
    [Define to the system default library search path.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:627: -1- AU_DEFUN([AC_LTDL_SYSSEARCHPATH], [m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])], [], [])
m4trace:/usr/share/aclocal/ltdl.m4:627: -1- AC_DEFUN([AC_LTDL_SYSSEARCHPATH], [m4_warn([obsolete], [The macro `AC_LTDL_SYSSEARCHPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:653: -1- AC_DEFUN([LT_LIB_DLLOAD], [m4_pattern_allow([^LT_DLLOADERS$])
LT_DLLOADERS=
AC_SUBST([LT_DLLOADERS])

AC_LANG_PUSH([C])
lt_dlload_save_LIBS=$LIBS

LIBADD_DLOPEN=
AC_SEARCH_LIBS([dlopen], [dl],
	[AC_DEFINE([HAVE_LIBDL], [1],
		   [Define if you have the libdl library or equivalent.])
	if test "$ac_cv_search_dlopen" != "none required"; then
	  LIBADD_DLOPEN=-ldl
	fi
	libltdl_cv_lib_dl_dlopen=yes
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#if HAVE_DLFCN_H
#  include <dlfcn.h>
#endif
    ]], [[dlopen(0, 0);]])],
	    [AC_DEFINE([HAVE_LIBDL], [1],
		       [Define if you have the libdl library or equivalent.])
	    libltdl_cv_func_dlopen=yes
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
	[AC_CHECK_LIB([svld], [dlopen],
		[AC_DEFINE([HAVE_LIBDL], [1],
			 [Define if you have the libdl library or equivalent.])
	        LIBADD_DLOPEN=-lsvld libltdl_cv_func_dlopen=yes
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"])])])
if test yes = "$libltdl_cv_func_dlopen" || test yes = "$libltdl_cv_lib_dl_dlopen"
then
  lt_save_LIBS=$LIBS
  LIBS="$LIBS $LIBADD_DLOPEN"
  AC_CHECK_FUNCS([dlerror])
  LIBS=$lt_save_LIBS
fi
AC_SUBST([LIBADD_DLOPEN])

LIBADD_SHL_LOAD=
AC_CHECK_FUNC([shl_load],
	[AC_DEFINE([HAVE_SHL_LOAD], [1],
		   [Define if you have the shl_load function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"],
    [AC_CHECK_LIB([dld], [shl_load],
	    [AC_DEFINE([HAVE_SHL_LOAD], [1],
		       [Define if you have the shl_load function.])
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"
	    LIBADD_SHL_LOAD=-ldld])])
AC_SUBST([LIBADD_SHL_LOAD])

case $host_os in
darwin[[1567]].*)
# We only want this for pre-Mac OS X 10.4.
  AC_CHECK_FUNC([_dyld_func_lookup],
	[AC_DEFINE([HAVE_DYLD], [1],
		   [Define if you have the _dyld_func_lookup function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dyld.la"])
  ;;
beos*)
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}load_add_on.la"
  ;;
cygwin* | mingw* | pw32*)
  AC_CHECK_DECLS([cygwin_conv_path], [], [], [[#include <sys/cygwin.h>]])
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}loadlibrary.la"
  ;;
esac

AC_CHECK_LIB([dld], [dld_link],
	[AC_DEFINE([HAVE_DLD], [1],
		   [Define if you have the GNU dld library.])
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dld_link.la"])
AC_SUBST([LIBADD_DLD_LINK])

m4_pattern_allow([^LT_DLPREOPEN$])
LT_DLPREOPEN=
if test -n "$LT_DLLOADERS"
then
  for lt_loader in $LT_DLLOADERS; do
    LT_DLPREOPEN="$LT_DLPREOPEN-dlpreopen $lt_loader "
  done
  AC_DEFINE([HAVE_LIBDLLOADER], [1],
            [Define if libdlloader will be built on this platform])
fi
AC_SUBST([LT_DLPREOPEN])

dnl This isn't used anymore, but set it for backwards compatibility
LIBADD_DL="$LIBADD_DLOPEN $LIBADD_SHL_LOAD"
AC_SUBST([LIBADD_DL])

LIBS=$lt_dlload_save_LIBS
AC_LANG_POP
])
m4trace:/usr/share/aclocal/ltdl.m4:748: -1- AU_DEFUN([AC_LTDL_DLLIB], [m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])], [], [])
m4trace:/usr/share/aclocal/ltdl.m4:748: -1- AC_DEFUN([AC_LTDL_DLLIB], [m4_warn([obsolete], [The macro `AC_LTDL_DLLIB' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:756: -1- AC_DEFUN([LT_SYS_SYMBOL_USCORE], [m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl
AC_CACHE_CHECK([for _ prefix in compiled symbols],
  [lt_cv_sys_symbol_underscore],
  [lt_cv_sys_symbol_underscore=no
  cat > conftest.$ac_ext <<_LT_EOF
void nm_test_func(){}
int main(){nm_test_func;return 0;}
_LT_EOF
  if AC_TRY_EVAL(ac_compile); then
    # Now try to grab the symbols.
    ac_nlist=conftest.nm
    if AC_TRY_EVAL(NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $ac_nlist) && test -s "$ac_nlist"; then
      # See whether the symbols have a leading underscore.
      if grep '^. _nm_test_func' "$ac_nlist" >/dev/null; then
        lt_cv_sys_symbol_underscore=yes
      else
        if grep '^. nm_test_func ' "$ac_nlist" >/dev/null; then
	  :
        else
	  echo "configure: cannot find nm_test_func in $ac_nlist" >&AS_MESSAGE_LOG_FD
        fi
      fi
    else
      echo "configure: cannot run $lt_cv_sys_global_symbol_pipe" >&AS_MESSAGE_LOG_FD
    fi
  else
    echo "configure: failed program was:" >&AS_MESSAGE_LOG_FD
    cat conftest.c >&AS_MESSAGE_LOG_FD
  fi
  rm -rf conftest*
  ])
  sys_symbol_underscore=$lt_cv_sys_symbol_underscore
  AC_SUBST([sys_symbol_underscore])
])
m4trace:/usr/share/aclocal/ltdl.m4:793: -1- AU_DEFUN([AC_LTDL_SYMBOL_USCORE], [m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])], [], [])
m4trace:/usr/share/aclocal/ltdl.m4:793: -1- AC_DEFUN([AC_LTDL_SYMBOL_USCORE], [m4_warn([obsolete], [The macro `AC_LTDL_SYMBOL_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:800: -1- AC_DEFUN([LT_FUNC_DLSYM_USCORE], [AC_REQUIRE([_LT_COMPILER_PIC])dnl	for lt_prog_compiler_wl
AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl	for lt_cv_sys_symbol_underscore
AC_REQUIRE([LT_SYS_MODULE_EXT])dnl	for libltdl_cv_shlibext
if test yes = "$lt_cv_sys_symbol_underscore"; then
  if test yes = "$libltdl_cv_func_dlopen" || test yes = "$libltdl_cv_lib_dl_dlopen"; then
    AC_CACHE_CHECK([whether we have to add an underscore for dlsym],
      [libltdl_cv_need_uscore],
      [libltdl_cv_need_uscore=unknown
      dlsym_uscore_save_LIBS=$LIBS
      LIBS="$LIBS $LIBADD_DLOPEN"
      libname=conftmod # stay within 8.3 filename limits!
      cat >$libname.$ac_ext <<_LT_EOF
[#line $LINENO "configure"
#include "confdefs.h"
/* When -fvisibility=hidden is used, assume the code has been annotated
   correspondingly for the symbols needed.  */
#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))
int fnord () __attribute__((visibility("default")));
#endif
int fnord () { return 42; }]
_LT_EOF

      # ltfn_module_cmds module_cmds
      # Execute tilde-delimited MODULE_CMDS with environment primed for
      # $module_cmds or $archive_cmds type content.
      ltfn_module_cmds ()
      {( # subshell avoids polluting parent global environment
          module_cmds_save_ifs=$IFS; IFS='~'
          for cmd in @S|@1; do
            IFS=$module_cmds_save_ifs
            libobjs=$libname.$ac_objext; lib=$libname$libltdl_cv_shlibext
            rpath=/not-exists; soname=$libname$libltdl_cv_shlibext; output_objdir=.
            major=; versuffix=; verstring=; deplibs=
            ECHO=echo; wl=$lt_prog_compiler_wl; allow_undefined_flag=
            eval $cmd
          done
          IFS=$module_cmds_save_ifs
      )}

      # Compile a loadable module using libtool macro expansion results.
      $CC $pic_flag -c $libname.$ac_ext
      ltfn_module_cmds "${module_cmds:-$archive_cmds}"

      # Try to fetch fnord with dlsym().
      libltdl_dlunknown=0; libltdl_dlnouscore=1; libltdl_dluscore=2
      cat >conftest.$ac_ext <<_LT_EOF
[#line $LINENO "configure"
#include "confdefs.h"
#if HAVE_DLFCN_H
#include <dlfcn.h>
#endif
#include <stdio.h>
#ifndef RTLD_GLOBAL
#  ifdef DL_GLOBAL
#    define RTLD_GLOBAL DL_GLOBAL
#  else
#    define RTLD_GLOBAL 0
#  endif
#endif
#ifndef RTLD_NOW
#  ifdef DL_NOW
#    define RTLD_NOW DL_NOW
#  else
#    define RTLD_NOW 0
#  endif
#endif
int main () {
  void *handle = dlopen ("`pwd`/$libname$libltdl_cv_shlibext", RTLD_GLOBAL|RTLD_NOW);
  int status = $libltdl_dlunknown;
  if (handle) {
    if (dlsym (handle, "fnord"))
      status = $libltdl_dlnouscore;
    else {
      if (dlsym (handle, "_fnord"))
        status = $libltdl_dluscore;
      else
	puts (dlerror ());
    }
    dlclose (handle);
  } else
    puts (dlerror ());
  return status;
}]
_LT_EOF
      if AC_TRY_EVAL(ac_link) && test -s "conftest$ac_exeext" 2>/dev/null; then
        (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null
        libltdl_status=$?
        case x$libltdl_status in
          x$libltdl_dlnouscore) libltdl_cv_need_uscore=no ;;
	  x$libltdl_dluscore) libltdl_cv_need_uscore=yes ;;
	  x*) libltdl_cv_need_uscore=unknown ;;
        esac
      fi
      rm -rf conftest* $libname*
      LIBS=$dlsym_uscore_save_LIBS
    ])
  fi
fi

if test yes = "$libltdl_cv_need_uscore"; then
  AC_DEFINE([NEED_USCORE], [1],
    [Define if dlsym() requires a leading underscore in symbol names.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:907: -1- AU_DEFUN([AC_LTDL_DLSYM_USCORE], [m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])], [], [])
m4trace:/usr/share/aclocal/ltdl.m4:907: -1- AC_DEFUN([AC_LTDL_DLSYM_USCORE], [m4_warn([obsolete], [The macro `AC_LTDL_DLSYM_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])])
m4trace:/usr/share/aclocal-1.16/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.16'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.16.5], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.16/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.16.5])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.16/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`
])
m4trace:/usr/share/aclocal-1.16/cond.m4:12: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.16/depend.m4:26: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

m4_if([$1], [CC],   [depcc="$CC"   am_compiler_list=],
      [$1], [CXX],  [depcc="$CXX"  am_compiler_list=],
      [$1], [OBJC], [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
      [$1], [OBJCXX], [depcc="$OBJCXX" am_compiler_list='gcc3 gcc'],
      [$1], [UPC],  [depcc="$UPC"  am_compiler_list=],
      [$1], [GCJ],  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                    [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.16/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.16/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE([dependency-tracking], [dnl
AS_HELP_STRING(
  [--enable-dependency-tracking],
  [do not reject slow dependency extractors])
AS_HELP_STRING(
  [--disable-dependency-tracking],
  [speeds up one-time build])])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/usr/share/aclocal-1.16/depout.m4:11: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  # TODO: see whether this extra hack can be removed once we start
  # requiring Autoconf 2.70 or later.
  AS_CASE([$CONFIG_FILES],
          [*\'*], [eval set x "$CONFIG_FILES"],
          [*], [set x $CONFIG_FILES])
  shift
  # Used to flag and report bootstrapping failures.
  am_rc=0
  for am_mf
  do
    # Strip MF so we end up with the name of the file.
    am_mf=`AS_ECHO(["$am_mf"]) | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile which includes
    # dependency-tracking related rules and includes.
    # Grep'ing the whole file directly is not great: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
      || continue
    am_dirpart=`AS_DIRNAME(["$am_mf"])`
    am_filepart=`AS_BASENAME(["$am_mf"])`
    AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles]) || am_rc=$?
  done
  if test $am_rc -ne 0; then
    AC_MSG_FAILURE([Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  If GNU make was not used, consider
    re-running the configure script with MAKE="gmake" (or whatever is
    necessary).  You can also try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).])
  fi
  AS_UNSET([am_dirpart])
  AS_UNSET([am_filepart])
  AS_UNSET([am_mf])
  AS_UNSET([am_rc])
  rm -f conftest-deps.mk
}
])
m4trace:/usr/share/aclocal-1.16/depout.m4:64: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" MAKE="${MAKE-make}"])])
m4trace:/usr/share/aclocal-1.16/init.m4:29: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.65])dnl
m4_ifdef([_$0_ALREADY_INIT],
  [m4_fatal([$0 expanded multiple times
]m4_defn([_$0_ALREADY_INIT]))],
  [m4_define([_$0_ALREADY_INIT], m4_expansion_stack)])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[AC_DIAGNOSE([obsolete],
             [$0: two- and three-arguments forms are deprecated.])
m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(
  m4_ifset([AC_PACKAGE_NAME], [ok]):m4_ifset([AC_PACKAGE_VERSION], [ok]),
  [ok:ok],,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
AM_MISSING_PROG([AUTOCONF], [autoconf])
AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
AM_MISSING_PROG([AUTOHEADER], [autoheader])
AM_MISSING_PROG([MAKEINFO], [makeinfo])
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
# Variables for tags utilities; see am/tags.am
if test -z "$CTAGS"; then
  CTAGS=ctags
fi
AC_SUBST([CTAGS])
if test -z "$ETAGS"; then
  ETAGS=etags
fi
AC_SUBST([ETAGS])
if test -z "$CSCOPE"; then
  CSCOPE=cscope
fi
AC_SUBST([CSCOPE])

AC_REQUIRE([AM_SILENT_RULES])dnl
dnl The testsuite driver may need to know about EXEEXT, so add the
dnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This
dnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl

# POSIX will say in a future version that running "rm -f" with no argument
# is OK; and we want to be able to make that assumption in our Makefile
# recipes.  So use an aggressive probe to check that the usage we want is
# actually supported "in the wild" to an acceptable degree.
# See automake bug#10828.
# To make any issue more visible, cause the running configure to be aborted
# by default if the 'rm' program in use doesn't match our expectations; the
# user can still override this though.
if rm -f && rm -fr && rm -rf; then : OK; else
  cat >&2 <<'END'
Oops!

Your 'rm' program seems unable to run without file operands specified
on the command line, even when the '-f' option is present.  This is contrary
to the behaviour of most rm programs out there, and not conforming with
the upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>

Please tell bug-automake@gnu.org about your system, including the value
of your $PATH and any error possibly output before this message.  This
can help us improve future automake versions.

END
  if test x"$ACCEPT_INFERIOR_RM_PROGRAM" = x"yes"; then
    echo 'Configuration will proceed anyway, since you have set the' >&2
    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to "yes"' >&2
    echo >&2
  else
    cat >&2 <<'END'
Aborting the configuration process, to ensure you take notice of the issue.

You can download and install GNU coreutils to get an 'rm' implementation
that behaves properly: <https://www.gnu.org/software/coreutils/>.

If you want to complete the configuration process using your problematic
'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM
to "yes", and re-run configure.

END
    AC_MSG_ERROR([Your 'rm' program is bad, sorry.])
  fi
fi
dnl The trailing newline in this macro's definition is deliberate, for
dnl backward compatibility and to allow trailing 'dnl'-style comments
dnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.
])
m4trace:/usr/share/aclocal-1.16/init.m4:204: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.16/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST([install_sh])])
m4trace:/usr/share/aclocal-1.16/lead-dot.m4:10: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.16/make.m4:13: -1- AC_DEFUN([AM_MAKE_INCLUDE], [AC_MSG_CHECKING([whether ${MAKE-make} supports the include directive])
cat > confinc.mk << 'END'
am__doit:
	@echo this is the am__doit target >confinc.out
.PHONY: am__doit
END
am__include="#"
am__quote=
# BSD make does it like this.
echo '.include "confinc.mk" # ignored' > confmf.BSD
# Other make implementations (GNU, Solaris 10, AIX) do it like this.
echo 'include confinc.mk # ignored' > confmf.GNU
_am_result=no
for s in GNU BSD; do
  AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
  AS_CASE([$?:`cat confinc.out 2>/dev/null`],
      ['0:this is the am__doit target'],
      [AS_CASE([$s],
          [BSD], [am__include='.include' am__quote='"'],
          [am__include='include' am__quote=''])])
  if test "$am__include" != "#"; then
    _am_result="yes ($s style)"
    break
  fi
done
rm -f confinc.* confmf.*
AC_MSG_RESULT([${_am_result}])
AC_SUBST([am__include])])
m4trace:/usr/share/aclocal-1.16/make.m4:42: -1- m4_pattern_allow([^am__quote$])
m4trace:/usr/share/aclocal-1.16/missing.m4:11: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.16/missing.m4:20: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  MISSING="\${SHELL} '$am_aux_dir/missing'"
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  AC_MSG_WARN(['missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.16/options.m4:11: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.16/options.m4:17: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), [1])])
m4trace:/usr/share/aclocal-1.16/options.m4:23: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.16/options.m4:29: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.16/prog-cc-c-o.m4:12: -1- AC_DEFUN([_AM_PROG_CC_C_O], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
AC_LANG_PUSH([C])dnl
AC_CACHE_CHECK(
  [whether $CC understands -c and -o together],
  [am_cv_prog_cc_c_o],
  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i])
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
AC_LANG_POP([C])])
m4trace:/usr/share/aclocal-1.16/prog-cc-c-o.m4:47: -1- AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
m4trace:/usr/share/aclocal-1.16/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.16/sanity.m4:11: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   am_has_slept=no
   for am_try in 1 2; do
     echo "timestamp, slept: $am_has_slept" > conftest.file
     set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
     if test "$[*]" = "X"; then
	# -L didn't work.
	set X `ls -t "$srcdir/configure" conftest.file`
     fi
     if test "$[*]" != "X $srcdir/configure conftest.file" \
	&& test "$[*]" != "X conftest.file $srcdir/configure"; then

	# If neither matched, then we have a broken ls.  This can happen
	# if, for instance, CONFIG_SHELL is bash and it inherits a
	# broken ls alias from the environment.  This has actually
	# happened.  Such a system could not be considered "sane".
	AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
  alias in your environment])
     fi
     if test "$[2]" = conftest.file || test $am_try -eq 2; then
       break
     fi
     # Just in case.
     sleep 1
     am_has_slept=yes
   done
   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT([yes])
# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
if grep 'slept: no' conftest.file >/dev/null 2>&1; then
  ( sleep 1 ) &
  am_sleep_pid=$!
fi
AC_CONFIG_COMMANDS_PRE(
  [AC_MSG_CHECKING([that generated files are newer than configure])
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   AC_MSG_RESULT([done])])
rm -f conftest.file
])
m4trace:/usr/share/aclocal-1.16/silent.m4:12: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules], [dnl
AS_HELP_STRING(
  [--enable-silent-rules],
  [less verbose build output (undo: "make V=1")])
AS_HELP_STRING(
  [--disable-silent-rules],
  [verbose build output (undo: "make V=0")])dnl
])
case $enable_silent_rules in @%:@ (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
dnl
dnl A few 'make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using '$V' instead of '$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.16/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be 'maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.16/substnot.m4:12: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.16/substnot.m4:17: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.16/tar.m4:23: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])

# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'

m4_if([$1], [v7],
  [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],

  [m4_case([$1],
    [ustar],
     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.
      # There is notably a 21 bits limit for the UID and the GID.  In fact,
      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343
      # and bug#13588).
      am_max_uid=2097151 # 2^21 - 1
      am_max_gid=$am_max_uid
      # The $UID and $GID variables are not portable, so we need to resort
      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls
      # below are definitely unexpected, so allow the users to see them
      # (that is, avoid stderr redirection).
      am_uid=`id -u || echo unknown`
      am_gid=`id -g || echo unknown`
      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])
      if test $am_uid -le $am_max_uid; then
         AC_MSG_RESULT([yes])
      else
         AC_MSG_RESULT([no])
         _am_tools=none
      fi
      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])
      if test $am_gid -le $am_max_gid; then
         AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi],

  [pax],
    [],

  [m4_fatal([Unknown tar format])])

  AC_MSG_CHECKING([how to create a $1 tar archive])

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_$1-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        AM_RUN_LOG([$_am_tar --version]) && break
      done
      am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x $1 -w "$$tardir"'
      am__tar_='pax -L -x $1 -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
      am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
      am__untar='cpio -i -H $1 -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_$1}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
    rm -rf conftest.dir
    if test -s conftest.tar; then
      AM_RUN_LOG([$am__untar <conftest.tar])
      AM_RUN_LOG([cat conftest.dir/file])
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
  AC_MSG_RESULT([$am_cv_prog_tar_$1])])

AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:m4/00gnulib.m4:24: -1- AC_DEFUN([gl_COMPILER_CLANG], [
dnl AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([whether the compiler is clang],
    [gl_cv_compiler_clang],
    [dnl Use _AC_COMPILE_IFELSE instead of AC_EGREP_CPP, to avoid error
     dnl "circular dependency of AC_LANG_COMPILER(C)" if AC_PROG_CC has
     dnl not yet been invoked.
     _AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([[
           #ifdef __clang__
           barfbarf
           #endif
           ]],[[]])
        ],
        [gl_cv_compiler_clang=no],
        [gl_cv_compiler_clang=yes])
    ])
])
m4trace:m4/00gnulib.m4:43: -1- AC_DEFUN([gl_COMPILER_PREPARE_CHECK_DECL], [
dnl AC_REQUIRE([AC_PROG_CC])
dnl AC_REQUIRE([gl_COMPILER_CLANG])
  AC_CACHE_CHECK([for compiler option needed when checking for declarations],
    [gl_cv_compiler_check_decl_option],
    [if test $gl_cv_compiler_clang = yes; then
       dnl Test whether the compiler supports the option
       dnl '-Werror=implicit-function-declaration'.
       save_ac_compile="$ac_compile"
       ac_compile="$ac_compile -Werror=implicit-function-declaration"
       dnl Use _AC_COMPILE_IFELSE instead of AC_COMPILE_IFELSE, to avoid a
       dnl warning "AC_COMPILE_IFELSE was called before AC_USE_SYSTEM_EXTENSIONS".
       _AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],[[]])],
         [gl_cv_compiler_check_decl_option='-Werror=implicit-function-declaration'],
         [gl_cv_compiler_check_decl_option=none])
       ac_compile="$save_ac_compile"
     else
       gl_cv_compiler_check_decl_option=none
     fi
    ])
  if test "x$gl_cv_compiler_check_decl_option" != xnone; then
    ac_compile_for_check_decl="$ac_compile $gl_cv_compiler_check_decl_option"
  else
    ac_compile_for_check_decl="$ac_compile"
  fi
])
m4trace:m4/00gnulib.m4:85: -1- AC_DEFUN([gl_00GNULIB])
m4trace:m4/__inline.m4:7: -1- AC_DEFUN([gl___INLINE], [
  AC_CACHE_CHECK([whether the compiler supports the __inline keyword],
    [gl_cv_c___inline],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
         [[typedef int foo_t;
           static __inline foo_t foo (void) { return 0; }]],
         [[return foo ();]])],
       [gl_cv_c___inline=yes],
       [gl_cv_c___inline=no])])
  if test $gl_cv_c___inline = yes; then
    AC_DEFINE([HAVE___INLINE], [1],
      [Define to 1 if the compiler supports the keyword '__inline'.])
  fi
])
m4trace:m4/absolute-header.m4:22: -1- AC_DEFUN([gl_ABSOLUTE_HEADER], [AC_REQUIRE([AC_CANONICAL_HOST])
AC_LANG_PREPROC_REQUIRE()dnl
m4_foreach_w([gl_HEADER_NAME], [$1],
  [AS_VAR_PUSHDEF([gl_absolute_header],
                  [gl_cv_absolute_]m4_defn([gl_HEADER_NAME]))dnl
  AC_CACHE_CHECK([absolute name of <]m4_defn([gl_HEADER_NAME])[>],
    [gl_absolute_header],
    [AS_VAR_PUSHDEF([ac_header_exists],
                    [ac_cv_header_]m4_defn([gl_HEADER_NAME]))dnl
    AC_CHECK_HEADERS_ONCE(m4_defn([gl_HEADER_NAME]))dnl
    if test AS_VAR_GET([ac_header_exists]) = yes; then
      gl_ABSOLUTE_HEADER_ONE(m4_defn([gl_HEADER_NAME]))
    fi
    AS_VAR_POPDEF([ac_header_exists])dnl
    ])dnl
  AC_DEFINE_UNQUOTED(AS_TR_CPP([ABSOLUTE_]m4_defn([gl_HEADER_NAME])),
                     ["AS_VAR_GET([gl_absolute_header])"],
                     [Define this to an absolute name of <]m4_defn([gl_HEADER_NAME])[>.])
  AS_VAR_POPDEF([gl_absolute_header])dnl
])dnl
])
m4trace:m4/absolute-header.m4:52: -1- AC_DEFUN([gl_ABSOLUTE_HEADER_ONE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_LANG_CONFTEST([AC_LANG_SOURCE([[#include <]]m4_dquote([$1])[[>]])])
  dnl AIX "xlc -E" and "cc -E" omit #line directives for header files
  dnl that contain only a #include of other header files and no
  dnl non-comment tokens of their own. This leads to a failure to
  dnl detect the absolute name of <dirent.h>, <signal.h>, <poll.h>
  dnl and others. The workaround is to force preservation of comments
  dnl through option -C. This ensures all necessary #line directives
  dnl are present. GCC supports option -C as well.
  case "$host_os" in
    aix*) gl_absname_cpp="$ac_cpp -C" ;;
    *)    gl_absname_cpp="$ac_cpp" ;;
  esac
changequote(,)
  case "$host_os" in
    mingw*)
      dnl For the sake of native Windows compilers (excluding gcc),
      dnl treat backslash as a directory separator, like /.
      dnl Actually, these compilers use a double-backslash as
      dnl directory separator, inside the
      dnl   # line "filename"
      dnl directives.
      gl_dirsep_regex='[/\\]'
      ;;
    *)
      gl_dirsep_regex='\/'
      ;;
  esac
  dnl A sed expression that turns a string into a basic regular
  dnl expression, for use within "/.../".
  gl_make_literal_regex_sed='s,[]$^\\.*/[],\\&,g'
  gl_header_literal_regex=`echo '$1' \
                           | sed -e "$gl_make_literal_regex_sed"`
  gl_absolute_header_sed="/${gl_dirsep_regex}${gl_header_literal_regex}/"'{
      s/.*"\(.*'"${gl_dirsep_regex}${gl_header_literal_regex}"'\)".*/\1/
      s|^/[^/]|//&|
      p
      q
    }'
changequote([,])
  dnl eval is necessary to expand gl_absname_cpp.
  dnl Ultrix and Pyramid sh refuse to redirect output of eval,
  dnl so use subshell.
  AS_VAR_SET([gl_cv_absolute_]AS_TR_SH([[$1]]),
[`(eval "$gl_absname_cpp conftest.$ac_ext") 2>&AS_MESSAGE_LOG_FD |
  sed -n "$gl_absolute_header_sed"`])
])
m4trace:m4/access.m4:7: -1- AC_DEFUN([gl_FUNC_ACCESS], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  dnl On native Windows, access (= _access) does not support the X_OK mode.
  dnl It works by chance on some versions of mingw.
  case "$host_os" in
    mingw*) REPLACE_ACCESS=1 ;;
  esac
])
m4trace:m4/acinclude.m4:33: -1- AC_DEFUN([OCTAVE_CANONICAL_HOST], [
  AC_CANONICAL_HOST
  if test -z "$host"; then
    host=unknown-unknown-unknown
    AC_MSG_WARN([configuring Octave for unknown system type])
  fi
  canonical_host_type=$host
  AC_SUBST(canonical_host_type)
  if test -z "$host_cpu"; then
    host_cpu=unknown
  fi
  if test -z "$host_vendor"; then
    host_vendor=unknown
  fi
  if test -z "$host_os"; then
    host_os=unknown
  fi
])
m4trace:m4/acinclude.m4:54: -1- AC_DEFUN([OCTAVE_CARBON_CGDISPLAYBITSPERPIXEL], [
  AC_CACHE_CHECK([whether CGDisplayBitsPerPixel is defined in the Carbon Framework],
    [octave_cv_func_carbon_cgdisplaybitsperpixel],
    [AC_LANG_PUSH(C++)
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <Carbon/Carbon.h>
        ]], [[
        CGDirectDisplayID display = CGMainDisplayID ();
        size_t depth = CGDisplayBitsPerPixel (display);
      ]])],
      octave_cv_func_carbon_cgdisplaybitsperpixel=yes,
      octave_cv_func_carbon_cgdisplaybitsperpixel=no)
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_func_carbon_cgdisplaybitsperpixel = yes; then
    AC_DEFINE(HAVE_CARBON_CGDISPLAYBITSPERPIXEL, 1,
      [Define to 1 if Carbon Framework has CGDisplayBitsPerPixel.])
  fi
])
m4trace:m4/acinclude.m4:78: -1- AC_DEFUN([OCTAVE_CC_FLAG], [
  ac_safe=`echo "$1" | $SED 'y% ./+-:=%___p___%'`
  AC_MSG_CHECKING([whether ${CC-cc} accepts $1])
  AC_CACHE_VAL([octave_cv_cc_flag_$ac_safe],
    [AC_LANG_PUSH(C)
    ac_octave_save_CFLAGS="$CFLAGS"
    CFLAGS="$CFLAGS $1"
    AC_LINK_IFELSE([AC_LANG_PROGRAM([], [])],
      [eval "octave_cv_cc_flag_$ac_safe=yes"],
      [eval "octave_cv_cc_flag_$ac_safe=no"])
    CFLAGS="$ac_octave_save_CFLAGS"
    AC_LANG_POP(C)
  ])
  if eval "test \"`echo '$octave_cv_cc_flag_'$ac_safe`\" = yes"; then
    AC_MSG_RESULT([yes])
    ifelse([$2], ,
      [CFLAGS="$CFLAGS $1"
      AC_MSG_RESULT([adding $1 to CFLAGS])], [$2])
  else
    AC_MSG_RESULT([no])
    ifelse([$3], , , [$3])
  fi
])
m4trace:m4/acinclude.m4:116: -1- AC_DEFUN([OCTAVE_CHECK_BROKEN_PTHREAD_STACKSIZE], [
  AC_CACHE_CHECK([whether pthread stack size does not account for thread-local storage],
    [octave_cv_broken_pthread_stacksize],
    [AC_LANG_PUSH(C)
    AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <stdio.h>
#include <string.h>
#include <pthread.h>

static char __thread data[100 * 1024];

static void * threadfunc(void *arg)
{
    return data;
}
      ]], [[
  pthread_attr_t attr;
  pthread_t thread;
  int errnum;

  pthread_attr_init (&attr);
  errnum = pthread_attr_setstacksize (&attr, 64 * 1024);
  if (errnum != 0)
  {
    fprintf (stderr, "pthread_attr_setstacksize: %s\n", strerror(errnum));
    return 1;
  }
  errnum = pthread_create (&thread, &attr, &threadfunc, NULL);
  if (errnum != 0)
  {
    fprintf (stderr, "pthread_create: %s\n", strerror(errnum));
    return 1;
  }
  errnum = pthread_join (thread, NULL);
  if (errnum != 0)
  {
    fprintf (stderr, "pthread_join: %s\n", strerror(errnum));
    return 1;
  }

  pthread_attr_destroy (&attr);
  return 0;
    ]])],
    octave_cv_broken_pthread_stacksize=no,
    octave_cv_broken_pthread_stacksize=yes,
    octave_cv_broken_pthread_stacksize=no)
    AC_LANG_POP(C)
  ])
  if test $octave_cv_broken_pthread_stacksize = yes; then
    AC_DEFINE(HAVE_BROKEN_PTHREAD_STACKSIZE, 1,
      [Define to 1 if pthread stack size does not account for thread-local storage.])
  fi
])
m4trace:m4/acinclude.m4:173: -1- AC_DEFUN([OCTAVE_CHECK_BROKEN_STL_ALGO_H], [
  AC_CACHE_CHECK([whether stl_algo.h is broken],
    [octave_cv_broken_stl_algo_h],
    [AC_LANG_PUSH(C++)
    AC_RUN_IFELSE([AC_LANG_PROGRAM([[
// Based on code from a GCC test program.

// Copyright (C) 2013 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library. This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3, or (at your option)
// any later version.

// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING3. If not see
// <https://www.gnu.org/licenses/>.

// 25.3.2 [lib.alg.nth.element]

// { dg-options "-std=gnu++11" }

#include <algorithm>
#include <vector>
      ]], [[
std::vector<int> v (7);

v[0] = 207089;
v[1] = 202585;
v[2] = 180067;
v[3] = 157549;
v[4] = 211592;
v[5] = 216096;
v[6] = 207089;

std::nth_element (v.begin (), v.begin () + 3, v.end ());

return v[3] == 207089 ? 0 : 1;
    ]])],
    octave_cv_broken_stl_algo_h=no,
    octave_cv_broken_stl_algo_h=yes,
    [case "$GXX_VERSION" in
       *4.8.2*)
         octave_cv_broken_stl_algo_h=yes
       ;;
       *)
         octave_cv_broken_stl_algo_h=no
       ;;
     esac
    ])
    AC_LANG_POP(C++)
  ])
  if test "$GXX" = yes; then
    if test $octave_cv_broken_stl_algo_h = yes; then
      case "$GXX_VERSION" in
        4.8.[[012]])
        ;;
        *)
          octave_cv_broken_stl_algo_h=no
          warn_stl_algo_h="UNEXPECTED: found nth_element broken in g++ $GXX_VERSION.  Refusing to fix except for g++ 4.8.0, 4.8.1, or 4.8.2.  You appear to have g++ $GXX_VERSION."
          OCTAVE_CONFIGURE_WARNING([warn_stl_algo_h])
        ;;
      esac
    else
      case "$GXX_VERSION" in
        4.8.2)
          warn_stl_algo_h="UNEXPECTED: found nth_element working in g++ 4.8.2.  Has it been patched on your system?"
          OCTAVE_CONFIGURE_WARNING([warn_stl_algo_h])
        ;;
      esac
    fi
  else
    octave_cv_broken_stl_algo_h=no
    warn_stl_algo_h="UNEXPECTED: nth_element test failed.  Refusing to fix except for g++ 4.8.2."
    OCTAVE_CONFIGURE_WARNING([warn_stl_algo_h])
  fi
])
m4trace:m4/acinclude.m4:259: -1- AC_DEFUN([OCTAVE_CHECK_STD_PMR_POLYMORPHIC_ALLOCATOR], [
  AC_CACHE_CHECK([whether std::pmr::polymorphic_allocator is available],
    [octave_cv_std_pmr_polymorphic_allocator],
    [AC_LANG_PUSH(C++)
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
      #include <cstdlib>
      #include <memory_resource>
      #include <vector>
      class mx_memory_resource : public std::pmr::memory_resource
      {
      private:
        void * do_allocate (std::size_t bytes, size_t /*alignment*/)
        {
          void *ptr = std::malloc (bytes);
          if (! ptr)
            throw std::bad_alloc ();
            return ptr;
        }
        void do_deallocate (void* ptr, std::size_t /*bytes*/,
                            std::size_t /*alignment*/)
        {
          std::free (ptr);
        }
        bool do_is_equal (const std::pmr::memory_resource& other) const noexcept
        {
          return this == dynamic_cast<const mx_memory_resource *> (&other);
          return true;
        }
      };
      mx_memory_resource the_mx_memory_resource;
    ]], [[
      std::pmr::vector<int> my_int_vec { &the_mx_memory_resource };
    ]])],
    octave_cv_std_pmr_polymorphic_allocator=yes,
    octave_cv_std_pmr_polymorphic_allocator=no)
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_std_pmr_polymorphic_allocator = yes; then
    AC_DEFINE(OCTAVE_HAVE_STD_PMR_POLYMORPHIC_ALLOCATOR, 1,
      [Define to 1 if std::pmr::polymorphic_allocator is available.])
  fi
])
m4trace:m4/acinclude.m4:306: -1- AC_DEFUN([OCTAVE_CHECK_CXSPARSE_VERSION_OK], [
  AC_CACHE_CHECK([whether CXSparse is version 2.2 or later],
    [octave_cv_cxsparse_version_ok],
    [ac_octave_save_CPPFLAGS="$CPPFLAGS"
    CPPFLAGS="$CXSPARSE_CPPFLAGS $CPPFLAGS"
    AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[
        #if defined (HAVE_SUITESPARSE_CS_H)
        #include <suitesparse/cs.h>
        #elif defined (HAVE_CXSPARSE_CS_H)
        #include <cxsparse/cs.h>
        #elif defined (HAVE_CS_H)
        #include <cs.h>
        #endif
        ]], [[
        #if (defined (HAVE_CXSPARSE) \
             && (! defined (CS_VER) \
                 || CS_VER < 2 \
                 || (CS_VER == 2 && CS_SUBVER < 2)))
        #error "Octave requires CXSparse version 2.2 or later"
        #endif
        ]])],
      octave_cv_cxsparse_version_ok=yes,
      octave_cv_cxsparse_version_ok=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
  ])
  if test $octave_cv_cxsparse_version_ok = yes; then
    AC_DEFINE(HAVE_CXSPARSE_VERSION_OK, 1,
      [Define to 1 if CXSparse is version 2.2 or later.])
  fi
])
m4trace:m4/acinclude.m4:345: -1- AC_DEFUN([OCTAVE_CHECK_FFTW_THREADS], [
  ac_octave_save_CPPFLAGS="$CPPFLAGS"
  ac_octave_save_LDFLAGS="$LDFLAGS"
  ac_octave_save_LIBS="$LIBS"
  CPPFLAGS="$m4_toupper([$1])_CPPFLAGS $CPPFLAGS"
  LDFLAGS="$m4_toupper([$1])_LDFLAGS $LDFLAGS"
  LIBS="$m4_toupper([$1])_LIBS $LIBS"
  AC_CACHE_CHECK([for $1 multi-threading support],
    [octave_cv_[$1]_threads_lib],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[
      #include <fftw3.h>
      ]], [[
      $2 (2);
      ]])],
      [octave_cv_[$1]_threads_lib=yes],
      [LIBS="-l[$1]_threads $LIBS"
      AC_LINK_IFELSE([AC_LANG_PROGRAM([[
        #include <fftw3.h>
        ]], [[
        $2 (2);
        ]])],
        [octave_cv_[$1]_threads_lib="-l[$1]_threads"],
        [octave_cv_[$1]_threads_lib=no])
    ])
  ])
  case $octave_cv_[$1]_threads_lib in
    -l*)
      m4_toupper([$1])_LIBS="$octave_cv_[$1]_threads_lib $m4_toupper([$1])_LIBS"
      ;;
    no)
      AC_MSG_WARN([No $1 multi-threading support found.])
      AC_MSG_WARN([The single-threaded library will be used instead.])
      ;;
  esac
  if test $octave_cv_[$1]_threads_lib != no; then
    AC_DEFINE([HAVE_]m4_toupper([$1])[_THREADS], 1,
      [Define to 1 if ]m4_toupper([$1])[ has multi-threading support.])
  fi
  CPPFLAGS="$ac_octave_save_CPPFLAGS"
  LDFLAGS="$ac_octave_save_LDFLAGS"
  LIBS="$ac_octave_save_LIBS"
])
m4trace:m4/acinclude.m4:394: -1- AC_DEFUN([OCTAVE_CHECK_FORTRAN_SYMBOL_AND_CALLING_CONVENTIONS], [
  F77_TOLOWER=yes
  F77_APPEND_UNDERSCORE=yes
  F77_APPEND_EXTRA_UNDERSCORE=yes

  case $ac_cv_f77_mangling in
    "upper case") F77_TOLOWER=no ;;
  esac
  case $ac_cv_f77_mangling in
    "no underscore") F77_APPEND_UNDERSCORE=no ;;
  esac
  case $ac_cv_f77_mangling in
    "no extra underscore") F77_APPEND_EXTRA_UNDERSCORE=no ;;
  esac

  case $canonical_host_type in
    i[[3456789]]86-*-*)
      if test $ac_cv_f77_compiler_gnu = yes; then
        OCTAVE_F77_FLAG([-mieee-fp])
      fi
    ;;
    alpha*-*-*)
      if test $ac_cv_f77_compiler_gnu = yes; then
        OCTAVE_F77_FLAG([-mieee])
      else
        OCTAVE_F77_FLAG([-ieee])
        OCTAVE_F77_FLAG([-fpe1])
      fi
    ;;
    powerpc-apple-machten*)
      FFLAGS=
    ;;
  esac

  if test $ac_cv_f77_compiler_gnu = yes; then
    FORTRAN_CALLING_CONVENTION=gfortran
  else
    FORTRAN_CALLING_CONVENTION=unknown
  fi
  AC_ARG_ENABLE([fortran-calling-convention],
    [AS_HELP_STRING([--enable-fortran-calling-convention=OPTION],
      [Select C++ to Fortran calling convention.  "gfortran" should be detected automatically.  Other options are "cray", "visual-fortran", or "f2c".])],
    [FORTRAN_CALLING_CONVENTION="$enableval"], [])

  case $FORTRAN_CALLING_CONVENTION in
    gfortran)
      AC_DEFINE(F77_USES_GFORTRAN_CALLING_CONVENTION, 1, [Define to 1 if calling Fortran from C++ should use the gfortran calling convention.])
    ;;
    cray)
      AC_DEFINE(F77_USES_CRAY_CALLING_CONVENTION, 1, [Define to 1 if calling Fortran from C++ should use the Cray Fortran calling convention.])
    ;;
    visual-fortran)
      AC_DEFINE(F77_USES_VISUAL_FORTRAN_CALLING_CONVENTION, 1, [Define to 1 if calling Fortran from C++ should use the Visual Fortran calling convention.])
    ;;
    f2c)
      AC_DEFINE(F77_USES_F2C_CALLING_CONVENTION, 1, [Define to 1 if calling Fortran from C++ should use the f2c calling convention.])
    ;;
    *)
      AC_MSG_ERROR([to build Octave, the C++ to Fortran calling convention must be known.])
    ;;
  esac

  if test -n "$FFLAGS"; then
    AC_MSG_NOTICE([defining FFLAGS to be $FFLAGS])
  fi

  AC_SUBST(F77_TOLOWER)
  AC_SUBST(F77_APPEND_UNDERSCORE)
  AC_SUBST(F77_APPEND_EXTRA_UNDERSCORE)
])
m4trace:m4/acinclude.m4:467: -1- AC_DEFUN([OCTAVE_CHECK_FUNC_GLUTESSCALLBACK_THREEDOTS], [
  AC_CACHE_CHECK([whether gluTessCallback is called with "(...)"],
    [octave_cv_func_glutesscallback_threedots],
    [AC_LANG_PUSH(C++)
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #if defined (HAVE_GL_GLU_H)
        # include <GL/glu.h>
        #elif defined HAVE_OPENGL_GLU_H || defined HAVE_FRAMEWORK_OPENGL
        # include <OpenGL/glu.h>
        #endif
        ]], [[
        GLvoid (*func)(...);
        gluTessCallback(0, 0, func);
        ]])],
      octave_cv_func_glutesscallback_threedots=yes,
      octave_cv_func_glutesscallback_threedots=no)
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_func_glutesscallback_threedots = yes; then
    AC_DEFINE(HAVE_GLUTESSCALLBACK_THREEDOTS, 1,
      [Define to 1 if gluTessCallback is called with (...).])
  fi
])
m4trace:m4/acinclude.m4:494: -1- AC_DEFUN([OCTAVE_CHECK_FUNC_QFONTMETRICS_HORIZONTAL_ADVANCE], [
  AC_CACHE_CHECK([for QFontMetrics::horizontalAdvance function],
    [octave_cv_func_qfontmetrics_horizontal_advance],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QFont>
        #include <QFontMetrics>
        #include <QString>
        ]], [[
        QFont font;
        QFontMetrics fm (font);
        fm.horizontalAdvance ('x');
        fm.horizontalAdvance (QString ("string"));
        ]])],
      octave_cv_func_qfontmetrics_horizontal_advance=yes,
      octave_cv_func_qfontmetrics_horizontal_advance=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_func_qfontmetrics_horizontal_advance = yes; then
    AC_DEFINE(HAVE_QFONTMETRICS_HORIZONTAL_ADVANCE, 1,
      [Define to 1 if you have the `QFontMetrics::horizontalAdvance' function.])
  fi
])
m4trace:m4/acinclude.m4:529: -1- AC_DEFUN([OCTAVE_CHECK_FUNC_QGUIAPPLICATION_SETDESKTOPFILENAME], [
  AC_CACHE_CHECK([for QGuiApplication::setDesktopFileName],
    [octave_cv_func_qguiapplication_setdesktopfilename],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QGuiApplication>
        ]], [[
        QGuiApplication::setDesktopFileName ("com.example.Example.desktop");
        ]])],
      octave_cv_func_qguiapplication_setdesktopfilename=yes,
      octave_cv_func_qguiapplication_setdesktopfilename=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_func_qguiapplication_setdesktopfilename = yes; then
    AC_DEFINE(HAVE_QGUIAPPLICATION_SETDESKTOPFILENAME, 1,
      [Define to 1 if you have the `QGuiApplication::setDesktopFileName' member function.])
  fi
])
m4trace:m4/acinclude.m4:557: -1- AC_DEFUN([OCTAVE_CHECK_FUNC_QHELPENGINE_DOCUMENTSFORIDENTIFIER], [
  AC_CACHE_CHECK([for QHelpEngine::documentsForIdentifier in <QHelpEngine>],
    [octave_cv_func_qhelpengine_documentsforidentifier],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QHelpEngine>
        #include <QHelpLink>
        #include <QList>
        #include <QString>
        #include <QUrl>
        ]], [[
        QString collection_file;
        QHelpEngine eng (collection_file);
        QString id;
        eng.documentsForIdentifier (id);
        ]])],
      octave_cv_func_qhelpengine_documentsforidentifier=yes,
      octave_cv_func_qhelpengine_documentsforidentifier=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_func_qhelpengine_documentsforidentifier = yes; then
    AC_DEFINE(HAVE_QHELPENGINE_DOCUMENTSFORIDENTIFIER, 1,
      [Define to 1 if you have the `QHelpEngine::documentsForIdentifier' member function.])
  fi
])
m4trace:m4/acinclude.m4:594: -1- AC_DEFUN([OCTAVE_CHECK_FUNC_QHELPSEARCHQUERYWIDGET_SEARCHINPUT], [
  AC_CACHE_CHECK([for QHelpSearchQueryWidget::searchInput],
    [octave_cv_func_qhelpsearchquerywidget_searchinput],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QHelpSearchQueryWidget>
        #include <QString>
        ]], [[
        QHelpSearchQueryWidget *query_widget = new QHelpSearchQueryWidget ();
        QString search_input = query_widget->searchInput ();
        ]])],
      octave_cv_func_qhelpsearchquerywidget_searchinput=yes,
      octave_cv_func_qhelpsearchquerywidget_searchinput=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_func_qhelpsearchquerywidget_searchinput = yes; then
    AC_DEFINE(HAVE_QHELPSEARCHQUERYWIDGET_SEARCHINPUT, 1,
      [Define to 1 if you have the `QHelpSearchQueryWidget::searchInput' member function.])
  fi
])
m4trace:m4/acinclude.m4:624: -1- AC_DEFUN([OCTAVE_CHECK_FUNC_QLIST_ITERATOR_CONSTRUCTOR], [
  AC_CACHE_CHECK([for QList<T>::QList (iterator, iterator) constructor],
    [octave_cv_func_qlist_iterator_constructor],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QList>
        ]], [[
        QList<int> lst_one;
        QList<int> lst_two (lst_one.begin (), lst_one.end ());
        ]])],
      octave_cv_func_qlist_iterator_constructor=yes,
      octave_cv_func_qlist_iterator_constructor=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_func_qlist_iterator_constructor = yes; then
    AC_DEFINE(HAVE_QLIST_ITERATOR_CONSTRUCTOR, 1,
      [Define to 1 if you have the `QList<T>::QList (iterator, iterator)' constructor.])
  fi
])
m4trace:m4/acinclude.m4:655: -1- AC_DEFUN([OCTAVE_CHECK_FUNC_QMAINWINDOW_RESIZEDOCKS], [
  AC_CACHE_CHECK([for QMainWindow::resizeDocks in <QMainWindow>],
    [octave_cv_func_mainwindow_resizedocks],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QMainWindow>
        #include <QDockWidget>
        ]], [[
        QMainWindow *mw = new QMainWindow ();
        QDockWidget *dw = new QDockWidget (mw);
        mw->addDockWidget (Qt::LeftDockWidgetArea, dw);
        mw->resizeDocks ({dw},{20},Qt::Horizontal);
        ]])],
      octave_cv_func_mainwindow_resizedocks=yes,
      octave_cv_func_mainwindow_resizedocks=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_func_mainwindow_resizedocks = yes; then
    AC_DEFINE(HAVE_QMAINWINDOW_RESIZEDOCKS, 1,
      [Define to 1 if you have the 'QMainWindow::resizeDocks' member function.])
  fi
])
m4trace:m4/acinclude.m4:689: -1- AC_DEFUN([OCTAVE_CHECK_FUNC_QPRINTER_SETPAGESIZE], [
  AC_CACHE_CHECK([for QPrinter::setPageSize in <QPrinter>],
    [octave_cv_func_qprinter_setpagesize],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QPrinter>
        ]], [[
        QPrinter printer;
        printer.setPageSize (QPageSize (QSizeF (8.5, 11.0), QPageSize::Inch));
        ]])],
      octave_cv_func_qprinter_setpagesize=yes,
      octave_cv_func_qprinter_setpagesize=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_func_qprinter_setpagesize = yes; then
    AC_DEFINE(HAVE_QPRINTER_SETPAGESIZE, 1,
      [Define to 1 if you have the 'QPrinter::setPageSize' member function.])
  fi
])
m4trace:m4/acinclude.m4:718: -1- AC_DEFUN([OCTAVE_CHECK_FUNC_QSCREEN_DEVICEPIXELRATIO], [
  AC_CACHE_CHECK([for QScreen::devicePixelRatio in <QScreen>],
    [octave_cv_func_qscreen_devicepixelratio],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QApplication>
        #include <QScreen>
        ]], [[
        QScreen *screen = QApplication::primaryScreen ();
        qreal ratio = screen->devicePixelRatio ();
        ]])],
      octave_cv_func_qscreen_devicepixelratio=yes,
      octave_cv_func_qscreen_devicepixelratio=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_func_qscreen_devicepixelratio = yes; then
    AC_DEFINE(HAVE_QSCREEN_DEVICEPIXELRATIO, 1,
      [Define to 1 if you have the `QScreen::devicePixelRatio' member function.])
  fi
])
m4trace:m4/acinclude.m4:750: -1- AC_DEFUN([OCTAVE_CHECK_FUNC_QWHEELEVENT_ANGLEDELTA], [
  AC_CACHE_CHECK([for QWheelEvent::angleDelta in <QWheelEvent>],
    [octave_cv_func_qwheelevent_angledelta],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QWheelEvent>
        void foo (const QWheelEvent& ev)
        {
          ev.angleDelta ();
        };
        ]])],
      octave_cv_func_qwheelevent_angledelta=yes,
      octave_cv_func_qwheelevent_angledelta=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_func_qwheelevent_angledelta = yes; then
    AC_DEFINE(HAVE_QWHEELEVENT_ANGLEDELTA, 1,
      [Define to 1 if you have the `QWheelEvent::angleDelta' member function.])
  fi
])
m4trace:m4/acinclude.m4:780: -1- AC_DEFUN([OCTAVE_CHECK_FUNC_QWHEELEVENT_POSITION], [
  AC_CACHE_CHECK([for QWheelEvent::position in <QWheelEvent>],
    [octave_cv_func_qwheelevent_position],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QWheelEvent>
        void foo (const QWheelEvent& ev)
        {
          ev.position ();
        };
        ]])],
      octave_cv_func_qwheelevent_position=yes,
      octave_cv_func_qwheelevent_position=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_func_qwheelevent_position = yes; then
    AC_DEFINE(HAVE_QWHEELEVENT_POSITION, 1,
      [Define to 1 if you have the `QWheelEvent::position' member function.])
  fi
])
m4trace:m4/acinclude.m4:809: -1- AC_DEFUN([OCTAVE_CHECK_HDF5_HAS_VER_16_API], [
  AC_CACHE_CHECK([whether HDF5 library has enforced version 1.6 API],
    [octave_cv_hdf5_has_ver_16_api],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[
      #include <hdf5.h>
      ]], [[
      H5Eset_auto (0, 0);
      ]])],
      octave_cv_hdf5_has_ver_16_api=yes,
      octave_cv_hdf5_has_ver_16_api=no)
  ])
  if test $octave_cv_hdf5_has_ver_16_api != yes; then
    AC_DEFINE(HAVE_HDF5_18, 1, [Define to 1 if >=HDF5-1.8 is available.])
  fi
])
m4trace:m4/acinclude.m4:827: -1- AC_DEFUN([OCTAVE_CHECK_HDF5_HAS_UTF8_API], [
  AC_CACHE_CHECK([whether HDF5 library has UTF-8 file API],
    [octave_cv_hdf5_has_utf8_api],
    [case $host_os in
      msdosmsvc | mingw*)
        AC_LINK_IFELSE([AC_LANG_PROGRAM([[
          #include <stddef.h>
          const wchar_t *H5_get_utf16_str(const char *s);
          ]], [[
          H5_get_utf16_str ("");
          ]])],
          octave_cv_hdf5_has_utf8_api=yes,
          octave_cv_hdf5_has_utf8_api=no)
      ;;
      *)
        ## Assume yes on all other platforms
        octave_cv_hdf5_has_utf8_api=yes
      ;;
     esac
    ])
  if test $octave_cv_hdf5_has_utf8_api = yes; then
    AC_DEFINE(HAVE_HDF5_UTF8, 1, [Define to 1 if HDF5 has UTF-8 file API.])
  fi
])
m4trace:m4/acinclude.m4:857: -1- AC_DEFUN([OCTAVE_CHECK_LIB], [
  AC_ARG_WITH([m4_tolower($1)-includedir],
    [AS_HELP_STRING([--with-m4_tolower($1)-includedir=DIR],
      [look for $2 include files in DIR])],
    [m4_toupper([$1])_CPPFLAGS="-I$withval"])
  AC_SUBST(m4_toupper([$1])_CPPFLAGS)

  AC_ARG_WITH([m4_tolower($1)-libdir],
    [AS_HELP_STRING([--with-m4_tolower($1)-libdir=DIR],
      [look for $2 libraries in DIR])],
    [m4_toupper([$1])_LDFLAGS="-L$withval"])
  AC_SUBST(m4_toupper([$1])_LDFLAGS)

  AC_ARG_WITH([m4_tolower($1)],
    [ifelse([$#], 10,
       [m4_ifblank([$7],
         [AS_HELP_STRING([--with-m4_tolower($1)=<lib>], [use $2 library <lib>])],
         [AS_HELP_STRING([--with-m4_tolower($1)], [$7])])],
       [m4_ifblank([$7],
         [AS_HELP_STRING([--without-m4_tolower($1)], [don't use $2 library])],
         [AS_HELP_STRING([--without-m4_tolower($1)], [$7])])])],
    with_$1=$withval, with_$1=yes)

  ac_octave_$1_pkg_check=no
  m4_toupper([$1])_LIBS=
  warn_$1="$3"
  case $with_$1 in
    no)
      ifelse([$#], 10,
        [AC_MSG_ERROR([--without-m4_tolower($1) specified but $2 is required.])],
        [warn_$1=""
         m4_toupper([$1])_LIBS=])
    ;;
    yes | "")
      ac_octave_$1_pkg_check=yes
      m4_toupper([$1])_LIBS="-l$1"
    ;;
    -* | */* | *.a | *.so | *.so.* | *.o)
      m4_toupper([$1])_LIBS="$with_$1"
    ;;
    *)
      m4_toupper([$1])_LIBS="-l$with_$1"
    ;;
  esac

  if test $ac_octave_$1_pkg_check = yes; then
    PKG_CHECK_EXISTS(m4_default([$9], [$1]), [
      if test -z "$m4_toupper([$1])_CPPFLAGS"; then
        m4_toupper([$1])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([$9], [$1]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([$1])_LDFLAGS"; then
        m4_toupper([$1])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([$9], [$1]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([$1])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([$9], [$1]) | $SED -e 's/^ *$//')"
    ])
  fi

  if test -n "$m4_toupper([$1])_LIBS"; then
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_LDFLAGS="$LDFLAGS"
    ac_octave_save_LIBS="$LIBS"
    CPPFLAGS="$m4_toupper([$1])_CPPFLAGS $CPPFLAGS"
    LDFLAGS="$m4_toupper([$1])_LDFLAGS $LDFLAGS"
    LIBS="$m4_toupper([$1])_LIBS $LIBS"
    m4_ifnblank([$6], [AC_LANG_PUSH($6)])
    ac_octave_$1_check_for_lib=no
    m4_ifblank([$4], [ac_octave_$1_check_for_lib=yes],
               [AC_CHECK_HEADERS([$4], [ac_octave_$1_check_for_lib=yes; break])])
    if test $ac_octave_$1_check_for_lib = yes; then
      AC_CACHE_CHECK([for $5 in $m4_toupper([$1])_LIBS],
        [octave_cv_lib_$1],
        [AC_LINK_IFELSE([AC_LANG_CALL([], [$5])],
          [octave_cv_lib_$1=yes], [octave_cv_lib_$1=no])
      ])
      if test "$octave_cv_lib_$1" = yes; then
        m4_ifblank([$8], [
          warn_$1=
          AC_DEFINE([HAVE_]m4_toupper([$1]), 1,
            [Define to 1 if $2 is available.])], [$8])
      else
        m4_toupper([$1])_LIBS=
      fi
    else
      octave_cv_lib_$1=no
      m4_toupper([$1])_LIBS=
    fi
    m4_ifnblank([$6], [AC_LANG_POP($6)])
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    LDFLAGS="$ac_octave_save_LDFLAGS"
    LIBS="$ac_octave_save_LIBS"
  else
    octave_cv_lib_$1=no
  fi

  ifelse([$#], 10, [
    if test $octave_cv_lib_$1 = no; then
      AC_MSG_ERROR([to build Octave, you must have the $2 library and header files installed])
    fi])
  AC_SUBST(m4_toupper([$1])_LIBS)
  if test -n "$warn_$1"; then
    OCTAVE_CONFIGURE_WARNING([warn_$1])
  fi
])
m4trace:m4/acinclude.m4:973: -1- AC_DEFUN([OCTAVE_CHECK_LIB_ARPACK_OK_1], [
  AC_CACHE_CHECK([whether the arpack library works],
    [octave_cv_lib_arpack_ok_1],
    [AC_LANG_PUSH(C++)
    AC_RUN_IFELSE([AC_LANG_PROGRAM([[

#include <cfloat>

#include <stdint.h>

typedef int F77_RET_T;

#define F77_CHAR_ARG2(x, l) x
#define F77_CONST_CHAR_ARG2(x, l) F77_CHAR_ARG2 (x, l)

#define F77_CHAR_ARG_LEN(l) , l

#define F77_CONST_CHAR_ARG_DECL const char *
#define F77_CHAR_ARG_LEN_DECL , long

#define F77_INT $OCTAVE_F77_INT_TYPE
#define F77_DBLE double

extern "C"
{
  F77_RET_T
  F77_FUNC (dnaupd, DNAUPD) (F77_INT&,
                             F77_CONST_CHAR_ARG_DECL,
                             const F77_INT&,
                             F77_CONST_CHAR_ARG_DECL,
                             F77_INT&, const F77_DBLE&,
                             F77_DBLE*, const F77_INT&, F77_DBLE*,
                             const F77_INT&, F77_INT*,
                             F77_INT*, F77_DBLE*, F77_DBLE*,
                             const F77_INT&, F77_INT&
                             F77_CHAR_ARG_LEN_DECL
                             F77_CHAR_ARG_LEN_DECL);

  F77_RET_T
  F77_FUNC (dneupd, DNEUPD) (const F77_INT&,
                             F77_CONST_CHAR_ARG_DECL,
                             F77_INT*, F77_DBLE*, F77_DBLE*,
                             F77_DBLE*, const F77_INT&, const F77_DBLE&,
                             const F77_DBLE&, F77_DBLE*,
                             F77_CONST_CHAR_ARG_DECL,
                             const F77_INT&,
                             F77_CONST_CHAR_ARG_DECL,
                             F77_INT&, const F77_DBLE&, F77_DBLE*,
                             const F77_INT&, F77_DBLE*,
                             const F77_INT&, F77_INT*,
                             F77_INT*, F77_DBLE*, F77_DBLE*,
                             const F77_INT&, F77_INT&
                             F77_CHAR_ARG_LEN_DECL
                             F77_CHAR_ARG_LEN_DECL
                             F77_CHAR_ARG_LEN_DECL);

  F77_RET_T
  F77_FUNC (dgemv, DGEMV) (F77_CONST_CHAR_ARG_DECL,
                           const F77_INT&, const F77_INT&,
                           const F77_DBLE&, const F77_DBLE*,
                           const F77_INT&, const F77_DBLE*,
                           const F77_INT&, const F77_DBLE&,
                           F77_DBLE*, const F77_INT&
                           F77_CHAR_ARG_LEN_DECL);
}

void
doit (void)
{
  // Based on function EigsRealNonSymmetricMatrix from liboctave/eigs-base.cc.

  // Problem matrix.  See bug #31479.
  F77_INT n = 4;
  double *m = new double [n * n];
  m[0] = 1, m[4] = 0, m[8]  = 0, m[12] = -1;
  m[1] = 0, m[5] = 1, m[9]  = 0, m[13] =  0;
  m[2] = 0, m[6] = 0, m[10] = 1, m[14] =  0;
  m[3] = 0, m[7] = 0, m[11] = 2, m[15] =  1;

  double *resid = new double [4];

  resid[0] = 0.960966;
  resid[1] = 0.741195;
  resid[2] = 0.150143;
  resid[3] = 0.868067;

  F77_INT *ip = new F77_INT [11];

  ip[0] = 1;   // ishift
  ip[1] = 0;   // ip[1] not referenced
  ip[2] = 300; // mxiter, maximum number of iterations
  ip[3] = 1;   // NB blocksize in recurrence
  ip[4] = 0;   // nconv, number of Ritz values that satisfy convergence
  ip[5] = 0;   // ip[5] not referenced
  ip[6] = 1;   // mode
  ip[7] = 0;   // ip[7] to ip[10] are return values
  ip[8] = 0;
  ip[9] = 0;
  ip[10] = 0;

  F77_INT *ipntr = new F77_INT [14];

  F77_INT k = 1;
  F77_INT p = 3;
  F77_INT lwork = 3 * p * (p + 2);

  double *v = new double [n * (p + 1)];
  double *workl = new double [lwork + 1];
  double *workd = new double [3 * n + 1];

  F77_INT ido = 0;
  F77_INT info = 0;

  double tol = DBL_EPSILON;

  do
    {
      F77_FUNC (dnaupd, DNAUPD) (ido, F77_CONST_CHAR_ARG2 ("I", 1),
                                 n, F77_CONST_CHAR_ARG2 ("LM", 2),
                                 k, tol, resid, p, v, n, ip, ipntr,
                                 workd, workl, lwork, info
                                 F77_CHAR_ARG_LEN (1)
                                 F77_CHAR_ARG_LEN (2));

      if (ido == -1 || ido == 1 || ido == 2)
        {
          double *x = workd + ipntr[0] - 1;
          double *y = workd + ipntr[1] - 1;

          F77_FUNC (dgemv, DGEMV) (F77_CONST_CHAR_ARG2 ("N", 1),
                                   n, n, 1.0, m, n, x, 1, 0.0, y, 1
                                   F77_CHAR_ARG_LEN (1));
        }
      else
        {
          if (info < 0)
            return;  // Error

          break;
        }
    }
  while (1);

  F77_INT *sel = new F77_INT [p];

  // In Octave, the dimensions of dr and di are k+1, but k+2 avoids segfault
  double *dr = new double [k + 1];
  double *di = new double [k + 1];
  double *workev = new double [3 * p];

  for (F77_INT i = 0; i < k + 1; i++)
    dr[i] = di[i] = 0.0;

  F77_INT rvec = 1;

  double sigmar = 0.0;
  double sigmai = 0.0;

  // In Octave, this is n*(k+1), but n*(k+2) avoids segfault
  double *z = new double [n * (k + 1)];

  F77_FUNC (dneupd, DNEUPD) (rvec, F77_CONST_CHAR_ARG2 ("A", 1),
                             sel, dr, di, z, n, sigmar, sigmai, workev,
                             F77_CONST_CHAR_ARG2 ("I", 1), n,
                             F77_CONST_CHAR_ARG2 ("LM", 2), k, tol,
                             resid, p, v, n, ip, ipntr, workd,
                             workl, lwork, info
                             F77_CHAR_ARG_LEN (1)
                             F77_CHAR_ARG_LEN (1)
                             F77_CHAR_ARG_LEN (2));
}

]], [[

  for (int i = 0; i < 10; i++)
    doit ();

    ]])],
    octave_cv_lib_arpack_ok_1=yes,
    octave_cv_lib_arpack_ok_1=no,
    octave_cv_lib_arpack_ok_1=yes)
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_lib_arpack_ok_1 = yes; then
    $1
    :
  else
    $2
    :
  fi
])
m4trace:m4/acinclude.m4:1171: -1- AC_DEFUN([OCTAVE_CHECK_LIB_ARPACK_OK_2], [
  AC_CACHE_CHECK([whether the arpack library is free of bugs],
    [octave_cv_lib_arpack_ok_2],
    [save_FFLAGS="$FFLAGS"
    FFLAGS="$FFLAGS $F77_INTEGER_8_FLAG"
    AC_LANG_PUSH(Fortran 77)
    AC_RUN_IFELSE([[
      program bug_52425
c
      integer          maxn, maxnev, maxncv, ldv
      parameter       (maxn=256, maxnev=10, maxncv=25,
     $                 ldv=maxn )
c
      Double precision
     &                 v(ldv,maxncv), workl(maxncv*(maxncv+8)),
     &                 workd(3*maxn), d(maxncv,2), resid(maxn),
     &                 ax(maxn)
      logical          select(maxncv)
      integer          iparam(11), ipntr(11)
c
      character        bmat*1, which*2
      integer          ido, n, nev, ncv, lworkl, info, ierr, j,
     &                 nx, nconv, maxitr, mode, ishfts
      logical          rvec
      Double precision
     &                 tol, sigma
c
      Double precision
     &                 zero
      parameter        (zero = 0.0D+0)
c
      Double precision
     &                 dnrm2
      external         dnrm2, daxpy
c
      intrinsic        abs
c
      n = 20
      nev =  4
      ncv =  20
      bmat = 'I'
      which = 'BE'
c
      lworkl = ncv*(ncv+8)
      tol = zero
      info = 1
      do j = 1,n
         resid (j) = 1.0d0
      end do
      ido = 0
c
      ishfts = 1
      maxitr = 300
      mode   = 1
c
      iparam(1) = ishfts
      iparam(3) = maxitr
      iparam(7) = mode
c
 10   continue
c
         call dsaupd ( ido, bmat, n, which, nev, tol, resid,
     &                 ncv, v, ldv, iparam, ipntr, workd, workl,
     &                 lworkl, info )
c
         if (ido .eq. -1 .or. ido .eq. 1) then
            call av (n, workd(ipntr(1)), workd(ipntr(2)))
            go to 10
         end if
c
      if ( info .lt. 0 ) then
          stop 1
      else
         rvec = .false.
c
         call dseupd ( rvec, 'All', select, d, v, ldv, sigma,
     &        bmat, n, which, nev, tol, resid, ncv, v, ldv,
     &        iparam, ipntr, workd, workl, lworkl, ierr )
c
         if ( ierr .ne. 0) then
             stop 1
         else
             nconv =  iparam(5)
             do 20 j=1, nconv
                call av(n, v(1,j), ax)
                call daxpy(n, -d(j,1), v(1,j), 1, ax, 1)
                d(j,2) = dnrm2(n, ax, 1)
                d(j,2) = d(j,2) / abs(d(j,1))
c
 20          continue
c
c            | Litmus test: return 1 or 0 based on returned eigenvalue
c
             if (abs(d(1,1) - 2.0810) > 1.0d-4) then
                stop 1
             else
                stop 0
             end if
         end if
      end if
c
      end
c
      subroutine av (n, v, w)
      integer           n, j
      Double precision v(n), w(n)
c
      w(1) = 4*v(1) + v(3)
      w(2) = 4*v(2) + v(4)
      do 10 j = 3, n - 2
         w(j) = v(j-2) + 4*v(j) + v(j+2)
 10   continue
      w(n-1) = v(n-3) + 4 * v(n-1)
      w(n) = v(n-2) + 4 * v(n)
      return
      end
    ]],
    octave_cv_lib_arpack_ok_2=yes,
    octave_cv_lib_arpack_ok_2=no,
    octave_cv_lib_arpack_ok_2=yes)
    ## Restore FFLAGS.
    FFLAGS="$save_FFLAGS"
    AC_LANG_POP(Fortran 77)
  ])
  if test $octave_cv_lib_arpack_ok_2 = yes; then
    $1
    :
  else
    $2
    :
  fi
])
m4trace:m4/acinclude.m4:1308: -1- AC_DEFUN([OCTAVE_CHECK_LIB_GLPK_OK], [
  AC_CACHE_CHECK([whether the glpk library has glp_interior(glp_prob*, glp_iptcp*)],
    [octave_cv_lib_glpk_ok],
    [AC_LANG_PUSH(C++)
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
        extern "C"
        {
        #if defined (HAVE_GLPK_GLPK_H)
        #include <glpk/glpk.h>
        #else
        #include <glpk.h>
        #endif
        }
        ]], [[
        glp_prob *lp = glp_create_prob ();
        glp_iptcp iptcp;
        glp_init_iptcp (&iptcp);
        int retval = glp_interior (lp, &iptcp);
        ]])],
      octave_cv_lib_glpk_ok=yes,
      octave_cv_lib_glpk_ok=no)
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_lib_glpk_ok = yes; then
    $1
    :
  else
    $2
    :
  fi
])
m4trace:m4/acinclude.m4:1344: -1- AC_DEFUN([OCTAVE_CHECK_LIB_HDF5_DLL], [
  AC_CACHE_CHECK([if _HDF5USEDLL_ needs to be defined],
    [octave_cv_lib_hdf5_dll],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[
        #include <hdf5.h>
        ]], [[
        hid_t x = H5T_NATIVE_DOUBLE;
        return x
      ]])],
      [octave_cv_lib_hdf5_dll=no],
      [save_CFLAGS="$CFLAGS"
      CFLAGS="$CFLAGS -DWIN32 -D_HDF5USEDLL_"
      ac_octave_save_LIBS="$LIBS"
      LIBS="$HDF5_LIBS $LIBS"
      AC_LINK_IFELSE([AC_LANG_PROGRAM([[
          #include <hdf5.h>
          ]], [[
          hid_t x = H5T_NATIVE_DOUBLE;
          return x
        ]])],
        octave_cv_lib_hdf5_dll=yes,
        octave_cv_lib_hdf5_dll=no)
      CFLAGS="$save_CFLAGS"
      LIBS="$ac_octave_save_LIBS"
    ])
  ])
  if test $octave_cv_lib_hdf5_dll = yes; then
    AC_DEFINE(_HDF5USEDLL_, 1, [Define to 1 if using HDF5 dll (Win32).])
  fi
])
m4trace:m4/acinclude.m4:1383: -1- AC_DEFUN([OCTAVE_CHECK_LIB_OPENGL], [
  OPENGL_LIBS=

  ## On MacOSX systems the OpenGL framework can be used
  OCTAVE_HAVE_FRAMEWORK(OpenGL, [[
    #include <OpenGL/gl.h>
    #include <OpenGL/glu.h>
    ]], [[
    GLint par; glGetIntegerv (GL_VIEWPORT, &par);
    ]],
    have_framework_opengl=yes, have_framework_opengl=no)

  if test $have_framework_opengl = yes; then
    AC_DEFINE(HAVE_FRAMEWORK_OPENGL, 1,
      [Define to 1 if framework OPENGL is available.])
    OPENGL_LIBS="-framework OpenGL"
    AC_MSG_NOTICE([adding -framework OpenGL to OPENGL_LIBS])
    OCTAVE_CHECK_FUNC_GLUTESSCALLBACK_THREEDOTS
  else
    case $canonical_host_type in
      *-*-mingw32* | *-*-msdosmsvc)
        AC_CHECK_HEADERS([windows.h])
      ;;
    esac
    have_opengl_incs=no
    AC_CHECK_HEADERS([GL/gl.h OpenGL/gl.h],
      [AC_CHECK_HEADERS([GL/glu.h OpenGL/glu.h],
        [have_opengl_incs=yes; break], [], [
#if defined (HAVE_WINDOWS_H)
#include <windows.h>
#endif
      ])
      break
      ], [], [
#if defined (HAVE_WINDOWS_H)
# include <windows.h>
#endif
    ])

    if test $have_opengl_incs = yes; then
      AC_CHECK_HEADERS([GL/glext.h OpenGL/glext.h], [], [], [
#if defined (HAVE_WINDOWS_H)
# include <windows.h>
#endif
#if defined (HAVE_GL_GL_H)
# include <GL/gl.h>
#elif defined (HAVE_OPENGL_GL_H)
# include <OpenGL/gl.h>
#endif
      ])
      case $canonical_host_type in
        *-*-mingw32* | *-*-msdosmsvc)
          ac_octave_save_LIBS="$LIBS"
          LIBS="$LIBS -lopengl32"
          AC_MSG_CHECKING([for glEnable in -lopengl32])
          AC_LINK_IFELSE([AC_LANG_PROGRAM([[
            #if HAVE_WINDOWS_H
            # include <windows.h>
            #endif
            #if defined (HAVE_GL_GL_H)
            # include <GL/gl.h>
            #elif defined (HAVE_OPENGL_GL_H)
            # include <OpenGL/gl.h>
            #endif
            ]], [[
            glEnable(GL_SMOOTH);
            ]])], [OPENGL_LIBS="-lopengl32 -lglu32"])

          LIBS="$ac_octave_save_LIBS"
          if test -n "$OPENGL_LIBS"; then
            AC_MSG_RESULT([yes])
          else
            AC_MSG_RESULT([no])
          fi
          ;;
        *)
          ## Non-Mac, Non-Windows systems use this check
          AC_CHECK_LIB([GL], [glEnable], [OPENGL_LIBS="-lGL -lGLU"])
          ;;
      esac
    fi
  fi
  AC_SUBST(OPENGL_LIBS)
  if test -n "$OPENGL_LIBS"; then
    AC_DEFINE(HAVE_OPENGL, 1, [Define to 1 if OpenGL is available.])
  fi
])
m4trace:m4/acinclude.m4:1473: -1- AC_DEFUN([OCTAVE_CHECK_LIB_PCRE_OK], [
  AC_CACHE_CHECK([whether PCRE library was compiled with UTF support],
    [octave_cv_lib_pcre_ok],
    [AC_LANG_PUSH(C++)
    AC_RUN_IFELSE([AC_LANG_PROGRAM([[
        #include <stdio.h>
        #if defined (HAVE_PCRE_H)
        #  include <pcre.h>
        #elif defined (HAVE_PCRE_PCRE_H)
        #  include <pcre/pcre.h>
        #endif
        ]], [[
        const char *pattern = "test";
        const char *err;
        int erroffset;
        pcre *data = pcre_compile (pattern, PCRE_UTF8, &err, &erroffset, nullptr);
        return (! data);
      ]])],
      octave_cv_lib_pcre_ok=yes,
      octave_cv_lib_pcre_ok=no,
      octave_cv_lib_pcre_ok=yes)
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_lib_pcre_ok = yes; then
    $1
    :
  else
    $2
    :
  fi
])
m4trace:m4/acinclude.m4:1507: -1- AC_DEFUN([OCTAVE_CHECK_LIB_QHULL_OK], [
  AC_CACHE_CHECK([whether the qhull_r library works],
    [octave_cv_lib_qhull_r_ok],
    [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
        #include <stdio.h>
        #if defined (HAVE_LIBQHULL_R_LIBQHULL_R_H)
        # include <libqhull_r/libqhull_r.h>
        # include <libqhull_r/qset_r.h>
        # include <libqhull_r/geom_r.h>
        # include <libqhull_r/poly_r.h>
        # include <libqhull_r/io_r.h>
        #elif defined (HAVE_LIBQHULL_R_H)
        # include <libqhull_r.h>
        # include <qset_r.h>
        # include <geom_r.h>
        # include <poly_r.h>
        # include <io_r.h>
        #endif
        #if defined (NEED_QHULL_R_VERSION)
          char *qh_version = "version";
        #endif
        ]], [[
        int dim = 2;
        int n = 4;
        coordT points[8] = { -0.5, -0.5, -0.5, 0.5, 0.5, -0.5, 0.5, 0.5 };
        boolT ismalloc = 0;
        qhT context = { };
        qhT* qh = &context;
        return qh_new_qhull (qh, dim, n, points, ismalloc, "qhull ", 0, stderr);
      ]])],
      octave_cv_lib_qhull_r_ok=yes,
      octave_cv_lib_qhull_r_ok=no,
      octave_cv_lib_qhull_r_ok=yes)
  ])
  if test $octave_cv_lib_qhull_r_ok = yes; then
    $1
    :
  else
    $2
    :
  fi
])
m4trace:m4/acinclude.m4:1552: -1- AC_DEFUN([OCTAVE_CHECK_LIB_SNDFILE_OK], [
  AC_CACHE_CHECK([whether sndfile library is modern enough],
    [octave_cv_lib_sndfile_ok],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <sndfile.h>
        ]], [[
        int x = SF_FORMAT_OGG;
      ]])],
      octave_cv_lib_sndfile_ok=yes,
      octave_cv_lib_sndfile_ok=no)
  ])
  if test $octave_cv_lib_sndfile_ok = yes; then
    $1
    :
  else
    $2
    :
  fi
])
m4trace:m4/acinclude.m4:1574: -1- AC_DEFUN([OCTAVE_CHECK_LIB_TERMLIB], [
  TERM_LIBS=
  ac_octave_save_LIBS="$LIBS"
  AC_SEARCH_LIBS([tputs],
                 [ncurses curses termcap terminfo termlib],
                 [], [])
  LIBS="$ac_octave_save_LIBS"
  case "$ac_cv_search_tputs" in
    -l*)
      TERM_LIBS="$ac_cv_search_tputs"
    ;;
    no)
      warn_termlibs="I couldn't find -ltermcap, -lterminfo, -lncurses, -lcurses, or -ltermlib!"
      AC_MSG_WARN([$warn_termlibs])
    ;;
  esac

dnl  Old code (9/9/2012).  Delete when new code is definitely proven.
dnl
dnl  for _termlib in ncurses curses termcap terminfo termlib; do
dnl    AC_CHECK_LIB([${_termlib}], [tputs], [
dnl      TERM_LIBS="-l${termlib}"
dnl      octave_cv_lib_found_termlib=yes
dnl      break])
dnl  done

  AC_SUBST(TERM_LIBS)
])
m4trace:m4/acinclude.m4:1610: -1- AC_DEFUN([OCTAVE_CHECK_NEW_QHELPINDEXWIDGET_API], [
  AC_CACHE_CHECK([for new QHelpIndexWidget API],
    [octave_cv_new_qhelpindexwidget_api],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QHelpLink>
        ]], [[
        QHelpLink link;
        ]])],
      octave_cv_new_qhelpindexwidget_api=yes,
      octave_cv_new_qhelpindexwidget_api=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_new_qhelpindexwidget_api = yes; then
    AC_DEFINE(HAVE_NEW_QHELPINDEXWIDGET_API, 1,
      [Define to 1 if using new QHelpIndexWidget API.])
  fi
])
m4trace:m4/acinclude.m4:1637: -1- AC_DEFUN([OCTAVE_CHECK_QHULL_VERSION], [
  AC_CACHE_CHECK([for qh_version in $QHULL_R_LIBS],
    [octave_cv_lib_qhull_r_version],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[
        #include <stdio.h>
        #if defined (HAVE_LIBQHULL_R_LIBQHULL_R_H)
        # include <libqhull_r/libqhull_r.h>
        # include <libqhull_r/qset_r.h>
        # include <libqhull_r/geom_r.h>
        # include <libqhull_r/poly_r.h>
        # include <libqhull_r/io_r.h>
        #elif defined (HAVE_LIBQHULL_R_H)
        # include <libqhull_r.h>
        # include <qset_r.h>
        # include <geom_r.h>
        # include <poly_r.h>
        # include <io_r.h>
        #endif
        ]], [[
        const char *tmp = qh_version;
      ]])],
      octave_cv_lib_qhull_r_version=yes, octave_cv_lib_qhull_r_version=no)
  ])
  if test $octave_cv_lib_qhull_r_version = no; then
    AC_DEFINE(NEED_QHULL_R_VERSION, 1,
      [Define to 1 if the Qhull library needs a qh_version variable defined.])
  fi
])
m4trace:m4/acinclude.m4:1668: -1- AC_DEFUN([OCTAVE_CHECK_QOVERLOAD_TEMPLATE], [
  AC_CACHE_CHECK([for QOverload template],
    [octave_cv_qoverload_template],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QtGlobal>
        ]], [[
        struct Foo
        {
            void overloadedFunction (int) const;
            void overloadedFunction (int, const QString &) const;
        };
        QOverload<int>::of (&Foo::overloadedFunction);
        QOverload<int, const QString &>::of (&Foo::overloadedFunction);
        ]])],
      octave_cv_qoverload_template=yes,
      octave_cv_qoverload_template=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_qoverload_template = yes; then
    AC_DEFINE(HAVE_QOVERLOAD_TEMPLATE, 1,
      [Define to 1 if you have the `QOverload' template.])
  fi
])
m4trace:m4/acinclude.m4:1702: -1- AC_DEFUN([OCTAVE_CHECK_QREGION_ITERATORS], [
  AC_CACHE_CHECK([for QRegion iterators and related functions],
    [octave_cv_qregion_iterators],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <QRegion>
        ]], [[
        QRegion region;
        QRegion::const_iterator it;
        it = region.begin ();
        it = region.end ();
        it = region.cbegin ();
        it = region.cend ();
        QRegion::const_reverse_iterator rit;
        rit = region.rbegin ();
        rit = region.rend ();
        rit = region.crbegin ();
        rit = region.crend ();
        ]])],
      octave_cv_qregion_iterators=yes,
      octave_cv_qregion_iterators=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_qregion_iterators = yes; then
    AC_DEFINE(HAVE_QREGION_ITERATORS, 1,
      [Define to 1 if you have the `QFontMetrics::horizontalAdvance' function.])
  fi
])
m4trace:m4/acinclude.m4:1739: -1- AC_DEFUN([OCTAVE_CHECK_QSCINTILLA], [
  qt_version="$1";
  use_qscintilla=no
  warn_qscintilla=""

  ## Check for Qt libraries
  case "$qt_version" in
    5)
      octave_qscintilla_libnames="qscintilla2-qt5 qscintilla2_qt5 qt5scintilla2"
    ;;
    *)
      AC_MSG_ERROR([Unrecognized Qt version $qt_version])
    ;;
  esac

  if test $build_qt_gui = yes && test $check_qscintilla = yes; then

    ## Check for QScintilla library which is used in the Qt GUI editor.
    AC_CACHE_CHECK([for the QScintilla library for Qt $qt_version],
      [octave_cv_lib_qscintilla],
      [save_CPPFLAGS="$CPPFLAGS"
      save_CXXFLAGS="$CXXFLAGS"
      save_LDFLAGS="$LDFLAGS"
      ac_octave_save_LIBS="$LIBS"
      CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
      CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
      LDFLAGS="$QT_LDFLAGS $LDFLAGS"
      AC_LANG_PUSH(C++)
      for octave_qscintilla_try in $octave_qscintilla_libnames; do
        LIBS="$QT_LIBS -l$octave_qscintilla_try"
        AC_LINK_IFELSE([AC_LANG_PROGRAM([[
          #include <Qsci/qsciapis.h>
          #include <Qsci/qscilexercpp.h>
          ]], [[
          QsciLexer *lexer = new QsciLexerCPP ();
          QsciAPIs *lexer_apis = new QsciAPIs (lexer);
          ]])],
          octave_cv_lib_qscintilla="-l$octave_qscintilla_try",
          octave_cv_lib_qscintilla=no)
        if test $octave_cv_lib_qscintilla != no; then
          break
        fi
      done
      CPPFLAGS="$save_CPPFLAGS"
      CXXFLAGS="$save_CXXFLAGS"
      LDFLAGS="$save_LDFLAGS"
      LIBS="$ac_octave_save_LIBS"
      AC_LANG_POP([C++])
    ])

    if test $octave_cv_lib_qscintilla = no; then
      warn_qscintilla="QScintilla library not found; disabling built-in Qt GUI editor"
    else
      ## Let's assume QScintilla library is at the same location as
      ## other regular Qt libraries.
      QT_LIBS="$QT_LIBS $octave_cv_lib_qscintilla"
      OCTAVE_CHECK_QSCINTILLA_VERSION
      AC_DEFINE(HAVE_QSCINTILLA, 1,
        [Define to 1 if the QScintilla library and header files are available.])

      save_CPPFLAGS="$CPPFLAGS"
      save_CXXFLAGS="$CXXFLAGS"
      CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
      CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
      AC_LANG_PUSH(C++)
      AC_CHECK_HEADERS([Qsci/qscilexeroctave.h Qsci/qscilexermatlab.h])
      AC_LANG_POP(C++)
      CPPFLAGS="$save_CPPFLAGS"
      CXXFLAGS="$save_CXXFLAGS"

      use_qscintilla=yes
    fi
  fi
])
m4trace:m4/acinclude.m4:1818: -1- AC_DEFUN([OCTAVE_CHECK_QSCINTILLA_VERSION], [
  AC_CACHE_CHECK([whether QScintilla has version 2.6.0 or later],
    [octave_cv_version_2_6_0],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[
        #include <Qsci/qsciglobal.h>
        ]], [[
        #if QSCINTILLA_VERSION < 0x020600
        #error Old FindFirst function found.
        #endif
        ]])],
      octave_cv_version_2_6_0=yes,
      octave_cv_version_2_6_0=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_version_2_6_0 = yes; then
    AC_DEFINE(HAVE_QSCI_VERSION_2_6_0, 1,
      [Define to 1 if QScintilla is of Version 2.6.0 or later.])
  fi
])
m4trace:m4/acinclude.m4:1844: -1- AC_DEFUN([OCTAVE_CHECK_QT], [
  octave_qt_versions="$1"

  build_qt_gui=no
  build_qt_graphics=no
  use_qscintilla=no
  win32_terminal=no

  for ver in $octave_qt_versions; do
    OCTAVE_CHECK_QT_VERSION([$ver])
    if test $build_qt_gui = yes; then
      have_qt_version=$ver
      break
    elif test -n "$QT_MODULES_AVAILABLE"; then
      ## If some modules were found for $ver, then warn about possible
      ## incomplete or broken Qt installation instead of checking for
      ## next version in the list.  Don't attempt a similar check for
      ## tools here because Qt4 and Qt5 tools may be installed with
      ## the same name so determining whether there is a mix of versions
      ## will require more work than just looking which tools are installed.
      warn_qt_modules="Your installation of Qt version $ver appears incomplete or broken in some way.  Fix that or use --with-qt=VER to use another version."
      break
    fi
  done

  if test $build_qt_gui = yes; then
    BUILD_QT_SUMMARY_MSG="yes (version: $have_qt_version)"
    if test x"$have_qt_version" = x5; then
      AC_DEFINE(HAVE_QT5, 1, [Define to 1 if using Qt version 5.])
    fi
  else
    if test -n "$QT_MODULES_MISSING" || test -n "$QT_TOOLS_MISSING"; then
      qt_missing=`echo $QT_MODULES_MISSING$QT_TOOLS_MISSING | sed 's/  *$//'`
      BUILD_QT_SUMMARY_MSG="no (missing:$qt_missing)"
    else
      BUILD_QT_SUMMARY_MSG="no"
    fi
    if test -n "$warn_qt_modules"; then
      OCTAVE_CONFIGURE_WARNING([warn_qt_modules])
    fi
    if test -n "$warn_qt_libraries"; then
      OCTAVE_CONFIGURE_WARNING([warn_qt_libraries])
    fi
    if test -n "$warn_qt_version"; then
      OCTAVE_CONFIGURE_WARNING([warn_qt_version])
    fi
    if test -n "$warn_qt_tools"; then
      OCTAVE_CONFIGURE_WARNING([warn_qt_tools])
    fi
    if test -n "$warn_qt_setvbuf"; then
      OCTAVE_CONFIGURE_WARNING([warn_qt_setvbuf])
    fi
    if test -n "$warn_qt_lib_fcns"; then
      OCTAVE_CONFIGURE_WARNING([warn_qt_lib_fcns])
    fi
    if test -n "$warn_qt_abstract_item_model"; then
      OCTAVE_CONFIGURE_WARNING([warn_qt_abstract_item_model])
    fi
    if test -n "$warn_qt_opengl"; then
      OCTAVE_CONFIGURE_WARNING([warn_qt_opengl])
    fi
    if test -n "$warn_qscintilla"; then
      OCTAVE_CONFIGURE_WARNING([warn_qscintilla])
    fi
  fi

  AM_CONDITIONAL([AMCOND_BUILD_QT_GUI], [test $build_qt_gui = yes])
  AM_CONDITIONAL([AMCOND_BUILD_QT_GRAPHICS], [test $build_qt_graphics = yes])
  AM_CONDITIONAL([AMCOND_HAVE_QSCINTILLA], [test $use_qscintilla = yes])
  AM_CONDITIONAL([WIN32_TERMINAL], [test $win32_terminal = yes])
])
m4trace:m4/acinclude.m4:1918: -1- AC_DEFUN([OCTAVE_CHECK_QT_OPENGL_OFFSCREEN_OK], [
  dnl Normally the language and compiler flags would be set and restored
  dnl inside of the AC_CACHE_CHECK body.  Because we also need to check for
  dnl Qt header files associated with the compilation test, set and restore
  dnl these values outside of the AC_CACHE_CHECK for this macro only.
  AC_LANG_PUSH(C++)
  ac_octave_save_CPPFLAGS="$CPPFLAGS"
  ac_octave_save_CXXFLAGS="$CXXFLAGS"
  CPPFLAGS="$QT_OPENGL_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
  CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
  AC_CHECK_HEADERS([QOffscreenSurface])
  AC_CACHE_CHECK([whether Qt supports full offscreen OpenGL rendering],
    [octave_cv_qt_opengl_os_ok],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #if HAVE_WINDOWS_H
         #  include <windows.h>
         #endif
         #if defined (HAVE_GL_GL_H)
         #  include <GL/gl.h>
         #elif defined (HAVE_OPENGL_GL_H)
         #  include <OpenGL/gl.h>
         #endif
         #if defined (HAVE_GL_GLU_H)
         #  include <GL/glu.h>
         #elif defined HAVE_OPENGL_GLU_H || defined HAVE_FRAMEWORK_OPENGL
         #  include <OpenGL/glu.h>
         #endif
         #if defined (HAVE_QOPENGLWIDGET)
         #  include <QOpenGLWidget>
         #  include <QOpenGLContext>
         #endif
         #if defined (HAVE_QOFFSCREENSURFACE)
         #  include <QOffscreenSurface>
         #endif
         QOpenGLContext ctx;
         QOffscreenSurface surf;
       ]])],
       octave_cv_qt_opengl_os_ok=yes,
       octave_cv_qt_opengl_os_ok=no)
  ])
  CPPFLAGS="$ac_octave_save_CPPFLAGS"
  CXXFLAGS="$ac_octave_save_CXXFLAGS"
  AC_LANG_POP(C++)
  if test $octave_cv_qt_opengl_os_ok = yes; then
    $1
    :
  else
    $2
    :
  fi
])
m4trace:m4/acinclude.m4:1972: -1- AC_DEFUN([OCTAVE_CHECK_QT_OPENGL_OK], [
  dnl Normally the language and compiler flags would be set and restored
  dnl inside of the AC_CACHE_CHECK body.  Because we also need to check for
  dnl Qt header files associated with the compilation test, set and restore
  dnl these values outside of the AC_CACHE_CHECK for this macro only.
  AC_LANG_PUSH(C++)
  ac_octave_save_CPPFLAGS="$CPPFLAGS"
  ac_octave_save_CXXFLAGS="$CXXFLAGS"
  CPPFLAGS="$QT_OPENGL_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
  CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
  AC_CHECK_HEADERS([QOpenGLWidget QGLWidget QGLFunctions_1_1])
  AC_CACHE_CHECK([whether Qt works with OpenGL and GLU],
    [octave_cv_qt_opengl_ok],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #if HAVE_WINDOWS_H
         #  include <windows.h>
         #endif
         #if defined (HAVE_GL_GL_H)
         #  include <GL/gl.h>
         #elif defined (HAVE_OPENGL_GL_H)
         #  include <OpenGL/gl.h>
         #endif
         #if defined (HAVE_GL_GLU_H)
         #  include <GL/glu.h>
         #elif defined HAVE_OPENGL_GLU_H || defined HAVE_FRAMEWORK_OPENGL
         #  include <OpenGL/glu.h>
         #endif
         #if defined (HAVE_QOPENGLWIDGET)
         #  include <QOpenGLWidget>
         #  define OCTAVE_QT_OPENGL_WIDGET QOpenGLWidget
         #elif defined (HAVE_QGLWIDGET)
         #  include <QGLWidget>
         #  define OCTAVE_QT_OPENGL_WIDGET QGLWidget
         #endif
         class gl_widget : public OCTAVE_QT_OPENGL_WIDGET
         {
         public:
           gl_widget (QWidget *parent = 0)
             : OCTAVE_QT_OPENGL_WIDGET (parent) { }
           ~gl_widget () {}
         };
         ]], [[
         gl_widget widget;
       ]])],
       octave_cv_qt_opengl_ok=yes,
       octave_cv_qt_opengl_ok=no)
  ])
  CPPFLAGS="$ac_octave_save_CPPFLAGS"
  CXXFLAGS="$ac_octave_save_CXXFLAGS"
  AC_LANG_POP(C++)
  if test $octave_cv_qt_opengl_ok = yes; then
    $1
    :
  else
    $2
    :
  fi
])
m4trace:m4/acinclude.m4:2035: -1- AC_DEFUN([OCTAVE_CHECK_QT_IMCURSORRECTANGLE_ENUM_VALUE], [
  AC_CACHE_CHECK([for Qt::ImCursorRectangle enum value],
    [octave_cv_qt_imcursorrectangle_enum_value],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <Qt>
        ]], [[
        Qt::InputMethodQuery method_query = Qt::ImCursorRectangle;
        ]])],
      octave_cv_qt_imcursorrectangle_enum_value=yes,
      octave_cv_qt_imcursorrectangle_enum_value=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_qt_imcursorrectangle_enum_value = yes; then
    AC_DEFINE(HAVE_QT_IMCURSORRECTANGLE_ENUM_VALUE, 1,
      [Define to 1 if you have the `Qt::ImCursorRectangle' enum value.])
  fi
])
m4trace:m4/acinclude.m4:2064: -1- AC_DEFUN([OCTAVE_CHECK_QT_SPLITBEHAVIOR_ENUM], [
  AC_CACHE_CHECK([for Qt::SplitBehavior enum],
    [octave_cv_qt_splitbehavior_enum],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <Qt>
        ]], [[
        Qt::SplitBehavior sb_keep = Qt::KeepEmptyParts;
        Qt::SplitBehavior sb_skip = Qt::SkipEmptyParts;
        ]])],
      octave_cv_qt_splitbehavior_enum=yes,
      octave_cv_qt_splitbehavior_enum=no)
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_qt_splitbehavior_enum = yes; then
    AC_DEFINE(HAVE_QT_SPLITBEHAVIOR_ENUM, 1,
      [Define to 1 if you have the `Qt::SplitBehavior' enum.])
  fi
])
m4trace:m4/acinclude.m4:2092: -1- AC_DEFUN([OCTAVE_CHECK_QT_TOOL], [
  AC_CHECK_TOOLS(m4_toupper([$1])_QTVER, [$1-qt$qt_version])
  if test -z "$m4_toupper([$1])_QTVER"; then
    AC_CHECK_TOOLS(m4_toupper([$1]), [$1])
    if test -n "$m4_toupper([$1])"; then
      if test -n "$QTCHOOSER"; then
        m4_toupper([$1])FLAGS="-qt=$qt_version"
      fi
      QT_TOOLS_AVAILABLE="$QT_TOOLS_AVAILABLE $1"
    else
      QT_TOOLS_MISSING="$QT_TOOLS_MISSING $1"
    fi
  else
    m4_toupper([$1])="$m4_toupper([$1])_QTVER"
    QT_TOOLS_AVAILABLE="$QT_TOOLS_AVAILABLE $1"
  fi
])
m4trace:m4/acinclude.m4:2115: -1- AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_MSG_CHECKING([Qt version $1])
  QT_CPPFLAGS=
  QT_LDFLAGS=
  QT_LIBS=

  qt_version="$1";

  build_qt_gui=yes
  build_qt_graphics=no
  have_qt_opengl_offscreen=no
  win32_terminal=no

  warn_qt_libraries=""
  warn_qt_version=""
  warn_qt_tools=""
  warn_qt_setvbuf=""
  warn_qt_lib_fcns=""
  warn_qt_abstract_item_model=""
  warn_qt_opengl=""

  ## Check for Qt libraries
  case "$qt_version" in
    5)
      QT_OPENGL_MODULE="Qt5OpenGL"
      QT_MODULES="Qt5Core Qt5Gui Qt5Help Qt5Network Qt5PrintSupport Qt5Xml"
    ;;
    *)
      AC_MSG_ERROR([Unrecognized Qt version $qt_version])
    ;;
  esac

  ## Use this check to get info in the log file.
  PKG_CHECK_MODULES(QT, [$QT_MODULES],
    [],
    [build_qt_gui=no
     warn_qt_libraries="Qt libraries not found; disabling Qt GUI"])

  ## Check the modules again individually to get lists of modules that
  ## are available and/or missing
  QT_MODULES_AVAILABLE=
  QT_MODULES_MISSING=
  for qt_mod in $QT_MODULES; do
    if $PKG_CONFIG --exists $qt_mod; then
      QT_MODULES_AVAILABLE="$QT_MODULES_AVAILABLE $qt_mod"
    else
      QT_MODULES_MISSING="$QT_MODULES_MISSING $qt_mod"
    fi
  done

  if test $build_qt_gui = yes; then
    ## Retrieve Qt compilation and linker flags
    QT_CPPFLAGS="$($PKG_CONFIG --cflags-only-I $QT_MODULES | $SED -e 's/^ *$//')"
    QT_LDFLAGS="$($PKG_CONFIG --libs-only-L $QT_MODULES | $SED -e 's/^ *$//')"
    QT_LIBS="$($PKG_CONFIG --libs-only-l $QT_MODULES | $SED -e 's/^ *$//')"
    QT_OPENGL_CPPFLAGS="$($PKG_CONFIG --cflags-only-I $QT_OPENGL_MODULE | $SED -e 's/^ *$//')"
    QT_OPENGL_LDFLAGS="$($PKG_CONFIG --libs-only-L $QT_OPENGL_MODULE | $SED -e 's/^ *$//')"
    QT_OPENGL_LIBS="$($PKG_CONFIG --libs-only-l $QT_OPENGL_MODULE | $SED -e 's/^ *$//')"

    case $host_os in
      *darwin*)
        ## Qt might be installed in framework
        if test -z "$QT_LIBS"; then
          QT_LDFLAGS="`$PKG_CONFIG --libs-only-other $QT_MODULES | tr ' ' '\n' | $GREP -e '-F' | uniq | tr '\n' ' '`"
          QT_LIBS="`$PKG_CONFIG --libs-only-other $QT_MODULES | tr ' ' '\n' | $GREP -v -e '-F' | uniq | tr '\n' ' '`"
          QT_OPENGL_LDFLAGS="`$PKG_CONFIG --libs-only-other $QT_OPENGL_MODULE | tr ' ' '\n' | $GREP -e '-F' | uniq | tr '\n' ' '`"
          QT_OPENGL_LIBS="`$PKG_CONFIG --libs-only-other $QT_OPENGL_MODULE | tr ' ' '\n' | $GREP -v -e '-F' | uniq | tr '\n' ' '`"
          ## Enabling link_all_deps works around libtool's imperfect handling
          ## of the -F flag
          if test -n "$QT_LDFLAGS"; then
            link_all_deps=yes
          fi
          AM_CONDITIONAL([AMCOND_LINK_ALL_DEPS], [test $link_all_deps = yes])
        fi
      ;;
    esac
  fi

  QT_TOOLS_AVAILABLE=
  QT_TOOLS_MISSING=

  if test $build_qt_gui = yes; then
    AC_CHECK_TOOLS(QTCHOOSER, [qtchooser])

    OCTAVE_CHECK_QT_TOOL([moc])
    OCTAVE_CHECK_QT_TOOL([uic])
    OCTAVE_CHECK_QT_TOOL([rcc])
    OCTAVE_CHECK_QT_TOOL([lrelease])
    OCTAVE_CHECK_QT_TOOL([qcollectiongenerator])
    OCTAVE_CHECK_QT_TOOL([qhelpgenerator])

    if test -n "$QT_TOOLS_MISSING"; then
      warn_qt_tools="one or more of the Qt utilities moc, uic, rcc, lrelease, qcollectiongenerator, and qhelpgenerator not found; disabling Qt GUI"
      build_qt_gui=no
      MOC_QTVER=
      UIC_QTVER=
      RCC_QTVER=
      LRELEASE_QTVER=
      QCOLLECTIONGENERATOR_QTVER=
      QHELPGENERATOR_QTVER=
      MOCFLAGS=
      UICFLAGS=
      RCCFLAGS=
      LRELEASEFLAGS=
      QCOLLECTIONGENERATORFLAGS=
      QHELPGENERATORFLAGS=
      $as_unset ac_cv_prog_MOC_QTVER
      $as_unset ac_cv_prog_ac_ct_MOC_QTVER
      $as_unset ac_cv_prog_UIC_QTVER
      $as_unset ac_cv_prog_ac_ct_UIC_QTVER
      $as_unset ac_cv_prog_RCC_QTVER
      $as_unset ac_cv_prog_ac_ct_RCC_QTVER
      $as_unset ac_cv_prog_LRELEASE_QTVER
      $as_unset ac_cv_prog_ac_ct_LRELEASE_QTVER
      $as_unset ac_cv_prog_QCOLLECTIONGENERATOR_QTVER
      $as_unset ac_cv_prog_ac_ct_QCOLLECTIONGENERATOR_QTVER
      $as_unset ac_cv_prog_QHELPGENERATOR_QTVER
      $as_unset ac_cv_prog_ac_ct_QHELPGENERATOR_QTVER
    fi
  fi

  if test $build_qt_gui = yes; then
    case $host_os in
      mingw* | msdosmsvc*)
        AC_CHECK_FUNCS([setvbuf], [win32_terminal=yes],
          [build_qt_gui=no
           warn_qt_setvbuf="setvbuf not found; disabling Qt GUI"])
      ;;
      *)
        AC_CHECK_HEADERS([pty.h libutil.h util.h])
        AC_SEARCH_LIBS([openpty], [util],
          [AC_DEFINE(HAVE_OPENPTY, 1, [Define to 1 if openpty exists])])
        AC_CHECK_FUNCS([chmod chown ftruncate mmap munmap], [],
          [build_qt_gui=no
           warn_qt_lib_fcns="At least one of chmod, chown, ftruncate, mmap, and munmap not found; disabling Qt GUI"])
      ;;
    esac
  fi

  if test $build_qt_gui = yes; then
    ## We have what we need to build the Qt GUI.  The remaining
    ## checks below are for optional features related to the Qt GUI.

    AC_DEFINE(HAVE_QT, 1,
      [Define to 1 if Qt is available, with all required functions, libraries, developer header files, and utilities.])

    AC_LANG_PUSH(C++)
    ac_octave_save_CPPFLAGS="$CPPFLAGS"
    CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
    AC_CHECK_HEADERS([QStandardPaths])
    CPPFLAGS="$ac_octave_save_CPPFLAGS"
    AC_LANG_POP(C++)

    ## We don't need to unset cache variables for any of the remaining
    ## tests if they fail because we have already decided that the Qt
    ## version that we are testing now will be the one used.

    OCTAVE_CHECK_FUNC_QFONTMETRICS_HORIZONTAL_ADVANCE
    OCTAVE_CHECK_FUNC_QGUIAPPLICATION_SETDESKTOPFILENAME
    OCTAVE_CHECK_FUNC_QHELPSEARCHQUERYWIDGET_SEARCHINPUT
    OCTAVE_CHECK_NEW_QHELPINDEXWIDGET_API
    OCTAVE_CHECK_FUNC_QLIST_ITERATOR_CONSTRUCTOR
    OCTAVE_CHECK_FUNC_QMAINWINDOW_RESIZEDOCKS
    OCTAVE_CHECK_FUNC_QPRINTER_SETPAGESIZE
    OCTAVE_CHECK_FUNC_QSCREEN_DEVICEPIXELRATIO
    OCTAVE_CHECK_FUNC_QHELPENGINE_DOCUMENTSFORIDENTIFIER
    OCTAVE_CHECK_FUNC_QWHEELEVENT_ANGLEDELTA
    OCTAVE_CHECK_FUNC_QWHEELEVENT_POSITION

    OCTAVE_CHECK_QOVERLOAD_TEMPLATE
    OCTAVE_CHECK_QREGION_ITERATORS
    OCTAVE_CHECK_QT_IMCURSORRECTANGLE_ENUM_VALUE
    OCTAVE_CHECK_QT_SPLITBEHAVIOR_ENUM

    if test -n "$OPENGL_LIBS"; then
      OCTAVE_CHECK_QT_OPENGL_OK([build_qt_graphics=yes],
        [warn_qt_opengl="Qt does not work with the OpenGL libs (GL and GLU); disabling OpenGL graphics with Qt GUI"])

      if test $build_qt_graphics = yes; then
        AC_DEFINE(HAVE_QT_GRAPHICS, 1, [Define to 1 if Qt works with OpenGL libs (GL and GLU)])
        OCTAVE_CHECK_QT_OPENGL_OFFSCREEN_OK([have_qt_opengl_offscreen=yes])
        if test $have_qt_opengl_offscreen = yes; then
          AC_DEFINE(HAVE_QT_OFFSCREEN, 1, [Define to 1 if Qt handles offscreen OpenGL rendering])
        fi
      fi
    fi

    OCTAVE_CHECK_QSCINTILLA([$qt_version])

  fi
  AC_SUBST(MOCFLAGS)
  AC_SUBST(UICFLAGS)
  AC_SUBST(RCCFLAGS)
  AC_SUBST(LRELEASEFLAGS)
  AC_SUBST(QCOLLECTIONGENERATORFLAGS)
  AC_SUBST(QHELPGENERATORFLAGS)
  AC_SUBST(QT_CPPFLAGS)
  AC_SUBST(QT_LDFLAGS)
  AC_SUBST(QT_LIBS)
  AC_SUBST(QT_OPENGL_CPPFLAGS)
  AC_SUBST(QT_OPENGL_LDFLAGS)
  AC_SUBST(QT_OPENGL_LIBS)
])
m4trace:m4/acinclude.m4:2322: -1- AC_DEFUN([OCTAVE_CHECK_SIZEOF_FORTRAN_INTEGER], [
  AC_CACHE_CHECK([default size of Fortran INTEGER],
    [octave_cv_sizeof_fortran_integer],
    [ac_octave_save_FFLAGS="$FFLAGS"
     FFLAGS="$FFLAGS $F77_INTEGER_8_FLAG"
     AC_LANG_PUSH(Fortran 77)
     AC_RUN_IFELSE([AC_LANG_PROGRAM(,[[
      integer*8 n8
      integer n
c Generate -2**33 + 1.
      n8 = 2
      n8 = -4 * (n8 ** 30)
      n8 = n8 + 1
c Convert to default integer type.  If the values are no longer equal,
c assume the default integer size is 32-bits.
      n = n8
      if (n .ne. n8) stop 1
       ]])],
       octave_cv_sizeof_fortran_integer=8,
       octave_cv_sizeof_fortran_integer=4,
       octave_cv_sizeof_fortran_integer=4)
     AC_LANG_POP(Fortran 77)
     FFLAGS="$ac_octave_save_FFLAGS"
  ])
])
m4trace:m4/acinclude.m4:2353: -1- AC_DEFUN([OCTAVE_CHECK_SUNDIALS_COMPATIBLE_API], [
  ac_octave_save_LIBS=$LIBS
  LIBS="$SUNDIALS_IDA_LIBS $SUNDIALS_NVECSERIAL_LIBS $LIBS"
  dnl Current API functions present in SUNDIALS version 4
  AC_CHECK_FUNCS([IDASetJacFn IDASetLinearSolver SUNLinSol_Dense SUNSparseMatrix_Reallocate SUNContext_Create])
  dnl FIXME: The purpose of the following tests is to detect the deprecated
  dnl API from SUNDIALS version 3, which should only be used if the current
  dnl API tests above failed. For now, always test for ida_direct.h.
  AC_CHECK_HEADERS([ida/ida_direct.h ida_direct.h])
  dnl Each of these is a deprecated analog to the functions listed above.
  AC_CHECK_FUNCS([IDADlsSetJacFn IDADlsSetLinearSolver SUNDenseLinearSolver])
  LIBS=$ac_octave_save_LIBS
  AC_MSG_CHECKING([whether SUNDIALS API provides the necessary functions])
  if test "x$ac_cv_func_IDASetJacFn" = xyes \
     && test "x$ac_cv_func_IDASetLinearSolver" = xyes \
     && test "x$ac_cv_func_SUNLinSol_Dense" = xyes; then
    octave_have_sundials_compatible_api=yes
  elif test "x$ac_cv_func_IDADlsSetJacFn" = xyes \
     && test "x$ac_cv_func_IDADlsSetLinearSolver" = xyes \
     && test "x$ac_cv_func_SUNDenseLinearSolver" = xyes; then
    octave_have_sundials_compatible_api=yes
  else
    octave_have_sundials_compatible_api=no
  fi
  AC_MSG_RESULT([$octave_have_sundials_compatible_api])
  if test "x$ac_cv_func_SUNContext_Create" = xyes; then
    AC_DEFINE(HAVE_SUNDIALS_SUNCONTEXT, 1,
      [Define to 1 if SUNDIALS' API is using a SUNContext object.])
  fi
  if test $octave_have_sundials_compatible_api = no; then
    warn_sundials_disabled="SUNDIALS libraries do not provide an API that is compatible with Octave.  The solvers ode15i and ode15s will be disabled."
    OCTAVE_CONFIGURE_WARNING([warn_sundials_disabled])
  fi
])
m4trace:m4/acinclude.m4:2391: -1- AC_DEFUN([OCTAVE_CHECK_SUNDIALS_SIZEOF_REALTYPE], [
  AC_CACHE_CHECK([whether SUNDIALS IDA is configured with double precision realtype],
    [octave_cv_sundials_realtype_is_double],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #if defined (HAVE_IDA_IDA_H)
        #  include <ida/ida.h>
        #endif
        #include <assert.h>
        ]], [[
        static_assert (sizeof (realtype) == sizeof (double),
                       "SUNDIALS is not configured for double precision");
      ]])],
      octave_cv_sundials_realtype_is_double=yes,
      octave_cv_sundials_realtype_is_double=no)
  ])
  if test $octave_cv_sundials_realtype_is_double = no; then
    warn_sundials_disabled="SUNDIALS IDA library not configured with double precision realtype.  The solvers ode15i and ode15s will be disabled."
    OCTAVE_CONFIGURE_WARNING([warn_sundials_disabled])
  fi
])
m4trace:m4/acinclude.m4:2414: -1- AC_DEFUN([OCTAVE_CHECK_SUNDIALS_SUNLINSOL_DENSE], [
  AC_CHECK_HEADERS([sunlinsol/sunlinsol_dense.h],
      octave_cv_sundials_sunlinsol_dense=yes,
      octave_cv_sundials_sunlinsol_dense=no)
    ])
m4trace:m4/acinclude.m4:2420: -1- m4_pattern_allow([^HAVE_SUNDIALS_SUNLINSOL_DENSE$])
m4trace:m4/acinclude.m4:2431: -1- AC_DEFUN([OCTAVE_CHECK_SUNDIALS_SUNLINSOL_KLU], [
  ## Including <sunlinsol/sunlinsol_klu.h> may depend on including klu.h
  ## first.  So perform the check as follows using several different
  ## possible locations for klu.h instead of using OCTAVE_CHECK_LIB to
  ## check for sunlinsol_klu.h.
  AC_CHECK_HEADERS([klu.h klu/klu.h suitesparse/klu.h ufsparse/klu.h])
  AC_CHECK_HEADERS([sunlinsol/sunlinsol_klu.h], [], [],
    [#if defined (HAVE_KLU_H)
     #  include <klu.h>
     #elif  defined (HAVE_KLU_KLU_H)
     #  include <klu/klu.h>
     #elif  defined (HAVE_SUITESPARSE_KLU_H)
     #  include <suitesparse/klu.h>
     #elif  defined (HAVE_UFSPARSE_KLU_H)
     #  include <ufsparse/klu.h>
     #endif
    ])
  ## Check for current KLU function name first.
  OCTAVE_CHECK_LIB(sundials_sunlinsolklu, SUNLINSOL_KLU, [],
    [], [SUNLinSol_KLU], [],
    [don't use SUNDIALS SUNLINSOL_KLU library, disable ode15i and ode15s sparse Jacobian],
    [AC_CHECK_FUNCS([SUNLinSol_KLU])
     AC_CACHE_CHECK([whether compiling a program that calls SUNLinSol_KLU works],
      [octave_cv_sundials_sunlinsol_klu],
      [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #if defined (HAVE_IDA_IDA_H)
         #include <ida/ida.h>
         #endif
         #if defined (HAVE_KLU_H)
         #include <klu.h>
         #endif
         #if defined (HAVE_KLU_KLU_H)
         #include <klu/klu.h>
         #endif
         #if defined (HAVE_SUITESPARSE_KLU_H)
         #include <suitesparse/klu.h>
         #endif
         #if defined (HAVE_UFPARSE_KLU_H)
         #include <ufsparse/klu.h>
         #endif
         #if defined (HAVE_SUNLINSOL_SUNLINSOL_KLU_H)
         #include <sunlinsol/sunlinsol_klu.h>
         #endif
         ]], [[
         #if defined (HAVE_SUNCONTEXT_CREATE)
           SUNContext *sunContext;
           if (SUNContext_Create (NULL, sunContext) < 0)
             1/0;  // provoke an error
           SUNLinSol_KLU (0, 0, *sunContext);
           SUNContext_Free (sunContext);
         #else
           SUNLinSol_KLU (0, 0);
         #endif
      ]])],
      octave_cv_sundials_sunlinsol_klu=yes,
      octave_cv_sundials_sunlinsol_klu=no)
    ])])
  if test "x$octave_cv_sundials_sunlinsol_klu" = xno; then
    ## Check for deprecated KLU function name second.
    OCTAVE_CHECK_LIB(sundials_sunlinsolklu, SUNLINSOL_KLU, [],
      [], [SUNKLU], [],
      [don't use SUNDIALS SUNLINSOL_KLU library, disable ode15i and ode15s sparse Jacobian],
      [AC_CHECK_FUNCS([SUNKLU])
       AC_CACHE_CHECK([whether compiling a program that calls SUNLinSol_KLU works],
        [octave_cv_sundials_sunlinsol_klu],
        [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
           #if defined (HAVE_IDA_IDA_H)
           #include <ida/ida.h>
           #endif
           #if defined (HAVE_KLU_H)
           #include <klu.h>
           #endif
           #if defined (HAVE_KLU_KLU_H)
           #include <klu/klu.h>
           #endif
           #if defined (HAVE_SUITESPARSE_KLU_H)
           #include <suitesparse/klu.h>
           #endif
           #if defined (HAVE_UFPARSE_KLU_H)
           #include <ufsparse/klu.h>
           #endif
           #if defined (HAVE_SUNLINSOL_SUNLINSOL_KLU_H)
           #include <sunlinsol/sunlinsol_klu.h>
           #endif
           ]], [[
           SUNKLU (0, 0);
        ]])],
        octave_cv_sundials_sunlinsol_klu=yes,
        octave_cv_sundials_sunlinsol_klu=no)
      ])])
  fi
  if test "x$ac_cv_header_sunlinsol_sunlinsol_klu_h" = xyes \
     && test "x$octave_cv_sundials_sunlinsol_klu" = xyes; then
    AC_DEFINE(HAVE_SUNDIALS_SUNLINSOL_KLU, 1,
      [Define to 1 if SUNDIALS IDA is configured with SUNLINSOL_KLU enabled.])
  else
    warn_sundials_sunlinsol_klu="SUNDIALS IDA library not configured with SUNLINSOL_KLU or sunlinksol_klu.h is not usable.  The solvers ode15i and ode15s will not support the sparse Jacobian feature."
    OCTAVE_CONFIGURE_WARNING([warn_sundials_sunlinsol_klu])
  fi
])
m4trace:m4/acinclude.m4:2535: -1- AC_DEFUN([OCTAVE_CONFIG_MOVE_IF_CHANGE_FILES], [
  m4_foreach_w([elt], [$1], [
    AC_CONFIG_FILES(elt[-tmp:]patsubst(elt, [.sh$], [.in.sh]))
    AC_CONFIG_COMMANDS(elt,
    [$SHELL $srcdir/build-aux/move-if-change ]elt[-tmp ]elt)])])
m4trace:m4/acinclude.m4:2543: -1- AC_DEFUN([OCTAVE_CONFIGURE_WARNING], [
  AC_MSG_WARN([$][$1])
  m4_set_add([summary_warning_list], [$1])
])
m4trace:m4/acinclude.m4:2550: -1- AC_DEFUN([OCTAVE_CONFIGURE_WARNING_SUMMARY], [
  m4_set_foreach([summary_warning_list], [elt], [
    if test -n "[$]elt"; then
      AC_MSG_WARN([$]elt)
      warn_msg_printed=true
    fi])
])
m4trace:m4/acinclude.m4:2561: -1- AC_DEFUN([OCTAVE_CXX_BITWISE_OP_TEMPLATES], [
  AC_CACHE_CHECK([whether bit_and, bit_or, bit_xor are defined in the C++ library],
    [octave_cv_cxx_bitwise_op_templates],
    [AC_LANG_PUSH(C++)
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <functional>
        ]], [[
        int x = 0;
        int y = 1;
        int z1 = std::bit_and<int>() (x, y);
        int z2 = std::bit_or<int>() (x, y);
        int z3 = std::bit_xor<int>() (x, y);
      ]])],
      octave_cv_cxx_bitwise_op_templates=yes,
      octave_cv_cxx_bitwise_op_templates=no)
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_cxx_bitwise_op_templates = yes; then
    AC_DEFINE(HAVE_CXX_BITWISE_OP_TEMPLATES, 1,
      [Define to 1 if C++ library has templated bitwise operators.])
  fi
])
m4trace:m4/acinclude.m4:2587: -1- AC_DEFUN([OCTAVE_CXX_COMPLEX_REFERENCE_ACCESSORS], [
  AC_CACHE_CHECK([whether complex class can reference components independently],
    [octave_cv_cxx_complex_reference_accessors],
    [AC_LANG_PUSH(C++)
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <complex>
        ]], [[
        std::complex<double> x;
        x.real () = 1.0;
        x.imag () = 1.0;
      ]])],
      octave_cv_cxx_complex_reference_accessors=yes,
      octave_cv_cxx_complex_reference_accessors=no)
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_cxx_complex_reference_accessors = yes; then
    AC_DEFINE(HAVE_CXX_COMPLEX_REFERENCE_ACCESSORS, 1,
      [Define to 1 if C++ complex class has T& real (void) and T& imag (void) methods.])
  fi
])
m4trace:m4/acinclude.m4:2611: -1- AC_DEFUN([OCTAVE_CXX_COMPLEX_SETTERS], [
  AC_CACHE_CHECK([whether complex class can set components independently],
    [octave_cv_cxx_complex_setters],
    [AC_LANG_PUSH(C++)
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        #include <complex>
        ]], [[
        std::complex<double> x;
        x.real (1.0);
        x.imag (2.0);
      ]])],
      octave_cv_cxx_complex_setters=yes, octave_cv_cxx_complex_setters=no)
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_cxx_complex_setters = yes; then
    AC_DEFINE(HAVE_CXX_COMPLEX_SETTERS, 1,
      [Define to 1 if C++ complex class has void real (T) and void imag (T) methods.])
  fi
])
m4trace:m4/acinclude.m4:2633: -1- AC_DEFUN([OCTAVE_CXX_DYNAMIC_AUTO_ARRAYS], [
  AC_CACHE_CHECK([whether C++ supports dynamic auto arrays],
    [octave_cv_cxx_dynamic_auto_arrays],
    [AC_LANG_PUSH(C++)
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([], [[
        void test(char *);
        int length();
        char x[length()];
        test(x);
      ]])],
      octave_cv_cxx_dynamic_auto_arrays=yes,
      octave_cv_cxx_dynamic_auto_arrays=no)
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_cxx_dynamic_auto_arrays = yes; then
    AC_DEFINE(HAVE_DYNAMIC_AUTO_ARRAYS, 1,
      [Define to 1 if C++ supports dynamic auto arrays.])
  fi
])
m4trace:m4/acinclude.m4:2657: -1- AC_DEFUN([OCTAVE_CXX_FLAG], [
  ac_safe=`echo "$1" | $SED 'y%./+-:=%__p___%'`
  AC_MSG_CHECKING([whether ${CXX-g++} accepts $1])
  AC_CACHE_VAL([octave_cv_cxx_flag_$ac_safe],
    [AC_LANG_PUSH(C++)
    ac_octave_save_CXXFLAGS="$CXXFLAGS"
    CXXFLAGS="$CXXFLAGS $1"
    AC_LINK_IFELSE([AC_LANG_PROGRAM([], [])],
      eval "octave_cv_cxx_flag_$ac_safe=yes",
      eval "octave_cv_cxx_flag_$ac_safe=no")
    CXXFLAGS="$ac_octave_save_CXXFLAGS"
    AC_LANG_POP(C++)
  ])
  if eval "test \"`echo '$octave_cv_cxx_flag_'$ac_safe`\" = yes"; then
    AC_MSG_RESULT([yes])
    ifelse([$2], ,
      [CXXFLAGS="$CXXFLAGS $1"
      AC_MSG_RESULT([adding $1 to CXXFLAGS])], [$2])
  else
    AC_MSG_RESULT([no])
    ifelse([$3], , , [$3])
  fi
])
m4trace:m4/acinclude.m4:2699: -1- AC_DEFUN_ONCE([OCTAVE_DEFINE_MKOCTFILE_DYNAMIC_LINK_OPTIONS], [
  ### Set system-dependent options for building shared libraries.
  ### These are used by mkoctfile to create dynamically loadable
  ### .oct and .mex files.  It would be great if we could somehow
  ### use libtool to get this information.

  CPICFLAG=-fPIC
  CXXPICFLAG=-fPIC
  FPICFLAG=-fPIC
  SH_LDFLAGS=-shared
  DL_LDFLAGS="${SH_LDFLAGS}"
  MKOCTFILE_DL_LDFLAGS="${DL_LDFLAGS}"
  NO_OCT_FILE_STRIP=false
  TEMPLATE_AR="${AR}"
  TEMPLATE_ARFLAGS="${ARFLAGS}"
  library_path_var=LD_LIBRARY_PATH
  ldpreloadsep=" "
  case $canonical_host_type in
    *-*-386bsd* | *-*-netbsd*)
      SH_LDFLAGS=-Bshareable
    ;;
    *-*-openbsd*)
      SH_LDFLAGS="-shared -fPIC"
    ;;
    *-*-freebsd*)
      SH_LDFLAGS="-shared -Wl,-x"
    ;;
    alpha*-dec-osf*)
      CPICFLAG=
      CXXPICFLAG=
      FPICFLAG=
      SH_LDFLAGS="-shared -Wl,-expect_unresolved -Wl,'*'"
    ;;
    *-*-darwin*)
      DL_LDFLAGS="-bundle -undefined dynamic_lookup -bind_at_load -bundle_loader ${ac_top_build_prefix}src/octave${EXEEXT} ${LDFLAGS}"
      dnl Contains variables that are defined and undefined at this point, so use
      dnl appropriate quoting to defer expansion of ${bindir} and ${version}.
      MKOCTFILE_DL_LDFLAGS='-bundle -undefined dynamic_lookup -bind_at_load -bundle_loader ${bindir}/octave-${version}'"${EXEEXT}"
      SH_LDFLAGS="-dynamiclib -single_module ${LDFLAGS}"
      case $canonical_host_type in
        powerpc-*)
          CXXPICFLAG=
          CPICFLAG=
          FPICFLAG=
        ;;
      esac
      NO_OCT_FILE_STRIP=true
      library_path_var=DYLD_LIBRARY_PATH
    ;;
    *-*-cygwin*)
      CPICFLAG=
      CXXPICFLAG=
      FPICFLAG=
      DL_LDFLAGS="-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--enable-runtime-pseudo-reloc"
      SH_LDFLAGS="-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--enable-auto-image-base"
      ldpreloadsep=":"
    ;;
    *-*-mingw*)
      if test $have_msvc = yes; then
        DL_LDFLAGS="-shared"
        CPICFLAG=
        CXXPICFLAG=
        FPICFLAG=
        SH_LDFLAGS="-shared"
        if test -n "`echo $CFLAGS | $GREP -e '-g'`" || test -n "`echo $CXXFLAGS | $GREP -e '-g'`"; then
          DL_LDFLAGS="$DL_LDFLAGS -g"
          SH_LDFLAGS="$SH_LDFLAGS -g"
        fi
        NO_OCT_FILE_STRIP=true
        library_path_var=PATH
      else
        CPICFLAG=
        CXXPICFLAG=
        FPICFLAG=
        DL_LDFLAGS="-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--enable-runtime-pseudo-reloc"
        SH_LDFLAGS="-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--enable-auto-image-base"
        library_path_var=PATH
      fi
    ;;
    *-*-msdosmsvc)
      DL_LDFLAGS="-shared"
      CPICFLAG=
      CXXPICFLAG=
      FPICFLAG=
      SH_LDFLAGS="-shared"
      if test -n "`echo $CFLAGS | $GREP -e '-g'`" || test -n "`echo $CXXFLAGS | $GREP -e '-g'`"; then
        DL_LDFLAGS="$DL_LDFLAGS -g"
        SH_LDFLAGS="$SH_LDFLAGS -g"
      fi
      NO_OCT_FILE_STRIP=true
      library_path_var=PATH
    ;;
    *-*-linux* | *-*-gnu*)
      MKOCTFILE_DL_LDFLAGS="-shared -Wl,-Bsymbolic"
    ;;
    i[[3456]]86-*-sco3.2v5*)
      SH_LDFLAGS=-G
    ;;
    rs6000-ibm-aix* | powerpc-ibm-aix*)
      CPICFLAG=
      CXXPICFLAG=
      FPICFLAG=
      library_path_var=LIBPATH
    ;;
    hppa*-hp-hpux*)
      if test $ac_cv_f77_compiler_gnu = yes; then
        FPICFLAG=-fPIC
      else
        FPICFLAG=+Z
      fi
      SH_LDFLAGS="-shared -fPIC"
      library_path_var=SHLIB_PATH
    ;;
    ia64*-hp-hpux*)
      if test $ac_cv_f77_compiler_gnu = yes; then
        FPICFLAG=-fPIC
      else
        FPICFLAG=+Z
      fi
      SH_LDFLAGS="-shared -fPIC"
    ;;
    *-sgi-*)
      CPICFLAG=
      CXXPICFLAG=
      FPICFLAG=
    ;;
    sparc-sun-sunos4*)
      if test $ac_cv_f77_compiler_gnu = yes; then
        FPICFLAG=-fPIC
      else
        FPICFLAG=-PIC
      fi
      SH_LDFLAGS="-assert nodefinitions"
    ;;
    sparc-sun-solaris2* | i386-pc-solaris2*)
      if test $ac_cv_f77_compiler_gnu = yes; then
        FPICFLAG=-fPIC
      else
        FPICFLAG=-KPIC
      fi
      if test "$GCC" = yes; then
        CPICFLAG=-fPIC
      else
        CPICFLAG=-KPIC
      fi
      if test "$GXX" = yes; then
        CXXPICFLAG=-fPIC
        SH_LDFLAGS=-shared
      else
        CXXPICFLAG=-KPIC
        SH_LDFLAGS=-G
      fi
      ## Template closures in archive libraries need a different mechanism.
      if test "$GXX" != yes; then
        TEMPLATE_AR="${CXX}"
        TEMPLATE_ARFLAGS="-xar -o"
      fi
    ;;
  esac

  AC_MSG_NOTICE([defining FPICFLAG to be $FPICFLAG])
  AC_MSG_NOTICE([defining CPICFLAG to be $CPICFLAG])
  AC_MSG_NOTICE([defining CXXPICFLAG to be $CXXPICFLAG])
  AC_MSG_NOTICE([defining SH_LDFLAGS to be $SH_LDFLAGS])
  AC_MSG_NOTICE([defining DL_LDFLAGS to be $DL_LDFLAGS])
  AC_MSG_NOTICE([defining MKOCTFILE_DL_LDFLAGS to be $MKOCTFILE_DL_LDFLAGS])
  AC_MSG_NOTICE([defining NO_OCT_FILE_STRIP to be $NO_OCT_FILE_STRIP])
  AC_MSG_NOTICE([defining TEMPLATE_AR to be $TEMPLATE_AR])
  AC_MSG_NOTICE([defining TEMPLATE_ARFLAGS to be $TEMPLATE_ARFLAGS])
  AC_MSG_NOTICE([defining library_path_var to be $library_path_var])
  AC_SUBST(FPICFLAG)
  AC_SUBST(CPICFLAG)
  AC_SUBST(CXXPICFLAG)
  AC_SUBST(SH_LDFLAGS)
  AC_SUBST(DL_LDFLAGS)
  AC_SUBST(MKOCTFILE_DL_LDFLAGS)
  AC_SUBST(NO_OCT_FILE_STRIP)
  AC_SUBST(TEMPLATE_AR)
  AC_SUBST(TEMPLATE_ARFLAGS)
  AC_SUBST(library_path_var)
  AC_SUBST(ldpreloadsep)
  AM_SUBST_NOTMAKE(ldpreloadsep)
])
m4trace:m4/acinclude.m4:2886: -1- AC_DEFUN([OCTAVE_ENABLE_READLINE], [
  USE_READLINE=yes
  READLINE_LIBS=
  AC_ARG_ENABLE([readline],
    [AS_HELP_STRING([--disable-readline],
      [do not use readline library])],
    [if test "$enableval" = no; then
       USE_READLINE=no
       warn_readline="command editing and history features require GNU Readline"
     fi])
  if test $USE_READLINE = yes; then
    dnl RHEL 5 and older systems require termlib set before enabling readline
    AC_REQUIRE([OCTAVE_CHECK_LIB_TERMLIB])
    ac_octave_save_LIBS="$LIBS"
    LIBS="$TERM_LIBS"
    AC_CHECK_LIB([readline], [rl_set_keyboard_input_timeout],
      [READLINE_LIBS="-lreadline"
      AC_DEFINE(USE_READLINE, 1, [Define to 1 to use the readline library.])
      ],
      [AC_MSG_WARN([I need GNU Readline 4.2 or later])
      AC_MSG_ERROR([this is fatal unless you specify --disable-readline])
    ])
    LIBS="$ac_octave_save_LIBS"
  fi
  AC_SUBST(READLINE_LIBS)
])
m4trace:m4/acinclude.m4:2918: -1- AC_DEFUN([OCTAVE_F77_FLAG], [
  ac_safe=`echo "$1" | $SED 'y%./+-:=%__p___%'`
  AC_MSG_CHECKING([whether ${F77-g77} accepts $1])
  AC_CACHE_VAL([octave_cv_f77_flag_$ac_safe], [
    AC_LANG_PUSH(Fortran 77)
    ac_octave_save_FFLAGS="$FFLAGS"
    FFLAGS="$FFLAGS $1"
    AC_LINK_IFELSE([AC_LANG_PROGRAM([], [])],
      eval "octave_cv_f77_flag_$ac_safe=yes",
      eval "octave_cv_f77_flag_$ac_safe=no")
    FFLAGS="$ac_octave_save_FFLAGS"
    AC_LANG_POP(Fortran 77)
  ])
  if eval "test \"`echo '$octave_cv_f77_flag_'$ac_safe`\" = yes"; then
    AC_MSG_RESULT([yes])
    ifelse([$2], ,
      [FFLAGS="$FFLAGS $1"
      AC_MSG_RESULT([adding $1 to FFLAGS])], [$2])
  else
    AC_MSG_RESULT([no])
    ifelse([$3], , , [$3])
  fi
])
m4trace:m4/acinclude.m4:2949: -1- AC_DEFUN([OCTAVE_HAVE_FRAMEWORK], [
  AC_MSG_CHECKING([whether ${LD-ld} accepts -framework $1])
  AC_CACHE_VAL([octave_cv_framework_$1],
    [ac_octave_save_LDFLAGS="$LDFLAGS"
    LDFLAGS="$LDFLAGS -framework $1"
    AC_LANG_PUSH(C++)
    AC_LINK_IFELSE([AC_LANG_PROGRAM([$2], [$3])],
      eval "octave_cv_framework_$1=yes",
      eval "octave_cv_framework_$1=no")
    AC_LANG_POP(C++)
    LDFLAGS="$ac_octave_save_LDFLAGS"
  ])
  if test "$octave_cv_framework_$1" = yes; then
    AC_MSG_RESULT([yes])
    AC_ARG_WITH(framework-m4_tolower($1),
      [AS_HELP_STRING([--without-framework-m4_tolower($1)],
        [don't use framework $1])],
         with_have_framework=$withval, with_have_framework=yes)
    if test "$with_have_framework" = yes; then
      [$4]
      :
    else
      AC_MSG_NOTICE([framework rejected by --without-framework-m4_tolower($1)])
      [$5]
    fi
  else
    AC_MSG_RESULT([no])
    [$5]
  fi
])
m4trace:m4/acinclude.m4:2982: -1- AC_DEFUN([OCTAVE_IEEE754_DATA_FORMAT], [
  AC_MSG_CHECKING([for IEEE 754 data format])
  AC_CACHE_VAL([octave_cv_ieee754_data_format],
    [AC_RUN_IFELSE([AC_LANG_SOURCE([[
        int
        main (void)
        {
          typedef union { unsigned char c[8]; double d; } ieeebytes;

          ieeebytes l = {0x1c, 0xbc, 0x6e, 0xf2, 0x54, 0x8b, 0x11, 0x43};
          ieeebytes b = {0x43, 0x11, 0x8b, 0x54, 0xf2, 0x6e, 0xbc, 0x1c};

          return l.d != 1234567891234567.0 && b.d != 1234567891234567.0;
        }
      ]])],
      octave_cv_ieee754_data_format=yes,
      octave_cv_ieee754_data_format=no,
      octave_cv_ieee754_data_format=yes)
  ])
  if test "$cross_compiling" = yes; then
    AC_MSG_RESULT([$octave_cv_ieee754_data_format assumed for cross compilation])
  else
    AC_MSG_RESULT([$octave_cv_ieee754_data_format])
  fi
  if test $octave_cv_ieee754_data_format = yes; then
    AC_DEFINE(HAVE_IEEE754_DATA_FORMAT, 1,
      [Define to 1 if your system uses IEEE 754 data format.])
  else
    ## If the format is unknown, then you will probably not have a
    ## useful system, so we will abort here.  Anyone wishing to
    ## experiment with building Octave on a system without IEEE
    ## floating point should be capable of removing this check and
    ## the one in the octave_ieee_init function in liboctave/lo-ieee.cc.
    AC_MSG_ERROR([IEEE 754 data format required for building Octave])
  fi
])
m4trace:m4/acinclude.m4:3022: -1- AC_DEFUN([OCTAVE_MIPS_NAN], [
  AC_CACHE_CHECK([whether MIPS processor is using non-standard NaN encoding],
    [octave_cv_mips_nan],
    [AC_LANG_PUSH(C++)
    AC_RUN_IFELSE([AC_LANG_PROGRAM([[
        #include <cmath>
        #include <limits>
        ]], [[
        /* FIXME: Only test is that MIPS is the target architecture.
         * This should be AND'ed with a test for whether the actual NaN
         * value for the high word (LO_IEEE_NA_HW) has the value
         * 0x7FF840F4 (normal) or 0x7FF040F4 (non-standard).  Template code
         * that could work is in liboctave/utils/lo-ieee.cc but it also
         * depends on knowing whether the architecture is big-endian or
         * little-endian.  */
        #if defined (__mips__)
          return (0);
        #else
          return (1);
        #endif
      ]])],
      octave_cv_mips_nan=yes,
      octave_cv_mips_nan=no,
      octave_cv_mips_nan=no)
    AC_LANG_POP(C++)
  ])
  if test $octave_cv_mips_nan = yes; then
    AC_DEFINE(HAVE_MIPS_NAN, 1,
      [Define to 1 if MIPS processor is using non-standard NaN encoding.])
  fi
])
m4trace:m4/acinclude.m4:3056: -1- AC_DEFUN([OCTAVE_PROG_AR], [
  if test -z "$AR"; then
    AR=ar
  fi
  AC_SUBST(AR)

  if test -z "$ARFLAGS"; then
    ARFLAGS="cr"
  fi
  AC_SUBST(ARFLAGS)

  dnl FIXME: Remove when libtool updated (placed 4/15/2017).
  dnl This silences the following unnecessary warning during compile:
  dnl ar: `u' modifier ignored since `D' is the default (see `U')
  if test -z "$AR_FLAGS"; then
    AR_FLAGS="$ARFLAGS"
  fi
])
m4trace:m4/acinclude.m4:3077: -1- AC_DEFUN([OCTAVE_PROG_BISON], [
  dnl FIXME: What is our actual required minimum version for Bison?
  gl_PROG_BISON([BISON], [3.0])
  WARN_BISONFLAGS=

  case "`$BISON --version`" in
    *bison*) tmp_have_bison=yes ;;
    *) tmp_have_bison=no ;;
  esac

  if test $tmp_have_bison = yes; then
    WARN_BISONFLAGS="-Wno-yacc"

    AC_CACHE_CHECK([syntax of bison api.prefix (or name-prefix) declaration],
                   [octave_cv_bison_api_prefix_decl_style], [
      style="api name"
      quote="quote brace"
      for s in $style; do
        for q in $quote; do
          if test $s = "api"; then
            if test $q = "quote"; then
              def='%define api.prefix "foo_"'
            else
              def='%define api.prefix {foo_}'
            fi
          else
            if test $q = "quote"; then
              def='%name-prefix="foo_"'
            else
              def='%name-prefix {foo_}'
            fi
          fi
          cat << EOF > conftest.yy
$def
%start input
%%
input:;
%%
EOF
          ## Older versions of bison only warn and exit with success.
          octave_bison_output=`$BISON $WARN_BISONFLAGS conftest.yy 2>&1`
          ac_status=$?
          if test $ac_status -eq 0 && test -z "$octave_bison_output"; then
            octave_cv_bison_api_prefix_decl_style="$s $q"
            break
          fi
        done
        if test -n "$octave_cv_bison_api_prefix_decl_style"; then
          break
        fi
      done
      rm -f conftest.yy y.tab.h y.tab.c
      ])

    AC_CACHE_CHECK([whether api.prefix applies to yysymbol_kind_t],
                   [octave_cv_bison_api_prefix_applies_to_yysymbol_kind_t], [
      [case "$octave_cv_bison_api_prefix_decl_style" in
        "api brace")
          def='%define api.prefix {PREFIX_}'
        ;;
        "api quote")
          def='%define api.prefix "PREFIX_"'
        ;;
        "name brace")
          def='%define name-prefix {PREFIX_}'
        ;;
        "name quote")
          def='%define name-prefix "PREFIX_"'
        ;;
      esac]
      cat << EOF > conftest.yy
$def
%start input
%%
input:;
%%
EOF
      ## Older versions of bison only warn and exit with success.
      $BISON $WARN_BISONFLAGS --defines --output conftest.cc conftest.yy
      if grep PREFIX_symbol_kind_t conftest.cc > /dev/null; then
        octave_cv_bison_api_prefix_applies_to_yysymbol_kind_t=yes
      else
        octave_cv_bison_api_prefix_applies_to_yysymbol_kind_t=no
      fi
      rm -f conftest.yy y.tab.h conftest.cc
      ])
  fi

  if test -z "$octave_cv_bison_api_prefix_decl_style" \
    || test "$octave_cv_bison_api_prefix_decl_style" != "api brace"; then
    tmp_have_bison=no
    warn_bison_api_prefix_decl_style="

I wasn't able to find a suitable style for declaring the api prefix
in a bison input file so I'm disabling bison.  We expect bison to
understand the '%define api.prefix { PREFIX }' syntax.
"
    OCTAVE_CONFIGURE_WARNING([warn_bison_api_prefix_decl_style])
  fi

  if test $tmp_have_bison = no; then
    BISON='${top_srcdir}/build-aux/missing bison'
    warn_bison="

I didn't find bison, or the version of bison that I found does not
support all the features that are required, but it's only a problem
if you need to reconstruct parse.cc, which is the case if you're
building from VCS sources.
"
    OCTAVE_CONFIGURE_WARNING([warn_bison])

  fi
  if test "$octave_cv_bison_api_prefix_applies_to_yysymbol_kind_t" = no; then
    OCTAVE_PARSER_CPPFLAGS="-Dyysymbol_kind_t=octave_symbol_kind_t"
    OCTAVE_TEX_PARSER_CPPFLAGS="-Dyysymbol_kind_t=octave_tex_symbol_kind_t"
  fi
  AC_SUBST(OCTAVE_PARSER_CPPFLAGS)
  AC_SUBST(OCTAVE_TEX_PARSER_CPPFLAGS)
])
m4trace:m4/acinclude.m4:3203: -1- AC_DEFUN([OCTAVE_PROG_FIND], [
  AC_CHECK_PROGS(FIND, [gfind find])
])
m4trace:m4/acinclude.m4:3209: -1- AC_DEFUN([OCTAVE_PROG_FLEX], [
  ## For now, don't define LEXLIB to be -lfl -- we don't use anything in
  ## it, and it might not be installed.
  ##
  ## Also make sure that we generate an interactive scanner if we are
  ## using flex.
dnl We declare %noyywrap in the lexer files so we use the noyywrap
dnl option here to skip the search for that function.
  AC_PROG_LEX([noyywrap])
  case "`$LEX --version`" in
    *flex*)
      LFLAGS="-I"
      AC_MSG_RESULT([defining LFLAGS to be $LFLAGS])
      LEXLIB=
    ;;
    *)
      LEX='${top_srcdir}/build-aux/missing flex'
      warn_flex="

I didn't find flex, but it's only a problem if you need to reconstruct
lex.cc, which is the case if you're building from VCS sources.
"
      OCTAVE_CONFIGURE_WARNING([warn_flex])
    ;;
  esac
  AC_SUBST(LFLAGS)
])
m4trace:m4/acinclude.m4:3239: -1- AC_DEFUN([OCTAVE_PROG_GHOSTSCRIPT], [
  case "$canonical_host_type" in
    *-*-mingw* | *-*-msdosmsvc)
      ac_octave_gs_names="gs gswin32c gswin64c mgs"
    ;;
    *)
      ac_octave_gs_names="gs"
    ;;
  esac
  AC_CHECK_PROGS(GHOSTSCRIPT, [$ac_octave_gs_names])
  if test -z "$GHOSTSCRIPT"; then
    GHOSTSCRIPT='${top_srcdir}/build-aux/missing gs'
    warn_ghostscript="

I didn't find ghostscript, so reconstructing figures for the manual
will fail, and saving graphics in some output formats will fail when
using Octave
"
    OCTAVE_CONFIGURE_WARNING([warn_ghostscript])
  fi
  AC_SUBST(GHOSTSCRIPT)
])
m4trace:m4/acinclude.m4:3264: -1- AC_DEFUN([OCTAVE_PROG_GNUPLOT], [
  ac_octave_gp_names="gnuplot"
  ac_octave_gp_default="gnuplot"
  if test "$cross_compiling" = yes; then
    GNUPLOT="$ac_octave_gp_default"
    GNUPLOT_BINARY=$GNUPLOT
    AC_MSG_RESULT([assuming $GNUPLOT exists on $canonical_host_type host])
  else
    AC_CHECK_PROGS(GNUPLOT, [$ac_octave_gp_names])
    GNUPLOT_BINARY=$GNUPLOT
    if test -z "$GNUPLOT"; then
      GNUPLOT="$ac_octave_gp_default"
      GNUPLOT_BINARY=""
      warn_gnuplot="

gnuplot not found.  It isn't necessary to have gnuplot installed, but
without native graphics or gnuplot you won't be able to use any of
Octave's plotting commands.
"
      OCTAVE_CONFIGURE_WARNING([warn_gnuplot])
    fi
  fi
  AC_SUBST(GNUPLOT)
])
m4trace:m4/acinclude.m4:3291: -1- AC_DEFUN([OCTAVE_PROG_GPERF], [
  AC_CHECK_PROG(GPERF, gperf, gperf, [])
  if test -z "$GPERF"; then
    GPERF='${top_srcdir}/build-aux/missing gperf'
    warn_gperf="

I didn't find gperf, but it's only a problem if you need to
reconstruct oct-gperf.h
"
    OCTAVE_CONFIGURE_WARNING([warn_gperf])
    GPERF='${top_srcdir}/build-aux/missing gperf'
  fi
  AC_SUBST(GPERF)
])
m4trace:m4/acinclude.m4:3308: -1- AC_DEFUN([OCTAVE_PROG_ICOTOOL], [
  AC_CHECK_PROG(ICOTOOL, icotool, icotool, [])
  if test -z "$ICOTOOL"; then
    ICOTOOL='${top_srcdir}/build-aux/missing icotool'
    warn_icotool="

I didn't find icotool, but it's only a problem if you need to
reconstruct octave-logo.ico, which is the case if you're building from
VCS sources.
"
    OCTAVE_CONFIGURE_WARNING([warn_icotool])
  fi
  AC_SUBST(ICOTOOL)
])
m4trace:m4/acinclude.m4:3325: -1- AC_DEFUN([OCTAVE_PROG_MAKEINFO], [
  dnl use MKINFO, not MAKEINFO, for variable name because Automake
  dnl automatically defines a value for MAKEINFO even when it does not
  dnl exist which will then fool the 'test -z' line.
  AC_CHECK_PROG(MKINFO, makeinfo, makeinfo, [])
  if test -z "$MKINFO"; then
    warn_makeinfo="

I didn't find makeinfo, which is required for reading documentation.
You may install a copy later for Octave to use.
"
    OCTAVE_CONFIGURE_WARNING([warn_makeinfo])
  fi
  dnl If we have a GNU makeinfo program, see if it supports the @sortas command
  dnl for defining a custom sort key for an index entry.
  if test -n "$MKINFO"; then
    AC_CACHE_CHECK([for makeinfo support for @sortas command],
      [octave_cv_makeinfo_sortas_command],
      [cat << EOF > conftest.texi
\input texinfo
@node Top
@top Document
@menu
* Chapter::
* Index::
@end menu
@node Chapter
@chapter Chapter
@cindex @sortas{a} foo
@node Index
@unnumbered Index
@printindex cp
@bye
EOF
        if $MKINFO --no-warn conftest.texi 2>/dev/null; then
          octave_cv_makeinfo_sortas_command=yes
        else
          octave_cv_makeinfo_sortas_command=no
        fi
        rm -f conftest.info conftest.texi
    ])
    if test $octave_cv_makeinfo_sortas_command = no; then
      warn_makeinfo="

I wasn't able to find a version of GNU makeinfo that supports the
@sortas command, but it's only a problem if you need to build the
manual, which is the case if you're building from VCS sources.
"
      OCTAVE_CONFIGURE_WARNING([warn_makeinfo])
    fi
  fi
])
m4trace:m4/acinclude.m4:3380: -1- AC_DEFUN([OCTAVE_PROG_PAGER], [
  if test "$cross_compiling" = yes; then
    DEFAULT_PAGER=less
    AC_MSG_RESULT([assuming $DEFAULT_PAGER exists on $canonical_host_type host])
    AC_SUBST(DEFAULT_PAGER)
  else
    ac_octave_possible_pagers="less more page pg"
    case "$canonical_host_type" in
      *-*-cygwin* | *-*-mingw32* | *-*-msdosmsvc)
        ac_octave_possible_pagers="$ac_octave_possible_pagers more.com"
      ;;
    esac

    AC_CHECK_PROGS(DEFAULT_PAGER, [$ac_octave_possible_pagers], [])
    if test -z "$DEFAULT_PAGER"; then
      warn_less="I couldn't find \`less', \`more', \`page', or \`pg'"
      OCTAVE_CONFIGURE_WARNING([warn_less])
    fi
  fi
])
m4trace:m4/acinclude.m4:3403: -1- AC_DEFUN([OCTAVE_PROG_PERL], [
  AC_CHECK_PROG(PERL, perl, perl, [])
  AC_SUBST(PERL)
])
m4trace:m4/acinclude.m4:3410: -1- AC_DEFUN([OCTAVE_PROG_PYTHON], [
  AC_CHECK_PROGS(PYTHON, [python3 python], python, [])
  AC_SUBST(PYTHON)
])
m4trace:m4/acinclude.m4:3417: -1- AC_DEFUN([OCTAVE_PROG_RSVG_CONVERT], [
  AC_CHECK_PROG(RSVG_CONVERT, rsvg-convert, rsvg-convert, [])
  if test -z "$RSVG_CONVERT"; then
    RSVG_CONVERT='${top_srcdir}/build-aux/missing rsvg-convert'
    warn_rsvg_convert="

I didn't find rsvg-convert, but it's only a problem if you need to
reconstruct octave-logo-*.png, which is the case if you're building
from VCS sources.
"
    OCTAVE_CONFIGURE_WARNING([warn_rsvg_convert])
  fi
  AC_SUBST(RSVG_CONVERT)
])
m4trace:m4/acinclude.m4:3437: -1- AC_DEFUN([OCTAVE_PROG_SED], [
  AC_MSG_CHECKING([for a usable sed])
  if test -z "$SED"; then
    AC_CACHE_VAL([octave_cv_prog_sed],
      [# Loop through the user's path and search for sed and gsed.
      # Next, test potential sed programs in list for truncation.
      _AS_PATH_WALK([$PATH],
        [for ac_prog in sed gsed; do
          for ac_exec_ext in '' $ac_executable_extensions; do
            if AS_EXECUTABLE_P(["$as_dir/$ac_prog$ac_exec_ext"]); then
              _sed_list="$_sed_list $as_dir/$ac_prog$ac_exec_ext"
            fi
          done
        done
      ])
      AS_TMPDIR(sed)
      _max=0
      _count=0
      # Add /usr/xpg4/bin/sed as it is typically found on Solaris
      # along with /bin/sed that truncates output.
      for _sed in $_sed_list /usr/xpg4/bin/sed; do
        test ! -f ${_sed} && break
        cat /dev/null > "$tmp/sed.in"
        _count=0
        echo $ECHO_N "0123456789$ECHO_C" >"$tmp/sed.in"
        # Check for GNU sed and select it if it is found.
        if "${_sed}" --version 2>&1 < /dev/null | egrep '(GNU)' > /dev/null; then
          octave_cv_prog_sed=${_sed}
          break;
        fi
        # Reject if RE alternation is not handled.
        if test "`echo 'this and that' | ${_sed} -n 's/\(this\|that\).*$/\1/p'`" != "this"; then
          continue;
        fi
        while true; do
          cat "$tmp/sed.in" "$tmp/sed.in" >"$tmp/sed.tmp"
          mv "$tmp/sed.tmp" "$tmp/sed.in"
          cp "$tmp/sed.in" "$tmp/sed.nl"
          echo >>"$tmp/sed.nl"
          ${_sed} -e 's/a$//' < "$tmp/sed.nl" >"$tmp/sed.out" || break
          cmp -s "$tmp/sed.out" "$tmp/sed.nl" || break
          # 10000 chars as input seems more than enough
          test $_count -gt 10 && break
          _count=`expr $_count + 1`
          if test $_count -gt $_max; then
            _max=$_count
            octave_cv_prog_sed=$_sed
          fi
        done
      done
      rm -rf "$tmp"
    ])
    SED=$octave_cv_prog_sed
    if test -z "$SED"; then
      AC_MSG_ERROR([no usable version of sed found])
    fi
  fi
  AC_SUBST(SED)
  AC_MSG_RESULT([$SED])
])
m4trace:m4/acinclude.m4:3500: -1- AC_DEFUN([OCTAVE_PROG_TAR_REPRODUCIBLE], [
  AC_MSG_CHECKING([for options to make reproducible archives with GNU tar])
  AC_CACHE_VAL([octave_cv_tar_flags],
    [octave_cv_tar_flags=
    dnl This uses Automake's logic for finding GNU tar under various names
    for octave_tar in tar gnutar gtar :; do
      $octave_tar --version >/dev/null 2>&1 && break
    done
    dnl If we have a valid GNU tar program, see if it supports sets of options
    if test x"$octave_tar" != x:; then
      echo > conftest.txt
      for octave_tar_flag in --owner=0 --group=0 --numeric-owner --sort=name; do
        $octave_tar -cf conftest.tar $octave_cv_tar_flags $octave_tar_flag conftest.txt 2>/dev/null
        if test $? -eq 0; then
          octave_cv_tar_flags="${octave_cv_tar_flags:+$octave_cv_tar_flags }$octave_tar_flag"
        fi
      done
      rm -f conftest.tar conftest.txt
    fi
  ])

  REPRODUCIBLE_TAR_FLAGS="$octave_cv_tar_flags"
  AC_SUBST(REPRODUCIBLE_TAR_FLAGS)
  AC_MSG_RESULT([$REPRODUCIBLE_TAR_FLAGS])
])
m4trace:m4/acinclude.m4:3528: -1- AC_DEFUN([OCTAVE_PROG_TEXI2DVI], [
  AC_CHECK_PROG(TEXI2DVI, texi2dvi, texi2dvi, [])
  if test -z "$TEXI2DVI"; then
    TEXI2DVI='${top_srcdir}/build-aux/missing texi2dvi'
    warn_texi2dvi="

I didn't find texi2dvi, but it's only a problem if you need to
reconstruct the DVI version of the manual
"
    OCTAVE_CONFIGURE_WARNING([warn_texi2dvi])
  fi
  AC_SUBST(TEXI2DVI)
])
m4trace:m4/acinclude.m4:3544: -1- AC_DEFUN([OCTAVE_PROG_TEXI2PDF], [
  AC_REQUIRE([OCTAVE_PROG_TEXI2DVI])
  AC_CHECK_PROG(TEXI2PDF, texi2pdf, texi2pdf, [])
  if test -z "$TEXI2PDF"; then
    ac_octave_texi2pdf_missing=yes;
    if test -n "$TEXI2DVI"; then
      TEXI2PDF="$TEXI2DVI --pdf"
      ac_octave_texi2pdf_missing=no;
    fi
  else
    ac_octave_texi2pdf_missing=no;
  fi
  if test $ac_octave_texi2pdf_missing = yes; then
    TEXI2PDF='${top_srcdir}/build-aux/missing texi2pdf'
    warn_texi2pdf="

I didn't find texi2pdf, but it's only a problem if you need to
reconstruct the PDF version of the manual
"
    OCTAVE_CONFIGURE_WARNING([warn_texi2pdf])
  fi
  AC_SUBST(TEXI2PDF)
])
m4trace:m4/acinclude.m4:3570: -1- AC_DEFUN([OCTAVE_SET_DEFAULT], [
  ifelse($#, 2, [: ${$1=$2}
])dnl
  AC_MSG_RESULT([defining $1 to be $$1])
  AC_SUBST($1)
])
m4trace:m4/acinclude.m4:3581: -1- AC_DEFUN([OCTAVE_UMFPACK_SEPARATE_SPLIT], [
  AC_MSG_CHECKING([for UMFPACK separate complex matrix and rhs split])
  AC_CACHE_VAL([octave_cv_umfpack_separate_split],
    [AC_RUN_IFELSE([AC_LANG_SOURCE([[
        #include <stdint.h>
        #include <stdlib.h>
        #include <math.h>
        #if defined (HAVE_SUITESPARSE_UMFPACK_H)
        # include <suitesparse/umfpack.h>
        #elif defined (HAVE_UMFPACK_UMFPACK_H)
        # include <umfpack/umfpack.h>
        #elif defined (HAVE_UMFPACK_H)
        # include <umfpack.h>
        #endif
        #if defined (OCTAVE_ENABLE_64)
        typedef uint64_t idx_type;
        #define UMFPACK_NAME(name) umfpack_zl_ ## name
        #else
        typedef int idx_type;
        #define UMFPACK_NAME(name) umfpack_zi_ ## name
        #endif
        idx_type n = 5;
        idx_type Ap[] = {0, 2, 5, 9, 10, 12};
        idx_type Ai[]  = {0, 1, 0, 2, 4, 1, 2, 3, 4, 2, 1, 4};
        double Ax[] = {2., 0., 3., 0., 3., 0., -1., 0., 4., 0., 4., 0.,
                      -3., 0., 1., 0., 2., 0., 2., 0., 6., 0., 1., 0.};
        double br[] = {8., 45., -3., 3., 19.};
        double bi[] = {0., 0., 0., 0., 0.};
        int main (void)
        {
          double *null = (double *) NULL ;
          double *x = (double *)malloc (2 * n * sizeof(double));
          idx_type i ;
          void *Symbolic, *Numeric ;
          (void) UMFPACK_NAME (symbolic) (n, n, Ap, Ai, Ax, null, &Symbolic, null, null) ;
          (void) UMFPACK_NAME (numeric) (Ap, Ai, Ax, null, Symbolic, &Numeric, null, null) ;
          UMFPACK_NAME (free_symbolic) (&Symbolic) ;
          (void) UMFPACK_NAME (solve) (0, Ap, Ai, Ax, null, x, null, br, bi,
                                   Numeric, null, null) ;
          UMFPACK_NAME (free_numeric) (&Numeric) ;
          for (i = 0; i < n; i++, x+=2)
            if (fabs (*x - i - 1.) > 1.e-13)
              return (1);
          return (0) ;
        }
      ]])],
      octave_cv_umfpack_separate_split=yes,
      octave_cv_umfpack_separate_split=no,
      octave_cv_umfpack_separate_split=yes)
  ])
  if test "$cross_compiling" = yes; then
    AC_MSG_RESULT([$octave_cv_umfpack_separate_split assumed for cross compilation])
  else
    AC_MSG_RESULT([$octave_cv_umfpack_separate_split])
  fi
  if test $octave_cv_umfpack_separate_split = yes; then
    AC_DEFINE(UMFPACK_SEPARATE_SPLIT, 1,
      [Define to 1 if the UMFPACK Complex solver allows matrix and RHS to be split independently.])
  fi
])
m4trace:m4/alloca.m4:8: -1- AC_DEFUN([gl_FUNC_ALLOCA], [
  AC_REQUIRE([AC_FUNC_ALLOCA])
  if test $ac_cv_func_alloca_works = no; then
    gl_PREREQ_ALLOCA
  fi

  # Define an additional variable used in the Makefile substitution.
  if test $ac_cv_working_alloca_h = yes; then
    AC_CACHE_CHECK([for alloca as a compiler built-in], [gl_cv_rpl_alloca], [
      AC_EGREP_CPP([Need own alloca], [
#if defined __GNUC__ || defined _AIX || defined _MSC_VER
        Need own alloca
#endif
        ], [gl_cv_rpl_alloca=yes], [gl_cv_rpl_alloca=no])
    ])
    if test $gl_cv_rpl_alloca = yes; then
      dnl OK, alloca can be implemented through a compiler built-in.
      AC_DEFINE([HAVE_ALLOCA], [1],
        [Define to 1 if you have 'alloca' after including <alloca.h>,
         a header that may be supplied by this distribution.])
      ALLOCA_H=alloca.h
    else
      dnl alloca exists as a library function, i.e. it is slow and probably
      dnl a memory leak. Don't define HAVE_ALLOCA in this case.
      ALLOCA_H=
    fi
  else
    ALLOCA_H=alloca.h
  fi
  AC_SUBST([ALLOCA_H])
  AM_CONDITIONAL([GL_GENERATE_ALLOCA_H], [test -n "$ALLOCA_H"])

  if test $ac_cv_working_alloca_h = yes; then
    HAVE_ALLOCA_H=1
  else
    HAVE_ALLOCA_H=0
  fi
  AC_SUBST([HAVE_ALLOCA_H])
])
m4trace:m4/alloca.m4:51: -1- AC_DEFUN([gl_PREREQ_ALLOCA], [:])
m4trace:m4/ax_blas.m4:69: -1- AU_DEFUN([ACX_BLAS], [m4_if($#, 0, [AX_BLAS], [AX_BLAS($@)])], [], [])
m4trace:m4/ax_blas.m4:69: -1- AC_DEFUN([ACX_BLAS], [m4_warn([obsolete], [The macro `ACX_BLAS' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AX_BLAS], [AX_BLAS($@)])])
m4trace:m4/ax_blas.m4:70: -1- AC_DEFUN([AX_BLAS], [
AC_PREREQ([2.55])
AC_REQUIRE([AC_F77_LIBRARY_LDFLAGS])
AC_REQUIRE([AC_CANONICAL_HOST])
ax_blas_ok=no

AC_ARG_WITH(blas,
	[AS_HELP_STRING([--with-blas=<lib>], [use BLAS library <lib>])])
case $with_blas in
	yes | "") ;;
	no) ax_blas_ok=disable ;;
	-* | */* | *.a | *.so | *.so.* | *.dylib | *.dylib.* | *.o)
		BLAS_LIBS="$with_blas"
	;;
	*) BLAS_LIBS="-l$with_blas" ;;
esac

# Get fortran linker names of BLAS functions to check for.
AC_F77_FUNC(sgemm)
AC_F77_FUNC(dgemm)

ax_blas_save_LIBS="$LIBS"
LIBS="$LIBS $FLIBS"

# First, check BLAS_LIBS environment variable
if test $ax_blas_ok = no; then
if test "x$BLAS_LIBS" != x; then
	save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
	AC_MSG_CHECKING([for $sgemm in $BLAS_LIBS])
	AC_LINK_IFELSE([AC_LANG_CALL([], [$sgemm])], [ax_blas_ok=yes], [BLAS_LIBS=""])
	AC_MSG_RESULT($ax_blas_ok)
	LIBS="$save_LIBS"
fi
fi

# BLAS linked to by default?  (happens on some supercomputers)
if test $ax_blas_ok = no; then
	save_LIBS="$LIBS"; LIBS="$LIBS"
	AC_MSG_CHECKING([if $sgemm is being linked in already])
	AC_LINK_IFELSE([AC_LANG_CALL([], [$sgemm])], [ax_blas_ok=yes])
	AC_MSG_RESULT($ax_blas_ok)
	LIBS="$save_LIBS"
fi

# BLAS in OpenBLAS library? (http://xianyi.github.com/OpenBLAS/)
if test $ax_blas_ok = no; then
	AC_CHECK_LIB(openblas, $sgemm, [ax_blas_ok=yes
			                BLAS_LIBS="-lopenblas"])
fi

# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)
if test $ax_blas_ok = no; then
	AC_CHECK_LIB(atlas, ATL_xerbla,
		[AC_CHECK_LIB(f77blas, $sgemm,
		[AC_CHECK_LIB(cblas, cblas_dgemm,
			[ax_blas_ok=yes
			 BLAS_LIBS="-lcblas -lf77blas -latlas"],
			[], [-lf77blas -latlas])],
			[], [-latlas])])
fi

# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)
if test $ax_blas_ok = no; then
	AC_CHECK_LIB(blas, $sgemm,
		[AC_CHECK_LIB(dgemm, $dgemm,
		[AC_CHECK_LIB(sgemm, $sgemm,
			[ax_blas_ok=yes; BLAS_LIBS="-lsgemm -ldgemm -lblas"],
			[], [-lblas])],
			[], [-lblas])])
fi

# BLAS in Intel MKL library?
if test $ax_blas_ok = no; then
	# MKL for gfortran
	if test x"$ac_cv_fc_compiler_gnu" = xyes; then
		# 64 bit
		if test $host_cpu = x86_64; then
			AC_CHECK_LIB(mkl_gf_lp64, $sgemm,
			[ax_blas_ok=yes;BLAS_LIBS="-lmkl_gf_lp64 -lmkl_sequential -lmkl_core -lpthread"],,
			[-lmkl_gf_lp64 -lmkl_sequential -lmkl_core -lpthread])
		# 32 bit
		elif test $host_cpu = i686; then
			AC_CHECK_LIB(mkl_gf, $sgemm,
				[ax_blas_ok=yes;BLAS_LIBS="-lmkl_gf -lmkl_sequential -lmkl_core -lpthread"],,
				[-lmkl_gf -lmkl_sequential -lmkl_core -lpthread])
		fi
	# MKL for other compilers (Intel, PGI, ...?)
	else
		# 64-bit
		if test $host_cpu = x86_64; then
			AC_CHECK_LIB(mkl_intel_lp64, $sgemm,
				[ax_blas_ok=yes;BLAS_LIBS="-lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread"],,
				[-lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread])
		# 32-bit
		elif test $host_cpu = i686; then
			AC_CHECK_LIB(mkl_intel, $sgemm,
				[ax_blas_ok=yes;BLAS_LIBS="-lmkl_intel -lmkl_sequential -lmkl_core -lpthread"],,
				[-lmkl_intel -lmkl_sequential -lmkl_core -lpthread])
		fi
	fi
fi
# Old versions of MKL
if test $ax_blas_ok = no; then
	AC_CHECK_LIB(mkl, $sgemm, [ax_blas_ok=yes;BLAS_LIBS="-lmkl -lguide -lpthread"],,[-lguide -lpthread])
fi

# BLAS in Apple vecLib library?
if test $ax_blas_ok = no; then
	save_LIBS="$LIBS"; LIBS="-framework vecLib $LIBS"
	AC_MSG_CHECKING([for $sgemm in -framework vecLib])
	AC_LINK_IFELSE([AC_LANG_CALL([], [$sgemm])], [ax_blas_ok=yes;BLAS_LIBS="-framework vecLib"])
	AC_MSG_RESULT($ax_blas_ok)
	LIBS="$save_LIBS"
fi

# BLAS in Alpha CXML library?
if test $ax_blas_ok = no; then
	AC_CHECK_LIB(cxml, $sgemm, [ax_blas_ok=yes;BLAS_LIBS="-lcxml"])
fi

# BLAS in Alpha DXML library? (now called CXML, see above)
if test $ax_blas_ok = no; then
	AC_CHECK_LIB(dxml, $sgemm, [ax_blas_ok=yes;BLAS_LIBS="-ldxml"])
fi

# BLAS in Sun Performance library?
if test $ax_blas_ok = no; then
	if test "x$GCC" != xyes; then # only works with Sun CC
		AC_CHECK_LIB(sunmath, acosp,
			[AC_CHECK_LIB(sunperf, $sgemm,
				[BLAS_LIBS="-xlic_lib=sunperf -lsunmath"
                                 ax_blas_ok=yes],[],[-lsunmath])])
	fi
fi

# BLAS in SCSL library?  (SGI/Cray Scientific Library)
if test $ax_blas_ok = no; then
	AC_CHECK_LIB(scs, $sgemm, [ax_blas_ok=yes; BLAS_LIBS="-lscs"])
fi

# BLAS in SGIMATH library?
if test $ax_blas_ok = no; then
	AC_CHECK_LIB(complib.sgimath, $sgemm,
		     [ax_blas_ok=yes; BLAS_LIBS="-lcomplib.sgimath"])
fi

# BLAS in IBM ESSL library? (requires generic BLAS lib, too)
if test $ax_blas_ok = no; then
	AC_CHECK_LIB(blas, $sgemm,
		[AC_CHECK_LIB(essl, $sgemm,
			[ax_blas_ok=yes; BLAS_LIBS="-lessl -lblas"],
			[], [-lblas $FLIBS])])
fi

# Generic BLAS library?
if test $ax_blas_ok = no; then
	AC_CHECK_LIB(blas, $sgemm, [ax_blas_ok=yes; BLAS_LIBS="-lblas"])
fi

AC_SUBST(BLAS_LIBS)

LIBS="$ax_blas_save_LIBS"

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$ax_blas_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_BLAS,1,[Define if you have a BLAS library.]),[$1])
        :
else
        ax_blas_ok=no
        $2
fi
])
m4trace:m4/ax_compare_version.m4:85: -1- AC_DEFUN([AX_COMPARE_VERSION], [
  AC_REQUIRE([AC_PROG_AWK])

  # Used to indicate true or false condition
  ax_compare_version=false

  # Convert the two version strings to be compared into a format that
  # allows a simple string comparison.  The end result is that a version
  # string of the form 1.12.5-r617 will be converted to the form
  # 0001001200050617.  In other words, each number is zero padded to four
  # digits, and non digits are removed.
  AS_VAR_PUSHDEF([A],[ax_compare_version_A])
  A=`echo "$1" | sed -e 's/\([[0-9]]*\)/Z\1Z/g' \
                     -e 's/Z\([[0-9]]\)Z/Z0\1Z/g' \
                     -e 's/Z\([[0-9]][[0-9]]\)Z/Z0\1Z/g' \
                     -e 's/Z\([[0-9]][[0-9]][[0-9]]\)Z/Z0\1Z/g' \
                     -e 's/[[^0-9]]//g'`

  AS_VAR_PUSHDEF([B],[ax_compare_version_B])
  B=`echo "$3" | sed -e 's/\([[0-9]]*\)/Z\1Z/g' \
                     -e 's/Z\([[0-9]]\)Z/Z0\1Z/g' \
                     -e 's/Z\([[0-9]][[0-9]]\)Z/Z0\1Z/g' \
                     -e 's/Z\([[0-9]][[0-9]][[0-9]]\)Z/Z0\1Z/g' \
                     -e 's/[[^0-9]]//g'`

  dnl # In the case of le, ge, lt, and gt, the strings are sorted as necessary
  dnl # then the first line is used to determine if the condition is true.
  dnl # The sed right after the echo is to remove any indented white space.
  m4_case(m4_tolower($2),
  [lt],[
    ax_compare_version=`echo "x$A
x$B" | sed 's/^ *//' | sort -r | sed "s/x${A}/false/;s/x${B}/true/;1q"`
  ],
  [gt],[
    ax_compare_version=`echo "x$A
x$B" | sed 's/^ *//' | sort | sed "s/x${A}/false/;s/x${B}/true/;1q"`
  ],
  [le],[
    ax_compare_version=`echo "x$A
x$B" | sed 's/^ *//' | sort | sed "s/x${A}/true/;s/x${B}/false/;1q"`
  ],
  [ge],[
    ax_compare_version=`echo "x$A
x$B" | sed 's/^ *//' | sort -r | sed "s/x${A}/true/;s/x${B}/false/;1q"`
  ],[
    dnl Split the operator from the subversion count if present.
    m4_bmatch(m4_substr($2,2),
    [0],[
      # A count of zero means use the length of the shorter version.
      # Determine the number of characters in A and B.
      ax_compare_version_len_A=`echo "$A" | $AWK '{print(length)}'`
      ax_compare_version_len_B=`echo "$B" | $AWK '{print(length)}'`

      # Set A to no more than B's length and B to no more than A's length.
      A=`echo "$A" | sed "s/\(.\{$ax_compare_version_len_B\}\).*/\1/"`
      B=`echo "$B" | sed "s/\(.\{$ax_compare_version_len_A\}\).*/\1/"`
    ],
    [[0-9]+],[
      # A count greater than zero means use only that many subversions
      A=`echo "$A" | sed "s/\(\([[0-9]]\{4\}\)\{m4_substr($2,2)\}\).*/\1/"`
      B=`echo "$B" | sed "s/\(\([[0-9]]\{4\}\)\{m4_substr($2,2)\}\).*/\1/"`
    ],
    [.+],[
      AC_WARNING(
        [illegal OP numeric parameter: $2])
    ],[])

    # Pad zeros at end of numbers to make same length.
    ax_compare_version_tmp_A="$A`echo $B | sed 's/./0/g'`"
    B="$B`echo $A | sed 's/./0/g'`"
    A="$ax_compare_version_tmp_A"

    # Check for equality or inequality as necessary.
    m4_case(m4_tolower(m4_substr($2,0,2)),
    [eq],[
      test "x$A" = "x$B" && ax_compare_version=true
    ],
    [ne],[
      test "x$A" != "x$B" && ax_compare_version=true
    ],[
      AC_WARNING([illegal OP parameter: $2])
    ])
  ])

  AS_VAR_POPDEF([A])dnl
  AS_VAR_POPDEF([B])dnl

  dnl # Execute ACTION-IF-TRUE / ACTION-IF-FALSE.
  if test "$ax_compare_version" = "true" ; then
    m4_ifvaln([$4],[$4],[:])dnl
    m4_ifvaln([$5],[else $5])dnl
  fi
])
m4trace:m4/ax_cxx_compile_stdcxx.m4:51: -1- AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl
  m4_if([$1], [11], [ax_cxx_compile_alternatives="11 0x"],
        [$1], [14], [ax_cxx_compile_alternatives="14 1y"],
        [$1], [17], [ax_cxx_compile_alternatives="17 1z"],
        [$1], [20], [ax_cxx_compile_alternatives="20"],
        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl
  m4_if([$2], [], [],
        [$2], [ext], [],
        [$2], [noext], [],
        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl
  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],
        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],
        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],
        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])
  AC_LANG_PUSH([C++])dnl
  ac_success=no

  m4_if([$2], [], [dnl
    AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,
		   ax_cv_cxx_compile_cxx$1,
      [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
        [ax_cv_cxx_compile_cxx$1=yes],
        [ax_cv_cxx_compile_cxx$1=no])])
    if test x$ax_cv_cxx_compile_cxx$1 = xyes; then
      ac_success=yes
    fi])

  m4_if([$2], [noext], [], [dnl
  if test x$ac_success = xno; then
    for alternative in ${ax_cxx_compile_alternatives}; do
      switch="-std=gnu++${alternative}"
      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])
      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,
                     $cachevar,
        [ac_save_CXX="$CXX"
         CXX="$CXX $switch"
         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
          [eval $cachevar=yes],
          [eval $cachevar=no])
         CXX="$ac_save_CXX"])
      if eval test x\$$cachevar = xyes; then
        CXX="$CXX $switch"
        if test -n "$CXXCPP" ; then
          CXXCPP="$CXXCPP $switch"
        fi
        ac_success=yes
        break
      fi
    done
  fi])

  m4_if([$2], [ext], [], [dnl
  if test x$ac_success = xno; then
    dnl HP's aCC needs +std=c++11 according to:
    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf
    dnl Cray's crayCC needs "-h std=c++11"
    for alternative in ${ax_cxx_compile_alternatives}; do
      for switch in -std=c++${alternative} +std=c++${alternative} "-h std=c++${alternative}"; do
        cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])
        AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,
                       $cachevar,
          [ac_save_CXX="$CXX"
           CXX="$CXX $switch"
           AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
            [eval $cachevar=yes],
            [eval $cachevar=no])
           CXX="$ac_save_CXX"])
        if eval test x\$$cachevar = xyes; then
          CXX="$CXX $switch"
          if test -n "$CXXCPP" ; then
            CXXCPP="$CXXCPP $switch"
          fi
          ac_success=yes
          break
        fi
      done
      if test x$ac_success = xyes; then
        break
      fi
    done
  fi])
  AC_LANG_POP([C++])
  if test x$ax_cxx_compile_cxx$1_required = xtrue; then
    if test x$ac_success = xno; then
      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])
    fi
  fi
  if test x$ac_success = xno; then
    HAVE_CXX$1=0
    AC_MSG_NOTICE([No compiler with C++$1 support was found])
  else
    HAVE_CXX$1=1
    AC_DEFINE(HAVE_CXX$1,1,
              [define if the compiler supports basic C++$1 syntax])
  fi
  AC_SUBST(HAVE_CXX$1)
])
m4trace:m4/ax_lapack.m4:70: -1- AU_DEFUN([ACX_LAPACK], [m4_if($#, 0, [AX_LAPACK], [AX_LAPACK($@)])], [], [])
m4trace:m4/ax_lapack.m4:70: -1- AC_DEFUN([ACX_LAPACK], [m4_warn([obsolete], [The macro `ACX_LAPACK' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AX_LAPACK], [AX_LAPACK($@)])])
m4trace:m4/ax_lapack.m4:71: -1- AC_DEFUN([AX_LAPACK], [
AC_REQUIRE([AX_BLAS])
ax_lapack_ok=no

AC_ARG_WITH(lapack,
        [AS_HELP_STRING([--with-lapack=<lib>], [use LAPACK library <lib>])])
case $with_lapack in
        yes | "") ;;
        no) ax_lapack_ok=disable ;;
        -* | */* | *.a | *.so | *.so.* | *.dylib | *.dylib.* | *.o)
                 LAPACK_LIBS="$with_lapack"
        ;;
        *) LAPACK_LIBS="-l$with_lapack" ;;
esac

# Get fortran linker name of LAPACK function to check for.
AC_F77_FUNC(cheev)

# We cannot use LAPACK if BLAS is not found
if test "x$ax_blas_ok" != xyes; then
        ax_lapack_ok=noblas
        LAPACK_LIBS=""
fi

# First, check LAPACK_LIBS environment variable
if test "x$LAPACK_LIBS" != x; then
        save_LIBS="$LIBS"; LIBS="$LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS"
        AC_MSG_CHECKING([for $cheev in $LAPACK_LIBS])
        AC_LINK_IFELSE([AC_LANG_CALL([], [$cheev])], [ax_lapack_ok=yes], [LAPACK_LIBS=""])
        AC_MSG_RESULT($ax_lapack_ok)
        LIBS="$save_LIBS"
        if test $ax_lapack_ok = no; then
                LAPACK_LIBS=""
        fi
fi

# LAPACK linked to by default?  (is sometimes included in BLAS lib)
if test $ax_lapack_ok = no; then
        save_LIBS="$LIBS"; LIBS="$LIBS $BLAS_LIBS $FLIBS"
        AC_CHECK_FUNC($cheev, [ax_lapack_ok=yes])
        LIBS="$save_LIBS"
fi

# Generic LAPACK library?
for lapack in lapack lapack_rs6k; do
        if test $ax_lapack_ok = no; then
                save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
                AC_CHECK_LIB($lapack, $cheev,
                    [ax_lapack_ok=yes; LAPACK_LIBS="-l$lapack"], [], [$FLIBS])
                LIBS="$save_LIBS"
        fi
done

AC_SUBST(LAPACK_LIBS)

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test x"$ax_lapack_ok" = xyes; then
        ifelse([$1],,AC_DEFINE(HAVE_LAPACK,1,[Define if you have LAPACK library.]),[$1])
        :
else
        ax_lapack_ok=no
        $2
fi
])
m4trace:m4/ax_openmp.m4:72: -1- AC_DEFUN([AX_OPENMP], [
AC_PREREQ([2.59]) dnl for _AC_LANG_PREFIX

AC_CACHE_CHECK([for OpenMP flag of _AC_LANG compiler], ax_cv_[]_AC_LANG_ABBREV[]_openmp, [save[]_AC_LANG_PREFIX[]FLAGS=$[]_AC_LANG_PREFIX[]FLAGS
ax_cv_[]_AC_LANG_ABBREV[]_openmp=unknown
# Flags to try:  -fopenmp (gcc), -mp (SGI & PGI),
#                -qopenmp (icc>=15), -openmp (icc),
#                -xopenmp (Sun), -omp (Tru64),
#                -qsmp=omp (AIX),
#                none
ax_openmp_flags="-fopenmp -openmp -qopenmp -mp -xopenmp -omp -qsmp=omp none"
if test "x$OPENMP_[]_AC_LANG_PREFIX[]FLAGS" != x; then
  ax_openmp_flags="$OPENMP_[]_AC_LANG_PREFIX[]FLAGS $ax_openmp_flags"
fi
for ax_openmp_flag in $ax_openmp_flags; do
  case $ax_openmp_flag in
    none) []_AC_LANG_PREFIX[]FLAGS=$save[]_AC_LANG_PREFIX[] ;;
    *) []_AC_LANG_PREFIX[]FLAGS="$save[]_AC_LANG_PREFIX[]FLAGS $ax_openmp_flag" ;;
  esac
  AC_LINK_IFELSE([AC_LANG_SOURCE([[
@%:@include <omp.h>

static void
parallel_fill(int * data, int n)
{
  int i;
@%:@pragma omp parallel for
  for (i = 0; i < n; ++i)
    data[i] = i;
}

int
main()
{
  int arr[100000];
  omp_set_num_threads(2);
  parallel_fill(arr, 100000);
  return 0;
}
]])],[ax_cv_[]_AC_LANG_ABBREV[]_openmp=$ax_openmp_flag; break],[])
done
[]_AC_LANG_PREFIX[]FLAGS=$save[]_AC_LANG_PREFIX[]FLAGS
])
if test "x$ax_cv_[]_AC_LANG_ABBREV[]_openmp" = "xunknown"; then
  m4_default([$2],:)
else
  if test "x$ax_cv_[]_AC_LANG_ABBREV[]_openmp" != "xnone"; then
    OPENMP_[]_AC_LANG_PREFIX[]FLAGS=$ax_cv_[]_AC_LANG_ABBREV[]_openmp
  fi
  m4_default([$1], [AC_DEFINE(HAVE_OPENMP,1,[Define if OpenMP is enabled])])
fi
])
m4trace:m4/ax_pthread.m4:92: -1- AU_DEFUN([ACX_PTHREAD], [m4_if($#, 0, [AX_PTHREAD], [AX_PTHREAD($@)])], [], [])
m4trace:m4/ax_pthread.m4:92: -1- AC_DEFUN([ACX_PTHREAD], [m4_warn([obsolete], [The macro `ACX_PTHREAD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AX_PTHREAD], [AX_PTHREAD($@)])])
m4trace:m4/ax_pthread.m4:93: -1- AC_DEFUN([AX_PTHREAD], [
AC_REQUIRE([AC_CANONICAL_HOST])
AC_REQUIRE([AC_PROG_CC])
AC_REQUIRE([AC_PROG_SED])
AC_LANG_PUSH([C])
ax_pthread_ok=no

# We used to check for pthread.h first, but this fails if pthread.h
# requires special compiler flags (e.g. on Tru64 or Sequent).
# It gets checked for in the link test anyway.

# First of all, check if the user has set any of the PTHREAD_LIBS,
# etcetera environment variables, and if threads linking works using
# them:
if test "x$PTHREAD_CFLAGS$PTHREAD_LIBS" != "x"; then
        ax_pthread_save_CC="$CC"
        ax_pthread_save_CFLAGS="$CFLAGS"
        ax_pthread_save_LIBS="$LIBS"
        AS_IF([test "x$PTHREAD_CC" != "x"], [CC="$PTHREAD_CC"])
        AS_IF([test "x$PTHREAD_CXX" != "x"], [CXX="$PTHREAD_CXX"])
        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
        LIBS="$PTHREAD_LIBS $LIBS"
        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])
        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])
        AC_MSG_RESULT([$ax_pthread_ok])
        if test "x$ax_pthread_ok" = "xno"; then
                PTHREAD_LIBS=""
                PTHREAD_CFLAGS=""
        fi
        CC="$ax_pthread_save_CC"
        CFLAGS="$ax_pthread_save_CFLAGS"
        LIBS="$ax_pthread_save_LIBS"
fi

# We must check for the threads library under a number of different
# names; the ordering is very important because some systems
# (e.g. DEC) have both -lpthread and -lpthreads, where one of the
# libraries is broken (non-POSIX).

# Create a list of thread flags to try. Items with a "," contain both
# C compiler flags (before ",") and linker flags (after ","). Other items
# starting with a "-" are C compiler flags, and remaining items are
# library names, except for "none" which indicates that we try without
# any flags at all, and "pthread-config" which is a program returning
# the flags for the Pth emulation library.

ax_pthread_flags="pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config"

# The ordering *is* (sometimes) important.  Some notes on the
# individual items follow:

# pthreads: AIX (must check this before -lpthread)
# none: in case threads are in libc; should be tried before -Kthread and
#       other compiler flags to prevent continual compiler warnings
# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)
# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64
#           (Note: HP C rejects this with "bad form for `-t' option")
# -pthreads: Solaris/gcc (Note: HP C also rejects)
# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it
#      doesn't hurt to check since this sometimes defines pthreads and
#      -D_REENTRANT too), HP C (must be checked before -lpthread, which
#      is present but should not be used directly; and before -mthreads,
#      because the compiler interprets this as "-mt" + "-hreads")
# -mthreads: Mingw32/gcc, Lynx/gcc
# pthread: Linux, etcetera
# --thread-safe: KAI C++
# pthread-config: use pthread-config program (for GNU Pth library)

case $host_os in

        freebsd*)

        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)
        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)

        ax_pthread_flags="-kthread lthread $ax_pthread_flags"
        ;;

        hpux*)

        # From the cc(1) man page: "[-mt] Sets various -D flags to enable
        # multi-threading and also sets -lpthread."

        ax_pthread_flags="-mt -pthread pthread $ax_pthread_flags"
        ;;

        openedition*)

        # IBM z/OS requires a feature-test macro to be defined in order to
        # enable POSIX threads at all, so give the user a hint if this is
        # not set. (We don't define these ourselves, as they can affect
        # other portions of the system API in unpredictable ways.)

        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],
            [
#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)
             AX_PTHREAD_ZOS_MISSING
#            endif
            ],
            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])
        ;;

        solaris*)

        # On Solaris (at least, for some versions), libc contains stubbed
        # (non-functional) versions of the pthreads routines, so link-based
        # tests will erroneously succeed. (N.B.: The stubs are missing
        # pthread_cleanup_push, or rather a function called by this macro,
        # so we could check for that, but who knows whether they'll stub
        # that too in a future libc.)  So we'll check first for the
        # standard Solaris way of linking pthreads (-mt -lpthread).

        ax_pthread_flags="-mt,-lpthread pthread $ax_pthread_flags"
        ;;
esac

# Are we compiling with Clang?

AC_CACHE_CHECK([whether $CC is Clang],
    [ax_cv_PTHREAD_CLANG],
    [ax_cv_PTHREAD_CLANG=no
     # Note that Autoconf sets GCC=yes for Clang as well as GCC
     if test "x$GCC" = "xyes"; then
        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],
            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */
#            if defined(__clang__) && defined(__llvm__)
             AX_PTHREAD_CC_IS_CLANG
#            endif
            ],
            [ax_cv_PTHREAD_CLANG=yes])
     fi
    ])
ax_pthread_clang="$ax_cv_PTHREAD_CLANG"


# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)

# Note that for GCC and Clang -pthread generally implies -lpthread,
# except when -nostdlib is passed.
# This is problematic using libtool to build C++ shared libraries with pthread:
# [1] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25460
# [2] https://bugzilla.redhat.com/show_bug.cgi?id=661333
# [3] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=468555
# To solve this, first try -pthread together with -lpthread for GCC

AS_IF([test "x$GCC" = "xyes"],
      [ax_pthread_flags="-pthread,-lpthread -pthread -pthreads $ax_pthread_flags"])

# Clang takes -pthread (never supported any other flag), but we'll try with -lpthread first

AS_IF([test "x$ax_pthread_clang" = "xyes"],
      [ax_pthread_flags="-pthread,-lpthread -pthread"])


# The presence of a feature test macro requesting re-entrant function
# definitions is, on some systems, a strong hint that pthreads support is
# correctly enabled

case $host_os in
        darwin* | hpux* | linux* | osf* | solaris*)
        ax_pthread_check_macro="_REENTRANT"
        ;;

        aix*)
        ax_pthread_check_macro="_THREAD_SAFE"
        ;;

        *)
        ax_pthread_check_macro="--"
        ;;
esac
AS_IF([test "x$ax_pthread_check_macro" = "x--"],
      [ax_pthread_check_cond=0],
      [ax_pthread_check_cond="!defined($ax_pthread_check_macro)"])


if test "x$ax_pthread_ok" = "xno"; then
for ax_pthread_try_flag in $ax_pthread_flags; do

        case $ax_pthread_try_flag in
                none)
                AC_MSG_CHECKING([whether pthreads work without any flags])
                ;;

                *,*)
                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed "s/^\(.*\),\(.*\)$/\1/"`
                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed "s/^\(.*\),\(.*\)$/\2/"`
                AC_MSG_CHECKING([whether pthreads work with "$PTHREAD_CFLAGS" and "$PTHREAD_LIBS"])
                ;;

                -*)
                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])
                PTHREAD_CFLAGS="$ax_pthread_try_flag"
                ;;

                pthread-config)
                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])
                AS_IF([test "x$ax_pthread_config" = "xno"], [continue])
                PTHREAD_CFLAGS="`pthread-config --cflags`"
                PTHREAD_LIBS="`pthread-config --ldflags` `pthread-config --libs`"
                ;;

                *)
                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])
                PTHREAD_LIBS="-l$ax_pthread_try_flag"
                ;;
        esac

        ax_pthread_save_CFLAGS="$CFLAGS"
        ax_pthread_save_LIBS="$LIBS"
        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
        LIBS="$PTHREAD_LIBS $LIBS"

        # Check for various functions.  We must include pthread.h,
        # since some functions may be macros.  (On the Sequent, we
        # need a special flag -Kthread to make this header compile.)
        # We check for pthread_join because it is in -lpthread on IRIX
        # while pthread_create is in libc.  We check for pthread_attr_init
        # due to DEC craziness with -lpthreads.  We check for
        # pthread_cleanup_push because it is one of the few pthread
        # functions on Solaris that doesn't have a non-functional libc stub.
        # We try pthread_create on general principles.

        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>
#                       if $ax_pthread_check_cond
#                        error "$ax_pthread_check_macro must be defined"
#                       endif
                        static void *some_global = NULL;
                        static void routine(void *a)
                          {
                             /* To avoid any unused-parameter or
                                unused-but-set-parameter warning.  */
                             some_global = a;
                          }
                        static void *start_routine(void *a) { return a; }],
                       [pthread_t th; pthread_attr_t attr;
                        pthread_create(&th, 0, start_routine, 0);
                        pthread_join(th, 0);
                        pthread_attr_init(&attr);
                        pthread_cleanup_push(routine, 0);
                        pthread_cleanup_pop(0) /* ; */])],
            [ax_pthread_ok=yes],
            [])

        CFLAGS="$ax_pthread_save_CFLAGS"
        LIBS="$ax_pthread_save_LIBS"

        AC_MSG_RESULT([$ax_pthread_ok])
        AS_IF([test "x$ax_pthread_ok" = "xyes"], [break])

        PTHREAD_LIBS=""
        PTHREAD_CFLAGS=""
done
fi


# Clang needs special handling, because older versions handle the -pthread
# option in a rather... idiosyncratic way

if test "x$ax_pthread_clang" = "xyes"; then

        # Clang takes -pthread; it has never supported any other flag

        # (Note 1: This will need to be revisited if a system that Clang
        # supports has POSIX threads in a separate library.  This tends not
        # to be the way of modern systems, but it's conceivable.)

        # (Note 2: On some systems, notably Darwin, -pthread is not needed
        # to get POSIX threads support; the API is always present and
        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But
        # -pthread does define _REENTRANT, and while the Darwin headers
        # ignore this macro, third-party headers might not.)

        # However, older versions of Clang make a point of warning the user
        # that, in an invocation where only linking and no compilation is
        # taking place, the -pthread option has no effect ("argument unused
        # during compilation").  They expect -pthread to be passed in only
        # when source code is being compiled.
        #
        # Problem is, this is at odds with the way Automake and most other
        # C build frameworks function, which is that the same flags used in
        # compilation (CFLAGS) are also used in linking.  Many systems
        # supported by AX_PTHREAD require exactly this for POSIX threads
        # support, and in fact it is often not straightforward to specify a
        # flag that is used only in the compilation phase and not in
        # linking.  Such a scenario is extremely rare in practice.
        #
        # Even though use of the -pthread flag in linking would only print
        # a warning, this can be a nuisance for well-run software projects
        # that build with -Werror.  So if the active version of Clang has
        # this misfeature, we search for an option to squash it.

        AC_CACHE_CHECK([whether Clang needs flag to prevent "argument unused" warning when linking with -pthread],
            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],
            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown
             # Create an alternate version of $ac_link that compiles and
             # links in two steps (.c -> .o, .o -> exe) instead of one
             # (.c -> exe), because the warning occurs only in the second
             # step
             ax_pthread_save_ac_link="$ac_link"
             ax_pthread_sed='s/conftest\.\$ac_ext/conftest.$ac_objext/g'
             ax_pthread_link_step=`AS_ECHO(["$ac_link"]) | sed "$ax_pthread_sed"`
             ax_pthread_2step_ac_link="($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)"
             ax_pthread_save_CFLAGS="$CFLAGS"
             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do
                AS_IF([test "x$ax_pthread_try" = "xunknown"], [break])
                CFLAGS="-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS"
                ac_link="$ax_pthread_save_ac_link"
                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],
                    [ac_link="$ax_pthread_2step_ac_link"
                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],
                         [break])
                    ])
             done
             ac_link="$ax_pthread_save_ac_link"
             CFLAGS="$ax_pthread_save_CFLAGS"
             AS_IF([test "x$ax_pthread_try" = "x"], [ax_pthread_try=no])
             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG="$ax_pthread_try"
            ])

        case "$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG" in
                no | unknown) ;;
                *) PTHREAD_CFLAGS="$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS" ;;
        esac

fi # $ax_pthread_clang = yes



# Various other checks:
if test "x$ax_pthread_ok" = "xyes"; then
        ax_pthread_save_CFLAGS="$CFLAGS"
        ax_pthread_save_LIBS="$LIBS"
        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
        LIBS="$PTHREAD_LIBS $LIBS"

        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.
        AC_CACHE_CHECK([for joinable pthread attribute],
            [ax_cv_PTHREAD_JOINABLE_ATTR],
            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown
             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do
                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],
                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],
                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],
                                [])
             done
            ])
        AS_IF([test "x$ax_cv_PTHREAD_JOINABLE_ATTR" != "xunknown" && \
               test "x$ax_cv_PTHREAD_JOINABLE_ATTR" != "xPTHREAD_CREATE_JOINABLE" && \
               test "x$ax_pthread_joinable_attr_defined" != "xyes"],
              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],
                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],
                                  [Define to necessary symbol if this constant
                                   uses a non-standard name on your system.])
               ax_pthread_joinable_attr_defined=yes
              ])

        AC_CACHE_CHECK([whether more special flags are required for pthreads],
            [ax_cv_PTHREAD_SPECIAL_FLAGS],
            [ax_cv_PTHREAD_SPECIAL_FLAGS=no
             case $host_os in
             solaris*)
             ax_cv_PTHREAD_SPECIAL_FLAGS="-D_POSIX_PTHREAD_SEMANTICS"
             ;;
             esac
            ])
        AS_IF([test "x$ax_cv_PTHREAD_SPECIAL_FLAGS" != "xno" && \
               test "x$ax_pthread_special_flags_added" != "xyes"],
              [PTHREAD_CFLAGS="$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS"
               ax_pthread_special_flags_added=yes])

        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],
            [ax_cv_PTHREAD_PRIO_INHERIT],
            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],
                                             [[int i = PTHREAD_PRIO_INHERIT;
                                               return i;]])],
                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],
                            [ax_cv_PTHREAD_PRIO_INHERIT=no])
            ])
        AS_IF([test "x$ax_cv_PTHREAD_PRIO_INHERIT" = "xyes" && \
               test "x$ax_pthread_prio_inherit_defined" != "xyes"],
              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])
               ax_pthread_prio_inherit_defined=yes
              ])

        CFLAGS="$ax_pthread_save_CFLAGS"
        LIBS="$ax_pthread_save_LIBS"

        # More AIX lossage: compile with *_r variant
        if test "x$GCC" != "xyes"; then
            case $host_os in
                aix*)
                AS_CASE(["x/$CC"],
                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],
                    [#handle absolute path differently from PATH based program lookup
                     AS_CASE(["x$CC"],
                         [x/*],
                         [
			   AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC="${CC}_r"])
			   AS_IF([test "x${CXX}" != "x"], [AS_IF([AS_EXECUTABLE_P([${CXX}_r])],[PTHREAD_CXX="${CXX}_r"])])
			 ],
                         [
			   AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])
			   AS_IF([test "x${CXX}" != "x"], [AC_CHECK_PROGS([PTHREAD_CXX],[${CXX}_r],[$CXX])])
			 ]
                     )
                    ])
                ;;
            esac
        fi
fi

test -n "$PTHREAD_CC" || PTHREAD_CC="$CC"
test -n "$PTHREAD_CXX" || PTHREAD_CXX="$CXX"

AC_SUBST([PTHREAD_LIBS])
AC_SUBST([PTHREAD_CFLAGS])
AC_SUBST([PTHREAD_CC])
AC_SUBST([PTHREAD_CXX])

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test "x$ax_pthread_ok" = "xyes"; then
        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])
        :
else
        ax_pthread_ok=no
        $2
fi
AC_LANG_POP
])
m4trace:m4/base64.m4:7: -1- AC_DEFUN([gl_FUNC_BASE64], [
  gl_PREREQ_BASE64
])
m4trace:m4/base64.m4:13: -1- AC_DEFUN([gl_PREREQ_BASE64], [
  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/bison.m4:44: -1- AC_DEFUN([gl_PROG_BISON], [
  AC_CHECK_PROGS([$1], [bison])
  if test -z "$[$1]"; then
    ac_verc_fail=yes
  else
    cat >conftest.y <<_ACEOF
%require "$2"
%%
exp:
_ACEOF
    AC_MSG_CHECKING([for bison $2 or newer])
    ac_prog_version=`$$1 --version 2>&1 | sed -n 's/^.*GNU Bison.* \([[0-9]]*\.[[0-9.]]*\).*$/\1/p'`
    : ${ac_prog_version:='v. ?.??'}
    if $$1 conftest.y -o conftest.c 2>/dev/null; then
      ac_prog_version="$ac_prog_version, ok"
      ac_verc_fail=no
    else
      ac_prog_version="$ac_prog_version, bad"
      ac_verc_fail=yes
    fi
    rm -f conftest.y conftest.c
    AC_MSG_RESULT([$ac_prog_version])
  fi
  if test $ac_verc_fail = yes; then
    [$1]=:
  fi
  AC_SUBST([$1])
])
m4trace:m4/bison.m4:76: -1- AC_DEFUN([gl_BISON], [
  : ${YACC='bison -o y.tab.c'}
dnl
dnl Declaring YACC & YFLAGS precious will not be necessary after GNULIB
dnl requires an Autoconf greater than 2.59c, but it will probably still be
dnl useful to override the description of YACC in the --help output, re
dnl parse-datetime.y assuming 'bison -o y.tab.c'.
  AC_ARG_VAR([YACC],
[The "Yet Another C Compiler" implementation to use.  Defaults to
'bison -o y.tab.c'.  Values other than 'bison -o y.tab.c' will most likely
break on most systems.])dnl
  AC_ARG_VAR([YFLAGS],
[YFLAGS contains the list arguments that will be passed by default to Bison.
This script will default YFLAGS to the empty string to avoid a default value of
'-d' given by some make applications.])dnl
])
m4trace:m4/btowc.m4:7: -1- AC_DEFUN([gl_FUNC_BTOWC], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])

  dnl Check whether <wchar.h> is usable at all, first. Otherwise the test
  dnl program below may lead to an endless loop. See
  dnl <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=42440>.
  AC_REQUIRE([gl_WCHAR_H_INLINE_OK])

  AC_CHECK_FUNCS_ONCE([btowc])
  if test $ac_cv_func_btowc = no; then
    HAVE_BTOWC=0
  else

    AC_REQUIRE([AC_PROG_CC])
    AC_REQUIRE([gt_LOCALE_FR])
    AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

    dnl Cygwin 1.7.2 btowc('\0') is WEOF, not 0.
    AC_CACHE_CHECK([whether btowc(0) is correct],
      [gl_cv_func_btowc_nul],
      [
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <wchar.h>
int main ()
{
  if (btowc ('\0') != 0)
    return 1;
  return 0;
}]])],
          [gl_cv_func_btowc_nul=yes],
          [gl_cv_func_btowc_nul=no],
          [
changequote(,)dnl
           case "$host_os" in
                      # Guess no on Cygwin.
             cygwin*) gl_cv_func_btowc_nul="guessing no" ;;
                      # Guess yes on native Windows.
             mingw*)  gl_cv_func_btowc_nul="guessing yes" ;;
                      # Guess yes otherwise.
             *)       gl_cv_func_btowc_nul="guessing yes" ;;
           esac
changequote([,])dnl
          ])
      ])

    dnl IRIX 6.5 btowc(EOF) is 0xFF, not WEOF.
    AC_CACHE_CHECK([whether btowc(EOF) is correct],
      [gl_cv_func_btowc_eof],
      [
        dnl Initial guess, used when cross-compiling or when no suitable locale
        dnl is present.
changequote(,)dnl
        case "$host_os" in
                  # Guess no on IRIX.
          irix*)  gl_cv_func_btowc_eof="guessing no" ;;
                  # Guess yes on native Windows.
          mingw*) gl_cv_func_btowc_eof="guessing yes" ;;
                  # Guess yes otherwise.
          *)      gl_cv_func_btowc_eof="guessing yes" ;;
        esac
changequote([,])dnl
        if test $LOCALE_FR != none; then
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
#include <locale.h>
#include <stdio.h>
#include <wchar.h>
int main ()
{
  if (setlocale (LC_ALL, "$LOCALE_FR") != NULL)
    {
      if (btowc (EOF) != WEOF)
        return 1;
    }
  return 0;
}]])],
            [gl_cv_func_btowc_eof=yes],
            [gl_cv_func_btowc_eof=no],
            [:])
        fi
      ])

    case "$gl_cv_func_btowc_nul" in
      *yes) ;;
      *) REPLACE_BTOWC=1 ;;
    esac
    case "$gl_cv_func_btowc_eof" in
      *yes) ;;
      *) REPLACE_BTOWC=1 ;;
    esac
  fi
])
m4trace:m4/btowc.m4:103: -1- AC_DEFUN([gl_PREREQ_BTOWC], [
  :
])
m4trace:m4/builtin-expect.m4:10: -1- AC_DEFUN([gl___BUILTIN_EXPECT], [
  AC_CACHE_CHECK([for __builtin_expect],
    [gl_cv___builtin_expect],
    [AC_LINK_IFELSE(
       [AC_LANG_SOURCE([[
         int
         main (int argc, char **argv)
         {
           argc = __builtin_expect (argc, 100);
           return argv[argc != 100][0];
         }]])],
       [gl_cv___builtin_expect=yes],
       [AC_LINK_IFELSE(
          [AC_LANG_SOURCE([[
             #include <builtins.h>
             int
             main (int argc, char **argv)
             {
               argc = __builtin_expect (argc, 100);
               return argv[argc != 100][0];
             }]])],
          [gl_cv___builtin_expect="in <builtins.h>"],
          [gl_cv___builtin_expect=no])])])
  if test "$gl_cv___builtin_expect" = yes; then
    AC_DEFINE([HAVE___BUILTIN_EXPECT], [1])
  elif test "$gl_cv___builtin_expect" = "in <builtins.h>"; then
    AC_DEFINE([HAVE___BUILTIN_EXPECT], [2])
  fi
  AH_VERBATIM([HAVE___BUILTIN_EXPECT],
    [/* Define to 1 if the compiler supports __builtin_expect,
   and to 2 if <builtins.h> does.  */
#undef HAVE___BUILTIN_EXPECT
#ifndef HAVE___BUILTIN_EXPECT
# define __builtin_expect(e, c) (e)
#elif HAVE___BUILTIN_EXPECT == 2
# include <builtins.h>
#endif
    ])
])
m4trace:m4/byteswap.m4:9: -1- AC_DEFUN([gl_BYTESWAP], [
  dnl Prerequisites of lib/byteswap.in.h.
  AC_CHECK_HEADERS([byteswap.h], [
    BYTESWAP_H=''
  ], [
    BYTESWAP_H='byteswap.h'
  ])
  AC_SUBST([BYTESWAP_H])
  AM_CONDITIONAL([GL_GENERATE_BYTESWAP_H], [test -n "$BYTESWAP_H"])
])
m4trace:m4/calloc.m4:18: -1- AC_DEFUN([_AC_FUNC_CALLOC_IF], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether calloc (0, n) and calloc (n, 0) return nonnull],
    [ac_cv_func_calloc_0_nonnull],
    [if test $cross_compiling != yes; then
       ac_cv_func_calloc_0_nonnull=yes
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [AC_INCLUDES_DEFAULT],
            [[int result = 0;
              char * volatile p = calloc (0, 0);
              if (!p)
                result |= 1;
              free (p);
              return result;
            ]])],
         [],
         [ac_cv_func_calloc_0_nonnull=no])
     else
       case "$host_os" in
                        # Guess yes on glibc systems.
         *-gnu* | gnu*) ac_cv_func_calloc_0_nonnull="guessing yes" ;;
                        # Guess yes on musl systems.
         *-musl*)       ac_cv_func_calloc_0_nonnull="guessing yes" ;;
                        # Guess yes on native Windows.
         mingw*)        ac_cv_func_calloc_0_nonnull="guessing yes" ;;
                        # If we don't know, obey --enable-cross-guesses.
         *)             ac_cv_func_calloc_0_nonnull="$gl_cross_guess_normal" ;;
       esac
     fi
    ])
  AS_CASE([$ac_cv_func_calloc_0_nonnull], [*yes], [$1], [$2])
])
m4trace:m4/calloc.m4:57: -1- AC_DEFUN([gl_FUNC_CALLOC_GNU], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_CALLOC_POSIX])
  if test $REPLACE_CALLOC = 0; then
    _AC_FUNC_CALLOC_IF([], [REPLACE_CALLOC=1])
  fi
])
m4trace:m4/calloc.m4:71: -1- AC_DEFUN([gl_FUNC_CALLOC_POSIX], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC = 1; then
    REPLACE_CALLOC=1
  fi
  dnl Although in theory we should also test for size_t overflow,
  dnl in practice testing for ptrdiff_t overflow suffices
  dnl since PTRDIFF_MAX <= SIZE_MAX on all known Gnulib porting targets.
  dnl A separate size_t test would slow down 'configure'.
])
m4trace:m4/canonicalize.m4:11: -1- AC_DEFUN([gl_FUNC_CANONICALIZE_FILENAME_MODE], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_CHECK_FUNCS_ONCE([canonicalize_file_name faccessat])
  AC_REQUIRE([gl_DOUBLE_SLASH_ROOT])
  AC_REQUIRE([gl_FUNC_REALPATH_WORKS])
  if test $ac_cv_func_canonicalize_file_name = no; then
    HAVE_CANONICALIZE_FILE_NAME=0
  else
    case "$gl_cv_func_realpath_works" in
      *yes) ;;
      *)    REPLACE_CANONICALIZE_FILE_NAME=1 ;;
    esac
  fi
])
m4trace:m4/canonicalize.m4:29: -1- AC_DEFUN([gl_CANONICALIZE_LGPL], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_CANONICALIZE_LGPL_SEPARATE])
  if test $ac_cv_func_canonicalize_file_name = no; then
    HAVE_CANONICALIZE_FILE_NAME=0
    if test $ac_cv_func_realpath = no; then
      HAVE_REALPATH=0
    else
      case "$gl_cv_func_realpath_works" in
        *yes) ;;
        *)    REPLACE_REALPATH=1 ;;
      esac
    fi
  else
    case "$gl_cv_func_realpath_works" in
      *yes)
        ;;
      *)
        REPLACE_CANONICALIZE_FILE_NAME=1
        REPLACE_REALPATH=1
        ;;
    esac
  fi
])
m4trace:m4/canonicalize.m4:57: -1- AC_DEFUN([gl_CANONICALIZE_LGPL_SEPARATE], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_CHECK_FUNCS_ONCE([canonicalize_file_name faccessat])

  dnl On native Windows, we use _getcwd(), regardless whether getcwd() is
  dnl available through the linker option '-loldnames'.
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*) ;;
    *)      AC_CHECK_FUNCS([getcwd]) ;;
  esac

  AC_REQUIRE([gl_DOUBLE_SLASH_ROOT])
  AC_REQUIRE([gl_FUNC_REALPATH_WORKS])
  AC_CHECK_HEADERS_ONCE([sys/param.h])
])
m4trace:m4/canonicalize.m4:79: -1- AC_DEFUN([gl_FUNC_REALPATH_WORKS], [
  AC_CHECK_FUNCS_ONCE([realpath lstat])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether realpath works], [gl_cv_func_realpath_works], [
    rm -rf conftest.a conftest.d
    touch conftest.a
    # Assume that if we have lstat, we can also check symlinks.
    if test $ac_cv_func_lstat = yes; then
      ln -s conftest.a conftest.l
    fi
    mkdir conftest.d
    AC_RUN_IFELSE([
      AC_LANG_PROGRAM([[
        ]GL_NOCRASH[
        #include <errno.h>
        #include <stdlib.h>
        #include <string.h>
      ]], [[
        int result = 0;
        /* This test fails on Solaris 10.  */
        {
          char *name = realpath ("conftest.a", NULL);
          if (!(name && *name == '/'))
            result |= 1;
          free (name);
        }
        /* This test fails on older versions of Cygwin.  */
        {
          char *name = realpath ("conftest.b/../conftest.a", NULL);
          if (name != NULL)
            result |= 2;
          free (name);
        }
        /* This test fails on Cygwin 2.9.  */
        #if HAVE_LSTAT
        {
          char *name = realpath ("conftest.l/../conftest.a", NULL);
          if (name != NULL || errno != ENOTDIR)
            result |= 4;
          free (name);
        }
        #endif
        /* This test fails on Mac OS X 10.13, OpenBSD 6.0.  */
        {
          char *name = realpath ("conftest.a/", NULL);
          if (name != NULL)
            result |= 8;
          free (name);
        }
        /* This test fails on AIX 7, Solaris 10.  */
        {
          char *name1 = realpath (".", NULL);
          char *name2 = realpath ("conftest.d//./..", NULL);
          if (! name1 || ! name2 || strcmp (name1, name2))
            result |= 16;
          free (name1);
          free (name2);
        }
        #ifdef __linux__
        /* On Linux, // is the same as /. See also double-slash-root.m4.
           realpath() should respect this.
           This test fails on musl libc 1.2.2.  */
        {
          char *name = realpath ("//", NULL);
          if (! name || strcmp (name, "/"))
            result |= 32;
          free (name);
        }
        #endif
        return result;
      ]])
     ],
     [gl_cv_func_realpath_works=yes],
     [case $? in
        32) gl_cv_func_realpath_works=nearly ;;
        *)  gl_cv_func_realpath_works=no ;;
      esac
     ],
     [case "$host_os" in
                       # Guess yes on glibc systems.
        *-gnu* | gnu*) gl_cv_func_realpath_works="guessing yes" ;;
                       # Guess 'nearly' on musl systems.
        *-musl*)       gl_cv_func_realpath_works="guessing nearly" ;;
                       # Guess no on Cygwin.
        cygwin*)       gl_cv_func_realpath_works="guessing no" ;;
                       # Guess no on native Windows.
        mingw*)        gl_cv_func_realpath_works="guessing no" ;;
                       # If we don't know, obey --enable-cross-guesses.
        *)             gl_cv_func_realpath_works="$gl_cross_guess_normal" ;;
      esac
     ])
    rm -rf conftest.a conftest.l conftest.d
  ])
  case "$gl_cv_func_realpath_works" in
    *yes)
      AC_DEFINE([FUNC_REALPATH_WORKS], [1],
        [Define to 1 if realpath() can malloc memory, always gives an absolute path, and handles leading slashes and a trailing slash correctly.])
      ;;
    *nearly)
      AC_DEFINE([FUNC_REALPATH_NEARLY_WORKS], [1],
        [Define to 1 if realpath() can malloc memory, always gives an absolute path, and handles a trailing slash correctly.])
      ;;
  esac
])
m4trace:m4/chdir-long.m4:16: -1- AC_DEFUN([gl_FUNC_CHDIR_LONG], [
  AC_REQUIRE([gl_PATHMAX_SNIPPET_PREREQ])
  AC_CACHE_CHECK([whether this system supports file names of any length],
    [gl_cv_have_unlimited_file_name_length],
    [AC_EGREP_CPP([have_arbitrary_file_name_length_limit],
                  gl_PATHMAX_SNIPPET[
#ifdef PATH_MAX
have_arbitrary_file_name_length_limit
#endif],
    [gl_cv_have_unlimited_file_name_length=no],
    [gl_cv_have_unlimited_file_name_length=yes])])
])
m4trace:m4/chdir-long.m4:30: -1- AC_DEFUN([gl_PREREQ_CHDIR_LONG], [:])
m4trace:m4/clock_time.m4:12: -1- AC_DEFUN([gl_CLOCK_TIME], [
  dnl Persuade glibc and Solaris <time.h> to declare these functions.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  # Solaris 2.5.1 needs -lposix4 to get the clock_gettime function.
  # Solaris 7 prefers the library name -lrt to the obsolescent name -lposix4.

  # Save and restore LIBS so e.g., -lrt, isn't added to it.  Otherwise, *all*
  # programs in the package would end up linked with that potentially-shared
  # library, inducing unnecessary run-time overhead.
  LIB_CLOCK_GETTIME=
  AC_SUBST([LIB_CLOCK_GETTIME])
  gl_saved_libs=$LIBS
    AC_SEARCH_LIBS([clock_gettime], [rt posix4],
                   [test "$ac_cv_search_clock_gettime" = "none required" ||
                    LIB_CLOCK_GETTIME=$ac_cv_search_clock_gettime])
    AC_CHECK_FUNCS([clock_gettime clock_settime])
  LIBS=$gl_saved_libs
])
m4trace:m4/close.m4:7: -1- AC_DEFUN([gl_FUNC_CLOSE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  m4_ifdef([gl_MSVC_INVAL], [
    AC_REQUIRE([gl_MSVC_INVAL])
    if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
      REPLACE_CLOSE=1
    fi
  ])
  m4_ifdef([gl_PREREQ_SYS_H_WINSOCK2], [
    gl_PREREQ_SYS_H_WINSOCK2
    if test $UNISTD_H_HAVE_WINSOCK2_H = 1; then
      dnl Even if the 'socket' module is not used here, another part of the
      dnl application may use it and pass file descriptors that refer to
      dnl sockets to the close() function. So enable the support for sockets.
      REPLACE_CLOSE=1
    fi
  ])
  dnl Replace close() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    if test $REPLACE_CLOSE = 0; then
      gl_TEST_FCHDIR
      if test $HAVE_FCHDIR = 0; then
        REPLACE_CLOSE=1
      fi
    fi
  ])
])
m4trace:m4/closedir.m4:7: -1- AC_DEFUN([gl_FUNC_CLOSEDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_FUNCS([closedir])
  if test $ac_cv_func_closedir = no; then
    HAVE_CLOSEDIR=0
  fi
  dnl Replace closedir() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      if test $HAVE_CLOSEDIR = 1; then
        REPLACE_CLOSEDIR=1
      fi
    fi
  ])
  dnl Replace closedir() for supporting the gnulib-defined dirfd() function.
  case $host_os,$HAVE_CLOSEDIR in
    os2*,1)
      REPLACE_CLOSEDIR=1;;
  esac
])
m4trace:m4/codeset.m4:10: -1- AC_DEFUN([AM_LANGINFO_CODESET], [
  AC_CACHE_CHECK([for nl_langinfo and CODESET], [am_cv_langinfo_codeset],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <langinfo.h>]],
          [[char* cs = nl_langinfo(CODESET); return !cs;]])],
       [am_cv_langinfo_codeset=yes],
       [am_cv_langinfo_codeset=no])
    ])
  if test $am_cv_langinfo_codeset = yes; then
    AC_DEFINE([HAVE_LANGINFO_CODESET], [1],
      [Define if you have <langinfo.h> and nl_langinfo(CODESET).])
  fi
])
m4trace:m4/ctype_h.m4:7: -1- AC_DEFUN_ONCE([gl_CTYPE_H], [
  AC_REQUIRE([gl_CTYPE_H_DEFAULTS])

  dnl <ctype.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_NEXT_HEADERS([ctype.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <ctype.h>
    ]], [isblank])
])
m4trace:m4/ctype_h.m4:24: -1- AC_DEFUN([gl_CTYPE_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_CTYPE_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/ctype_h.m4:34: -1- AC_DEFUN([gl_CTYPE_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_CTYPE_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISBLANK])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_CTYPE_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_CTYPE_H_DEFAULTS])
])
m4trace:m4/ctype_h.m4:43: -1- AC_DEFUN([gl_CTYPE_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_ISBLANK=1;   AC_SUBST([HAVE_ISBLANK])
])
m4trace:m4/d-ino.m4:15: -1- AC_DEFUN([gl_CHECK_TYPE_STRUCT_DIRENT_D_INO], [AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
   AC_CACHE_CHECK([for d_ino member in directory struct],
                  [gl_cv_struct_dirent_d_ino],
     [AC_RUN_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <sys/types.h>
             #include <sys/stat.h>
             #include <dirent.h>
           ]],
           [[DIR *dp = opendir (".");
             struct dirent *e;
             struct stat st;
             if (! dp)
               return 1;
             e = readdir (dp);
             if (! e)
               { closedir (dp); return 2; }
             if (lstat (e->d_name, &st) != 0)
               { closedir (dp); return 3; }
             if (e->d_ino != st.st_ino)
               { closedir (dp); return 4; }
             closedir (dp);
             return 0;
           ]])],
           [gl_cv_struct_dirent_d_ino=yes],
           [gl_cv_struct_dirent_d_ino=no],
           [case "$host_os" in
                            # Guess yes on glibc systems with Linux kernel.
              linux*-gnu*)  gl_cv_struct_dirent_d_ino="guessing yes" ;;
                            # Guess yes on musl systems with Linux kernel.
              linux*-musl*) gl_cv_struct_dirent_d_ino="guessing yes" ;;
                            # Guess no on native Windows.
              mingw*)       gl_cv_struct_dirent_d_ino="guessing no" ;;
                            # If we don't know, obey --enable-cross-guesses.
              *)            gl_cv_struct_dirent_d_ino="$gl_cross_guess_normal" ;;
            esac
           ])])
   case "$gl_cv_struct_dirent_d_ino" in
     *yes)
       AC_DEFINE([D_INO_IN_DIRENT], [1],
         [Define if struct dirent has a member d_ino that actually works.])
       ;;
   esac
  
])
m4trace:m4/d-type.m4:14: -1- AC_DEFUN([gl_CHECK_TYPE_STRUCT_DIRENT_D_TYPE], [AC_CACHE_CHECK([for d_type member in directory struct],
                  [gl_cv_struct_dirent_d_type],
     [AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <dirent.h>
         ]],
         [[struct dirent dp; dp.d_type = 0;]])],
       [gl_cv_struct_dirent_d_type=yes],
       [gl_cv_struct_dirent_d_type=no])
     ]
   )
   if test $gl_cv_struct_dirent_d_type = yes; then
     AC_DEFINE([HAVE_STRUCT_DIRENT_D_TYPE], [1],
       [Define if there is a member named d_type in the struct describing
        directory headers.])
   fi
  
])
m4trace:m4/dirent_h.m4:9: -1- AC_DEFUN_ONCE([gl_DIRENT_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])

  dnl <dirent.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([dirent.h])
  if test $ac_cv_header_dirent_h = yes; then
    HAVE_DIRENT_H=1
  else
    HAVE_DIRENT_H=0
  fi
  AC_SUBST([HAVE_DIRENT_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <dirent.h>
    ]], [alphasort closedir dirfd fdopendir opendir readdir rewinddir scandir])
])
m4trace:m4/dirent_h.m4:34: -1- AC_DEFUN([gl_DIRENT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_DIRENT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/dirent_h.m4:46: -1- AC_DEFUN([gl_DIRENT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_DIRENT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_UNISTD_H_REQUIRE_DEFAULTS dnl for REPLACE_FCHDIR
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REWINDDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSEDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DIRFD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPENDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALPHASORT])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_DIRENT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
])
m4trace:m4/dirent_h.m4:63: -1- AC_DEFUN([gl_DIRENT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_OPENDIR=1;       AC_SUBST([HAVE_OPENDIR])
  HAVE_READDIR=1;       AC_SUBST([HAVE_READDIR])
  HAVE_REWINDDIR=1;     AC_SUBST([HAVE_REWINDDIR])
  HAVE_CLOSEDIR=1;      AC_SUBST([HAVE_CLOSEDIR])
  HAVE_DECL_DIRFD=1;    AC_SUBST([HAVE_DECL_DIRFD])
  HAVE_DECL_FDOPENDIR=1;AC_SUBST([HAVE_DECL_FDOPENDIR])
  HAVE_FDOPENDIR=1;     AC_SUBST([HAVE_FDOPENDIR])
  HAVE_SCANDIR=1;       AC_SUBST([HAVE_SCANDIR])
  HAVE_ALPHASORT=1;     AC_SUBST([HAVE_ALPHASORT])
  REPLACE_OPENDIR=0;    AC_SUBST([REPLACE_OPENDIR])
  REPLACE_CLOSEDIR=0;   AC_SUBST([REPLACE_CLOSEDIR])
  REPLACE_DIRFD=0;      AC_SUBST([REPLACE_DIRFD])
  REPLACE_FDOPENDIR=0;  AC_SUBST([REPLACE_FDOPENDIR])
])
m4trace:m4/dirfd.m4:12: -1- AC_DEFUN([gl_FUNC_DIRFD], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Persuade glibc <dirent.h> to declare dirfd().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS([dirfd])
  AC_CHECK_DECLS([dirfd], , ,
    [[#include <sys/types.h>
      #include <dirent.h>]])
  if test $ac_cv_have_decl_dirfd = no; then
    HAVE_DECL_DIRFD=0
  fi

  AC_CACHE_CHECK([whether dirfd is a macro],
    [gl_cv_func_dirfd_macro],
    [AC_EGREP_CPP([dirent_header_defines_dirfd], [
#include <sys/types.h>
#include <dirent.h>
#ifdef dirfd
 dirent_header_defines_dirfd
#endif],
       [gl_cv_func_dirfd_macro=yes],
       [gl_cv_func_dirfd_macro=no])])

  # Use the replacement if we have no function or macro with that name,
  # or if OS/2 kLIBC whose dirfd() does not work.
  # Replace only if the system declares dirfd already.
  case $ac_cv_func_dirfd,$gl_cv_func_dirfd_macro,$host_os,$ac_cv_have_decl_dirfd in
    no,no,*,yes | *,*,os2*,yes)
      REPLACE_DIRFD=1
      AC_DEFINE([REPLACE_DIRFD], [1],
        [Define to 1 if gnulib's dirfd() replacement is used.]);;
  esac
])
m4trace:m4/dirfd.m4:51: -1- AC_DEFUN([gl_PREREQ_DIRFD], [
  AC_CACHE_CHECK([how to get the file descriptor associated with an open DIR*],
                 [gl_cv_sys_dir_fd_member_name],
    [
      dirfd_save_CFLAGS=$CFLAGS
      for ac_expr in d_fd dd_fd; do

        CFLAGS="$CFLAGS -DDIR_FD_MEMBER_NAME=$ac_expr"
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
           #include <sys/types.h>
           #include <dirent.h>]],
          [[DIR *dir_p = opendir("."); (void) dir_p->DIR_FD_MEMBER_NAME;]])],
          [dir_fd_found=yes]
        )
        CFLAGS=$dirfd_save_CFLAGS
        test "$dir_fd_found" = yes && break
      done
      test "$dir_fd_found" = yes || ac_expr=no_such_member

      gl_cv_sys_dir_fd_member_name=$ac_expr
    ]
  )
  if test $gl_cv_sys_dir_fd_member_name != no_such_member; then
    AC_DEFINE_UNQUOTED([DIR_FD_MEMBER_NAME],
      [$gl_cv_sys_dir_fd_member_name],
      [the name of the file descriptor member of DIR])
  fi
  AH_VERBATIM([DIR_TO_FD],
              [#ifdef DIR_FD_MEMBER_NAME
# define DIR_TO_FD(Dir_p) ((Dir_p)->DIR_FD_MEMBER_NAME)
#else
# define DIR_TO_FD(Dir_p) -1
#endif
])
])
m4trace:m4/double-slash-root.m4:7: -1- AC_DEFUN([gl_DOUBLE_SLASH_ROOT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether // is distinct from /], [gl_cv_double_slash_root],
    [ if test x"$cross_compiling" = xyes ; then
        # When cross-compiling, there is no way to tell whether // is special
        # short of a list of hosts.  However, the only known hosts to date
        # that have a distinct // are Apollo DomainOS (too old to port to),
        # Cygwin, and z/OS.  If anyone knows of another system for which // has
        # special semantics and is distinct from /, please report it to
        # <bug-gnulib@gnu.org>.
        case $host in
          *-cygwin | i370-ibm-openedition)
            gl_cv_double_slash_root=yes ;;
          *)
            # Be optimistic and assume that / and // are the same when we
            # don't know.
            gl_cv_double_slash_root='unknown, assuming no' ;;
        esac
      else
        set x `ls -di / // 2>/dev/null`
        if test "$[2]" = "$[4]" && wc //dev/null >/dev/null 2>&1; then
          gl_cv_double_slash_root=no
        else
          gl_cv_double_slash_root=yes
        fi
      fi])
  if test "$gl_cv_double_slash_root" = yes; then
    AC_DEFINE([DOUBLE_SLASH_IS_DISTINCT_ROOT], [1],
      [Define to 1 if // is a file system root distinct from /.])
  fi
])
m4trace:m4/dup.m4:7: -1- AC_DEFUN([gl_FUNC_DUP], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  m4_ifdef([gl_MSVC_INVAL], [
    AC_REQUIRE([gl_MSVC_INVAL])
    if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
      REPLACE_DUP=1
    fi
  ])
  dnl Replace dup() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      REPLACE_DUP=1
    fi
  ])
  AC_CACHE_CHECK([whether dup works], [gl_cv_func_dup_works],
    [AC_RUN_IFELSE(
      [AC_LANG_PROGRAM([[#include <unistd.h>
                         #include <fcntl.h>
                         #include <errno.h>
                       ]GL_MDA_DEFINES],
         [[/* On OS/2 kLIBC, dup does not work on a directory fd.  */
           int fd = open (".", O_RDONLY);
           return fd < 0 ? 1 : dup (fd) < 0 ? 2 : 0;
         ]])
      ],
      [gl_cv_func_dup_works=yes],
      [gl_cv_func_dup_works=no],
      [case "$host_os" in
                 # Guess no on native Windows.
         mingw*) gl_cv_func_dup_works="guessing no" ;;
         *)      gl_cv_func_dup_works="guessing yes" ;;
       esac
      ])
    ])
  case "$gl_cv_func_dup_works" in
    *yes) ;;
    *)
      REPLACE_DUP=1
      ;;
  esac
])
m4trace:m4/dup.m4:54: -1- AC_DEFUN([gl_PREREQ_DUP], [:])
m4trace:m4/dup2.m4:7: -1- AC_DEFUN([gl_FUNC_DUP2], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether dup2 works], [gl_cv_func_dup2_works],
    [AC_RUN_IFELSE([
       AC_LANG_PROGRAM(
         [[#include <errno.h>
           #include <fcntl.h>
           #include <limits.h>
           #include <sys/resource.h>
           #include <unistd.h>
           ]GL_MDA_DEFINES[
           #ifndef RLIM_SAVED_CUR
           # define RLIM_SAVED_CUR RLIM_INFINITY
           #endif
           #ifndef RLIM_SAVED_MAX
           # define RLIM_SAVED_MAX RLIM_INFINITY
           #endif
         ]],
         [[int result = 0;
           int bad_fd = INT_MAX;
           struct rlimit rlim;
           if (getrlimit (RLIMIT_NOFILE, &rlim) == 0
               && 0 <= rlim.rlim_cur && rlim.rlim_cur <= INT_MAX
               && rlim.rlim_cur != RLIM_INFINITY
               && rlim.rlim_cur != RLIM_SAVED_MAX
               && rlim.rlim_cur != RLIM_SAVED_CUR)
             bad_fd = rlim.rlim_cur;
           #ifdef FD_CLOEXEC
             if (fcntl (1, F_SETFD, FD_CLOEXEC) == -1)
               result |= 1;
           #endif
           if (dup2 (1, 1) != 1)
             result |= 2;
           #ifdef FD_CLOEXEC
             if (fcntl (1, F_GETFD) != FD_CLOEXEC)
               result |= 4;
           #endif
           close (0);
           if (dup2 (0, 0) != -1)
             result |= 8;
           /* Many gnulib modules require POSIX conformance of EBADF.  */
           if (dup2 (2, bad_fd) == -1 && errno != EBADF)
             result |= 16;
           /* Flush out some cygwin core dumps.  */
           if (dup2 (2, -1) != -1 || errno != EBADF)
             result |= 32;
           dup2 (2, 255);
           dup2 (2, 256);
           /* On OS/2 kLIBC, dup2() does not work on a directory fd.  */
           {
             int fd = open (".", O_RDONLY);
             if (fd == -1)
               result |= 64;
             else if (dup2 (fd, fd + 1) == -1)
               result |= 128;
             close (fd);
           }
           return result;]])
      ],
      [gl_cv_func_dup2_works=yes], [gl_cv_func_dup2_works=no],
      [case "$host_os" in
         mingw*) # on this platform, dup2 always returns 0 for success
           gl_cv_func_dup2_works="guessing no" ;;
         cygwin*) # on cygwin 1.5.x, dup2(1,1) returns 0
           gl_cv_func_dup2_works="guessing no" ;;
         aix* | freebsd*)
                 # on AIX 7.1 and FreeBSD 6.1, dup2 (1,toobig) gives EMFILE,
                 # not EBADF.
           gl_cv_func_dup2_works="guessing no" ;;
         haiku*) # on Haiku alpha 2, dup2(1, 1) resets FD_CLOEXEC.
           gl_cv_func_dup2_works="guessing no" ;;
         *-android*) # implemented using dup3(), which fails if oldfd == newfd
           gl_cv_func_dup2_works="guessing no" ;;
         os2*) # on OS/2 kLIBC, dup2() does not work on a directory fd.
           gl_cv_func_dup2_works="guessing no" ;;
         *) gl_cv_func_dup2_works="guessing yes" ;;
       esac])
    ])
  case "$gl_cv_func_dup2_works" in
    *yes) ;;
    *)
      REPLACE_DUP2=1
      AC_CHECK_FUNCS([setdtablesize])
      ;;
  esac
  dnl Replace dup2() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      REPLACE_DUP2=1
    fi
  ])
])
m4trace:m4/dup2.m4:105: -1- AC_DEFUN([gl_PREREQ_DUP2], [])
m4trace:m4/eaccess.m4:7: -1- AC_DEFUN([gl_FUNC_EACCESS], [
  AC_CHECK_FUNC([eaccess], ,
    [AC_DEFINE([eaccess], [access],
       [Define as 'access' if you don't have the eaccess() function.])])
])
m4trace:m4/eealloc.m4:7: -1- AC_DEFUN([gl_EEALLOC], [
  AC_REQUIRE([gl_EEMALLOC])
  AC_REQUIRE([gl_EEREALLOC])
])
m4trace:m4/eealloc.m4:13: -1- AC_DEFUN([gl_EEMALLOC], [
  _AC_FUNC_MALLOC_IF(
    [gl_cv_func_malloc_0_nonnull=1],
    [gl_cv_func_malloc_0_nonnull=0])
  AC_DEFINE_UNQUOTED([MALLOC_0_IS_NONNULL], [$gl_cv_func_malloc_0_nonnull],
    [If malloc(0) is != NULL, define this to 1.  Otherwise define this
     to 0.])
])
m4trace:m4/eealloc.m4:23: -1- AC_DEFUN([gl_EEREALLOC], [
  _AC_FUNC_REALLOC_IF(
    [gl_cv_func_realloc_0_nonnull=1],
    [gl_cv_func_realloc_0_nonnull=0])
  AC_DEFINE_UNQUOTED([REALLOC_0_IS_NONNULL], [$gl_cv_func_realloc_0_nonnull],
    [If realloc(NULL,0) is != NULL, define this to 1.  Otherwise define this
     to 0.])
])
m4trace:m4/environ.m4:7: -1- AC_DEFUN_ONCE([gl_ENVIRON], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  dnl Persuade glibc <unistd.h> to declare environ.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_HEADERS_ONCE([unistd.h])
  gt_CHECK_VAR_DECL(
    [#if HAVE_UNISTD_H
     #include <unistd.h>
     #endif
     /* mingw, BeOS, Haiku declare environ in <stdlib.h>, not in <unistd.h>.  */
     #include <stdlib.h>
    ],
    [environ])
  if test $gt_cv_var_environ_declaration != yes; then
    HAVE_DECL_ENVIRON=0
  fi
])
m4trace:m4/environ.m4:29: -1- AC_DEFUN([gt_CHECK_VAR_DECL], [
  define([gt_cv_var], [gt_cv_var_]$2[_declaration])
  AC_CACHE_CHECK([if $2 is properly declared], [gt_cv_var],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[$1
            typedef struct { int foo; } foo_t;
            extern foo_t $2;]],
          [[$2.foo = 1;]])],
       [gt_cv_var=no],
       [gt_cv_var=yes])])
  if test $gt_cv_var = yes; then
    AC_DEFINE([HAVE_]m4_translit($2, [a-z], [A-Z])[_DECL], 1,
              [Define if you have the declaration of $2.])
  fi
  undefine([gt_cv_var])
])
m4trace:m4/errno_h.m4:9: -1- AC_DEFUN_ONCE([gl_HEADER_ERRNO_H], [
  AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([for complete errno.h], [gl_cv_header_errno_h_complete], [
    AC_EGREP_CPP([booboo],[
#include <errno.h>
#if !defined ETXTBSY
booboo
#endif
#if !defined ENOMSG
booboo
#endif
#if !defined EIDRM
booboo
#endif
#if !defined ENOLINK
booboo
#endif
#if !defined EPROTO
booboo
#endif
#if !defined EMULTIHOP
booboo
#endif
#if !defined EBADMSG
booboo
#endif
#if !defined EOVERFLOW
booboo
#endif
#if !defined ENOTSUP
booboo
#endif
#if !defined ENETRESET
booboo
#endif
#if !defined ECONNABORTED
booboo
#endif
#if !defined ESTALE
booboo
#endif
#if !defined EDQUOT
booboo
#endif
#if !defined ECANCELED
booboo
#endif
#if !defined EOWNERDEAD
booboo
#endif
#if !defined ENOTRECOVERABLE
booboo
#endif
#if !defined EILSEQ
booboo
#endif
      ],
      [gl_cv_header_errno_h_complete=no],
      [gl_cv_header_errno_h_complete=yes])
  ])
  if test $gl_cv_header_errno_h_complete = yes; then
    ERRNO_H=''
  else
    gl_NEXT_HEADERS([errno.h])
    ERRNO_H='errno.h'
  fi
  AC_SUBST([ERRNO_H])
  AM_CONDITIONAL([GL_GENERATE_ERRNO_H], [test -n "$ERRNO_H"])
  gl_REPLACE_ERRNO_VALUE([EMULTIHOP])
  gl_REPLACE_ERRNO_VALUE([ENOLINK])
  gl_REPLACE_ERRNO_VALUE([EOVERFLOW])
])
m4trace:m4/errno_h.m4:89: -1- AC_DEFUN([gl_REPLACE_ERRNO_VALUE], [
  if test -n "$ERRNO_H"; then
    AC_CACHE_CHECK([for ]$1[ value], [gl_cv_header_errno_h_]$1, [
      AC_EGREP_CPP([yes],[
#include <errno.h>
#ifdef ]$1[
yes
#endif
      ],
      [gl_cv_header_errno_h_]$1[=yes],
      [gl_cv_header_errno_h_]$1[=no])
      if test $gl_cv_header_errno_h_]$1[ = no; then
        AC_EGREP_CPP([yes],[
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
#ifdef ]$1[
yes
#endif
          ], [gl_cv_header_errno_h_]$1[=hidden])
        if test $gl_cv_header_errno_h_]$1[ = hidden; then
          dnl The macro exists but is hidden.
          dnl Define it to the same value.
          AC_COMPUTE_INT([gl_cv_header_errno_h_]$1, $1, [
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
/* The following two lines are a workaround against an autoconf-2.52 bug.  */
#include <stdio.h>
#include <stdlib.h>
])
        fi
      fi
    ])
    case $gl_cv_header_errno_h_$1 in
      yes | no)
        $1_HIDDEN=0; $1_VALUE=
        ;;
      *)
        $1_HIDDEN=1; $1_VALUE="$gl_cv_header_errno_h_$1"
        ;;
    esac
    AC_SUBST($1[_HIDDEN])
    AC_SUBST($1[_VALUE])
  fi
])
m4trace:m4/error.m4:9: -1- AC_DEFUN([gl_ERROR], [
  dnl We don't use AC_FUNC_ERROR_AT_LINE any more, because it is no longer
  dnl maintained in Autoconf and because it invokes AC_LIBOBJ.
  AC_CACHE_CHECK([for error_at_line], [ac_cv_lib_error_at_line],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <error.h>]],
          [[error_at_line (0, 0, "", 0, "an error occurred");]])],
       [ac_cv_lib_error_at_line=yes],
       [ac_cv_lib_error_at_line=no])])
])
m4trace:m4/error.m4:23: -1- AC_DEFUN([gl_PREREQ_ERROR], [
  dnl Use system extensions on Android, so that AC_FUNC_STRERROR_R
  dnl discovers the GNU API for strerror_r on Android API level 23 and later.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([AC_FUNC_STRERROR_R])
  :
])
m4trace:m4/exponentd.m4:6: -1- AC_DEFUN([gl_DOUBLE_EXPONENT_LOCATION], [
  AC_CACHE_CHECK([where to find the exponent in a 'double'],
    [gl_cv_cc_double_expbit0],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <stddef.h>
#include <stdio.h>
#include <string.h>
#define NWORDS \
  ((sizeof (double) + sizeof (unsigned int) - 1) / sizeof (unsigned int))
typedef union { double value; unsigned int word[NWORDS]; } memory_double;
static unsigned int ored_words[NWORDS];
static unsigned int anded_words[NWORDS];
static void add_to_ored_words (double x)
{
  memory_double m;
  size_t i;
  /* Clear it first, in case sizeof (double) < sizeof (memory_double).  */
  memset (&m, 0, sizeof (memory_double));
  m.value = x;
  for (i = 0; i < NWORDS; i++)
    {
      ored_words[i] |= m.word[i];
      anded_words[i] &= m.word[i];
    }
}
int main ()
{
  size_t j;
  FILE *fp = fopen ("conftest.out", "w");
  if (fp == NULL)
    return 1;
  for (j = 0; j < NWORDS; j++)
    anded_words[j] = ~ (unsigned int) 0;
  add_to_ored_words (0.25);
  add_to_ored_words (0.5);
  add_to_ored_words (1.0);
  add_to_ored_words (2.0);
  add_to_ored_words (4.0);
  /* Remove bits that are common (e.g. if representation of the first mantissa
     bit is explicit).  */
  for (j = 0; j < NWORDS; j++)
    ored_words[j] &= ~anded_words[j];
  /* Now find the nonzero word.  */
  for (j = 0; j < NWORDS; j++)
    if (ored_words[j] != 0)
      break;
  if (j < NWORDS)
    {
      size_t i;
      for (i = j + 1; i < NWORDS; i++)
        if (ored_words[i] != 0)
          {
            fprintf (fp, "unknown");
            return (fclose (fp) != 0);
          }
      for (i = 0; ; i++)
        if ((ored_words[j] >> i) & 1)
          {
            fprintf (fp, "word %d bit %d", (int) j, (int) i);
            return (fclose (fp) != 0);
          }
    }
  fprintf (fp, "unknown");
  return (fclose (fp) != 0);
}
        ]])],
        [gl_cv_cc_double_expbit0=`cat conftest.out`],
        [gl_cv_cc_double_expbit0="unknown"],
        [
          dnl On ARM, there are two 'double' floating-point formats, used by
          dnl different sets of instructions: The older FPA instructions assume
          dnl that they are stored in big-endian word order, while the words
          dnl (like integer types) are stored in little-endian byte order.
          dnl The newer VFP instructions assume little-endian order
          dnl consistently.
          AC_EGREP_CPP([mixed_endianness], [
#if defined arm || defined __arm || defined __arm__
  mixed_endianness
#endif
            ],
            [gl_cv_cc_double_expbit0="unknown"],
            [
              pushdef([AC_MSG_CHECKING],[:])dnl
              pushdef([AC_MSG_RESULT],[:])dnl
              pushdef([AC_MSG_RESULT_UNQUOTED],[:])dnl
              AC_C_BIGENDIAN(
                [gl_cv_cc_double_expbit0="word 0 bit 20"],
                [gl_cv_cc_double_expbit0="word 1 bit 20"],
                [gl_cv_cc_double_expbit0="unknown"])
              popdef([AC_MSG_RESULT_UNQUOTED])dnl
              popdef([AC_MSG_RESULT])dnl
              popdef([AC_MSG_CHECKING])dnl
            ])
        ])
      rm -f conftest.out
    ])
  case "$gl_cv_cc_double_expbit0" in
    word*bit*)
      word=`echo "$gl_cv_cc_double_expbit0" | sed -e 's/word //' -e 's/ bit.*//'`
      bit=`echo "$gl_cv_cc_double_expbit0" | sed -e 's/word.*bit //'`
      AC_DEFINE_UNQUOTED([DBL_EXPBIT0_WORD], [$word],
        [Define as the word index where to find the exponent of 'double'.])
      AC_DEFINE_UNQUOTED([DBL_EXPBIT0_BIT], [$bit],
        [Define as the bit index in the word where to find bit 0 of the exponent of 'double'.])
      ;;
  esac
])
m4trace:m4/extensions.m4:212: -1- AC_DEFUN_ONCE([gl_USE_SYSTEM_EXTENSIONS], [
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl On OpenBSD 6.8 with GCC, the include files contain a couple of
  dnl definitions that are only activated with an explicit -D_ISOC11_SOURCE.
  dnl That's because this version of GCC (4.2.1) supports the option
  dnl '-std=gnu99' but not the option '-std=gnu11'.
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    openbsd*)
      AC_DEFINE([_ISOC11_SOURCE], [1],
        [Define to enable the declarations of ISO C 11 types and functions.])
      ;;
  esac
])
m4trace:m4/extern-inline.m4:8: -1- AC_DEFUN([gl_EXTERN_INLINE], [
  AH_VERBATIM([extern_inline],
[/* Please see the Gnulib manual for how to use these macros.

   Suppress extern inline with HP-UX cc, as it appears to be broken; see
   <https://lists.gnu.org/r/bug-texinfo/2013-02/msg00030.html>.

   Suppress extern inline with Sun C in standards-conformance mode, as it
   mishandles inline functions that call each other.  E.g., for 'inline void f
   (void) { } inline void g (void) { f (); }', c99 incorrectly complains
   'reference to static identifier "f" in extern inline function'.
   This bug was observed with Oracle Developer Studio 12.6
   (Sun C 5.15 SunOS_sparc 2017/05/30).

   Suppress extern inline (with or without __attribute__ ((__gnu_inline__)))
   on configurations that mistakenly use 'static inline' to implement
   functions or macros in standard C headers like <ctype.h>.  For example,
   if isdigit is mistakenly implemented via a static inline function,
   a program containing an extern inline function that calls isdigit
   may not work since the C standard prohibits extern inline functions
   from calling static functions (ISO C 99 section 6.7.4.(3).
   This bug is known to occur on:

     OS X 10.8 and earlier; see:
     https://lists.gnu.org/r/bug-gnulib/2012-12/msg00023.html

     DragonFly; see
     http://muscles.dragonflybsd.org/bulk/clang-master-potential/20141111_102002/logs/ah-tty-0.3.12.log

     FreeBSD; see:
     https://lists.gnu.org/r/bug-gnulib/2014-07/msg00104.html

   OS X 10.9 has a macro __header_inline indicating the bug is fixed for C and
   for clang but remains for g++; see <https://trac.macports.org/ticket/41033>.
   Assume DragonFly and FreeBSD will be similar.

   GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
   inline semantics, unless -fgnu89-inline is used.  It defines a macro
   __GNUC_STDC_INLINE__ to indicate this situation or a macro
   __GNUC_GNU_INLINE__ to indicate the opposite situation.
   GCC 4.2 with -std=c99 or -std=gnu99 implements the GNU C inline
   semantics but warns, unless -fgnu89-inline is used:
     warning: C99 inline functions are not supported; using GNU89
     warning: to disable this warning use -fgnu89-inline or the gnu_inline function attribute
   It defines a macro __GNUC_GNU_INLINE__ to indicate this situation.
 */
#if (((defined __APPLE__ && defined __MACH__) \
      || defined __DragonFly__ || defined __FreeBSD__) \
     && (defined __header_inline \
         ? (defined __cplusplus && defined __GNUC_STDC_INLINE__ \
            && ! defined __clang__) \
         : ((! defined _DONT_USE_CTYPE_INLINE_ \
             && (defined __GNUC__ || defined __cplusplus)) \
            || (defined _FORTIFY_SOURCE && 0 < _FORTIFY_SOURCE \
                && defined __GNUC__ && ! defined __cplusplus))))
# define _GL_EXTERN_INLINE_STDHEADER_BUG
#endif
#if ((__GNUC__ \
      ? defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__ \
      : (199901L <= __STDC_VERSION__ \
         && !defined __HP_cc \
         && !defined __PGI \
         && !(defined __SUNPRO_C && __STDC__))) \
     && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)
# define _GL_INLINE inline
# define _GL_EXTERN_INLINE extern inline
# define _GL_EXTERN_INLINE_IN_USE
#elif (2 < __GNUC__ + (7 <= __GNUC_MINOR__) && !defined __STRICT_ANSI__ \
       && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)
# if defined __GNUC_GNU_INLINE__ && __GNUC_GNU_INLINE__
   /* __gnu_inline__ suppresses a GCC 4.2 diagnostic.  */
#  define _GL_INLINE extern inline __attribute__ ((__gnu_inline__))
# else
#  define _GL_INLINE extern inline
# endif
# define _GL_EXTERN_INLINE extern
# define _GL_EXTERN_INLINE_IN_USE
#else
# define _GL_INLINE _GL_UNUSED static
# define _GL_EXTERN_INLINE _GL_UNUSED static
#endif

/* In GCC 4.6 (inclusive) to 5.1 (exclusive),
   suppress bogus "no previous prototype for 'FOO'"
   and "no previous declaration for 'FOO'" diagnostics,
   when FOO is an inline function in the header; see
   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54113> and
   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63877>.  */
#if __GNUC__ == 4 && 6 <= __GNUC_MINOR__
# if defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__
#  define _GL_INLINE_HEADER_CONST_PRAGMA
# else
#  define _GL_INLINE_HEADER_CONST_PRAGMA \
     _Pragma ("GCC diagnostic ignored \"-Wsuggest-attribute=const\"")
# endif
# define _GL_INLINE_HEADER_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wmissing-prototypes\"") \
    _Pragma ("GCC diagnostic ignored \"-Wmissing-declarations\"") \
    _GL_INLINE_HEADER_CONST_PRAGMA
# define _GL_INLINE_HEADER_END \
    _Pragma ("GCC diagnostic pop")
#else
# define _GL_INLINE_HEADER_BEGIN
# define _GL_INLINE_HEADER_END
#endif])
])
m4trace:m4/fchdir.m4:7: -1- AC_DEFUN([gl_FUNC_FCHDIR], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_DECLS_ONCE([fchdir])
  if test $ac_cv_have_decl_fchdir = no; then
    HAVE_DECL_FCHDIR=0
  fi

  AC_REQUIRE([gl_TEST_FCHDIR])
  if test $HAVE_FCHDIR = 0; then
    AC_LIBOBJ([fchdir])
    gl_PREREQ_FCHDIR
    AC_DEFINE([REPLACE_FCHDIR], [1],
      [Define to 1 if gnulib's fchdir() replacement is used.])
    dnl We must also replace anything that can manipulate a directory fd,
    dnl to keep our bookkeeping up-to-date.  We don't have to replace
    dnl fstatat, since no platform has fstatat but lacks fchdir.
    AC_CACHE_CHECK([whether open can visit directories],
      [gl_cv_func_open_directory_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <fcntl.h>
            ]GL_MDA_DEFINES],
            [[return open(".", O_RDONLY) < 0;]])],
         [gl_cv_func_open_directory_works=yes],
         [gl_cv_func_open_directory_works=no],
         [case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_open_directory_works="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_open_directory_works="guessing yes" ;;
                             # Guess no on native Windows.
            mingw*)          gl_cv_func_open_directory_works="guessing no" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_open_directory_works="$gl_cross_guess_normal" ;;
          esac
         ])])
    case "$gl_cv_func_open_directory_works" in
      *yes) ;;
      *)
        AC_DEFINE([REPLACE_OPEN_DIRECTORY], [1], [Define to 1 if open() should
work around the inability to open a directory.])
        ;;
    esac
  fi
])
m4trace:m4/fchdir.m4:58: -1- AC_DEFUN([gl_TEST_FCHDIR], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([fchdir])
  if test $ac_cv_func_fchdir = no; then
    HAVE_FCHDIR=0
  fi
])
m4trace:m4/fchdir.m4:68: -1- AC_DEFUN([gl_PREREQ_FCHDIR], [:])
m4trace:m4/fcntl-o.m4:14: -1- AC_DEFUN([gl_FCNTL_O_FLAGS], [
  dnl Persuade glibc <fcntl.h> to define O_NOATIME and O_NOFOLLOW.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_FUNCS_ONCE([symlink])
  AC_CACHE_CHECK([for working fcntl.h], [gl_cv_header_working_fcntl_h],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>
           #include <sys/stat.h>
           #if HAVE_UNISTD_H
           # include <unistd.h>
           #else /* on Windows with MSVC */
           # include <io.h>
           # include <stdlib.h>
           # defined sleep(n) _sleep ((n) * 1000)
           #endif
           #include <fcntl.h>
           ]GL_MDA_DEFINES[
           #ifndef O_NOATIME
            #define O_NOATIME 0
           #endif
           #ifndef O_NOFOLLOW
            #define O_NOFOLLOW 0
           #endif
           static int const constants[] =
            {
              O_CREAT, O_EXCL, O_NOCTTY, O_TRUNC, O_APPEND,
              O_NONBLOCK, O_SYNC, O_ACCMODE, O_RDONLY, O_RDWR, O_WRONLY
            };
          ]],
          [[
            int result = !constants;
            #if HAVE_SYMLINK
            {
              static char const sym[] = "conftest.sym";
              if (symlink ("/dev/null", sym) != 0)
                result |= 2;
              else
                {
                  int fd = open (sym, O_WRONLY | O_NOFOLLOW | O_CREAT, 0);
                  if (fd >= 0)
                    {
                      close (fd);
                      result |= 4;
                    }
                }
              if (unlink (sym) != 0 || symlink (".", sym) != 0)
                result |= 2;
              else
                {
                  int fd = open (sym, O_RDONLY | O_NOFOLLOW);
                  if (fd >= 0)
                    {
                      close (fd);
                      result |= 4;
                    }
                }
              unlink (sym);
            }
            #endif
            {
              static char const file[] = "confdefs.h";
              int fd = open (file, O_RDONLY | O_NOATIME);
              if (fd < 0)
                result |= 8;
              else
                {
                  struct stat st0;
                  if (fstat (fd, &st0) != 0)
                    result |= 16;
                  else
                    {
                      char c;
                      sleep (1);
                      if (read (fd, &c, 1) != 1)
                        result |= 24;
                      else
                        {
                          if (close (fd) != 0)
                            result |= 32;
                          else
                            {
                              struct stat st1;
                              if (stat (file, &st1) != 0)
                                result |= 40;
                              else
                                if (st0.st_atime != st1.st_atime)
                                  result |= 64;
                            }
                        }
                    }
                }
            }
            return result;]])],
       [gl_cv_header_working_fcntl_h=yes],
       [case $? in #(
        4) gl_cv_header_working_fcntl_h='no (bad O_NOFOLLOW)';; #(
        64) gl_cv_header_working_fcntl_h='no (bad O_NOATIME)';; #(
        68) gl_cv_header_working_fcntl_h='no (bad O_NOATIME, O_NOFOLLOW)';; #(
         *) gl_cv_header_working_fcntl_h='no';;
        esac],
       [case "$host_os" in
                  # Guess 'no' on native Windows.
          mingw*) gl_cv_header_working_fcntl_h='no' ;;
          *)      gl_cv_header_working_fcntl_h=cross-compiling ;;
        esac
       ])
    ])

  case $gl_cv_header_working_fcntl_h in #(
  *O_NOATIME* | no | cross-compiling) ac_val=0;; #(
  *) ac_val=1;;
  esac
  AC_DEFINE_UNQUOTED([HAVE_WORKING_O_NOATIME], [$ac_val],
    [Define to 1 if O_NOATIME works.])

  case $gl_cv_header_working_fcntl_h in #(
  *O_NOFOLLOW* | no | cross-compiling) ac_val=0;; #(
  *) ac_val=1;;
  esac
  AC_DEFINE_UNQUOTED([HAVE_WORKING_O_NOFOLLOW], [$ac_val],
    [Define to 1 if O_NOFOLLOW works.])
])
m4trace:m4/fcntl.m4:16: -1- AC_DEFUN([gl_FUNC_FCNTL], [
  dnl Persuade glibc to expose F_DUPFD_CLOEXEC.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([fcntl])
  if test $ac_cv_func_fcntl = no; then
    gl_REPLACE_FCNTL
  else
    dnl cygwin 1.5.x F_DUPFD has wrong errno, and allows negative target
    dnl haiku alpha 2 F_DUPFD has wrong errno
    AC_CACHE_CHECK([whether fcntl handles F_DUPFD correctly],
      [gl_cv_func_fcntl_f_dupfd_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <errno.h>
              #include <fcntl.h>
              #include <limits.h>
              #include <sys/resource.h>
              #include <unistd.h>
              ]GL_MDA_DEFINES[
              #ifndef RLIM_SAVED_CUR
              # define RLIM_SAVED_CUR RLIM_INFINITY
              #endif
              #ifndef RLIM_SAVED_MAX
              # define RLIM_SAVED_MAX RLIM_INFINITY
              #endif
            ]],
            [[int result = 0;
              int bad_fd = INT_MAX;
              struct rlimit rlim;
              if (getrlimit (RLIMIT_NOFILE, &rlim) == 0
                  && 0 <= rlim.rlim_cur && rlim.rlim_cur <= INT_MAX
                  && rlim.rlim_cur != RLIM_INFINITY
                  && rlim.rlim_cur != RLIM_SAVED_MAX
                  && rlim.rlim_cur != RLIM_SAVED_CUR)
                bad_fd = rlim.rlim_cur;
              if (fcntl (0, F_DUPFD, -1) != -1) result |= 1;
              if (errno != EINVAL) result |= 2;
              if (fcntl (0, F_DUPFD, bad_fd) != -1) result |= 4;
              if (errno != EINVAL) result |= 8;
              /* On OS/2 kLIBC, F_DUPFD does not work on a directory fd */
              {
                int fd;
                fd = open (".", O_RDONLY);
                if (fd == -1)
                  result |= 16;
                else if (fcntl (fd, F_DUPFD, STDERR_FILENO + 1) == -1)
                  result |= 32;

                close (fd);
              }
              return result;]])],
         [gl_cv_func_fcntl_f_dupfd_works=yes],
         [gl_cv_func_fcntl_f_dupfd_works=no],
         [case $host_os in
            aix* | cygwin* | haiku*)
               gl_cv_func_fcntl_f_dupfd_works="guessing no" ;;
            *) gl_cv_func_fcntl_f_dupfd_works="guessing yes" ;;
          esac])])
    case $gl_cv_func_fcntl_f_dupfd_works in
      *yes) ;;
      *) gl_REPLACE_FCNTL
        AC_DEFINE([FCNTL_DUPFD_BUGGY], [1], [Define this to 1 if F_DUPFD
          behavior does not match POSIX]) ;;
    esac

    dnl Many systems lack F_DUPFD_CLOEXEC.
    dnl NetBSD 9.0 declares F_DUPFD_CLOEXEC but it works only like F_DUPFD.
    AC_CACHE_CHECK([whether fcntl understands F_DUPFD_CLOEXEC],
      [gl_cv_func_fcntl_f_dupfd_cloexec],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE(
            [[#include <fcntl.h>
              #include <unistd.h>
              int main (int argc, char *argv[])
              {
                if (argc == 1)
                  /* parent process */
                  {
                    if (fcntl (1, F_DUPFD_CLOEXEC, 10) < 0)
                      return 1;
                    return execl ("./conftest", "./conftest", "child", NULL);
                  }
                else
                  /* child process */
                  return (fcntl (10, F_GETFL) < 0 ? 0 : 42);
              }
            ]])
         ],
         [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#ifdef __linux__
/* The Linux kernel only added F_DUPFD_CLOEXEC in 2.6.24, so we always replace
   it to support the semantics on older kernels that failed with EINVAL.  */
choke me
#endif
           ]])],
           [gl_cv_func_fcntl_f_dupfd_cloexec=yes],
           [gl_cv_func_fcntl_f_dupfd_cloexec="needs runtime check"])
         ],
         [gl_cv_func_fcntl_f_dupfd_cloexec=no],
         [case "$host_os" in
                     # Guess no on NetBSD.
            netbsd*) gl_cv_func_fcntl_f_dupfd_cloexec="guessing no" ;;
            *)       gl_cv_func_fcntl_f_dupfd_cloexec="$gl_cross_guess_normal" ;;
          esac
         ])
      ])
    case "$gl_cv_func_fcntl_f_dupfd_cloexec" in
      *yes) ;;
      *)    gl_REPLACE_FCNTL
            dnl No witness macro needed for this bug.
            ;;
    esac
  fi
  dnl Replace fcntl() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      gl_REPLACE_FCNTL
    fi
  ])
])
m4trace:m4/fcntl.m4:142: -1- AC_DEFUN([gl_REPLACE_FCNTL], [
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([fcntl])
  if test $ac_cv_func_fcntl = no; then
    HAVE_FCNTL=0
  else
    REPLACE_FCNTL=1
  fi
])
m4trace:m4/fcntl_h.m4:10: -1- AC_DEFUN_ONCE([gl_FCNTL_H], [
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_REQUIRE([gl_FCNTL_O_FLAGS])
  gl_NEXT_HEADERS([fcntl.h])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, if it is not common
  dnl enough to be declared everywhere.
  gl_WARN_ON_USE_PREPARE([[#include <fcntl.h>
    ]], [fcntl openat])
])
m4trace:m4/fcntl_h.m4:33: -1- AC_DEFUN([gl_FCNTL_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_FCNTL_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/fcntl_h.m4:45: -1- AC_DEFUN([gl_FCNTL_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_FCNTL_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CREAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCNTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NONBLOCKING])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENAT])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CREAT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_OPEN], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_FCNTL_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
])
m4trace:m4/fcntl_h.m4:61: -1- AC_DEFUN([gl_FCNTL_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_FCNTL=1;          AC_SUBST([HAVE_FCNTL])
  HAVE_OPENAT=1;         AC_SUBST([HAVE_OPENAT])
  REPLACE_CREAT=0;       AC_SUBST([REPLACE_CREAT])
  REPLACE_FCNTL=0;       AC_SUBST([REPLACE_FCNTL])
  REPLACE_OPEN=0;        AC_SUBST([REPLACE_OPEN])
  REPLACE_OPENAT=0;      AC_SUBST([REPLACE_OPENAT])
])
m4trace:m4/fdopendir.m4:11: -1- AC_DEFUN([gl_FUNC_FDOPENDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl FreeBSD 7.3 has the function, but failed to declare it.
  AC_CHECK_DECLS([fdopendir], [], [HAVE_DECL_FDOPENDIR=0], [[
#include <dirent.h>
    ]])
  AC_CHECK_FUNCS_ONCE([fdopendir])
  if test $ac_cv_func_fdopendir = no; then
    HAVE_FDOPENDIR=0
  else
    AC_CACHE_CHECK([whether fdopendir works],
      [gl_cv_func_fdopendir_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM([[
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
]GL_MDA_DEFINES[
#if !HAVE_DECL_FDOPENDIR
extern
# ifdef __cplusplus
"C"
# endif
DIR *fdopendir (int);
#endif
]],
            [[int result = 0;
              int fd = open ("conftest.c", O_RDONLY);
              if (fd < 0) result |= 1;
              if (fdopendir (fd)) result |= 2;
              if (close (fd)) result |= 4;
              return result;
            ]])],
         [gl_cv_func_fdopendir_works=yes],
         [gl_cv_func_fdopendir_works=no],
         [case "$host_os" in
                     # Guess yes on glibc systems.
            *-gnu*)  gl_cv_func_fdopendir_works="guessing yes" ;;
                     # Guess yes on musl systems.
            *-musl*) gl_cv_func_fdopendir_works="guessing yes" ;;
                     # If we don't know, obey --enable-cross-guesses.
            *)       gl_cv_func_fdopendir_works="$gl_cross_guess_normal" ;;
          esac
         ])])
    case "$gl_cv_func_fdopendir_works" in
      *yes) ;;
      *)
        REPLACE_FDOPENDIR=1
        ;;
    esac
  fi
])
m4trace:m4/filemode.m4:7: -1- AC_DEFUN([gl_FILEMODE], [
  AC_CHECK_DECLS_ONCE([strmode])
])
m4trace:m4/filenamecat.m4:7: -1- AC_DEFUN([gl_FILE_NAME_CONCAT], [
  AC_REQUIRE([gl_FILE_NAME_CONCAT_LGPL])
])
m4trace:m4/filenamecat.m4:12: -1- AC_DEFUN([gl_FILE_NAME_CONCAT_LGPL], [
  dnl Prerequisites of lib/filenamecat-lgpl.c.
  AC_CHECK_FUNCS_ONCE([mempcpy])
])
m4trace:m4/findprog-in.m4:7: -1- AC_DEFUN([gl_FINDPROG_IN], [
  dnl Prerequisites of lib/findprog-in.c.
  AC_REQUIRE([gl_FUNC_EACCESS])
])
m4trace:m4/flexmember.m4:11: -1- AC_DEFUN([AC_C_FLEXIBLE_ARRAY_MEMBER], [
  AC_CACHE_CHECK([for flexible array member],
    ac_cv_c_flexmember,
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
            #include <stdio.h>
            #include <stddef.h>
            struct m { struct m *next, **list; char name[]; };
            struct s { struct s *p; struct m *m; int n; double d[]; };]],
          [[int m = getchar ();
            size_t nbytes = offsetof (struct s, d) + m * sizeof (double);
            nbytes += sizeof (struct s) - 1;
            nbytes -= nbytes % sizeof (struct s);
            struct s *p = malloc (nbytes);
            p->p = p;
            p->m = NULL;
            p->d[0] = 0.0;
            return p->d != (double *) NULL;]])],
       [ac_cv_c_flexmember=yes],
       [ac_cv_c_flexmember=no])])
  if test $ac_cv_c_flexmember = yes; then
    AC_DEFINE([FLEXIBLE_ARRAY_MEMBER], [],
      [Define to nothing if C supports flexible array members, and to
       1 if it does not.  That way, with a declaration like 'struct s
       { int n; short d@<:@FLEXIBLE_ARRAY_MEMBER@:>@; };', the struct hack
       can be used with pre-C99 compilers.
       Use 'FLEXSIZEOF (struct s, d, N * sizeof (short))' to calculate
       the size in bytes of such a struct containing an N-element array.])
  else
    AC_DEFINE([FLEXIBLE_ARRAY_MEMBER], [1])
  fi
])
m4trace:m4/float_h.m4:7: -1- AC_DEFUN([gl_FLOAT_H], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST])
  FLOAT_H=
  REPLACE_FLOAT_LDBL=0
  case "$host_os" in
    aix* | beos* | openbsd* | mirbsd* | irix*)
      FLOAT_H=float.h
      ;;
    freebsd* | dragonfly*)
      case "$host_cpu" in
changequote(,)dnl
        i[34567]86 )
changequote([,])dnl
          FLOAT_H=float.h
          ;;
        x86_64 )
          # On x86_64 systems, the C compiler may still be generating
          # 32-bit code.
          AC_COMPILE_IFELSE(
            [AC_LANG_SOURCE(
               [[#if defined __LP64__ || defined __x86_64__ || defined __amd64__
                  int ok;
                 #else
                  error fail
                 #endif
               ]])],
            [],
            [FLOAT_H=float.h])
          ;;
      esac
      ;;
    linux*)
      case "$host_cpu" in
        powerpc*)
          FLOAT_H=float.h
          ;;
      esac
      ;;
  esac
  case "$host_os" in
    aix* | freebsd* | dragonfly* | linux*)
      if test -n "$FLOAT_H"; then
        REPLACE_FLOAT_LDBL=1
      fi
      ;;
  esac

  dnl Test against glibc-2.7 Linux/SPARC64 bug.
  REPLACE_ITOLD=0
  AC_CACHE_CHECK([whether conversion from 'int' to 'long double' works],
    [gl_cv_func_itold_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
int i = -1;
volatile long double ld;
int main ()
{
  ld += i * 1.0L;
  if (ld > 0)
    return 1;
  return 0;
}]])],
        [gl_cv_func_itold_works=yes],
        [gl_cv_func_itold_works=no],
        [case "$host" in
           sparc*-*-linux*)
             AC_COMPILE_IFELSE(
               [AC_LANG_SOURCE(
                 [[#if defined __LP64__ || defined __arch64__
                    int ok;
                   #else
                    error fail
                   #endif
                 ]])],
               [gl_cv_func_itold_works="guessing no"],
               [gl_cv_func_itold_works="guessing yes"])
             ;;
                   # Guess yes on native Windows.
           mingw*) gl_cv_func_itold_works="guessing yes" ;;
           *)      gl_cv_func_itold_works="guessing yes" ;;
         esac
        ])
    ])
  case "$gl_cv_func_itold_works" in
    *no)
      REPLACE_ITOLD=1
      dnl We add the workaround to <float.h> but also to <math.h>,
      dnl to increase the chances that the fix function gets pulled in.
      FLOAT_H=float.h
      ;;
  esac

  if test -n "$FLOAT_H"; then
    gl_NEXT_HEADERS([float.h])
  fi
  AC_SUBST([FLOAT_H])
  AM_CONDITIONAL([GL_GENERATE_FLOAT_H], [test -n "$FLOAT_H"])
  AC_SUBST([REPLACE_ITOLD])
])
m4trace:m4/fnmatch.m4:12: -1- AC_DEFUN([gl_FUNC_FNMATCH_POSIX], [
  m4_divert_text([DEFAULTS], [gl_fnmatch_required=POSIX])

  AC_REQUIRE([gl_FNMATCH_H])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  gl_fnmatch_required_lowercase=`
    echo $gl_fnmatch_required | LC_ALL=C tr '[[A-Z]]' '[[a-z]]'
  `
  AC_CHECK_FUNCS_ONCE([fnmatch])
  if test $ac_cv_func_fnmatch = no; then
    HAVE_FNMATCH=0
  else
    gl_fnmatch_cache_var="gl_cv_func_fnmatch_${gl_fnmatch_required_lowercase}"
    AC_CACHE_CHECK([for working $gl_fnmatch_required fnmatch],
      [$gl_fnmatch_cache_var],
      [dnl Some versions of Solaris, SCO, and the GNU C Library
       dnl have a broken or incompatible fnmatch.
       dnl So we run a test program.  If we are cross-compiling, take no chance.
       dnl Thanks to John Oleynick, François Pinard, and Paul Eggert for this
       dnl test.
       if test $gl_fnmatch_required = GNU; then
         gl_fnmatch_gnu_start=
         gl_fnmatch_gnu_end=
       else
         gl_fnmatch_gnu_start='#if 0'
         gl_fnmatch_gnu_end='#endif'
       fi
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <fnmatch.h>
              static int
              y (char const *pattern, char const *string, int flags)
              {
                return fnmatch (pattern, string, flags) == 0;
              }
              static int
              n (char const *pattern, char const *string, int flags)
              {
                return fnmatch (pattern, string, flags) == FNM_NOMATCH;
              }
            ]],
            [[char const *Apat = 'A' < '\\\\' ? "[A-\\\\\\\\]" : "[\\\\\\\\-A]";
              char const *apat = 'a' < '\\\\' ? "[a-\\\\\\\\]" : "[\\\\\\\\-a]";
              static char const A_1[] = { 'A' - 1, 0 };
              static char const A01[] = { 'A' + 1, 0 };
              static char const a_1[] = { 'a' - 1, 0 };
              static char const a01[] = { 'a' + 1, 0 };
              static char const bs_1[] = { '\\\\' - 1, 0 };
              static char const bs01[] = { '\\\\' + 1, 0 };
              int result = 0;
              if (!n ("a*", "", 0))
                return 1;
              if (!y ("a*", "abc", 0))
                return 1;
              if (!y ("[/b", "[/b", 0)) /*"]]"*/ /* glibc Bugzilla bug 12378 */
                return 1;
              if (!n ("d*/*1", "d/s/1", FNM_PATHNAME))
                return 2;
              if (!y ("a\\\\bc", "abc", 0))
                return 3;
              if (!n ("a\\\\bc", "abc", FNM_NOESCAPE))
                return 3;
              if (!y ("*x", ".x", 0))
                return 4;
              if (!n ("*x", ".x", FNM_PERIOD))
                return 4;
              if (!y (Apat, "\\\\", 0))
                return 5;
              if (!y (Apat, "A", 0))
                return 5;
              if (!y (apat, "\\\\", 0))
                return 5;
              if (!y (apat, "a", 0))
                return 5;
              if (!(n (Apat, A_1, 0) == ('A' < '\\\\')))
                return 5;
              if (!(n (apat, a_1, 0) == ('a' < '\\\\')))
                return 5;
              if (!(y (Apat, A01, 0) == ('A' < '\\\\')))
                return 5;
              if (!(y (apat, a01, 0) == ('a' < '\\\\')))
                return 5;
              if (!(y (Apat, bs_1, 0) == ('A' < '\\\\')))
                return 5;
              if (!(y (apat, bs_1, 0) == ('a' < '\\\\')))
                return 5;
              if (!(n (Apat, bs01, 0) == ('A' < '\\\\')))
                return 5;
              if (!(n (apat, bs01, 0) == ('a' < '\\\\')))
                return 5;
              $gl_fnmatch_gnu_start
              if (!y ("xxXX", "xXxX", FNM_CASEFOLD))
                result |= 8;
              if (!y ("a++(x|yy)b", "a+xyyyyxb", FNM_EXTMATCH))
                result |= 16;
              if (!n ("d*/*1", "d/s/1", FNM_FILE_NAME))
                result |= 32;
              if (!y ("*", "x", FNM_FILE_NAME | FNM_LEADING_DIR))
                result |= 64;
              if (!y ("x*", "x/y/z", FNM_FILE_NAME | FNM_LEADING_DIR))
                result |= 64;
              if (!y ("*c*", "c/x", FNM_FILE_NAME | FNM_LEADING_DIR))
                result |= 64;
              $gl_fnmatch_gnu_end
              return result;
            ]])],
         [eval "$gl_fnmatch_cache_var=yes"],
         [eval "$gl_fnmatch_cache_var=no"],
         [case "$host_os" in
                     # Guess yes on musl systems.
            *-musl*) eval "$gl_fnmatch_cache_var=\"guessing yes\"" ;;
                     # Guess no otherwise, even on glibc systems.
            *)       eval "$gl_fnmatch_cache_var=\"guessing no\"" ;;
          esac
         ])
      ])
    eval "gl_fnmatch_result=\"\$$gl_fnmatch_cache_var\""
    case "$gl_fnmatch_result" in
      *yes) ;;
      *) REPLACE_FNMATCH=1 ;;
    esac
  fi
  if test $HAVE_FNMATCH = 0 || test $REPLACE_FNMATCH = 1; then
    gl_REPLACE_FNMATCH_H
  fi
])
m4trace:m4/fnmatch.m4:141: -1- AC_DEFUN([gl_FUNC_FNMATCH_GNU], [
  m4_divert_text([INIT_PREPARE], [gl_fnmatch_required=GNU])

  AC_REQUIRE([gl_FUNC_FNMATCH_POSIX])
])
m4trace:m4/fnmatch.m4:148: -1- AC_DEFUN([gl_PREREQ_FNMATCH], [
  dnl Prerequisites of lib/fnmatch.c.
  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  AC_CHECK_FUNCS_ONCE([mbsrtowcs])
])
m4trace:m4/fnmatch_h.m4:9: -1- AC_DEFUN_ONCE([gl_FNMATCH_H], [
  AC_REQUIRE([gl_FNMATCH_H_DEFAULTS])
  m4_ifdef([gl_ANSI_CXX], [AC_REQUIRE([gl_ANSI_CXX])])
  AC_CHECK_HEADERS_ONCE([fnmatch.h])
  gl_CHECK_NEXT_HEADERS([fnmatch.h])

  dnl Persuade glibc <fnmatch.h> to declare FNM_CASEFOLD etc.
  dnl This is only needed if gl_fnmatch_required = GNU. It would be possible
  dnl to avoid this dependency for gl_FUNC_FNMATCH_POSIX by putting
  dnl gl_FUNC_FNMATCH_GNU into a separate .m4 file.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  if test $ac_cv_header_fnmatch_h = yes; then
    HAVE_FNMATCH_H=1
  else
    HAVE_FNMATCH_H=0
  fi
  AC_SUBST([HAVE_FNMATCH_H])

  m4_ifdef([gl_POSIXCHECK],
    [FNMATCH_H=fnmatch.h],
    [FNMATCH_H=''
     if m4_ifdef([gl_ANSI_CXX], [test "$CXX" != no], [false]); then
       dnl Override <fnmatch.h> always, to support the C++ GNULIB_NAMESPACE.
       FNMATCH_H=fnmatch.h
     else
       if test $ac_cv_header_fnmatch_h != yes; then
         dnl Provide a substitute <fnmatch.h> file.
         FNMATCH_H=fnmatch.h
       fi
     fi
    ])
  AC_SUBST([FNMATCH_H])
  AM_CONDITIONAL([GL_GENERATE_FNMATCH_H], [test -n "$FNMATCH_H"])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <fnmatch.h>
    ]],
    [fnmatch])
])
m4trace:m4/fnmatch_h.m4:53: -1- AC_DEFUN([gl_REPLACE_FNMATCH_H], [
  gl_FNMATCH_H_REQUIRE_DEFAULTS
  FNMATCH_H='fnmatch.h'
  AM_CONDITIONAL([GL_GENERATE_FNMATCH_H], [test -n "$FNMATCH_H"])
])
m4trace:m4/fnmatch_h.m4:64: -1- AC_DEFUN([gl_FNMATCH_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_FNMATCH_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/fnmatch_h.m4:76: -1- AC_DEFUN([gl_FNMATCH_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_FNMATCH_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FNMATCH])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_FNMATCH_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_FNMATCH_H_DEFAULTS])
])
m4trace:m4/fnmatch_h.m4:85: -1- AC_DEFUN([gl_FNMATCH_H_DEFAULTS], [
  dnl Assume POSIX behavior unless another module says otherwise.
  HAVE_FNMATCH=1;            AC_SUBST([HAVE_FNMATCH])
  REPLACE_FNMATCH=0;         AC_SUBST([REPLACE_FNMATCH])
])
m4trace:m4/fpieee.m4:25: -1- AC_DEFUN([gl_FP_IEEE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST])
  # IEEE behaviour is the default on all CPUs except Alpha and SH
  # (according to the test results of Bruno Haible's ieeefp/fenv_default.m4
  # and the GCC 4.1.2 manual).
  case "$host_cpu" in
    alpha*)
      # On Alpha systems, a compiler option provides the behaviour.
      # See the ieee(3) manual page, also available at
      # <https://backdrift.org/man/tru64/man3/ieee.3.html>
      if test -n "$GCC"; then
        # GCC has the option -mieee.
        # For full IEEE compliance (rarely needed), use option -mieee-with-inexact.
        CPPFLAGS="$CPPFLAGS -mieee"
      else
        # Compaq (ex-DEC) C has the option -ieee, equivalent to -ieee_with_no_inexact.
        # For full IEEE compliance (rarely needed), use option -ieee_with_inexact.
        CPPFLAGS="$CPPFLAGS -ieee"
      fi
      ;;
    sh*)
      if test -n "$GCC"; then
        # GCC has the option -mieee.
        CPPFLAGS="$CPPFLAGS -mieee"
      fi
      ;;
  esac
])
m4trace:m4/free.m4:9: -1- AC_DEFUN([gl_FUNC_FREE], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

  dnl In the next release of POSIX, free must preserve errno.
  dnl https://www.austingroupbugs.net/view.php?id=385
  dnl https://sourceware.org/bugzilla/show_bug.cgi?id=17924
  dnl So far, we know of three platforms that do this:
  dnl * glibc >= 2.33, thanks to the fix for this bug:
  dnl   <https://sourceware.org/bugzilla/show_bug.cgi?id=17924>
  dnl * OpenBSD >= 4.5, thanks to this commit:
  dnl   <https://cvsweb.openbsd.org/cgi-bin/cvsweb/src/lib/libc/stdlib/malloc.c.diff?r1=1.100&r2=1.101&f=h>
  dnl * Solaris, because its malloc() implementation is based on brk(),
  dnl   not mmap(); hence its free() implementation makes no system calls.
  dnl For other platforms, you can only be sure if they state it in their
  dnl documentation, or by code inspection of the free() implementation in libc.
  AC_CACHE_CHECK([whether free is known to preserve errno],
    [gl_cv_func_free_preserves_errno],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
          ]],
          [[#if 2 < __GLIBC__ + (33 <= __GLIBC_MINOR__)
            #elif defined __OpenBSD__
            #elif defined __sun
            #else
              #error "'free' is not known to preserve errno"
            #endif
          ]])],
       [gl_cv_func_free_preserves_errno=yes],
       [gl_cv_func_free_preserves_errno=no])
    ])

  case $gl_cv_func_free_preserves_errno in
   *yes)
    AC_DEFINE([HAVE_FREE_POSIX], [1],
      [Define if the 'free' function is guaranteed to preserve errno.])
    ;;
   *) REPLACE_FREE=1 ;;
  esac
])
m4trace:m4/free.m4:52: -1- AC_DEFUN([gl_PREREQ_FREE], [:])
m4trace:m4/frexp.m4:7: -1- AC_DEFUN([gl_FUNC_FREXP], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_FREXP_NO_LIBM])
  FREXP_LIBM=
  if test $gl_cv_func_frexp_no_libm = no; then
    AC_CACHE_CHECK([whether frexp() can be used with libm],
      [gl_cv_func_frexp_in_libm],
      [
        save_LIBS="$LIBS"
        LIBS="$LIBS -lm"
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <math.h>
               double x;]],
             [[int e; return frexp (x, &e) > 0;]])],
          [gl_cv_func_frexp_in_libm=yes],
          [gl_cv_func_frexp_in_libm=no])
        LIBS="$save_LIBS"
      ])
    if test $gl_cv_func_frexp_in_libm = yes; then
      FREXP_LIBM=-lm
    fi
  fi
  if test $gl_cv_func_frexp_no_libm = yes \
     || test $gl_cv_func_frexp_in_libm = yes; then
    save_LIBS="$LIBS"
    LIBS="$LIBS $FREXP_LIBM"
    gl_FUNC_FREXP_WORKS
    LIBS="$save_LIBS"
    case "$gl_cv_func_frexp_works" in
      *yes) gl_func_frexp=yes ;;
      *)    gl_func_frexp=no; REPLACE_FREXP=1; FREXP_LIBM= ;;
    esac
  else
    gl_func_frexp=no
  fi
  if test $gl_func_frexp = yes; then
    AC_DEFINE([HAVE_FREXP], [1],
      [Define if the frexp() function is available and works.])
  fi
  AC_SUBST([FREXP_LIBM])
])
m4trace:m4/frexp.m4:51: -1- AC_DEFUN([gl_FUNC_FREXP_NO_LIBM], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_FREXP_NO_LIBM])
  if test $gl_cv_func_frexp_no_libm = yes; then
    gl_FUNC_FREXP_WORKS
    case "$gl_cv_func_frexp_works" in
      *yes) gl_func_frexp_no_libm=yes ;;
      *)    gl_func_frexp_no_libm=no; REPLACE_FREXP=1 ;;
    esac
  else
    gl_func_frexp_no_libm=no
    dnl Set REPLACE_FREXP here because the system may have frexp in libm.
    REPLACE_FREXP=1
  fi
  if test $gl_func_frexp_no_libm = yes; then
    AC_DEFINE([HAVE_FREXP_IN_LIBC], [1],
      [Define if the frexp() function is available in libc.])
  fi
])
m4trace:m4/frexp.m4:74: -1- AC_DEFUN([gl_CHECK_FREXP_NO_LIBM], [
  AC_CACHE_CHECK([whether frexp() can be used without linking with libm],
    [gl_cv_func_frexp_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             double x;]],
           [[int e; return frexp (x, &e) > 0;]])],
        [gl_cv_func_frexp_no_libm=yes],
        [gl_cv_func_frexp_no_libm=no])
    ])
])
m4trace:m4/frexp.m4:92: -1- AC_DEFUN([gl_FUNC_FREXP_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_DECLS_ONCE([alarm])
  AC_CACHE_CHECK([whether frexp works], [gl_cv_func_frexp_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <math.h>
#include <string.h>
#if HAVE_DECL_ALARM
# include <signal.h>
# include <unistd.h>
#endif
/* HP cc on HP-UX 10.20 has a bug with the constant expression -0.0.
   ICC 10.0 has a bug when optimizing the expression -zero.
   The expression -DBL_MIN * DBL_MIN does not work when cross-compiling
   to PowerPC on Mac OS X 10.5.  */
#if defined __hpux || defined __sgi || defined __ICC
static double
compute_minus_zero (void)
{
  return -DBL_MIN * DBL_MIN;
}
# define minus_zero compute_minus_zero ()
#else
double minus_zero = -0.0;
#endif
int main()
{
  int result = 0;
  int i;
  volatile double x;
  double zero = 0.0;
#if HAVE_DECL_ALARM
  /* NeXTstep 3.3 frexp() runs into an endless loop when called on an infinite
     number.  Let the test fail in this case.  */
  signal (SIGALRM, SIG_DFL);
  alarm (5);
#endif
  /* Test on denormalized numbers.  */
  for (i = 1, x = 1.0; i >= DBL_MIN_EXP; i--, x *= 0.5)
    ;
  if (x > 0.0)
    {
      int exp;
      double y = frexp (x, &exp);
      /* On machines with IEEE754 arithmetic: x = 1.11254e-308, exp = -1022.
         On NetBSD: y = 0.75. Correct: y = 0.5.  */
      if (y != 0.5)
        result |= 1;
    }
  /* Test on infinite numbers.  */
  x = 1.0 / zero;
  {
    int exp;
    double y = frexp (x, &exp);
    if (y != x)
      result |= 2;
  }
  /* Test on negative zero.  */
  x = minus_zero;
  {
    int exp;
    double y = frexp (x, &exp);
    if (memcmp (&y, &x, sizeof x))
      result |= 4;
  }
  return result;
}]])],
        [gl_cv_func_frexp_works=yes],
        [gl_cv_func_frexp_works=no],
        [case "$host_os" in
           netbsd* | irix*) gl_cv_func_frexp_works="guessing no" ;;
           mingw*) # Guess yes with MSVC, no with mingw.
             AC_EGREP_CPP([Good], [
#ifdef _MSC_VER
 Good
#endif
               ],
               [gl_cv_func_frexp_works="guessing yes"],
               [gl_cv_func_frexp_works="guessing no"])
             ;;
           *) gl_cv_func_frexp_works="guessing yes" ;;
         esac
        ])
    ])
])
m4trace:m4/frexpf.m4:7: -1- AC_DEFUN([gl_FUNC_FREXPF], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_FREXP])

  dnl Persuade glibc <math.h> to declare frexpf().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl Test whether frexpf() exists. We cannot assume that frexpf(), if it
  dnl exists, is defined in the same library as frexp(). This is not the case
  dnl on NetBSD, OpenBSD.
  gl_MATHFUNC([frexpf], [float], [(float, int *)])
  if test $gl_cv_func_frexpf_no_libm = yes \
     || test $gl_cv_func_frexpf_in_libm = yes; then
    save_LIBS="$LIBS"
    LIBS="$LIBS $FREXPF_LIBM"
    gl_FUNC_FREXPF_WORKS
    LIBS="$save_LIBS"
    case "$gl_cv_func_frexpf_works" in
      *yes) ;;
      *)    REPLACE_FREXPF=1 ;;
    esac
  else
    HAVE_FREXPF=0
  fi
  if test $HAVE_FREXPF = 0 || test $REPLACE_FREXPF = 1; then
    FREXPF_LIBM="$FREXP_LIBM"
  fi
  AC_SUBST([FREXPF_LIBM])
])
m4trace:m4/frexpf.m4:40: -1- AC_DEFUN([gl_FUNC_FREXPF_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether frexpf works], [gl_cv_func_frexpf_works],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <float.h>
#include <math.h>
#include <string.h>
/* HP cc on HP-UX 10.20 has a bug with the constant expression -0.0.
   ICC 10.0 has a bug when optimizing the expression -zero.
   The expression -FLT_MIN * FLT_MIN does not work when cross-compiling
   to PowerPC on Mac OS X 10.5.  */
#if defined __hpux || defined __sgi || defined __ICC
static float
compute_minus_zero (void)
{
  return -FLT_MIN * FLT_MIN;
}
# define minus_zero compute_minus_zero ()
#else
float minus_zero = -0.0f;
#endif
int main()
{
  int result = 0;
  volatile float x;
  float zero = 0.0f;
  /* Test on infinite numbers.  */
  x = 1.0f / zero;
  {
    int exp;
    float y = frexpf (x, &exp);
    if (y != x)
      result |= 1;
  }
  /* Test on negative zero.  */
  x = minus_zero;
  {
    int exp;
    float y = frexpf (x, &exp);
    if (memcmp (&y, &x, sizeof x))
      result |= 2;
  }
  return result;
}]])],
        [gl_cv_func_frexpf_works=yes],
        [gl_cv_func_frexpf_works=no],
        [case "$host_os" in
           irix*) gl_cv_func_frexpf_works="guessing no" ;;
           mingw*) # Guess yes with MSVC, no with mingw.
             AC_EGREP_CPP([Good], [
#ifdef _MSC_VER
 Good
#endif
               ],
               [gl_cv_func_frexpf_works="guessing yes"],
               [gl_cv_func_frexpf_works="guessing no"])
             ;;
           *) gl_cv_func_frexpf_works="guessing yes" ;;
         esac
        ])
    ])
])
m4trace:m4/fseek.m4:7: -1- AC_DEFUN([gl_FUNC_FSEEK], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_FSEEKO])
  dnl When fseeko needs fixes, fseek needs them too.
  if test $HAVE_FSEEKO = 0 || test $REPLACE_FSEEKO = 1; then
    REPLACE_FSEEK=1
  fi
])
m4trace:m4/fseeko.m4:7: -1- AC_DEFUN([gl_FUNC_FSEEKO], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([gl_STDIN_LARGE_OFFSET])
  AC_REQUIRE([gl_SYS_TYPES_H])
  AC_REQUIRE([AC_PROG_CC])

  dnl Persuade glibc <stdio.h> to declare fseeko().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CACHE_CHECK([for fseeko], [gl_cv_func_fseeko],
    [
      AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>
]], [[fseeko (stdin, 0, 0);]])],
        [gl_cv_func_fseeko=yes], [gl_cv_func_fseeko=no])
    ])

  AC_CHECK_DECLS_ONCE([fseeko])
  if test $ac_cv_have_decl_fseeko = no; then
    HAVE_DECL_FSEEKO=0
  fi

  if test $gl_cv_func_fseeko = no; then
    HAVE_FSEEKO=0
  else
    if test $WINDOWS_64_BIT_OFF_T = 1; then
      REPLACE_FSEEKO=1
    fi
    if test $gl_cv_var_stdin_large_offset = no; then
      REPLACE_FSEEKO=1
    fi
    m4_ifdef([gl_FUNC_FFLUSH_STDIN], [
      gl_FUNC_FFLUSH_STDIN
      case "$gl_cv_func_fflush_stdin" in
        *yes) ;;
        *) REPLACE_FSEEKO=1 ;;
      esac
    ])
  fi
])
m4trace:m4/fseeko.m4:50: -1- AC_DEFUN([gl_STDIN_LARGE_OFFSET], [
    AC_CACHE_CHECK([whether stdin defaults to large file offsets],
      [gl_cv_var_stdin_large_offset],
      [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>]],
[[#if defined __SL64 && defined __SCLE /* cygwin */
  /* Cygwin 1.5.24 and earlier fail to put stdin in 64-bit mode, making
     fseeko/ftello needlessly fail.  This bug was fixed in 1.5.25, and
     it is easier to do a version check than building a runtime test.  */
# include <cygwin/version.h>
# if CYGWIN_VERSION_DLL_COMBINED < CYGWIN_VERSION_DLL_MAKE_COMBINED (1005, 25)
  choke me
# endif
#endif]])],
        [gl_cv_var_stdin_large_offset=yes],
        [gl_cv_var_stdin_large_offset=no])])
])
m4trace:m4/fseeko.m4:69: -1- AC_DEFUN([gl_PREREQ_FSEEKO], [
  dnl Native Windows has the function _fseeki64. mingw hides it in some
  dnl circumstances, but mingw64 makes it usable again.
  AC_CHECK_FUNCS([_fseeki64])
  if test $ac_cv_func__fseeki64 = yes; then
    AC_CHECK_DECLS([_fseeki64])
  fi
])
m4trace:m4/fstat.m4:7: -1- AC_DEFUN([gl_FUNC_FSTAT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])

  case "$host_os" in
    mingw* | solaris*)
      dnl On MinGW, the original stat() returns st_atime, st_mtime,
      dnl st_ctime values that are affected by the time zone.
      dnl Solaris stat can return a negative tv_nsec.
      REPLACE_FSTAT=1
      ;;
  esac

  dnl Replace fstat() for supporting the gnulib-defined open() on directories.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      case "$gl_cv_func_open_directory_works" in
        *yes) ;;
        *)
          REPLACE_FSTAT=1
          ;;
      esac
    fi
  ])
])
m4trace:m4/fstat.m4:36: -1- AC_DEFUN([gl_PREREQ_FSTAT], [
  AC_REQUIRE([gl_SYS_STAT_H])
  AC_REQUIRE([gl_PREREQ_STAT_W32])
  :
])
m4trace:m4/fstatat.m4:11: -1- AC_DEFUN([gl_FUNC_FSTATAT], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([fstatat])

  if test $ac_cv_func_fstatat = no; then
    HAVE_FSTATAT=0
  else
    dnl Test for an AIX 7.1 bug; see
    dnl <https://lists.gnu.org/r/bug-tar/2011-09/msg00015.html>.
    AC_CACHE_CHECK([whether fstatat (..., 0) works],
      [gl_cv_func_fstatat_zero_flag],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE(
            [[
              #include <fcntl.h>
              #include <sys/stat.h>
              int
              main (void)
              {
                struct stat a;
                return fstatat (AT_FDCWD, ".", &a, 0) != 0;
              }
            ]])],
         [gl_cv_func_fstatat_zero_flag=yes],
         [gl_cv_func_fstatat_zero_flag=no],
         [case "$host_os" in
            aix*) gl_cv_func_fstatat_zero_flag="guessing no";;
            *)    gl_cv_func_fstatat_zero_flag="guessing yes";;
          esac
         ])
      ])

    case $gl_cv_func_fstatat_zero_flag+$gl_cv_func_lstat_dereferences_slashed_symlink in
    *yes+*yes) ;;
    *) REPLACE_FSTATAT=1 ;;
    esac

    case $host_os in
      solaris*)
        REPLACE_FSTATAT=1 ;;
    esac

    case $REPLACE_FSTATAT,$gl_cv_func_fstatat_zero_flag in
      1,*yes)
         AC_DEFINE([HAVE_WORKING_FSTATAT_ZERO_FLAG], [1],
           [Define to 1 if fstatat (..., 0) works.
            For example, it does not work in AIX 7.1.])
         ;;
    esac
  fi
])
m4trace:m4/ftell.m4:7: -1- AC_DEFUN([gl_FUNC_FTELL], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_FTELLO])
  dnl When ftello needs fixes, ftell needs them too.
  if test $HAVE_FTELLO = 0 || test $REPLACE_FTELLO = 1; then
    REPLACE_FTELL=1
  fi
])
m4trace:m4/ftello.m4:7: -1- AC_DEFUN([gl_FUNC_FTELLO], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_STDIN_LARGE_OFFSET])
  AC_REQUIRE([gl_SYS_TYPES_H])

  dnl Persuade glibc <stdio.h> to declare ftello().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_DECLS_ONCE([ftello])
  if test $ac_cv_have_decl_ftello = no; then
    HAVE_DECL_FTELLO=0
  fi

  AC_CACHE_CHECK([for ftello], [gl_cv_func_ftello],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <stdio.h>]],
           [[ftello (stdin);]])],
        [gl_cv_func_ftello=yes],
        [gl_cv_func_ftello=no])
    ])
  if test $gl_cv_func_ftello = no; then
    HAVE_FTELLO=0
  else
    if test $WINDOWS_64_BIT_OFF_T = 1; then
      REPLACE_FTELLO=1
    fi
    if test $gl_cv_var_stdin_large_offset = no; then
      REPLACE_FTELLO=1
    fi
    if test $REPLACE_FTELLO = 0; then
      dnl Detect bug on Solaris.
      dnl ftell and ftello produce incorrect results after putc that followed a
      dnl getc call that reached EOF on Solaris. This is because the _IOREAD
      dnl flag does not get cleared in this case, even though _IOWRT gets set,
      dnl and ftell and ftello look whether the _IOREAD flag is set.
      AC_REQUIRE([AC_CANONICAL_HOST])
      AC_CACHE_CHECK([whether ftello works],
        [gl_cv_func_ftello_works],
        [
          dnl Initial guess, used when cross-compiling or when /dev/tty cannot
          dnl be opened.
changequote(,)dnl
          case "$host_os" in
                      # Guess no on Solaris.
            solaris*) gl_cv_func_ftello_works="guessing no" ;;
                      # Guess yes on native Windows.
            mingw*)   gl_cv_func_ftello_works="guessing yes" ;;
                      # Guess yes otherwise.
            *)        gl_cv_func_ftello_works="guessing yes" ;;
          esac
changequote([,])dnl
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define TESTFILE "conftest.tmp"
int
main (void)
{
  FILE *fp;

  /* Create a file with some contents.  */
  fp = fopen (TESTFILE, "w");
  if (fp == NULL)
    return 70;
  if (fwrite ("foogarsh", 1, 8, fp) < 8)
    { fclose (fp); return 71; }
  if (fclose (fp))
    return 72;

  /* The file's contents is now "foogarsh".  */

  /* Try writing after reading to EOF.  */
  fp = fopen (TESTFILE, "r+");
  if (fp == NULL)
    return 73;
  if (fseek (fp, -1, SEEK_END))
    { fclose (fp); return 74; }
  if (!(getc (fp) == 'h'))
    { fclose (fp); return 1; }
  if (!(getc (fp) == EOF))
    { fclose (fp); return 2; }
  if (!(ftell (fp) == 8))
    { fclose (fp); return 3; }
  if (!(ftell (fp) == 8))
    { fclose (fp); return 4; }
  if (!(putc ('!', fp) == '!'))
    { fclose (fp); return 5; }
  if (!(ftell (fp) == 9))
    { fclose (fp); return 6; }
  if (!(fclose (fp) == 0))
    return 7;
  fp = fopen (TESTFILE, "r");
  if (fp == NULL)
    return 75;
  {
    char buf[10];
    if (!(fread (buf, 1, 10, fp) == 9))
      { fclose (fp); return 10; }
    if (!(memcmp (buf, "foogarsh!", 9) == 0))
      { fclose (fp); return 11; }
  }
  if (!(fclose (fp) == 0))
    return 12;

  /* The file's contents is now "foogarsh!".  */

  return 0;
}]])],
            [gl_cv_func_ftello_works=yes],
            [gl_cv_func_ftello_works=no], [:])
        ])
      case "$gl_cv_func_ftello_works" in
        *yes) ;;
        *)
          REPLACE_FTELLO=1
          AC_DEFINE([FTELLO_BROKEN_AFTER_SWITCHING_FROM_READ_TO_WRITE], [1],
            [Define to 1 if the system's ftello function has the Solaris bug.])
          ;;
      esac
    fi
    if test $REPLACE_FTELLO = 0; then
      dnl Detect bug on macOS >= 10.15.
      gl_FUNC_UNGETC_WORKS
      if test $gl_ftello_broken_after_ungetc = yes; then
        REPLACE_FTELLO=1
        AC_DEFINE([FTELLO_BROKEN_AFTER_UNGETC], [1],
          [Define to 1 if the system's ftello function has the macOS bug.])
      fi
    fi
  fi
])
m4trace:m4/ftello.m4:146: -1- AC_DEFUN([gl_PREREQ_FTELLO], [
  dnl Native Windows has the function _ftelli64. mingw hides it, but mingw64
  dnl makes it usable again.
  AC_CHECK_FUNCS([_ftelli64])
])
m4trace:m4/ftruncate.m4:10: -1- AC_DEFUN([gl_FUNC_FTRUNCATE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([ftruncate])
  if test $ac_cv_func_ftruncate = yes; then
    m4_ifdef([gl_LARGEFILE], [
      AC_REQUIRE([AC_CANONICAL_HOST])
      case "$host_os" in
        mingw*)
          dnl Native Windows, and Large File Support is requested.
          dnl The MSVCRT _chsize() function only accepts a 32-bit file size,
          dnl and the mingw64 ftruncate64() function is unreliable (it may
          dnl delete the file, see
          dnl <https://web.archive.org/web/20160425005423/http://mingw-w64.sourcearchive.com/documentation/2.0-1/ftruncate64_8c_source.html>).
          dnl Use gnulib's ftruncate() implementation instead.
          REPLACE_FTRUNCATE=1
          ;;
      esac
    ], [
      :
    ])
  else
    HAVE_FTRUNCATE=0
  fi
])
m4trace:m4/ftruncate.m4:37: -1- AC_DEFUN([gl_PREREQ_FTRUNCATE], [
  AC_CHECK_FUNCS([_chsize])
])
m4trace:m4/getcwd-abort-bug.m4:14: -1- AC_DEFUN([gl_FUNC_GETCWD_ABORT_BUG], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_DECLS_ONCE([getcwd])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_REQUIRE([gl_PATHMAX_SNIPPET_PREREQ])

  gl_CHECK_FUNC_GETPAGESIZE
  if test $gl_cv_func_getpagesize = yes; then
    AC_DEFINE_UNQUOTED([HAVE_GETPAGESIZE], [1],
      [Define to 1 if the system has the 'getpagesize' function.])
  fi

  AC_CACHE_CHECK([whether getcwd succeeds when 4k < cwd_length < 16k],
    [gl_cv_func_getcwd_succeeds_beyond_4k],
    [# Remove any remnants of a previous test.
     rm -rf confdir-14B---
     # Arrange for deletion of the temporary directory this test creates.
     ac_clean_files="$ac_clean_files confdir-14B---"
     dnl Please keep this in sync with tests/test-getcwd.c.
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE(
          [[
#include <errno.h>
#include <stdlib.h>
#if HAVE_UNISTD_H
# include <unistd.h>
#else /* on Windows with MSVC */
# include <direct.h>
#endif
#include <string.h>
#include <sys/stat.h>

]gl_PATHMAX_SNIPPET[
]GL_MDA_DEFINES[

#ifndef S_IRWXU
# define S_IRWXU 0700
#endif

/* FIXME: skip the run-test altogether on systems without getpagesize.  */
#if ! HAVE_GETPAGESIZE
# define getpagesize() 0
#endif

/* This size is chosen to be larger than PATH_MAX (4k), yet smaller than
   the 16kB pagesize on ia64 linux.  Those conditions make the code below
   trigger a bug in glibc's getcwd implementation before 2.4.90-10.  */
#define TARGET_LEN (5 * 1024)

int
main ()
{
  char *cwd;
  size_t initial_cwd_len;
  int fail = 0;

  /* The bug is triggered when PATH_MAX < getpagesize (), so skip
     this relatively expensive and invasive test if that's not true.  */
#ifdef PATH_MAX
  int bug_possible = PATH_MAX < getpagesize ();
#else
  int bug_possible = 0;
#endif
  if (! bug_possible)
    return 0;

  cwd = getcwd (NULL, 0);
  if (cwd == NULL)
    return 2;

  initial_cwd_len = strlen (cwd);
  free (cwd);

  if (1)
    {
      static char const dir_name[] = "confdir-14B---";
      size_t desired_depth = ((TARGET_LEN - 1 - initial_cwd_len)
                              / sizeof dir_name);
      size_t d;
      for (d = 0; d < desired_depth; d++)
        {
          if (mkdir (dir_name, S_IRWXU) < 0 || chdir (dir_name) < 0)
            {
              if (! (errno == ERANGE || errno == ENAMETOOLONG
                     || errno == ENOENT))
                fail = 3; /* Unable to construct deep hierarchy.  */
              break;
            }
        }

      /* If libc has the bug in question, this invocation of getcwd
         results in a failed assertion.  */
      cwd = getcwd (NULL, 0);
      if (cwd == NULL)
        fail = 4; /* getcwd didn't assert, but it failed for a long name
                     where the answer could have been learned.  */
      free (cwd);

      /* Call rmdir first, in case the above chdir failed.  */
      rmdir (dir_name);
      while (0 < d--)
        {
          if (chdir ("..") < 0)
            {
              fail = 5;
              break;
            }
          rmdir (dir_name);
        }
    }

  return fail;
}
          ]])],
       [gl_cv_func_getcwd_succeeds_beyond_4k=yes],
       [dnl An abort will provoke an exit code of something like 134 (128 + 6).
        dnl An exit code of 4 can also occur (for example in
        dnl musl libc 1.2.2/powerpc64le, NetBSD 9.0, OpenBSD 6.7:
        dnl getcwd (NULL, 0) fails rather than returning a string longer than
        dnl PATH_MAX.  This may be POSIX compliant (in some interpretations of
        dnl POSIX).  But gnulib's getcwd module wants to provide a non-NULL
        dnl value in this case.
        ret=$?
        if test $ret -ge 128 || test $ret = 4; then
          gl_cv_func_getcwd_succeeds_beyond_4k=no
        else
          gl_cv_func_getcwd_succeeds_beyond_4k=yes
        fi
       ],
       [case "$host_os" in
             # Guess no otherwise, even on glibc systems and musl systems.
          *) gl_cv_func_getcwd_succeeds_beyond_4k="guessing no"
        esac
       ])
    ])
  case "$gl_cv_func_getcwd_succeeds_beyond_4k" in
    *no)
      $1
      ;;
    *)
      $2
      ;;
  esac
])
m4trace:m4/getcwd-path-max.m4:16: -1- AC_DEFUN([gl_FUNC_GETCWD_PATH_MAX], [
  AC_CHECK_DECLS_ONCE([getcwd])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_REQUIRE([gl_PATHMAX_SNIPPET_PREREQ])
  AC_CACHE_CHECK([whether getcwd handles long file names properly],
    [gl_cv_func_getcwd_path_max],
    [# Arrange for deletion of the temporary directory this test creates.
     ac_clean_files="$ac_clean_files confdir3"
     dnl Please keep this in sync with tests/test-getcwd.c.
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE(
          [[
#include <errno.h>
#include <stdlib.h>
#if HAVE_UNISTD_H
# include <unistd.h>
#else
# include <direct.h>
#endif
#include <string.h>
#include <limits.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <fcntl.h>

]gl_PATHMAX_SNIPPET[

#ifndef AT_FDCWD
# define AT_FDCWD 0
#endif
#ifdef ENAMETOOLONG
# define is_ENAMETOOLONG(x) ((x) == ENAMETOOLONG)
#else
# define is_ENAMETOOLONG(x) 0
#endif

/* Use the getcwd function, not any macro.  */
#undef getcwd

]GL_MDA_DEFINES[

#ifndef S_IRWXU
# define S_IRWXU 0700
#endif

/* The length of this name must be 8.  */
#define DIR_NAME "confdir3"
#define DIR_NAME_LEN 8
#define DIR_NAME_SIZE (DIR_NAME_LEN + 1)

/* The length of "../".  */
#define DOTDOTSLASH_LEN 3

/* Leftover bytes in the buffer, to work around library or OS bugs.  */
#define BUF_SLOP 20

int
main ()
{
#ifndef PATH_MAX
  /* The Hurd doesn't define this, so getcwd can't exhibit the bug --
     at least not on a local file system.  And if we were to start worrying
     about remote file systems, we'd have to enable the wrapper function
     all of the time, just to be safe.  That's not worth the cost.  */
  exit (0);
#elif ((INT_MAX / (DIR_NAME_SIZE / DOTDOTSLASH_LEN + 1) \
        - DIR_NAME_SIZE - BUF_SLOP) \
       <= PATH_MAX)
  /* FIXME: Assuming there's a system for which this is true,
     this should be done in a compile test.  */
  exit (0);
#else
  char buf[PATH_MAX * (DIR_NAME_SIZE / DOTDOTSLASH_LEN + 1)
           + DIR_NAME_SIZE + BUF_SLOP];
  char *cwd = getcwd (buf, PATH_MAX);
  size_t initial_cwd_len;
  size_t cwd_len;
  int fail = 0;
  size_t n_chdirs = 0;

  if (cwd == NULL)
    exit (10);

  cwd_len = initial_cwd_len = strlen (cwd);

  while (1)
    {
      size_t dotdot_max = PATH_MAX * (DIR_NAME_SIZE / DOTDOTSLASH_LEN);
      char *c = NULL;

      cwd_len += DIR_NAME_SIZE;
      /* If mkdir or chdir fails, it could be that this system cannot create
         any file with an absolute name longer than PATH_MAX, such as cygwin.
         If so, leave fail as 0, because the current working directory can't
         be too long for getcwd if it can't even be created.  On Linux with
         the 9p file system, mkdir fails with error EINVAL when cwd_len gets
         too long; ignore this failure because the getcwd() system call
         produces good results whereas the gnulib substitute calls getdents64
         which fails with error EPROTO.
         For other errors, be pessimistic and consider that as a failure,
         too.  */
      if (mkdir (DIR_NAME, S_IRWXU) < 0 || chdir (DIR_NAME) < 0)
        {
          if (! (errno == ERANGE || is_ENAMETOOLONG (errno)))
            #ifdef __linux__
            if (! (errno == EINVAL))
            #endif
              fail = 20;
          break;
        }

      if (PATH_MAX <= cwd_len && cwd_len < PATH_MAX + DIR_NAME_SIZE)
        {
          struct stat sb;

          c = getcwd (buf, PATH_MAX);
          if (!c && errno == ENOENT)
            {
              fail = 11;
              break;
            }
          if (c)
            {
              fail = 31;
              break;
            }
          if (! (errno == ERANGE || is_ENAMETOOLONG (errno)))
            {
              fail = 21;
              break;
            }

          /* Our replacement needs to be able to stat() long ../../paths,
             so generate a path larger than PATH_MAX to check,
             avoiding the replacement if we can't stat().  */
          c = getcwd (buf, cwd_len + 1);
          if (c && !AT_FDCWD && stat (c, &sb) != 0 && is_ENAMETOOLONG (errno))
            {
              fail = 32;
              break;
            }
        }

      if (dotdot_max <= cwd_len - initial_cwd_len)
        {
          if (dotdot_max + DIR_NAME_SIZE < cwd_len - initial_cwd_len)
            break;
          c = getcwd (buf, cwd_len + 1);
          if (!c)
            {
              if (! (errno == ERANGE || errno == ENOENT
                     || is_ENAMETOOLONG (errno)))
                {
                  fail = 22;
                  break;
                }
              if (AT_FDCWD || errno == ERANGE || errno == ENOENT)
                {
                  fail = 12;
                  break;
                }
            }
        }

      if (c && strlen (c) != cwd_len)
        {
          fail = 23;
          break;
        }
      ++n_chdirs;
    }

  /* Leaving behind such a deep directory is not polite.
     So clean up here, right away, even though the driving
     shell script would also clean up.  */
  {
    size_t i;

    /* Try rmdir first, in case the chdir failed.  */
    rmdir (DIR_NAME);
    for (i = 0; i <= n_chdirs; i++)
      {
        if (chdir ("..") < 0)
          break;
        if (rmdir (DIR_NAME) != 0)
          break;
      }
  }

  exit (fail);
#endif
}
          ]])],
       [gl_cv_func_getcwd_path_max=yes],
       [case $? in
        10|11|12) gl_cv_func_getcwd_path_max='no, but it is partly working';;
        31) gl_cv_func_getcwd_path_max='no, it has the AIX bug';;
        32) gl_cv_func_getcwd_path_max='yes, but with shorter paths';;
        *) gl_cv_func_getcwd_path_max=no;;
        esac],
       [# Cross-compilation guesses:
        case "$host_os" in
          aix*) # On AIX, it has the AIX bug.
            gl_cv_func_getcwd_path_max='guessing no, it has the AIX bug' ;;
          gnu*) # On Hurd, it is 'yes'.
            gl_cv_func_getcwd_path_max='guessing yes' ;;
          linux* | kfreebsd*)
            # On older Linux+glibc it's 'no, but it is partly working',
            # on newer Linux+glibc it's 'yes'.
            # On Linux+musl libc, it's 'no, but it is partly working'.
            # On kFreeBSD+glibc, it's 'no, but it is partly working'.
            gl_cv_func_getcwd_path_max='guessing no, but it is partly working' ;;
          *) # If we don't know, obey --enable-cross-guesses.
            gl_cv_func_getcwd_path_max="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
])
m4trace:m4/getcwd.m4:11: -1- AC_DEFUN([gl_FUNC_GETCWD_NULL], [
   AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
   AC_CHECK_HEADERS_ONCE([unistd.h])
   AC_CACHE_CHECK([whether getcwd (NULL, 0) allocates memory for result],
     [gl_cv_func_getcwd_null],
     [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#	 include <stdlib.h>
#        if HAVE_UNISTD_H
#         include <unistd.h>
#        else /* on Windows with MSVC */
#         include <direct.h>
#        endif
         ]GL_MDA_DEFINES[
#        ifndef getcwd
         char *getcwd ();
#        endif
]], [[
#if defined _WIN32 && ! defined __CYGWIN__
/* mingw cwd does not start with '/', but _getcwd does allocate.
   However, mingw fails to honor non-zero size.  */
#else
           if (chdir ("/") != 0)
             return 1;
           else
             {
               char *f = getcwd (NULL, 0);
               if (! f)
                 return 2;
               if (f[0] != '/')
                 { free (f); return 3; }
               if (f[1] != '\0')
                 { free (f); return 4; }
               free (f);
               return 0;
             }
#endif
         ]])],
        [gl_cv_func_getcwd_null=yes],
        [gl_cv_func_getcwd_null=no],
        [[case "$host_os" in
                           # Guess yes on glibc systems.
            *-gnu* | gnu*) gl_cv_func_getcwd_null="guessing yes";;
                           # Guess yes on musl systems.
            *-musl*)       gl_cv_func_getcwd_null="guessing yes";;
                           # Guess yes on Cygwin.
            cygwin*)       gl_cv_func_getcwd_null="guessing yes";;
                           # If we don't know, obey --enable-cross-guesses.
            *)             gl_cv_func_getcwd_null="$gl_cross_guess_normal";;
          esac
        ]])])
])
m4trace:m4/getcwd.m4:64: -1- AC_DEFUN([gl_FUNC_GETCWD_SIGNATURE], [
  AC_CACHE_CHECK([for getcwd with POSIX signature],
    [gl_cv_func_getcwd_posix_signature],
    [AC_COMPILE_IFELSE(
      [AC_LANG_PROGRAM(
         [[#include <unistd.h>
         ]GL_MDA_DEFINES],
         [[extern
           #ifdef __cplusplus
           "C"
           #endif
           char *getcwd (char *, size_t);
         ]])
      ],
      [gl_cv_func_getcwd_posix_signature=yes],
      [gl_cv_func_getcwd_posix_signature=no])
   ])
])
m4trace:m4/getcwd.m4:91: -1- AC_DEFUN([gl_FUNC_GETCWD_LGPL], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_GETCWD_NULL])
  AC_REQUIRE([gl_FUNC_GETCWD_SIGNATURE])

  case $gl_cv_func_getcwd_null,$gl_cv_func_getcwd_posix_signature in
  *yes,yes) ;;
  *)
    dnl Minimal replacement lib/getcwd-lgpl.c.
    REPLACE_GETCWD=1
    ;;
  esac
])
m4trace:m4/getcwd.m4:108: -1- AC_DEFUN([gl_FUNC_GETCWD], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_GETCWD_NULL])
  AC_REQUIRE([gl_FUNC_GETCWD_SIGNATURE])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  gl_abort_bug=no
  case "$host_os" in
    mingw*)
      gl_cv_func_getcwd_path_max=yes
      ;;
    *)
      gl_FUNC_GETCWD_PATH_MAX
      case "$gl_cv_func_getcwd_null" in
        *yes)
          gl_FUNC_GETCWD_ABORT_BUG([gl_abort_bug=yes])
          ;;
      esac
      ;;
  esac
  dnl Define HAVE_MINIMALLY_WORKING_GETCWD and HAVE_PARTLY_WORKING_GETCWD
  dnl if appropriate.
  case "$gl_cv_func_getcwd_path_max" in
    *"no" | *"no, it has the AIX bug") ;;
    *)
      AC_DEFINE([HAVE_MINIMALLY_WORKING_GETCWD], [1],
        [Define to 1 if getcwd minimally works, that is, its result can be
         trusted when it succeeds.])
      ;;
  esac
  case "$gl_cv_func_getcwd_path_max" in
    *"no, but it is partly working")
      AC_DEFINE([HAVE_PARTLY_WORKING_GETCWD], [1],
        [Define to 1 if getcwd works, except it sometimes fails when it
         shouldn't, setting errno to ERANGE, ENAMETOOLONG, or ENOENT.])
      ;;
    *"yes, but with shorter paths")
      AC_DEFINE([HAVE_GETCWD_SHORTER], [1],
        [Define to 1 if getcwd works, but with shorter paths
         than is generally tested with the replacement.])
      ;;
  esac

  if { case "$gl_cv_func_getcwd_null" in *yes) false;; *) true;; esac; } \
     || test $gl_cv_func_getcwd_posix_signature != yes \
     || { case "$gl_cv_func_getcwd_path_max" in *yes*) false;; *) true;; esac; } \
     || test $gl_abort_bug = yes; then
    REPLACE_GETCWD=1
  fi
])
m4trace:m4/getcwd.m4:161: -1- AC_DEFUN([gl_PREREQ_GETCWD], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_DIRENT_D_INO])
  :
])
m4trace:m4/getdtablesize.m4:7: -1- AC_DEFUN([gl_FUNC_GETDTABLESIZE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([getdtablesize])
  AC_CHECK_DECLS_ONCE([getdtablesize])
  if test $ac_cv_func_getdtablesize = yes &&
     test $ac_cv_have_decl_getdtablesize = yes; then
    AC_CACHE_CHECK([whether getdtablesize works],
      [gl_cv_func_getdtablesize_works],
      [dnl There are two concepts: the "maximum possible file descriptor value + 1"
       dnl and the "maximum number of open file descriptors in a process".
       dnl Per SUSv2 and POSIX, getdtablesize() should return the first one.
       dnl On most platforms, the first and the second concept are the same.
       dnl On OpenVMS, however, they are different and getdtablesize() returns
       dnl the second one; thus the test below fails. But we don't care
       dnl because there's no good way to write a replacement getdtablesize().
       case "$host_os" in
         vms*) gl_cv_func_getdtablesize_works="no (limitation)" ;;
         *)
           dnl Cygwin 1.7.25 automatically increases the RLIMIT_NOFILE soft
           dnl limit up to an unchangeable hard limit; all other platforms
           dnl correctly require setrlimit before getdtablesize() can report
           dnl a larger value.
           AC_RUN_IFELSE([
             AC_LANG_PROGRAM(
               [[#include <unistd.h>]
                GL_MDA_DEFINES
               ],
               [[int size = getdtablesize();
                 if (dup2 (0, getdtablesize()) != -1)
                   return 1;
                 if (size != getdtablesize())
                   return 2;
               ]])],
             [gl_cv_func_getdtablesize_works=yes],
             [gl_cv_func_getdtablesize_works=no],
             [case "$host_os" in
                cygwin*) # on cygwin 1.5.25, getdtablesize() automatically grows
                  gl_cv_func_getdtablesize_works="guessing no" ;;
                *) gl_cv_func_getdtablesize_works="guessing yes" ;;
              esac
             ])
           ;;
       esac
      ])
    case "$gl_cv_func_getdtablesize_works" in
      *yes | "no (limitation)") ;;
      *) REPLACE_GETDTABLESIZE=1 ;;
    esac
  else
    HAVE_GETDTABLESIZE=0
  fi
])
m4trace:m4/getdtablesize.m4:63: -1- AC_DEFUN([gl_PREREQ_GETDTABLESIZE], [:])
m4trace:m4/gethostname.m4:10: -1- AC_DEFUN([gl_FUNC_GETHOSTNAME], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  gl_PREREQ_SYS_H_WINSOCK2

  dnl Where is gethostname() defined?
  dnl - On native Windows, it is in ws2_32.dll.
  dnl - Otherwise it is in libc.
  GETHOSTNAME_LIB=
  AC_CHECK_FUNCS([gethostname], , [
    AC_CACHE_CHECK([for gethostname in winsock2.h and -lws2_32],
      [gl_cv_w32_gethostname],
      [gl_cv_w32_gethostname=no
       gl_save_LIBS="$LIBS"
       LIBS="$LIBS -lws2_32"
       AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#ifdef HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
#include <stddef.h>
]], [[gethostname(NULL, 0);]])], [gl_cv_w32_gethostname=yes])
       LIBS="$gl_save_LIBS"
      ])
    if test "$gl_cv_w32_gethostname" = "yes"; then
      GETHOSTNAME_LIB="-lws2_32"
    fi
  ])
  AC_SUBST([GETHOSTNAME_LIB])

  if test "$ac_cv_func_gethostname" = no; then
    HAVE_GETHOSTNAME=0
  fi

  gl_PREREQ_HOST_NAME_MAX
])
m4trace:m4/gethostname.m4:47: -1- AC_DEFUN([gl_PREREQ_HOST_NAME_MAX], [
  dnl - On most Unix systems, use MAXHOSTNAMELEN from <sys/param.h> instead.
  dnl - On Solaris, Cygwin, BeOS, use MAXHOSTNAMELEN from <netdb.h> instead.
  dnl - On mingw, use 256, because
  dnl   <https://docs.microsoft.com/en-us/windows/desktop/api/winsock/nf-winsock-gethostname> says:
  dnl   "if a buffer of 256 bytes is passed in the name parameter and
  dnl    the namelen parameter is set to 256, the buffer size will always
  dnl    be adequate."
  dnl With this, there is no need to use sysconf (_SC_HOST_NAME_MAX), which
  dnl is not a compile-time constant.
  dnl We cannot override <limits.h> using the usual technique, because
  dnl gl_CHECK_NEXT_HEADERS does not work for <limits.h>. Therefore retrieve
  dnl the value of HOST_NAME_MAX at configure time.
  AC_CHECK_HEADERS_ONCE([sys/param.h])
  AC_CHECK_HEADERS_ONCE([sys/socket.h])
  AC_CHECK_HEADERS_ONCE([netdb.h])
  AC_CACHE_CHECK([for HOST_NAME_MAX], [gl_cv_decl_HOST_NAME_MAX], [
    gl_cv_decl_HOST_NAME_MAX=
    AC_EGREP_CPP([lucky], [
#include <limits.h>
#ifdef HOST_NAME_MAX
lucky
#endif
      ], [gl_cv_decl_HOST_NAME_MAX=yes])
    if test -z "$gl_cv_decl_HOST_NAME_MAX"; then
      dnl It's not defined in <limits.h>. Substitute it.
      if test "$gl_cv_w32_gethostname" = yes; then
        dnl mingw.
        gl_cv_decl_HOST_NAME_MAX=256
      else
        AC_COMPUTE_INT([gl_cv_decl_HOST_NAME_MAX], [MAXHOSTNAMELEN], [
#include <sys/types.h>
#if HAVE_SYS_PARAM_H
# include <sys/param.h>
#endif
#if HAVE_SYS_SOCKET_H
# include <sys/socket.h>
#endif
#if HAVE_NETDB_H
# include <netdb.h>
#endif
],
          [dnl The system does not define MAXHOSTNAMELEN in any of the common
           dnl headers. Use a safe fallback.
           gl_cv_decl_HOST_NAME_MAX=256
          ])
      fi
    fi
  ])
  if test "$gl_cv_decl_HOST_NAME_MAX" != yes; then
    AC_DEFINE_UNQUOTED([HOST_NAME_MAX], [$gl_cv_decl_HOST_NAME_MAX],
      [Define HOST_NAME_MAX when <limits.h> does not define it.])
  fi
])
m4trace:m4/gethostname.m4:103: -1- AC_DEFUN([gl_PREREQ_GETHOSTNAME], [
  if test "$gl_cv_w32_gethostname" != "yes"; then
    AC_CHECK_FUNCS([uname])
  fi
])
m4trace:m4/getlogin.m4:7: -1- AC_DEFUN([gl_FUNC_GETLOGIN], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_CHECK_DECLS_ONCE([getlogin])
  if test $ac_cv_have_decl_getlogin = no; then
    HAVE_DECL_GETLOGIN=0
  fi
  AC_CHECK_FUNCS_ONCE([getlogin])
  if test $ac_cv_func_getlogin = no; then
    HAVE_GETLOGIN=0
  fi
])
m4trace:m4/getlogin.m4:22: -1- AC_DEFUN([gl_LIB_GETLOGIN], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case $host_os in
    mingw*)
      LIB_GETLOGIN='-ladvapi32' ;;
    *)
      LIB_GETLOGIN= ;;
  esac
  AC_SUBST([LIB_GETLOGIN])
])
m4trace:m4/getlogin_r.m4:14: -1- AC_DEFUN([gl_FUNC_GETLOGIN_R], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  dnl Persuade glibc <unistd.h> to declare getlogin_r().
  dnl Persuade Solaris <unistd.h> to provide the POSIX compliant declaration of
  dnl getlogin_r().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_DECLS_ONCE([getlogin_r])
  if test $ac_cv_have_decl_getlogin_r = no; then
    HAVE_DECL_GETLOGIN_R=0
  fi

  AC_CHECK_FUNCS_ONCE([getlogin_r])
  if test $ac_cv_func_getlogin_r = no; then
    HAVE_GETLOGIN_R=0
  else
    HAVE_GETLOGIN_R=1
    dnl On Mac OS X 10.13 and OSF/1 5.1, getlogin_r returns a truncated result
    dnl if the buffer is not large enough.
    AC_REQUIRE([AC_CANONICAL_HOST])
    AC_CACHE_CHECK([whether getlogin_r works with small buffers],
      [gl_cv_func_getlogin_r_works],
      [
        dnl Initial guess, used when cross-compiling.
changequote(,)dnl
        case "$host_os" in
                          # Guess no on Mac OS X, OSF/1.
          darwin* | osf*) gl_cv_func_getlogin_r_works="guessing no" ;;
                          # Guess yes otherwise.
          *)              gl_cv_func_getlogin_r_works="guessing yes" ;;
        esac
changequote([,])dnl
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <stddef.h>
#include <string.h>
#include <unistd.h>
#if !HAVE_DECL_GETLOGIN_R
extern
# ifdef __cplusplus
"C"
# endif
int getlogin_r (char *, size_t);
#endif
int
main (void)
{
  int result = 0;
  char buf[100];

  if (getlogin_r (buf, 0) == 0)
    result |= 1;
  if (getlogin_r (buf, 1) == 0)
    result |= 2;
  if (getlogin_r (buf, 100) == 0)
    {
      size_t n = strlen (buf);
      if (getlogin_r (buf, n) == 0)
        result |= 4;
    }
  return result;
}]])],
          [gl_cv_func_getlogin_r_works=yes],
          [gl_cv_func_getlogin_r_works=no],
          [:])
      ])
    case "$gl_cv_func_getlogin_r_works" in
      *yes) ;;
      *) REPLACE_GETLOGIN_R=1 ;;
    esac
  fi
])
m4trace:m4/getlogin_r.m4:89: -1- AC_DEFUN([gl_PREREQ_GETLOGIN_R], [
  AC_CHECK_DECLS_ONCE([getlogin])
])
m4trace:m4/getopt.m4:8: -1- AC_DEFUN([gl_FUNC_GETOPT_POSIX], [
  m4_divert_text([DEFAULTS], [gl_getopt_required=POSIX])
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_GETOPT_CHECK_HEADERS])
  dnl Other modules can request the gnulib implementation of the getopt
  dnl functions unconditionally, by defining gl_REPLACE_GETOPT_ALWAYS.
  dnl argp.m4 does this.
  m4_ifdef([gl_REPLACE_GETOPT_ALWAYS], [
    REPLACE_GETOPT=1
  ], [
    REPLACE_GETOPT=0
    if test -n "$gl_replace_getopt"; then
      REPLACE_GETOPT=1
    fi
  ])
  if test $REPLACE_GETOPT = 1; then
    dnl Arrange for getopt.h to be created.
    gl_GETOPT_SUBSTITUTE_HEADER
  fi
])
m4trace:m4/getopt.m4:33: -1- AC_DEFUN([gl_FUNC_GETOPT_GNU], [
  dnl Set the variable gl_getopt_required, so that all invocations of
  dnl gl_GETOPT_CHECK_HEADERS in the scope of the current configure file
  dnl will check for getopt with GNU extensions.
  dnl This means that if one gnulib-tool invocation requests getopt-posix
  dnl and another gnulib-tool invocation requests getopt-gnu, it is as if
  dnl both had requested getopt-gnu.
  m4_divert_text([INIT_PREPARE], [gl_getopt_required=GNU])

  dnl No need to invoke gl_FUNC_GETOPT_POSIX here; this is automatically
  dnl done through the module dependency getopt-gnu -> getopt-posix.
])
m4trace:m4/getopt.m4:48: -1- AC_DEFUN([gl_GETOPT_CHECK_HEADERS], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([AC_PROG_AWK]) dnl for awk that supports ENVIRON

  dnl Persuade Solaris <unistd.h> to declare optarg, optind, opterr, optopt.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  gl_CHECK_NEXT_HEADERS([getopt.h])
  if test $ac_cv_header_getopt_h = yes; then
    HAVE_GETOPT_H=1
  else
    HAVE_GETOPT_H=0
  fi
  AC_SUBST([HAVE_GETOPT_H])

  gl_replace_getopt=

  dnl Test whether <getopt.h> is available.
  if test -z "$gl_replace_getopt" && test $gl_getopt_required = GNU; then
    AC_CHECK_HEADERS([getopt.h], [], [gl_replace_getopt=yes])
  fi

  dnl Test whether the function getopt_long is available.
  if test -z "$gl_replace_getopt" && test $gl_getopt_required = GNU; then
    AC_CHECK_FUNCS([getopt_long_only], [], [gl_replace_getopt=yes])
  fi

  dnl POSIX 2008 does not specify leading '+' behavior, but see
  dnl http://austingroupbugs.net/view.php?id=191 for a recommendation on
  dnl the next version of POSIX.  For now, we only guarantee leading '+'
  dnl behavior with getopt-gnu.
  if test -z "$gl_replace_getopt"; then
    AC_CACHE_CHECK([whether getopt is POSIX compatible],
      [gl_cv_func_getopt_posix],
      [
        dnl Merging these three different test programs into a single one
        dnl would require a reset mechanism. On BSD systems, it can be done
        dnl through 'optreset'; on some others (glibc), it can be done by
        dnl setting 'optind' to 0; on others again (HP-UX, IRIX, OSF/1,
        dnl Solaris 9, musl libc), there is no such mechanism.
        if test $cross_compiling = no; then
          dnl Sanity check. Succeeds everywhere (except on MSVC,
          dnl which lacks <unistd.h> and getopt() entirely).
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

int
main ()
{
  static char program[] = "program";
  static char a[] = "-a";
  static char foo[] = "foo";
  static char bar[] = "bar";
  char *argv[] = { program, a, foo, bar, NULL };
  int c;

  c = getopt (4, argv, "ab");
  if (!(c == 'a'))
    return 1;
  c = getopt (4, argv, "ab");
  if (!(c == -1))
    return 2;
  if (!(optind == 2))
    return 3;
  return 0;
}
]])],
            [gl_cv_func_getopt_posix=maybe],
            [gl_cv_func_getopt_posix=no])
          if test $gl_cv_func_getopt_posix = maybe; then
            dnl Sanity check with '+'. Succeeds everywhere (except on MSVC,
            dnl which lacks <unistd.h> and getopt() entirely).
            AC_RUN_IFELSE(
              [AC_LANG_SOURCE([[
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

int
main ()
{
  static char program[] = "program";
  static char donald[] = "donald";
  static char p[] = "-p";
  static char billy[] = "billy";
  static char duck[] = "duck";
  static char a[] = "-a";
  static char bar[] = "bar";
  char *argv[] = { program, donald, p, billy, duck, a, bar, NULL };
  int c;

  c = getopt (7, argv, "+abp:q:");
  if (!(c == -1))
    return 4;
  if (!(strcmp (argv[0], "program") == 0))
    return 5;
  if (!(strcmp (argv[1], "donald") == 0))
    return 6;
  if (!(strcmp (argv[2], "-p") == 0))
    return 7;
  if (!(strcmp (argv[3], "billy") == 0))
    return 8;
  if (!(strcmp (argv[4], "duck") == 0))
    return 9;
  if (!(strcmp (argv[5], "-a") == 0))
    return 10;
  if (!(strcmp (argv[6], "bar") == 0))
    return 11;
  if (!(optind == 1))
    return 12;
  return 0;
}
]])],
              [gl_cv_func_getopt_posix=maybe],
              [gl_cv_func_getopt_posix=no])
          fi
          if test $gl_cv_func_getopt_posix = maybe; then
            dnl Detect Mac OS X 10.5, AIX 7.1, mingw bug.
            AC_RUN_IFELSE(
              [AC_LANG_SOURCE([[
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

int
main ()
{
  static char program[] = "program";
  static char ab[] = "-ab";
  char *argv[3] = { program, ab, NULL };
  if (getopt (2, argv, "ab:") != 'a')
    return 13;
  if (getopt (2, argv, "ab:") != '?')
    return 14;
  if (optopt != 'b')
    return 15;
  if (optind != 2)
    return 16;
  return 0;
}
]])],
              [gl_cv_func_getopt_posix=yes],
              [gl_cv_func_getopt_posix=no])
          fi
        else
          case "$host_os" in
            darwin* | aix* | mingw*) gl_cv_func_getopt_posix="guessing no";;
            *)                       gl_cv_func_getopt_posix="guessing yes";;
          esac
        fi
      ])
    case "$gl_cv_func_getopt_posix" in
      *no) gl_replace_getopt=yes ;;
    esac
  fi

  if test -z "$gl_replace_getopt" && test $gl_getopt_required = GNU; then
    AC_CACHE_CHECK([for working GNU getopt function], [gl_cv_func_getopt_gnu],
      [# Even with POSIXLY_CORRECT, the GNU extension of leading '-' in the
       # optstring is necessary for programs like m4 that have POSIX-mandated
       # semantics for supporting options interspersed with files.
       # Also, since getopt_long is a GNU extension, we require optind=0.
       # Bash ties 'set -o posix' to a non-exported POSIXLY_CORRECT;
       # so take care to revert to the correct (non-)export state.
dnl GNU Coding Standards currently allow awk but not env; besides, env
dnl is ambiguous with environment values that contain newlines.
       gl_awk_probe='BEGIN { if ("POSIXLY_CORRECT" in ENVIRON) print "x" }'
       case ${POSIXLY_CORRECT+x}`$AWK "$gl_awk_probe" </dev/null` in
         xx) gl_had_POSIXLY_CORRECT=exported ;;
         x)  gl_had_POSIXLY_CORRECT=yes      ;;
         *)  gl_had_POSIXLY_CORRECT=         ;;
       esac
       POSIXLY_CORRECT=1
       export POSIXLY_CORRECT
       AC_RUN_IFELSE(
        [AC_LANG_PROGRAM([[#include <getopt.h>
                           #include <stddef.h>
                           #include <string.h>
           ]GL_NOCRASH[
           ]], [[
             int result = 0;

             nocrash_init();

             /* This code succeeds on glibc 2.8, OpenBSD 4.0, Cygwin, mingw,
                and fails on Mac OS X 10.5, AIX 5.2, HP-UX 11, IRIX 6.5,
                OSF/1 5.1, Solaris 10.  */
             {
               static char conftest[] = "conftest";
               static char plus[] = "-+";
               char *argv[3] = { conftest, plus, NULL };
               opterr = 0;
               if (getopt (2, argv, "+a") != '?')
                 result |= 1;
             }
             /* This code succeeds on glibc 2.8, mingw,
                and fails on Mac OS X 10.5, OpenBSD 4.0, AIX 5.2, HP-UX 11,
                IRIX 6.5, OSF/1 5.1, Solaris 10, Cygwin 1.5.x.  */
             {
               static char program[] = "program";
               static char p[] = "-p";
               static char foo[] = "foo";
               static char bar[] = "bar";
               char *argv[] = { program, p, foo, bar, NULL };

               optind = 1;
               if (getopt (4, argv, "p::") != 'p')
                 result |= 2;
               else if (optarg != NULL)
                 result |= 4;
               else if (getopt (4, argv, "p::") != -1)
                 result |= 6;
               else if (optind != 2)
                 result |= 8;
             }
             /* This code succeeds on glibc 2.8 and fails on Cygwin 1.7.0.  */
             {
               static char program[] = "program";
               static char foo[] = "foo";
               static char p[] = "-p";
               char *argv[] = { program, foo, p, NULL };
               optind = 0;
               if (getopt (3, argv, "-p") != 1)
                 result |= 16;
               else if (getopt (3, argv, "-p") != 'p')
                 result |= 16;
             }
             /* This code fails on glibc 2.11.  */
             {
               static char program[] = "program";
               static char b[] = "-b";
               static char a[] = "-a";
               char *argv[] = { program, b, a, NULL };
               optind = opterr = 0;
               if (getopt (3, argv, "+:a:b") != 'b')
                 result |= 32;
               else if (getopt (3, argv, "+:a:b") != ':')
                 result |= 32;
             }
             /* This code dumps core on glibc 2.14.  */
             {
               static char program[] = "program";
               static char w[] = "-W";
               static char dummy[] = "dummy";
               char *argv[] = { program, w, dummy, NULL };
               optind = opterr = 1;
               if (getopt (3, argv, "W;") != 'W')
                 result |= 64;
             }
             return result;
           ]])],
        [gl_cv_func_getopt_gnu=yes],
        [gl_cv_func_getopt_gnu=no],
        [dnl Cross compiling.
         dnl Assume the worst, even on glibc platforms.
         dnl But obey --enable-cross-guesses.
         gl_cv_func_getopt_gnu="$gl_cross_guess_normal"
        ])
       case $gl_had_POSIXLY_CORRECT in
         exported) ;;
         yes) AS_UNSET([POSIXLY_CORRECT]); POSIXLY_CORRECT=1 ;;
         *) AS_UNSET([POSIXLY_CORRECT]) ;;
       esac
      ])
    if test "$gl_cv_func_getopt_gnu" != yes; then
      gl_replace_getopt=yes
    else
      AC_CACHE_CHECK([for working GNU getopt_long function],
        [gl_cv_func_getopt_long_gnu],
        [AC_RUN_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <getopt.h>
                #include <stddef.h>
                #include <string.h>
              ]],
              [[static const struct option long_options[] =
                  {
                    { "xtremely-",no_argument,       NULL, 1003 },
                    { "xtra",     no_argument,       NULL, 1001 },
                    { "xtreme",   no_argument,       NULL, 1002 },
                    { "xtremely", no_argument,       NULL, 1003 },
                    { NULL,       0,                 NULL, 0 }
                  };
                /* This code fails on OpenBSD 5.0.  */
                {
                  static char program[] = "program";
                  static char xtremel[] = "--xtremel";
                  char *argv[] = { program, xtremel, NULL };
                  int option_index;
                  optind = 1; opterr = 0;
                  if (getopt_long (2, argv, "", long_options, &option_index) != 1003)
                    return 1;
                }
                return 0;
              ]])],
           [gl_cv_func_getopt_long_gnu=yes],
           [gl_cv_func_getopt_long_gnu=no],
           [dnl Cross compiling. Guess no on OpenBSD, yes otherwise.
            case "$host_os" in
              openbsd*) gl_cv_func_getopt_long_gnu="guessing no";;
              *)        gl_cv_func_getopt_long_gnu="guessing yes";;
            esac
           ])
        ])
      case "$gl_cv_func_getopt_long_gnu" in
        *yes) ;;
        *) gl_replace_getopt=yes ;;
      esac
    fi
  fi
])
m4trace:m4/getopt.m4:364: -1- AC_DEFUN([gl_GETOPT_SUBSTITUTE_HEADER], [
  AC_CHECK_HEADERS_ONCE([sys/cdefs.h])
  if test $ac_cv_header_sys_cdefs_h = yes; then
    HAVE_SYS_CDEFS_H=1
  else
    HAVE_SYS_CDEFS_H=0
  fi
  AC_SUBST([HAVE_SYS_CDEFS_H])

  AC_DEFINE([__GETOPT_PREFIX], [[rpl_]],
    [Define to rpl_ if the getopt replacement functions and variables
     should be used.])
  GETOPT_H=getopt.h
  GETOPT_CDEFS_H=getopt-cdefs.h
  AC_SUBST([GETOPT_H])
  AC_SUBST([GETOPT_CDEFS_H])
])
m4trace:m4/getpagesize.m4:8: -1- AC_DEFUN([gl_FUNC_GETPAGESIZE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CHECK_FUNC_GETPAGESIZE
  if test $gl_cv_func_getpagesize = no; then
    HAVE_GETPAGESIZE=0
    AC_CHECK_HEADERS([OS.h])
    if test $ac_cv_header_OS_h = yes; then
      HAVE_OS_H=1
    fi
    AC_CHECK_HEADERS([sys/param.h])
    if test $ac_cv_header_sys_param_h = yes; then
      HAVE_SYS_PARAM_H=1
    fi
  fi
  case "$host_os" in
    mingw*)
      REPLACE_GETPAGESIZE=1
      ;;
  esac
  dnl Also check whether it's declared.
  dnl mingw has getpagesize() in libgcc.a but doesn't declare it.
  AC_CHECK_DECL([getpagesize], , [HAVE_DECL_GETPAGESIZE=0])
])
m4trace:m4/getpagesize.m4:36: -1- AC_DEFUN([gl_CHECK_FUNC_GETPAGESIZE], [
  dnl We can't use AC_CHECK_FUNC here, because getpagesize() is defined as a
  dnl static inline function when compiling for Android 4.4 or older.
  AC_CACHE_CHECK([for getpagesize], [gl_cv_func_getpagesize],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <unistd.h>]],
          [[return getpagesize();]])
       ],
       [gl_cv_func_getpagesize=yes],
       [gl_cv_func_getpagesize=no])
    ])
])
m4trace:m4/getprogname.m4:10: -1- AC_DEFUN([gl_FUNC_GETPROGNAME], [
  AC_CHECK_FUNCS_ONCE([getprogname getexecname])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  ac_found=0
  AC_CHECK_DECLS([program_invocation_name], [ac_found=1], [],
    [#include <errno.h>])
  AC_CHECK_DECLS([program_invocation_short_name], [ac_found=1], [],
    [#include <errno.h>])
  AC_CHECK_DECLS([__argv], [ac_found=1], [], [#include <stdlib.h>])

  # Incur the cost of this test only if none of the above worked.
  if test $ac_found = 0; then
    # On OpenBSD 5.1, using the global __progname variable appears to be
    # the only way to implement getprogname.
    AC_CACHE_CHECK([whether __progname is defined in default libraries],
      [gl_cv_var___progname],
      [
        gl_cv_var___progname=
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM(
            [[extern char *__progname;]],
            [[return *__progname;]]
          )],
          [gl_cv_var___progname=yes]
        )
      ]
    )
    if test "$gl_cv_var___progname" = yes; then
      AC_DEFINE([HAVE_VAR___PROGNAME], 1,
        [Define if you have a global __progname variable])
    fi
  fi
])
m4trace:m4/getrandom.m4:9: -1- AC_DEFUN([gl_FUNC_GETRANDOM], [
  AC_REQUIRE([gl_SYS_RANDOM_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([getrandom])
  if test "$ac_cv_func_getrandom" != yes; then
    HAVE_GETRANDOM=0
  else
    dnl On Solaris 11.4 the return type is 'int', not 'ssize_t'.
    AC_CACHE_CHECK([whether getrandom is compatible with its GNU+BSD signature],
      [gl_cv_func_getrandom_ok],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[/* Additional includes are needed before <sys/random.h> on uClibc
                 and Mac OS X.  */
              #include <sys/types.h>
              #include <stdlib.h>
              #include <sys/random.h>
              ssize_t getrandom (void *, size_t, unsigned int);
            ]],
            [[]])
         ],
         [gl_cv_func_getrandom_ok=yes],
         [gl_cv_func_getrandom_ok=no])
      ])
    if test $gl_cv_func_getrandom_ok = no; then
      REPLACE_GETRANDOM=1
    fi
  fi

  case "$host_os" in
    mingw*)
      AC_CHECK_HEADERS([bcrypt.h], [], [],
        [[#include <windows.h>
        ]])
      AC_CACHE_CHECK([whether the bcrypt library is guaranteed to be present],
        [gl_cv_lib_assume_bcrypt],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <windows.h>]],
              [[#if !(_WIN32_WINNT >= _WIN32_WINNT_WIN7)
                  cannot assume it
                #endif
              ]])
           ],
           [gl_cv_lib_assume_bcrypt=yes],
           [gl_cv_lib_assume_bcrypt=no])
        ])
      if test $gl_cv_lib_assume_bcrypt = yes; then
        AC_DEFINE([HAVE_LIB_BCRYPT], [1],
          [Define to 1 if the bcrypt library is guaranteed to be present.])
        LIB_GETRANDOM='-lbcrypt'
      else
        LIB_GETRANDOM='-ladvapi32'
      fi
      ;;
    *)
      LIB_GETRANDOM= ;;
  esac
  AC_SUBST([LIB_GETRANDOM])
])
m4trace:m4/getrusage.m4:7: -1- AC_DEFUN([gl_FUNC_GETRUSAGE], [
  AC_REQUIRE([gl_SYS_RESOURCE_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([getrusage])
  if test $ac_cv_func_getrusage = no; then
    HAVE_GETRUSAGE=0
  fi
])
m4trace:m4/gettimeofday.m4:10: -1- AC_DEFUN([gl_FUNC_GETTIMEOFDAY], [
  AC_REQUIRE([gl_SYS_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_TIME_H])
  AC_CHECK_FUNCS_ONCE([gettimeofday])

  gl_gettimeofday_timezone=void
  if test $ac_cv_func_gettimeofday != yes; then
    HAVE_GETTIMEOFDAY=0
  else
    AC_CACHE_CHECK([for gettimeofday with POSIX signature],
      [gl_cv_func_gettimeofday_posix_signature],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/time.h>
              struct timeval c;
              int gettimeofday (struct timeval *restrict, void *restrict);
            ]],
            [[/* glibc uses struct timezone * rather than the POSIX void *
                 if _GNU_SOURCE is defined.  However, since the only portable
                 use of gettimeofday uses NULL as the second parameter, and
                 since the glibc definition is actually more typesafe, it is
                 not worth wrapping this to get a compliant signature.  */
              int (*f) (struct timeval *restrict, void *restrict)
                = gettimeofday;
              int x = f (&c, 0);
              return !(x | c.tv_sec | c.tv_usec);
            ]])],
          [gl_cv_func_gettimeofday_posix_signature=yes],
          [AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM(
              [[#include <sys/time.h>
int gettimeofday (struct timeval *restrict, struct timezone *restrict);
              ]])],
            [gl_cv_func_gettimeofday_posix_signature=almost],
            [gl_cv_func_gettimeofday_posix_signature=no])])])
    if test $gl_cv_func_gettimeofday_posix_signature = almost; then
      gl_gettimeofday_timezone='struct timezone'
    elif test $gl_cv_func_gettimeofday_posix_signature != yes; then
      REPLACE_GETTIMEOFDAY=1
    fi
    dnl If we override 'struct timeval', we also have to override gettimeofday.
    if test $REPLACE_STRUCT_TIMEVAL = 1; then
      REPLACE_GETTIMEOFDAY=1
    fi
    dnl On mingw, the original gettimeofday has only a precision of 15.6
    dnl milliseconds. So override it.
    case "$host_os" in
      mingw*) REPLACE_GETTIMEOFDAY=1 ;;
    esac
  fi
  AC_DEFINE_UNQUOTED([GETTIMEOFDAY_TIMEZONE], [$gl_gettimeofday_timezone],
    [Define this to 'void' or 'struct timezone' to match the system's
     declaration of the second argument to gettimeofday.])
])
m4trace:m4/gettimeofday.m4:69: -1- AC_DEFUN([gl_PREREQ_GETTIMEOFDAY], [:])
m4trace:m4/gl-openssl.m4:7: -1- AC_DEFUN([gl_SET_CRYPTO_CHECK_DEFAULT], [
  m4_define([gl_CRYPTO_CHECK_DEFAULT], [$1])
])
m4trace:m4/gl-openssl.m4:11: -1- gl_SET_CRYPTO_CHECK_DEFAULT([no])
m4trace:m4/gl-openssl.m4:13: -1- AC_DEFUN([gl_CRYPTO_CHECK], [
  dnl gnulib users set this before gl_INIT with gl_SET_CRYPTO_CHECK_DEFAULT()
  m4_divert_once([DEFAULTS], [with_openssl_default='gl_CRYPTO_CHECK_DEFAULT'])

  dnl Only clear once, so crypto routines can be checked for individually
  m4_divert_once([DEFAULTS], [LIB_CRYPTO=])

  AC_ARG_WITH([openssl],
    [[  --with-openssl[=ARG]    use libcrypto hash routines for the hash functions
                          MD5, SHA-1, SHA-224, SHA-256, SHA-384, SHA-512.
                          Valid ARGs are:
                            'yes',
                            'no',
                            'auto' => use if any version available,
                            'auto-gpl-compat' => use if GPL compatible version
                                                 available,
                            'optional' => use if available
                                          and warn if not available;
                          Default is ']gl_CRYPTO_CHECK_DEFAULT['.]m4_ifdef([gl_AF_ALG], [
                          Note also --with-linux-crypto, which will enable the
                          use of Linux kernel crypto routines (if available),
                          which has precedence for files.])],
    [],
    [with_openssl=$with_openssl_default])

  AC_SUBST([LIB_CRYPTO])
  if test "x$with_openssl" != xno; then
    if test "x$with_openssl" = xauto-gpl-compat; then
      AC_CACHE_CHECK([whether openssl is GPL compatible],
                     [gl_cv_openssl_gpl_compat],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([[
                #include <openssl/opensslv.h>
                #if OPENSSL_VERSION_MAJOR < 3
                  #error "openssl >= version 3 not found"
                #endif
              ]])],
           [gl_cv_openssl_gpl_compat=yes],
           [gl_cv_openssl_gpl_compat=no])])
    fi
    if test "x$with_openssl" != xauto-gpl-compat ||
       test "x$gl_cv_openssl_gpl_compat" = xyes; then
      AC_CHECK_LIB([crypto], [$1],
        [AC_CHECK_HEADERS(
           m4_if([$1], [MD5], [openssl/md5.h], [openssl/sha.h]),
           [LIB_CRYPTO=-lcrypto
            AC_DEFINE([HAVE_OPENSSL_$1], [1],
              [Define to 1 if libcrypto is used for $1.])])])
    fi
    if test "x$LIB_CRYPTO" = x; then
      message='openssl development library not found for $1.
  If you want to install it, first find the pre-built package name:
    - On Debian and Debian-based systems: libssl-dev,
    - On Red Hat distributions: openssl-devel.
    - Other: https://repology.org/project/openssl/versions'
      if test "x$with_openssl" = xyes; then
        AC_MSG_ERROR([$message])
      elif test "x$with_openssl" = xoptional; then
        AC_MSG_WARN([$message])
      fi
    fi
  fi
])
m4trace:m4/glob.m4:11: -1- AC_DEFUN([gl_GLOB], [
  AC_REQUIRE([gl_GLOB_H])

  AC_CHECK_FUNCS_ONCE([glob glob_pattern_p])
  if test $ac_cv_func_glob = no; then
    HAVE_GLOB=0
  else

    AC_CACHE_CHECK([for GNU glob interface version 1 or 2],
      [gl_cv_gnu_glob_interface_version_1_2],
[     AC_COMPILE_IFELSE([AC_LANG_SOURCE(
[[#include <gnu-versions.h>
char a[_GNU_GLOB_INTERFACE_VERSION == 1 || _GNU_GLOB_INTERFACE_VERSION == 2 ? 1 : -1];]])],
        [gl_cv_gnu_glob_interface_version_1_2=yes],
        [gl_cv_gnu_glob_interface_version_1_2=no])])
    if test "$gl_cv_gnu_glob_interface_version_1_2" = "no"; then
      REPLACE_GLOB=1
    fi

    if test $REPLACE_GLOB = 0; then
      AC_CACHE_CHECK([whether glob lists broken symlinks],
                     [gl_cv_glob_lists_symlinks],
        [if test $cross_compiling != yes; then
           if ln -s conf-doesntexist conf$$-globtest 2>/dev/null; then
             gl_cv_glob_lists_symlinks=maybe
           else
             # If we can't make a symlink, then we cannot test this issue.  Be
             # pessimistic about this.
             gl_cv_glob_lists_symlinks=no
           fi
           if test $gl_cv_glob_lists_symlinks = maybe; then
             AC_RUN_IFELSE(
               [AC_LANG_PROGRAM(
                  [[#include <stddef.h>
                    #include <glob.h>]],
                  [[glob_t found;
                    if (glob ("conf*-globtest", 0, NULL, &found) == GLOB_NOMATCH)
                      return 1;
                    globfree (&found);
                  ]])],
               [gl_cv_glob_lists_symlinks=yes],
               [gl_cv_glob_lists_symlinks=no],
               [dnl We don't get here.
                :
               ])
           fi
           rm -f conf$$-globtest
         else
           gl_cv_glob_lists_symlinks="$gl_cross_guess_normal"
         fi
        ])
      case "$gl_cv_glob_lists_symlinks" in
        *yes) ;;
        *) REPLACE_GLOB=1 ;;
      esac
    fi

  fi

  if test $ac_cv_func_glob_pattern_p = no; then
    HAVE_GLOB_PATTERN_P=0
  else
    if test $REPLACE_GLOB = 1; then
      REPLACE_GLOB_PATTERN_P=1
    fi
  fi

  if test $HAVE_GLOB = 0 || test $REPLACE_GLOB = 1; then
    gl_REPLACE_GLOB_H
  fi
])
m4trace:m4/glob.m4:85: -1- AC_DEFUN([gl_PREREQ_GLOB], [
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_DIRENT_D_TYPE])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_FUNCS_ONCE([getlogin_r getpwnam_r])
])
m4trace:m4/glob_h.m4:9: -1- AC_DEFUN_ONCE([gl_GLOB_H], [
  AC_REQUIRE([gl_GLOB_H_DEFAULTS])
  m4_ifdef([gl_ANSI_CXX], [AC_REQUIRE([gl_ANSI_CXX])])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CHECK_HEADERS_ONCE([glob.h])
  gl_CHECK_NEXT_HEADERS([glob.h])

  if test $ac_cv_header_glob_h = yes; then
    HAVE_GLOB_H=1
  else
    HAVE_GLOB_H=0
  fi
  AC_SUBST([HAVE_GLOB_H])

  m4_ifdef([gl_POSIXCHECK],
    [GLOB_H=glob.h],
    [GLOB_H=''
     if m4_ifdef([gl_ANSI_CXX], [test "$CXX" != no], [false]); then
       dnl Override <glob.h> always, to support the C++ GNULIB_NAMESPACE.
       GLOB_H=glob.h
     else
       if test $ac_cv_header_glob_h != yes; then
         dnl Provide a substitute <glob.h> file.
         GLOB_H=glob.h
       fi
     fi
    ])
  AC_SUBST([GLOB_H])
  AM_CONDITIONAL([GL_GENERATE_GLOB_H], [test -n "$GLOB_H"])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <glob.h>
    ]],
    [glob globfree glob_pattern_p])
])
m4trace:m4/glob_h.m4:48: -1- AC_DEFUN([gl_REPLACE_GLOB_H], [
  gl_GLOB_H_REQUIRE_DEFAULTS
  GLOB_H='glob.h'
  AM_CONDITIONAL([GL_GENERATE_GLOB_H], [test -n "$GLOB_H"])
])
m4trace:m4/glob_h.m4:59: -1- AC_DEFUN([gl_GLOB_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_GLOB_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/glob_h.m4:71: -1- AC_DEFUN([gl_GLOB_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_GLOB_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GLOB])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_GLOB_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_GLOB_H_DEFAULTS])
])
m4trace:m4/glob_h.m4:80: -1- AC_DEFUN([gl_GLOB_H_DEFAULTS], [
  dnl Assume POSIX and GNU behavior unless another module says otherwise.
  HAVE_GLOB=1;               AC_SUBST([HAVE_GLOB])
  HAVE_GLOB_PATTERN_P=1;     AC_SUBST([HAVE_GLOB_PATTERN_P])
  REPLACE_GLOB=0;            AC_SUBST([REPLACE_GLOB])
  REPLACE_GLOB_PATTERN_P=0;  AC_SUBST([REPLACE_GLOB_PATTERN_P])
])
m4trace:m4/gnulib-common.m4:11: -1- AC_DEFUN([gl_COMMON], [
  dnl Use AC_REQUIRE here, so that the code is expanded once only.
  AC_REQUIRE([gl_00GNULIB])
  AC_REQUIRE([gl_COMMON_BODY])
  AC_REQUIRE([gl_ZZGNULIB])
])
m4trace:m4/gnulib-common.m4:17: -1- AC_DEFUN([gl_COMMON_BODY], [
  AH_VERBATIM([_GL_GNUC_PREREQ],
[/* True if the compiler says it groks GNU C version MAJOR.MINOR.  */
#if defined __GNUC__ && defined __GNUC_MINOR__
# define _GL_GNUC_PREREQ(major, minor) \
    ((major) < __GNUC__ + ((minor) <= __GNUC_MINOR__))
#else
# define _GL_GNUC_PREREQ(major, minor) 0
#endif
])
  AH_VERBATIM([_Noreturn],
[/* The _Noreturn keyword of C11.  */
#ifndef _Noreturn
# if (defined __cplusplus \
      && ((201103 <= __cplusplus && !(__GNUC__ == 4 && __GNUC_MINOR__ == 7)) \
          || (defined _MSC_VER && 1900 <= _MSC_VER)) \
      && 0)
    /* [[noreturn]] is not practically usable, because with it the syntax
         extern _Noreturn void func (...);
       would not be valid; such a declaration would only be valid with 'extern'
       and '_Noreturn' swapped, or without the 'extern' keyword.  However, some
       AIX system header files and several gnulib header files use precisely
       this syntax with 'extern'.  */
#  define _Noreturn [[noreturn]]
# elif ((!defined __cplusplus || defined __clang__) \
        && (201112 <= (defined __STDC_VERSION__ ? __STDC_VERSION__ : 0) \
            || (!defined __STRICT_ANSI__ \
                && (_GL_GNUC_PREREQ (4, 7) \
                    || (defined __apple_build_version__ \
                        ? 6000000 <= __apple_build_version__ \
                        : 3 < __clang_major__ + (5 <= __clang_minor__))))))
   /* _Noreturn works as-is.  */
# elif _GL_GNUC_PREREQ (2, 8) || defined __clang__ || 0x5110 <= __SUNPRO_C
#  define _Noreturn __attribute__ ((__noreturn__))
# elif 1200 <= (defined _MSC_VER ? _MSC_VER : 0)
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn
# endif
#endif
])
  AH_VERBATIM([isoc99_inline],
[/* Work around a bug in Apple GCC 4.0.1 build 5465: In C99 mode, it supports
   the ISO C 99 semantics of 'extern inline' (unlike the GNU C semantics of
   earlier versions), but does not display it by setting __GNUC_STDC_INLINE__.
   __APPLE__ && __MACH__ test for Mac OS X.
   __APPLE_CC__ tests for the Apple compiler and its version.
   __STDC_VERSION__ tests for the C99 mode.  */
#if defined __APPLE__ && defined __MACH__ && __APPLE_CC__ >= 5465 && !defined __cplusplus && __STDC_VERSION__ >= 199901L && !defined __GNUC_STDC_INLINE__
# define __GNUC_STDC_INLINE__ 1
#endif])
  AH_VERBATIM([attribute],
[/* Attributes.  */
#if (defined __has_attribute \
     && (!defined __clang_minor__ \
         || 3 < __clang_major__ + (5 <= __clang_minor__)))
# define _GL_HAS_ATTRIBUTE(attr) __has_attribute (__##attr##__)
#else
# define _GL_HAS_ATTRIBUTE(attr) _GL_ATTR_##attr
# define _GL_ATTR_alloc_size _GL_GNUC_PREREQ (4, 3)
# define _GL_ATTR_always_inline _GL_GNUC_PREREQ (3, 2)
# define _GL_ATTR_artificial _GL_GNUC_PREREQ (4, 3)
# define _GL_ATTR_cold _GL_GNUC_PREREQ (4, 3)
# define _GL_ATTR_const _GL_GNUC_PREREQ (2, 95)
# define _GL_ATTR_deprecated _GL_GNUC_PREREQ (3, 1)
# define _GL_ATTR_diagnose_if 0
# define _GL_ATTR_error _GL_GNUC_PREREQ (4, 3)
# define _GL_ATTR_externally_visible _GL_GNUC_PREREQ (4, 1)
# define _GL_ATTR_fallthrough _GL_GNUC_PREREQ (7, 0)
# define _GL_ATTR_format _GL_GNUC_PREREQ (2, 7)
# define _GL_ATTR_leaf _GL_GNUC_PREREQ (4, 6)
# define _GL_ATTR_malloc _GL_GNUC_PREREQ (3, 0)
# ifdef _ICC
#  define _GL_ATTR_may_alias 0
# else
#  define _GL_ATTR_may_alias _GL_GNUC_PREREQ (3, 3)
# endif
# define _GL_ATTR_noinline _GL_GNUC_PREREQ (3, 1)
# define _GL_ATTR_nonnull _GL_GNUC_PREREQ (3, 3)
# define _GL_ATTR_nonstring _GL_GNUC_PREREQ (8, 0)
# define _GL_ATTR_nothrow _GL_GNUC_PREREQ (3, 3)
# define _GL_ATTR_packed _GL_GNUC_PREREQ (2, 7)
# define _GL_ATTR_pure _GL_GNUC_PREREQ (2, 96)
# define _GL_ATTR_returns_nonnull _GL_GNUC_PREREQ (4, 9)
# define _GL_ATTR_sentinel _GL_GNUC_PREREQ (4, 0)
# define _GL_ATTR_unused _GL_GNUC_PREREQ (2, 7)
# define _GL_ATTR_warn_unused_result _GL_GNUC_PREREQ (3, 4)
#endif

#ifdef __has_c_attribute
# define _GL_HAS_C_ATTRIBUTE(attr) __has_c_attribute (__##attr##__)
#else
# define _GL_HAS_C_ATTRIBUTE(attr) 0
#endif

]dnl There is no _GL_ATTRIBUTE_ALIGNED; use stdalign's _Alignas instead.
[
/* _GL_ATTRIBUTE_ALLOC_SIZE ((N)) declares that the Nth argument of the function
   is the size of the returned memory block.
   _GL_ATTRIBUTE_ALLOC_SIZE ((M, N)) declares that the Mth argument multiplied
   by the Nth argument of the function is the size of the returned memory block.
 */
/* Applies to: function, pointer to function, function types.  */
#if _GL_HAS_ATTRIBUTE (alloc_size)
# define _GL_ATTRIBUTE_ALLOC_SIZE(args) __attribute__ ((__alloc_size__ args))
#else
# define _GL_ATTRIBUTE_ALLOC_SIZE(args)
#endif

/* _GL_ATTRIBUTE_ALWAYS_INLINE tells that the compiler should always inline the
   function and report an error if it cannot do so.  */
/* Applies to: function.  */
#if _GL_HAS_ATTRIBUTE (always_inline)
# define _GL_ATTRIBUTE_ALWAYS_INLINE __attribute__ ((__always_inline__))
#else
# define _GL_ATTRIBUTE_ALWAYS_INLINE
#endif

/* _GL_ATTRIBUTE_ARTIFICIAL declares that the function is not important to show
    in stack traces when debugging.  The compiler should omit the function from
    stack traces.  */
/* Applies to: function.  */
#if _GL_HAS_ATTRIBUTE (artificial)
# define _GL_ATTRIBUTE_ARTIFICIAL __attribute__ ((__artificial__))
#else
# define _GL_ATTRIBUTE_ARTIFICIAL
#endif

/* _GL_ATTRIBUTE_COLD declares that the function is rarely executed.  */
/* Applies to: functions.  */
/* Avoid __attribute__ ((cold)) on MinGW; see thread starting at
   <https://lists.gnu.org/r/emacs-devel/2019-04/msg01152.html>.
   Also, Oracle Studio 12.6 requires 'cold' not '__cold__'.  */
#if _GL_HAS_ATTRIBUTE (cold) && !defined __MINGW32__
# ifndef __SUNPRO_C
#  define _GL_ATTRIBUTE_COLD __attribute__ ((__cold__))
# else
#  define _GL_ATTRIBUTE_COLD __attribute__ ((cold))
# endif
#else
# define _GL_ATTRIBUTE_COLD
#endif

/* _GL_ATTRIBUTE_CONST declares that it is OK for a compiler to omit duplicate
   calls to the function with the same arguments.
   This attribute is safe for a function that neither depends on nor affects
   observable state, and always returns exactly once - e.g., does not loop
   forever, and does not call longjmp.
   (This attribute is stricter than _GL_ATTRIBUTE_PURE.)  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (const)
# define _GL_ATTRIBUTE_CONST __attribute__ ((__const__))
#else
# define _GL_ATTRIBUTE_CONST
#endif

/* _GL_ATTRIBUTE_DEALLOC (F, I) declares that the function returns pointers
   that can be freed by passing them as the Ith argument to the
   function F.
   _GL_ATTRIBUTE_DEALLOC_FREE declares that the function returns pointers that
   can be freed via 'free'; it can be used only after declaring 'free'.  */
/* Applies to: functions.  Cannot be used on inline functions.  */
#if _GL_GNUC_PREREQ (11, 0)
# define _GL_ATTRIBUTE_DEALLOC(f, i) __attribute__ ((__malloc__ (f, i)))
#else
# define _GL_ATTRIBUTE_DEALLOC(f, i)
#endif
#define _GL_ATTRIBUTE_DEALLOC_FREE _GL_ATTRIBUTE_DEALLOC (free, 1)

/* _GL_ATTRIBUTE_DEPRECATED: Declares that an entity is deprecated.
   The compiler may warn if the entity is used.  */
/* Applies to:
     - function, variable,
     - struct, union, struct/union member,
     - enumeration, enumeration item,
     - typedef,
   in C++ also: namespace, class, template specialization.  */
#if _GL_HAS_C_ATTRIBUTE (deprecated)
# define _GL_ATTRIBUTE_DEPRECATED [[__deprecated__]]
#elif _GL_HAS_ATTRIBUTE (deprecated)
# define _GL_ATTRIBUTE_DEPRECATED __attribute__ ((__deprecated__))
#else
# define _GL_ATTRIBUTE_DEPRECATED
#endif

/* _GL_ATTRIBUTE_ERROR(msg) requests an error if a function is called and
   the function call is not optimized away.
   _GL_ATTRIBUTE_WARNING(msg) requests a warning if a function is called and
   the function call is not optimized away.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (error)
# define _GL_ATTRIBUTE_ERROR(msg) __attribute__ ((__error__ (msg)))
# define _GL_ATTRIBUTE_WARNING(msg) __attribute__ ((__warning__ (msg)))
#elif _GL_HAS_ATTRIBUTE (diagnose_if)
# define _GL_ATTRIBUTE_ERROR(msg) __attribute__ ((__diagnose_if__ (1, msg, "error")))
# define _GL_ATTRIBUTE_WARNING(msg) __attribute__ ((__diagnose_if__ (1, msg, "warning")))
#else
# define _GL_ATTRIBUTE_ERROR(msg)
# define _GL_ATTRIBUTE_WARNING(msg)
#endif

/* _GL_ATTRIBUTE_EXTERNALLY_VISIBLE declares that the entity should remain
   visible to debuggers etc., even with '-fwhole-program'.  */
/* Applies to: functions, variables.  */
#if _GL_HAS_ATTRIBUTE (externally_visible)
# define _GL_ATTRIBUTE_EXTERNALLY_VISIBLE __attribute__ ((externally_visible))
#else
# define _GL_ATTRIBUTE_EXTERNALLY_VISIBLE
#endif

/* _GL_ATTRIBUTE_FALLTHROUGH declares that it is not a programming mistake if
   the control flow falls through to the immediately following 'case' or
   'default' label.  The compiler should not warn in this case.  */
/* Applies to: Empty statement (;), inside a 'switch' statement.  */
/* Always expands to something.  */
#if _GL_HAS_C_ATTRIBUTE (fallthrough)
# define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]]
#elif _GL_HAS_ATTRIBUTE (fallthrough)
# define _GL_ATTRIBUTE_FALLTHROUGH __attribute__ ((__fallthrough__))
#else
# define _GL_ATTRIBUTE_FALLTHROUGH ((void) 0)
#endif

/* _GL_ATTRIBUTE_FORMAT ((ARCHETYPE, STRING-INDEX, FIRST-TO-CHECK))
   declares that the STRING-INDEXth function argument is a format string of
   style ARCHETYPE, which is one of:
     printf, gnu_printf
     scanf, gnu_scanf,
     strftime, gnu_strftime,
     strfmon,
   or the same thing prefixed and suffixed with '__'.
   If FIRST-TO-CHECK is not 0, arguments starting at FIRST-TO_CHECK
   are suitable for the format string.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (format)
# define _GL_ATTRIBUTE_FORMAT(spec) __attribute__ ((__format__ spec))
#else
# define _GL_ATTRIBUTE_FORMAT(spec)
#endif

/* _GL_ATTRIBUTE_LEAF declares that if the function is called from some other
   compilation unit, it executes code from that unit only by return or by
   exception handling.  This declaration lets the compiler optimize that unit
   more aggressively.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (leaf)
# define _GL_ATTRIBUTE_LEAF __attribute__ ((__leaf__))
#else
# define _GL_ATTRIBUTE_LEAF
#endif

/* _GL_ATTRIBUTE_MALLOC declares that the function returns a pointer to freshly
   allocated memory.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (malloc)
# define _GL_ATTRIBUTE_MALLOC __attribute__ ((__malloc__))
#else
# define _GL_ATTRIBUTE_MALLOC
#endif

/* _GL_ATTRIBUTE_MAY_ALIAS declares that pointers to the type may point to the
   same storage as pointers to other types.  Thus this declaration disables
   strict aliasing optimization.  */
/* Applies to: types.  */
/* Oracle Studio 12.6 mishandles may_alias despite __has_attribute OK.  */
#if _GL_HAS_ATTRIBUTE (may_alias) && !defined __SUNPRO_C
# define _GL_ATTRIBUTE_MAY_ALIAS __attribute__ ((__may_alias__))
#else
# define _GL_ATTRIBUTE_MAY_ALIAS
#endif

/* _GL_ATTRIBUTE_MAYBE_UNUSED declares that it is not a programming mistake if
   the entity is not used.  The compiler should not warn if the entity is not
   used.  */
/* Applies to:
     - function, variable,
     - struct, union, struct/union member,
     - enumeration, enumeration item,
     - typedef,
   in C++ also: class.  */
/* In C++ and C2x, this is spelled [[__maybe_unused__]].
   GCC's syntax is __attribute__ ((__unused__)).
   clang supports both syntaxes.  */
#if _GL_HAS_C_ATTRIBUTE (maybe_unused)
# define _GL_ATTRIBUTE_MAYBE_UNUSED [[__maybe_unused__]]
#else
# define _GL_ATTRIBUTE_MAYBE_UNUSED _GL_ATTRIBUTE_UNUSED
#endif
/* Alternative spelling of this macro, for convenience.  */
#define _GL_UNUSED _GL_ATTRIBUTE_MAYBE_UNUSED
/* Earlier spellings of this macro.  */
#define _UNUSED_PARAMETER_ _GL_ATTRIBUTE_MAYBE_UNUSED

/* _GL_ATTRIBUTE_NODISCARD declares that the caller of the function should not
   discard the return value.  The compiler may warn if the caller does not use
   the return value, unless the caller uses something like ignore_value.  */
/* Applies to: function, enumeration, class.  */
#if _GL_HAS_C_ATTRIBUTE (nodiscard)
# define _GL_ATTRIBUTE_NODISCARD [[__nodiscard__]]
#elif _GL_HAS_ATTRIBUTE (warn_unused_result)
# define _GL_ATTRIBUTE_NODISCARD __attribute__ ((__warn_unused_result__))
#else
# define _GL_ATTRIBUTE_NODISCARD
#endif

/* _GL_ATTRIBUTE_NOINLINE tells that the compiler should not inline the
   function.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (noinline)
# define _GL_ATTRIBUTE_NOINLINE __attribute__ ((__noinline__))
#else
# define _GL_ATTRIBUTE_NOINLINE
#endif

/* _GL_ATTRIBUTE_NONNULL ((N1, N2,...)) declares that the arguments N1, N2,...
   must not be NULL.
   _GL_ATTRIBUTE_NONNULL () declares that all pointer arguments must not be
   null.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (nonnull)
# define _GL_ATTRIBUTE_NONNULL(args) __attribute__ ((__nonnull__ args))
#else
# define _GL_ATTRIBUTE_NONNULL(args)
#endif

/* _GL_ATTRIBUTE_NONSTRING declares that the contents of a character array is
   not meant to be NUL-terminated.  */
/* Applies to: struct/union members and variables that are arrays of element
   type '[[un]signed] char'.  */
#if _GL_HAS_ATTRIBUTE (nonstring)
# define _GL_ATTRIBUTE_NONSTRING __attribute__ ((__nonstring__))
#else
# define _GL_ATTRIBUTE_NONSTRING
#endif

/* There is no _GL_ATTRIBUTE_NORETURN; use _Noreturn instead.  */

/* _GL_ATTRIBUTE_NOTHROW declares that the function does not throw exceptions.
 */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (nothrow) && !defined __cplusplus
# define _GL_ATTRIBUTE_NOTHROW __attribute__ ((__nothrow__))
#else
# define _GL_ATTRIBUTE_NOTHROW
#endif

/* _GL_ATTRIBUTE_PACKED declares:
   For struct members: The member has the smallest possible alignment.
   For struct, union, class: All members have the smallest possible alignment,
   minimizing the memory required.  */
/* Applies to: struct members, struct, union,
   in C++ also: class.  */
#if _GL_HAS_ATTRIBUTE (packed)
# define _GL_ATTRIBUTE_PACKED __attribute__ ((__packed__))
#else
# define _GL_ATTRIBUTE_PACKED
#endif

/* _GL_ATTRIBUTE_PURE declares that It is OK for a compiler to omit duplicate
   calls to the function with the same arguments if observable state is not
   changed between calls.
   This attribute is safe for a function that does not affect
   observable state, and always returns exactly once.
   (This attribute is looser than _GL_ATTRIBUTE_CONST.)  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (pure)
# define _GL_ATTRIBUTE_PURE __attribute__ ((__pure__))
#else
# define _GL_ATTRIBUTE_PURE
#endif

/* _GL_ATTRIBUTE_RETURNS_NONNULL declares that the function's return value is
   a non-NULL pointer.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (returns_nonnull)
# define _GL_ATTRIBUTE_RETURNS_NONNULL __attribute__ ((__returns_nonnull__))
#else
# define _GL_ATTRIBUTE_RETURNS_NONNULL
#endif

/* _GL_ATTRIBUTE_SENTINEL(pos) declares that the variadic function expects a
   trailing NULL argument.
   _GL_ATTRIBUTE_SENTINEL () - The last argument is NULL (requires C99).
   _GL_ATTRIBUTE_SENTINEL ((N)) - The (N+1)st argument from the end is NULL.  */
/* Applies to: functions.  */
#if _GL_HAS_ATTRIBUTE (sentinel)
# define _GL_ATTRIBUTE_SENTINEL(pos) __attribute__ ((__sentinel__ pos))
#else
# define _GL_ATTRIBUTE_SENTINEL(pos)
#endif

/* A helper macro.  Don't use it directly.  */
#if _GL_HAS_ATTRIBUTE (unused)
# define _GL_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
#else
# define _GL_ATTRIBUTE_UNUSED
#endif

]dnl There is no _GL_ATTRIBUTE_VISIBILITY; see m4/visibility.m4 instead.
[
/* _GL_UNUSED_LABEL; declares that it is not a programming mistake if the
   immediately preceding label is not used.  The compiler should not warn
   if the label is not used.  */
/* Applies to: label (both in C and C++).  */
/* Note that g++ < 4.5 does not support the '__attribute__ ((__unused__)) ;'
   syntax.  But clang does.  */
#if !(defined __cplusplus && !_GL_GNUC_PREREQ (4, 5)) || defined __clang__
# define _GL_UNUSED_LABEL _GL_ATTRIBUTE_UNUSED
#else
# define _GL_UNUSED_LABEL
#endif
])
  AH_VERBATIM([async_safe],
[/* The _GL_ASYNC_SAFE marker should be attached to functions that are
   signal handlers (for signals other than SIGABRT, SIGPIPE) or can be
   invoked from such signal handlers.  Such functions have some restrictions:
     * All functions that it calls should be marked _GL_ASYNC_SAFE as well,
       or should be listed as async-signal-safe in POSIX
       <https://pubs.opengroup.org/onlinepubs/9699919799/functions/V2_chap02.html#tag_15_04>
       section 2.4.3.  Note that malloc(), sprintf(), and fwrite(), in
       particular, are NOT async-signal-safe.
     * All memory locations (variables and struct fields) that these functions
       access must be marked 'volatile'.  This holds for both read and write
       accesses.  Otherwise the compiler might optimize away stores to and
       reads from such locations that occur in the program, depending on its
       data flow analysis.  For example, when the program contains a loop
       that is intended to inspect a variable set from within a signal handler
           while (!signal_occurred)
             ;
       the compiler is allowed to transform this into an endless loop if the
       variable 'signal_occurred' is not declared 'volatile'.
   Additionally, recall that:
     * A signal handler should not modify errno (except if it is a handler
       for a fatal signal and ends by raising the same signal again, thus
       provoking the termination of the process).  If it invokes a function
       that may clobber errno, it needs to save and restore the value of
       errno.  */
#define _GL_ASYNC_SAFE
])
  AH_VERBATIM([micro_optimizations],
[/* _GL_CMP (n1, n2) performs a three-valued comparison on n1 vs. n2, where
   n1 and n2 are expressions without side effects, that evaluate to real
   numbers (excluding NaN).
   It returns
     1  if n1 > n2
     0  if n1 == n2
     -1 if n1 < n2
   The naïve code   (n1 > n2 ? 1 : n1 < n2 ? -1 : 0)  produces a conditional
   jump with nearly all GCC versions up to GCC 10.
   This variant     (n1 < n2 ? -1 : n1 > n2)  produces a conditional with many
   GCC versions up to GCC 9.
   The better code  (n1 > n2) - (n1 < n2)  from Hacker's Delight § 2-9
   avoids conditional jumps in all GCC versions >= 3.4.  */
#define _GL_CMP(n1, n2) (((n1) > (n2)) - ((n1) < (n2)))
])
  dnl Hint which direction to take regarding cross-compilation guesses:
  dnl When a user installs a program on a platform they are not intimately
  dnl familiar with, --enable-cross-guesses=conservative is the appropriate
  dnl choice.  It implements the "If we don't know, assume the worst" principle.
  dnl However, when an operating system developer (on a platform which is not
  dnl yet known to gnulib) builds packages for their platform, they want to
  dnl expose, not hide, possible platform bugs; in this case,
  dnl --enable-cross-guesses=risky is the appropriate choice.
  dnl Sets the variables
  dnl gl_cross_guess_normal    (to be used when 'yes' is good and 'no' is bad),
  dnl gl_cross_guess_inverted  (to be used when 'no' is good and 'yes' is bad).
  AC_ARG_ENABLE([cross-guesses],
    [AS_HELP_STRING([--enable-cross-guesses={conservative|risky}],
       [specify policy for cross-compilation guesses])],
    [if test "x$enableval" != xconservative && test "x$enableval" != xrisky; then
       AC_MSG_WARN([invalid argument supplied to --enable-cross-guesses])
       enableval=conservative
     fi
     gl_cross_guesses="$enableval"],
    [gl_cross_guesses=conservative])
  if test $gl_cross_guesses = risky; then
    gl_cross_guess_normal="guessing yes"
    gl_cross_guess_inverted="guessing no"
  else
    gl_cross_guess_normal="guessing no"
    gl_cross_guess_inverted="guessing yes"
  fi
  dnl Preparation for running test programs:
  dnl Tell glibc to write diagnostics from -D_FORTIFY_SOURCE=2 to stderr, not
  dnl to /dev/tty, so they can be redirected to log files.  Such diagnostics
  dnl arise e.g., in the macros gl_PRINTF_DIRECTIVE_N, gl_SNPRINTF_DIRECTIVE_N.
  LIBC_FATAL_STDERR_=1
  export LIBC_FATAL_STDERR_
])
m4trace:m4/gnulib-common.m4:511: -1- AC_DEFUN([gl_MODULE_INDICATOR_INIT_VARIABLE], [
  GL_MODULE_INDICATOR_PREFIX[]_[$1]=m4_if([$2], , [0], [$2])
  AC_SUBST(GL_MODULE_INDICATOR_PREFIX[]_[$1])
])
m4trace:m4/gnulib-common.m4:526: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE], [
  gl_MODULE_INDICATOR_SET_VARIABLE_AUX(
    [GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[$1]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])],
    [gl_MODULE_INDICATOR_CONDITION])
])
m4trace:m4/gnulib-common.m4:539: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE_AUX], [
  m4_if(m4_defn([gl_MODULE_INDICATOR_CONDITION]), [1],
    [
     dnl Simplify the expression VALUE || 1 to 1.
     $1=1
    ],
    [gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([$1],
                                             [gl_MODULE_INDICATOR_CONDITION])])
])
m4trace:m4/gnulib-common.m4:553: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR], [
  dnl Simplify the expression 1 || CONDITION to 1.
  if test "$[]$1" != 1; then
    dnl Simplify the expression 0 || CONDITION to CONDITION.
    if test "$[]$1" = 0; then
      $1=$2
    else
      $1="($[]$1 || $2)"
    fi
  fi
])
m4trace:m4/gnulib-common.m4:578: -1- AC_DEFUN([gl_MODULE_INDICATOR], [
  AC_DEFINE_UNQUOTED([GNULIB_]m4_translit([[$1]],
      [abcdefghijklmnopqrstuvwxyz./-],
      [ABCDEFGHIJKLMNOPQRSTUVWXYZ___]),
    [gl_MODULE_INDICATOR_CONDITION],
    [Define to a C preprocessor expression that evaluates to 1 or 0,
     depending whether the gnulib module $1 shall be considered present.])
])
m4trace:m4/gnulib-common.m4:601: -1- AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [
  AC_DEFINE([GNULIB_TEST_]m4_translit([[$1]],
      [abcdefghijklmnopqrstuvwxyz./-],
      [ABCDEFGHIJKLMNOPQRSTUVWXYZ___]), [1],
    [Define to 1 when the gnulib module $1 should be tested.])
])
m4trace:m4/gnulib-common.m4:613: -1- AC_DEFUN([gl_ASSERT_NO_GNULIB_POSIXCHECK], [
  dnl Override gl_WARN_ON_USE_PREPARE.
  dnl But hide this definition from 'aclocal'.
  AC_DEFUN([gl_W][ARN_ON_USE_PREPARE], [])
])
m4trace:m4/gnulib-common.m4:624: -1- AC_DEFUN([gl_ASSERT_NO_GNULIB_TESTS], [
  dnl Override gl_MODULE_INDICATOR_FOR_TESTS.
  AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [])
])
m4trace:m4/gnulib-common.m4:632: -1- AC_DEFUN([gl_FEATURES_H], [
  AC_CHECK_HEADERS_ONCE([features.h])
  if test $ac_cv_header_features_h = yes; then
    HAVE_FEATURES_H=1
  else
    HAVE_FEATURES_H=0
  fi
  AC_SUBST([HAVE_FEATURES_H])
])
m4trace:m4/gnulib-common.m4:646: -1- AC_DEFUN([gl_PROG_CC_C99], [
  dnl Just use AC_PROG_CC_C99.
  dnl When AC_PROG_CC_C99 and AC_PROG_CC_STDC are used together, the substituted
  dnl value of CC will contain the C99 enabling options twice. But this is only
  dnl a cosmetic problem.
  dnl With Autoconf >= 2.70, use AC_PROG_CC since it implies AC_PROG_CC_C99;
  dnl this avoids a "warning: The macro `AC_PROG_CC_C99' is obsolete."
  m4_version_prereq([2.70],
    [AC_REQUIRE([AC_PROG_CC])],
    [AC_REQUIRE([AC_PROG_CC_C99])])
])
m4trace:m4/gnulib-common.m4:663: -1- AC_DEFUN([gl_PROG_AR_RANLIB], [
  dnl Minix 3 comes with two toolchains: The Amsterdam Compiler Kit compiler
  dnl as "cc", and GCC as "gcc". They have different object file formats and
  dnl library formats. In particular, the GNU binutils programs ar and ranlib
  dnl produce libraries that work only with gcc, not with cc.
  AC_REQUIRE([AC_PROG_CC])
  dnl The '' hides this use from 'aclocal'.
  AC_BEFORE([$0], [A][M_PROG_AR])
  AC_CACHE_CHECK([for Minix Amsterdam compiler], [gl_cv_c_amsterdam_compiler],
    [
      AC_EGREP_CPP([Amsterdam],
        [
#ifdef __ACK__
Amsterdam
#endif
        ],
        [gl_cv_c_amsterdam_compiler=yes],
        [gl_cv_c_amsterdam_compiler=no])
    ])

  dnl Don't compete with AM_PROG_AR's decision about AR/ARFLAGS if we are not
  dnl building with __ACK__.
  if test $gl_cv_c_amsterdam_compiler = yes; then
    if test -z "$AR"; then
      AR='cc -c.a'
    fi
    if test -z "$ARFLAGS"; then
      ARFLAGS='-o'
    fi
  else
    dnl AM_PROG_AR was added in automake v1.11.2.  AM_PROG_AR does not AC_SUBST
    dnl ARFLAGS variable (it is filed into Makefile.in directly by automake
    dnl script on-demand, if not specified by ./configure of course).
    dnl Don't AC_REQUIRE the AM_PROG_AR otherwise the code for __ACK__ above
    dnl will be ignored.  Also, pay attention to call AM_PROG_AR in else block
    dnl because AM_PROG_AR is written so it could re-set AR variable even for
    dnl __ACK__.  It may seem like its easier to avoid calling the macro here,
    dnl but we need to AC_SUBST both AR/ARFLAGS (thus those must have some good
    dnl default value and automake should usually know them).
    dnl
    dnl The '' hides this use from 'aclocal'.
    m4_ifdef([A][M_PROG_AR], [A][M_PROG_AR], [:])
  fi

  dnl In case the code above has not helped with setting AR/ARFLAGS, use
  dnl Automake-documented default values for AR and ARFLAGS, but prefer
  dnl ${host}-ar over ar (useful for cross-compiling).
  AC_CHECK_TOOL([AR], [ar], [ar])
  if test -z "$ARFLAGS"; then
    ARFLAGS='cr'
  fi

  AC_SUBST([AR])
  AC_SUBST([ARFLAGS])
  if test -z "$RANLIB"; then
    if test $gl_cv_c_amsterdam_compiler = yes; then
      RANLIB=':'
    else
      dnl Use the ranlib program if it is available.
      AC_PROG_RANLIB
    fi
  fi
  AC_SUBST([RANLIB])
])
m4trace:m4/gnulib-common.m4:783: -1- AC_DEFUN([gl_BIGENDIAN], [
  AC_C_BIGENDIAN
])
m4trace:m4/gnulib-common.m4:797: -1- AC_DEFUN([gl_SILENT], [
  exec GL_TMP_FD>&AS_MESSAGE_FD AS_MESSAGE_FD>/dev/null
  $1
  exec AS_MESSAGE_FD>&GL_TMP_FD GL_TMP_FD>&-
])
m4trace:m4/gnulib-common.m4:809: -1- AC_DEFUN([gl_CACHE_VAL_SILENT], [
  gl_SILENT([
    AC_CACHE_VAL([$1], [$2])
  ])
])
m4trace:m4/gnulib-common.m4:821: -1- AC_DEFUN([gl_CC_ALLOW_WARNINGS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([for C compiler option to allow warnings],
    [gl_cv_cc_wallow],
    [rm -f conftest*
     echo 'int dummy;' > conftest.c
     AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS -c conftest.c 2>conftest1.err]) >/dev/null
     AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS -Wno-error -c conftest.c 2>conftest2.err]) >/dev/null
     dnl Test the number of error output lines, because AIX xlc accepts the
     dnl option '-Wno-error', just to produce a warning
     dnl "Option -Wno-error was incorrectly specified. The option will be ignored."
     dnl afterwards.
     if test $? = 0 && test `wc -l < conftest1.err` = `wc -l < conftest2.err`; then
       gl_cv_cc_wallow='-Wno-error'
     else
       gl_cv_cc_wallow=none
     fi
     rm -f conftest*
    ])
  case "$gl_cv_cc_wallow" in
    none) GL_CFLAG_ALLOW_WARNINGS='' ;;
    *)    GL_CFLAG_ALLOW_WARNINGS="$gl_cv_cc_wallow" ;;
  esac
  AC_SUBST([GL_CFLAG_ALLOW_WARNINGS])
])
m4trace:m4/gnulib-common.m4:851: -1- AC_DEFUN([gl_CXX_ALLOW_WARNINGS], [
  dnl Requires AC_PROG_CXX or gl_PROG_ANSI_CXX.
  if test -n "$CXX" && test "$CXX" != no; then
    AC_CACHE_CHECK([for C++ compiler option to allow warnings],
      [gl_cv_cxx_wallow],
      [rm -f conftest*
       echo 'int dummy;' > conftest.cc
       AC_TRY_COMMAND([${CXX-c++} $CXXFLAGS $CPPFLAGS -c conftest.cc 2>conftest1.err]) >/dev/null
       AC_TRY_COMMAND([${CXX-c++} $CXXFLAGS $CPPFLAGS -Wno-error -c conftest.cc 2>conftest2.err]) >/dev/null
       dnl Test the number of error output lines, because AIX xlC accepts the
       dnl option '-Wno-error', just to produce a warning
       dnl "Option -Wno-error was incorrectly specified. The option will be ignored."
       dnl afterwards.
       if test $? = 0 && test `wc -l < conftest1.err` = `wc -l < conftest2.err`; then
         gl_cv_cxx_wallow='-Wno-error'
       else
         gl_cv_cxx_wallow=none
       fi
       rm -f conftest*
      ])
    case "$gl_cv_cxx_wallow" in
      none) GL_CXXFLAG_ALLOW_WARNINGS='' ;;
      *)    GL_CXXFLAG_ALLOW_WARNINGS="$gl_cv_cxx_wallow" ;;
    esac
  else
    GL_CXXFLAG_ALLOW_WARNINGS=''
  fi
  AC_SUBST([GL_CXXFLAG_ALLOW_WARNINGS])
])
m4trace:m4/gnulib-common.m4:891: -1- AC_DEFUN([GL_MDA_DEFINES], [
AC_REQUIRE([_GL_MDA_DEFINES])
[$gl_mda_defines]
])
m4trace:m4/gnulib-common.m4:895: -1- AC_DEFUN([_GL_MDA_DEFINES], [gl_mda_defines='
#if defined _WIN32 && !defined __CYGWIN__
#define access    _access
#define chdir     _chdir
#define chmod     _chmod
#define close     _close
#define creat     _creat
#define dup       _dup
#define dup2      _dup2
#define ecvt      _ecvt
#define execl     _execl
#define execle    _execle
#define execlp    _execlp
#define execv     _execv
#define execve    _execve
#define execvp    _execvp
#define execvpe   _execvpe
#define fcloseall _fcloseall
#define fcvt      _fcvt
#define fdopen    _fdopen
#define fileno    _fileno
#define gcvt      _gcvt
#define getcwd    _getcwd
#define getpid    _getpid
#define getw      _getw
#define isatty    _isatty
#define j0        _j0
#define j1        _j1
#define jn        _jn
#define lfind     _lfind
#define lsearch   _lsearch
#define lseek     _lseek
#define memccpy   _memccpy
#define mkdir     _mkdir
#define mktemp    _mktemp
#define open      _open
#define putenv    _putenv
#define putw      _putw
#define read      _read
#define rmdir     _rmdir
#define strdup    _strdup
#define swab      _swab
#define tempnam   _tempnam
#define tzset     _tzset
#define umask     _umask
#define unlink    _unlink
#define utime     _utime
#define wcsdup    _wcsdup
#define write     _write
#define y0        _y0
#define y1        _y1
#define yn        _yn
#endif
'
])
m4trace:m4/gnulib-comp.m4:34: -1- AC_DEFUN([gl_EARLY], [
  m4_pattern_forbid([^gl_[A-Z]])dnl the gnulib macro namespace
  m4_pattern_allow([^gl_ES$])dnl a valid locale name
  m4_pattern_allow([^gl_LIBOBJS$])dnl a variable
  m4_pattern_allow([^gl_LTLIBOBJS$])dnl a variable

  # Pre-early section.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_PROG_AR_RANLIB])

  AC_REQUIRE([AM_PROG_CC_C_O])
  # Code from module absolute-header:
  # Code from module access:
  # Code from module alloca:
  # Code from module alloca-opt:
  # Code from module allocator:
  # Code from module areadlink:
  # Code from module array-mergesort:
  # Code from module assure:
  # Code from module at-internal:
  # Code from module attribute:
  # Code from module base64:
  # Code from module basename-lgpl:
  # Code from module bison:
  # Code from module bitrotate:
  # Code from module btowc:
  # Code from module builtin-expect:
  # Code from module byteswap:
  # Code from module c-ctype:
  # Code from module c-strcase:
  # Code from module c-strcaseeq:
  # Code from module c99:
  # Code from module calloc-gnu:
  # Code from module calloc-posix:
  # Code from module canonicalize:
  # Code from module careadlinkat:
  # Code from module chdir:
  # Code from module chdir-long:
  # Code from module clock-time:
  # Code from module cloexec:
  # Code from module close:
  # Code from module closedir:
  # Code from module concat-filename:
  # Code from module crypto/md2-buffer:
  # Code from module crypto/md4-buffer:
  # Code from module crypto/md5-buffer:
  # Code from module crypto/sha1-buffer:
  # Code from module crypto/sha256-buffer:
  # Code from module crypto/sha512-buffer:
  # Code from module ctype:
  # Code from module d-ino:
  # Code from module d-type:
  # Code from module dirent:
  # Code from module dirfd:
  # Code from module dirname-lgpl:
  # Code from module double-slash-root:
  # Code from module dup:
  # Code from module dup2:
  # Code from module environ:
  # Code from module errno:
  # Code from module error:
  # Code from module exitfail:
  # Code from module extensions:
  # Code from module extern-inline:
  # Code from module fchdir:
  # Code from module fcntl:
  # Code from module fcntl-h:
  # Code from module fd-hook:
  # Code from module fd-safer-flag:
  # Code from module fdopendir:
  # Code from module file-set:
  # Code from module filemode:
  # Code from module filename:
  # Code from module filenamecat-lgpl:
  # Code from module findprog-in:
  # Code from module flexmember:
  # Code from module float:
  # Code from module fnmatch:
  # Code from module fnmatch-h:
  # Code from module fpieee:
  AC_REQUIRE([gl_FP_IEEE])
  # Code from module fpucw:
  # Code from module free-posix:
  # Code from module frexp:
  # Code from module frexpf:
  # Code from module fseek:
  # Code from module fseeko:
  AC_REQUIRE([gl_SET_LARGEFILE_SOURCE])
  # Code from module fstat:
  # Code from module fstatat:
  # Code from module ftell:
  # Code from module ftello:
  AC_REQUIRE([gl_SET_LARGEFILE_SOURCE])
  # Code from module ftruncate:
  # Code from module getcwd:
  # Code from module getcwd-lgpl:
  # Code from module getdtablesize:
  # Code from module gethostname:
  # Code from module getlogin_r:
  # Code from module getopt-gnu:
  # Code from module getopt-posix:
  # Code from module getprogname:
  # Code from module getrandom:
  # Code from module getrusage:
  # Code from module gettext-h:
  # Code from module gettimeofday:
  # Code from module glob:
  # Code from module glob-h:
  # Code from module gperf:
  # Code from module hard-locale:
  # Code from module hash:
  # Code from module hash-pjw:
  # Code from module hash-triple-simple:
  # Code from module havelib:
  # Code from module ialloc:
  # Code from module iconv:
  # Code from module iconv-h:
  # Code from module iconv_open:
  # Code from module idx:
  # Code from module include_next:
  # Code from module inline:
  # Code from module intprops:
  # Code from module inttypes-incomplete:
  # Code from module isatty:
  # Code from module isblank:
  # Code from module isnand-nolibm:
  # Code from module langinfo:
  # Code from module largefile:
  AC_REQUIRE([AC_SYS_LARGEFILE])
  AC_REQUIRE([gl_YEAR2038_EARLY])
  # Code from module lib-symbol-visibility:
  # Code from module libc-config:
  # Code from module limits-h:
  # Code from module link:
  # Code from module localcharset:
  # Code from module locale:
  # Code from module localename:
  # Code from module lock:
  # Code from module lseek:
  # Code from module lstat:
  # Code from module malloc-gnu:
  # Code from module malloc-posix:
  # Code from module malloca:
  # Code from module math:
  # Code from module mbrtowc:
  # Code from module mbsinit:
  # Code from module mbsrtowcs:
  # Code from module mbtowc:
  # Code from module memchr:
  # Code from module mempcpy:
  # Code from module memrchr:
  # Code from module minmax:
  # Code from module mkdir:
  # Code from module mkfifo:
  # Code from module mkostemp:
  # Code from module mkostemps:
  # Code from module mktime:
  # Code from module mktime-internal:
  # Code from module msvc-inval:
  # Code from module msvc-nothrow:
  # Code from module multiarch:
  # Code from module nanosleep:
  # Code from module nocrash:
  # Code from module nproc:
  # Code from module nstrftime:
  # Code from module open:
  # Code from module openat:
  # Code from module openat-die:
  # Code from module openat-h:
  # Code from module opendir:
  # Code from module pathmax:
  # Code from module pipe-posix:
  # Code from module progname:
  # Code from module putenv:
  # Code from module raise:
  # Code from module rawmemchr:
  # Code from module readdir:
  # Code from module readlink:
  # Code from module realloc-gnu:
  # Code from module realloc-posix:
  # Code from module reallocarray:
  # Code from module rewinddir:
  # Code from module rmdir:
  # Code from module same-inode:
  # Code from module save-cwd:
  # Code from module scratch_buffer:
  # Code from module select:
  # Code from module setenv:
  # Code from module setlocale:
  # Code from module setlocale-null:
  # Code from module sigaction:
  # Code from module signal:
  # Code from module signal-h:
  # Code from module sigprocmask:
  # Code from module size_max:
  # Code from module snippet/_Noreturn:
  # Code from module snippet/arg-nonnull:
  # Code from module snippet/c++defs:
  # Code from module snippet/warn-on-use:
  # Code from module snprintf:
  # Code from module socketlib:
  # Code from module sockets:
  # Code from module socklen:
  # Code from module ssize_t:
  # Code from module stat:
  # Code from module stat-time:
  # Code from module std-gnu11:
  # Code from module stdalign:
  # Code from module stdbool:
  # Code from module stddef:
  # Code from module stdint:
  # Code from module stdio:
  # Code from module stdlib:
  # Code from module stpcpy:
  # Code from module strcase:
  # Code from module strdup-posix:
  # Code from module streq:
  # Code from module strerror:
  # Code from module strerror-override:
  # Code from module striconveh:
  # Code from module striconveha:
  # Code from module string:
  # Code from module strings:
  # Code from module strnlen:
  # Code from module strnlen1:
  # Code from module strptime:
  # Code from module strsignal:
  # Code from module symlink:
  # Code from module sys_random:
  # Code from module sys_resource:
  # Code from module sys_select:
  # Code from module sys_socket:
  # Code from module sys_stat:
  # Code from module sys_time:
  # Code from module sys_times:
  # Code from module sys_types:
  # Code from module sys_uio:
  # Code from module sys_utsname:
  # Code from module sys_wait:
  # Code from module tempname:
  # Code from module thread-optim:
  # Code from module threadlib:
  gl_THREADLIB_EARLY
  # Code from module time:
  # Code from module time_r:
  # Code from module time_rz:
  # Code from module timegm:
  # Code from module tls:
  # Code from module tzset:
  # Code from module u64:
  # Code from module uname:
  # Code from module unicase/base:
  # Code from module unicase/cased:
  # Code from module unicase/empty-prefix-context:
  # Code from module unicase/empty-suffix-context:
  # Code from module unicase/ignorable:
  # Code from module unicase/special-casing:
  # Code from module unicase/tolower:
  # Code from module unicase/toupper:
  # Code from module unicase/u8-casemap:
  # Code from module unicase/u8-tolower:
  # Code from module unicase/u8-toupper:
  # Code from module uniconv/base:
  # Code from module uniconv/u32-conv-to-enc:
  # Code from module uniconv/u8-conv-from-enc:
  # Code from module uniconv/u8-conv-to-enc:
  # Code from module unictype/base:
  # Code from module unictype/combining-class:
  # Code from module unictype/ctype-alnum:
  # Code from module unictype/ctype-alpha:
  # Code from module unictype/ctype-blank:
  # Code from module unictype/ctype-cntrl:
  # Code from module unictype/ctype-digit:
  # Code from module unictype/ctype-graph:
  # Code from module unictype/ctype-lower:
  # Code from module unictype/ctype-print:
  # Code from module unictype/ctype-punct:
  # Code from module unictype/ctype-space:
  # Code from module unictype/ctype-upper:
  # Code from module unictype/ctype-xdigit:
  # Code from module unictype/property-soft-dotted:
  # Code from module uninorm/base:
  # Code from module uninorm/decompose-internal:
  # Code from module uninorm/u8-normalize:
  # Code from module unistd:
  # Code from module unistd-safer:
  # Code from module unistr/base:
  # Code from module unistr/u16-mbtoucr:
  # Code from module unistr/u16-to-u8:
  # Code from module unistr/u16-uctomb:
  # Code from module unistr/u32-mblen:
  # Code from module unistr/u32-to-u8:
  # Code from module unistr/u8-check:
  # Code from module unistr/u8-cpy:
  # Code from module unistr/u8-mblen:
  # Code from module unistr/u8-mbsnlen:
  # Code from module unistr/u8-mbtouc:
  # Code from module unistr/u8-mbtouc-unsafe:
  # Code from module unistr/u8-mbtoucr:
  # Code from module unistr/u8-prev:
  # Code from module unistr/u8-strmblen:
  # Code from module unistr/u8-strmbtouc:
  # Code from module unistr/u8-to-u16:
  # Code from module unistr/u8-to-u32:
  # Code from module unistr/u8-uctomb:
  # Code from module unitypes:
  # Code from module unlink:
  # Code from module unsetenv:
  # Code from module vasnprintf:
  # Code from module vasprintf:
  # Code from module verify:
  # Code from module waitpid:
  # Code from module wchar:
  # Code from module wctype-h:
  # Code from module windows-mutex:
  # Code from module windows-once:
  # Code from module windows-recmutex:
  # Code from module windows-rwlock:
  # Code from module windows-spawn:
  # Code from module windows-tls:
  # Code from module wmemchr:
  # Code from module wmempcpy:
  # Code from module xalloc:
  # Code from module xalloc-die:
  # Code from module xalloc-oversized:
  # Code from module xsize:
])
m4trace:m4/gnulib-comp.m4:365: -1- AC_DEFUN([gl_INIT], [
  AM_CONDITIONAL([GL_COND_LIBTOOL], [true])
  gl_cond_libtool=true
  gl_m4_base='m4'
  m4_pushdef([AC_LIBOBJ], m4_defn([gl_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gl_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gl_LIBSOURCES]))
  m4_pushdef([gl_LIBSOURCES_LIST], [])
  m4_pushdef([gl_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gl])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='libgnu'
  gl_FUNC_ACCESS
  if test $REPLACE_ACCESS = 1; then
    AC_LIBOBJ([access])
  fi
  gl_UNISTD_MODULE_INDICATOR([access])
changequote(,)dnl
LTALLOCA=`echo "$ALLOCA" | sed -e 's/\.[^.]* /.lo /g;s/\.[^.]*$/.lo/'`
changequote([, ])dnl
AC_SUBST([LTALLOCA])
  gl_FUNC_ALLOCA
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_FUNC_BASE64
  # See the comments in bison.m4.
  gl_FUNC_BTOWC
  if test $HAVE_BTOWC = 0 || test $REPLACE_BTOWC = 1; then
    AC_LIBOBJ([btowc])
    gl_PREREQ_BTOWC
  fi
  gl_WCHAR_MODULE_INDICATOR([btowc])
  gl___BUILTIN_EXPECT
  gl_BYTESWAP
  gl_FUNC_CALLOC_GNU
  if test $REPLACE_CALLOC = 1; then
    AC_LIBOBJ([calloc])
  fi
  gl_FUNC_CALLOC_POSIX
  if test $REPLACE_CALLOC = 1; then
    AC_LIBOBJ([calloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([calloc-posix])
  gl_FUNC_CANONICALIZE_FILENAME_MODE
  gl_MODULE_INDICATOR([canonicalize])
  gl_MODULE_INDICATOR_FOR_TESTS([canonicalize])
  gl_STDLIB_MODULE_INDICATOR([canonicalize_file_name])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CHECK_FUNCS_ONCE([readlinkat])
  gl_UNISTD_MODULE_INDICATOR([chdir])
  gl_FUNC_CHDIR_LONG
  if test $gl_cv_have_unlimited_file_name_length = no; then
    AC_LIBOBJ([chdir-long])
    gl_PREREQ_CHDIR_LONG
  fi
  gl_CLOCK_TIME
  gl_MODULE_INDICATOR_FOR_TESTS([cloexec])
  gl_FUNC_CLOSE
  if test $REPLACE_CLOSE = 1; then
    AC_LIBOBJ([close])
  fi
  gl_UNISTD_MODULE_INDICATOR([close])
  gl_FUNC_CLOSEDIR
  if test $HAVE_CLOSEDIR = 0 || test $REPLACE_CLOSEDIR = 1; then
    AC_LIBOBJ([closedir])
  fi
  gl_DIRENT_MODULE_INDICATOR([closedir])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_C_RESTRICT])
  gl_MD4
  AC_REQUIRE([AC_C_RESTRICT])
  gl_MD5
  AC_REQUIRE([AC_C_RESTRICT])
  gl_SHA1
  AC_REQUIRE([AC_C_RESTRICT])
  gl_SHA256
  AC_REQUIRE([AC_C_RESTRICT])
  gl_SHA512
  gl_CTYPE_H
  gl_CTYPE_H_REQUIRE_DEFAULTS
  gl_CHECK_TYPE_STRUCT_DIRENT_D_INO
  gl_CHECK_TYPE_STRUCT_DIRENT_D_TYPE
  gl_DIRENT_H
  gl_DIRENT_H_REQUIRE_DEFAULTS
  gl_FUNC_DIRFD
  if test $ac_cv_func_dirfd = no && test $gl_cv_func_dirfd_macro = no \
     || test $REPLACE_DIRFD = 1; then
    AC_LIBOBJ([dirfd])
    gl_PREREQ_DIRFD
  fi
  gl_DIRENT_MODULE_INDICATOR([dirfd])
  gl_DOUBLE_SLASH_ROOT
  gl_FUNC_DUP
  if test $REPLACE_DUP = 1; then
    AC_LIBOBJ([dup])
    gl_PREREQ_DUP
  fi
  gl_UNISTD_MODULE_INDICATOR([dup])
  gl_FUNC_DUP2
  if test $REPLACE_DUP2 = 1; then
    AC_LIBOBJ([dup2])
    gl_PREREQ_DUP2
  fi
  gl_UNISTD_MODULE_INDICATOR([dup2])
  gl_ENVIRON
  gl_UNISTD_MODULE_INDICATOR([environ])
  gl_HEADER_ERRNO_H
  gl_ERROR
  AS_IF([test "$ac_cv_lib_error_at_line" = no], [
    AC_LIBOBJ([error])
    gl_PREREQ_ERROR
  ])
  m4_ifdef([AM_XGETTEXT_OPTION],
    [AM_][XGETTEXT_OPTION([--flag=error:3:c-format])
     AM_][XGETTEXT_OPTION([--flag=error_at_line:5:c-format])])
  AC_REQUIRE([gl_EXTERN_INLINE])
  gl_FUNC_FCHDIR
  gl_UNISTD_MODULE_INDICATOR([fchdir])
  gl_FUNC_FCNTL
  if test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1; then
    AC_LIBOBJ([fcntl])
  fi
  gl_FCNTL_MODULE_INDICATOR([fcntl])
  gl_FCNTL_H
  gl_FCNTL_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR([fd-safer-flag])
  gl_FUNC_FDOPENDIR
  if test $HAVE_FDOPENDIR = 0 || test $REPLACE_FDOPENDIR = 1; then
    AC_LIBOBJ([fdopendir])
  fi
  gl_DIRENT_MODULE_INDICATOR([fdopendir])
  gl_MODULE_INDICATOR([fdopendir])
  gl_FILEMODE
  gl_FILE_NAME_CONCAT_LGPL
  gl_FINDPROG_IN
  AC_C_FLEXIBLE_ARRAY_MEMBER
  gl_FLOAT_H
  if test $REPLACE_FLOAT_LDBL = 1; then
    AC_LIBOBJ([float])
  fi
  if test $REPLACE_ITOLD = 1; then
    AC_LIBOBJ([itold])
  fi
  gl_FUNC_FNMATCH_POSIX
  if test $HAVE_FNMATCH = 0 || test $REPLACE_FNMATCH = 1; then
    AC_LIBOBJ([fnmatch])
    gl_PREREQ_FNMATCH
  fi
  gl_FNMATCH_MODULE_INDICATOR([fnmatch])
  gl_FNMATCH_H
  gl_FNMATCH_H_REQUIRE_DEFAULTS
  gl_FUNC_FREE
  if test $REPLACE_FREE = 1; then
    AC_LIBOBJ([free])
    gl_PREREQ_FREE
  fi
  gl_STDLIB_MODULE_INDICATOR([free-posix])
  AC_REQUIRE([gl_FUNC_FREXP])
  if test $gl_func_frexp != yes; then
    AC_LIBOBJ([frexp])
  fi
  gl_MATH_MODULE_INDICATOR([frexp])
  gl_FUNC_FREXPF
  if test $HAVE_FREXPF = 0 || test $REPLACE_FREXPF = 1; then
    AC_LIBOBJ([frexpf])
  fi
  gl_MATH_MODULE_INDICATOR([frexpf])
  gl_FUNC_FSEEK
  if test $REPLACE_FSEEK = 1; then
    AC_LIBOBJ([fseek])
  fi
  gl_STDIO_MODULE_INDICATOR([fseek])
  gl_FUNC_FSEEKO
  if test $HAVE_FSEEKO = 0 || test $REPLACE_FSEEKO = 1; then
    AC_LIBOBJ([fseeko])
    gl_PREREQ_FSEEKO
  fi
  gl_STDIO_MODULE_INDICATOR([fseeko])
  gl_FUNC_FSTAT
  if test $REPLACE_FSTAT = 1; then
    AC_LIBOBJ([fstat])
    case "$host_os" in
      mingw*)
        AC_LIBOBJ([stat-w32])
        ;;
    esac
    gl_PREREQ_FSTAT
  fi
  gl_SYS_STAT_MODULE_INDICATOR([fstat])
  gl_FUNC_FSTATAT
  if test $HAVE_FSTATAT = 0 || test $REPLACE_FSTATAT = 1; then
    AC_LIBOBJ([fstatat])
  fi
  gl_SYS_STAT_MODULE_INDICATOR([fstatat])
  gl_FUNC_FTELL
  if test $REPLACE_FTELL = 1; then
    AC_LIBOBJ([ftell])
  fi
  gl_STDIO_MODULE_INDICATOR([ftell])
  gl_FUNC_FTELLO
  if test $HAVE_FTELLO = 0 || test $REPLACE_FTELLO = 1; then
    AC_LIBOBJ([ftello])
    gl_PREREQ_FTELLO
  fi
  gl_STDIO_MODULE_INDICATOR([ftello])
  gl_FUNC_FTRUNCATE
  if test $HAVE_FTRUNCATE = 0 || test $REPLACE_FTRUNCATE = 1; then
    AC_LIBOBJ([ftruncate])
    gl_PREREQ_FTRUNCATE
  fi
  gl_UNISTD_MODULE_INDICATOR([ftruncate])
  gl_FUNC_GETCWD
  if test $REPLACE_GETCWD = 1; then
    AC_LIBOBJ([getcwd])
    gl_PREREQ_GETCWD
  fi
  gl_MODULE_INDICATOR([getcwd])
  gl_UNISTD_MODULE_INDICATOR([getcwd])
  gl_FUNC_GETCWD_LGPL
  if test $REPLACE_GETCWD = 1; then
    AC_LIBOBJ([getcwd-lgpl])
  fi
  gl_UNISTD_MODULE_INDICATOR([getcwd])
  gl_FUNC_GETDTABLESIZE
  if test $HAVE_GETDTABLESIZE = 0 || test $REPLACE_GETDTABLESIZE = 1; then
    AC_LIBOBJ([getdtablesize])
    gl_PREREQ_GETDTABLESIZE
  fi
  gl_UNISTD_MODULE_INDICATOR([getdtablesize])
  gl_FUNC_GETHOSTNAME
  if test $HAVE_GETHOSTNAME = 0; then
    AC_LIBOBJ([gethostname])
    gl_PREREQ_GETHOSTNAME
  fi
  gl_UNISTD_MODULE_INDICATOR([gethostname])
  gl_FUNC_GETLOGIN_R
  if test $HAVE_GETLOGIN_R = 0 || test $REPLACE_GETLOGIN_R = 1; then
    AC_LIBOBJ([getlogin_r])
    gl_PREREQ_GETLOGIN_R
  fi
  gl_UNISTD_MODULE_INDICATOR([getlogin_r])
  AC_REQUIRE([gl_LIB_GETLOGIN])
  gl_FUNC_GETOPT_GNU
  dnl Because of the way gl_FUNC_GETOPT_GNU is implemented (the gl_getopt_required
  dnl mechanism), there is no need to do any AC_LIBOBJ or AC_SUBST here; they are
  dnl done in the getopt-posix module.
  gl_FUNC_GETOPT_POSIX
  if test $REPLACE_GETOPT = 1; then
    AC_LIBOBJ([getopt])
    AC_LIBOBJ([getopt1])
    dnl Define the substituted variable GNULIB_UNISTD_H_GETOPT to 1.
    gl_UNISTD_H_REQUIRE_DEFAULTS
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT], [1])
  fi
  gl_UNISTD_MODULE_INDICATOR([getopt-posix])
  gl_FUNC_GETPROGNAME
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_FUNC_GETRANDOM
  if test $HAVE_GETRANDOM = 0 || test $REPLACE_GETRANDOM = 1; then
    AC_LIBOBJ([getrandom])
  fi
  gl_SYS_RANDOM_MODULE_INDICATOR([getrandom])
  gl_FUNC_GETRUSAGE
  if test $HAVE_GETRUSAGE = 0; then
    AC_LIBOBJ([getrusage])
  fi
  gl_SYS_RESOURCE_MODULE_INDICATOR([getrusage])
  AC_SUBST([LIBINTL])
  AC_SUBST([LTLIBINTL])
  gl_FUNC_GETTIMEOFDAY
  if test $HAVE_GETTIMEOFDAY = 0 || test $REPLACE_GETTIMEOFDAY = 1; then
    AC_LIBOBJ([gettimeofday])
    gl_PREREQ_GETTIMEOFDAY
  fi
  gl_SYS_TIME_MODULE_INDICATOR([gettimeofday])
  gl_GLOB
  if test $HAVE_GLOB = 0 || test $REPLACE_GLOB = 1; then
    AC_LIBOBJ([glob])
    AC_LIBOBJ([globfree])
    gl_PREREQ_GLOB
  fi
  if test $HAVE_GLOB_PATTERN_P = 0 || test $REPLACE_GLOB_PATTERN_P = 1; then
    AC_LIBOBJ([glob_pattern_p])
  fi
  gl_GLOB_MODULE_INDICATOR([glob])
  gl_GLOB_H
  gl_GLOB_H_REQUIRE_DEFAULTS
  AC_REQUIRE([gl_FUNC_SETLOCALE_NULL])
  LIB_HARD_LOCALE="$LIB_SETLOCALE_NULL"
  AC_SUBST([LIB_HARD_LOCALE])
  AC_DEFUN([gl_HAVE_MODULE_HAVELIB])
  AM_ICONV
  m4_ifdef([gl_ICONV_MODULE_INDICATOR],
    [gl_ICONV_MODULE_INDICATOR([iconv])])
  gl_ICONV_H
  gl_ICONV_H_REQUIRE_DEFAULTS
  gl_FUNC_ICONV_OPEN
  if test $REPLACE_ICONV_OPEN = 1; then
    AC_LIBOBJ([iconv_open])
  fi
  if test $REPLACE_ICONV = 1; then
    AC_LIBOBJ([iconv])
    AC_LIBOBJ([iconv_close])
  fi
  gl_INLINE
  gl_INTTYPES_INCOMPLETE
  gl_INTTYPES_H_REQUIRE_DEFAULTS
  gl_FUNC_ISATTY
  if test $REPLACE_ISATTY = 1; then
    AC_LIBOBJ([isatty])
    gl_PREREQ_ISATTY
  fi
  gl_UNISTD_MODULE_INDICATOR([isatty])
  gl_FUNC_ISBLANK
  if test $HAVE_ISBLANK = 0; then
    AC_LIBOBJ([isblank])
  fi
  gl_MODULE_INDICATOR([isblank])
  gl_CTYPE_MODULE_INDICATOR([isblank])
  gl_FUNC_ISNAND_NO_LIBM
  if test $gl_func_isnand_no_libm != yes; then
    AC_LIBOBJ([isnand])
    gl_PREREQ_ISNAND
  fi
  gl_LANGINFO_H
  gl_LANGINFO_H_REQUIRE_DEFAULTS
  AC_REQUIRE([gl_LARGEFILE])
  gl_VISIBILITY
  gl___INLINE
  gl_LIMITS_H
  gl_FUNC_LINK
  if test $HAVE_LINK = 0 || test $REPLACE_LINK = 1; then
    AC_LIBOBJ([link])
  fi
  gl_UNISTD_MODULE_INDICATOR([link])
  gl_LOCALCHARSET
  dnl For backward compatibility. Some packages still use this.
  LOCALCHARSET_TESTS_ENVIRONMENT=
  AC_SUBST([LOCALCHARSET_TESTS_ENVIRONMENT])
  gl_LOCALE_H
  gl_LOCALE_H_REQUIRE_DEFAULTS
  gl_LOCALENAME
  gl_LOCALE_MODULE_INDICATOR([localename])
  gl_LOCK
  gl_MODULE_INDICATOR([lock])
  gl_FUNC_LSEEK
  if test $REPLACE_LSEEK = 1; then
    AC_LIBOBJ([lseek])
  fi
  gl_UNISTD_MODULE_INDICATOR([lseek])
  gl_FUNC_LSTAT
  if test $REPLACE_LSTAT = 1; then
    AC_LIBOBJ([lstat])
    gl_PREREQ_LSTAT
  fi
  gl_SYS_STAT_MODULE_INDICATOR([lstat])
  gl_FUNC_MALLOC_GNU
  if test $REPLACE_MALLOC = 1; then
    AC_LIBOBJ([malloc])
  fi
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC = 1; then
    AC_LIBOBJ([malloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([malloc-posix])
  gl_MALLOCA
  gl_MATH_H
  gl_MATH_H_REQUIRE_DEFAULTS
  gl_FUNC_MBRTOWC
  if test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1; then
    AC_LIBOBJ([mbrtowc])
    if test $REPLACE_MBSTATE_T = 1; then
      AC_LIBOBJ([lc-charset-dispatch])
      AC_LIBOBJ([mbtowc-lock])
      gl_PREREQ_MBTOWC_LOCK
    fi
    gl_PREREQ_MBRTOWC
  fi
  gl_WCHAR_MODULE_INDICATOR([mbrtowc])
  gl_FUNC_MBSINIT
  if test $HAVE_MBSINIT = 0 || test $REPLACE_MBSINIT = 1; then
    AC_LIBOBJ([mbsinit])
    gl_PREREQ_MBSINIT
  fi
  gl_WCHAR_MODULE_INDICATOR([mbsinit])
  gl_FUNC_MBSRTOWCS
  if test $HAVE_MBSRTOWCS = 0 || test $REPLACE_MBSRTOWCS = 1; then
    AC_LIBOBJ([mbsrtowcs])
    AC_LIBOBJ([mbsrtowcs-state])
    gl_PREREQ_MBSRTOWCS
  fi
  gl_WCHAR_MODULE_INDICATOR([mbsrtowcs])
  gl_FUNC_MBTOWC
  if test $HAVE_MBTOWC = 0 || test $REPLACE_MBTOWC = 1; then
    AC_LIBOBJ([mbtowc])
    gl_PREREQ_MBTOWC
  fi
  gl_STDLIB_MODULE_INDICATOR([mbtowc])
  gl_FUNC_MEMCHR
  if test $REPLACE_MEMCHR = 1; then
    AC_LIBOBJ([memchr])
    gl_PREREQ_MEMCHR
  fi
  gl_STRING_MODULE_INDICATOR([memchr])
  gl_FUNC_MEMPCPY
  if test $HAVE_MEMPCPY = 0; then
    AC_LIBOBJ([mempcpy])
    gl_PREREQ_MEMPCPY
  fi
  gl_STRING_MODULE_INDICATOR([mempcpy])
  gl_FUNC_MEMRCHR
  if test $ac_cv_func_memrchr = no; then
    AC_LIBOBJ([memrchr])
    gl_PREREQ_MEMRCHR
  fi
  gl_STRING_MODULE_INDICATOR([memrchr])
  gl_MINMAX
  gl_FUNC_MKDIR
  if test $REPLACE_MKDIR = 1; then
    AC_LIBOBJ([mkdir])
  fi
  gl_SYS_STAT_MODULE_INDICATOR([mkdir])
  gl_FUNC_MKFIFO
  if test $HAVE_MKFIFO = 0 || test $REPLACE_MKFIFO = 1; then
    AC_LIBOBJ([mkfifo])
  fi
  gl_UNISTD_MODULE_INDICATOR([mkfifo])
  gl_FUNC_MKOSTEMP
  if test $HAVE_MKOSTEMP = 0; then
    AC_LIBOBJ([mkostemp])
    gl_PREREQ_MKOSTEMP
  fi
  gl_MODULE_INDICATOR([mkostemp])
  gl_STDLIB_MODULE_INDICATOR([mkostemp])
  gl_FUNC_MKOSTEMPS
  if test $HAVE_MKOSTEMPS = 0; then
    AC_LIBOBJ([mkostemps])
  fi
  gl_MODULE_INDICATOR([mkostemps])
  gl_STDLIB_MODULE_INDICATOR([mkostemps])
  gl_FUNC_MKTIME
  if test $REPLACE_MKTIME = 1; then
    AC_LIBOBJ([mktime])
    gl_PREREQ_MKTIME
  fi
  gl_TIME_MODULE_INDICATOR([mktime])
  gl_FUNC_MKTIME_INTERNAL
  if test $WANT_MKTIME_INTERNAL = 1; then
    AC_LIBOBJ([mktime])
    gl_PREREQ_MKTIME
  fi
  AC_REQUIRE([gl_MSVC_INVAL])
  if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
    AC_LIBOBJ([msvc-inval])
  fi
  AC_REQUIRE([gl_MSVC_NOTHROW])
  if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
    AC_LIBOBJ([msvc-nothrow])
  fi
  gl_MODULE_INDICATOR([msvc-nothrow])
  gl_MULTIARCH
  gl_FUNC_NANOSLEEP
  if test $HAVE_NANOSLEEP = 0 || test $REPLACE_NANOSLEEP = 1; then
    AC_LIBOBJ([nanosleep])
    gl_PREREQ_NANOSLEEP
  fi
  gl_TIME_MODULE_INDICATOR([nanosleep])
  gl_NPROC
  gl_FUNC_GNU_STRFTIME
  gl_FUNC_OPEN
  if test $REPLACE_OPEN = 1; then
    AC_LIBOBJ([open])
    gl_PREREQ_OPEN
  fi
  gl_FCNTL_MODULE_INDICATOR([open])
  gl_FUNC_OPENAT
  if test $HAVE_OPENAT = 0 || test $REPLACE_OPENAT = 1; then
    AC_LIBOBJ([openat])
    gl_PREREQ_OPENAT
  fi
  gl_MODULE_INDICATOR([openat]) dnl for lib/getcwd.c
  gl_FCNTL_MODULE_INDICATOR([openat])
  gl_FUNC_OPENDIR
  if test $HAVE_OPENDIR = 0 || test $REPLACE_OPENDIR = 1; then
    AC_LIBOBJ([opendir])
  fi
  gl_DIRENT_MODULE_INDICATOR([opendir])
  gl_PATHMAX
  gl_FUNC_PIPE
  if test $HAVE_PIPE = 0; then
    AC_LIBOBJ([pipe])
  fi
  gl_UNISTD_MODULE_INDICATOR([pipe])
  AC_CHECK_DECLS([program_invocation_name], [], [], [#include <errno.h>])
  AC_CHECK_DECLS([program_invocation_short_name], [], [], [#include <errno.h>])
  gl_FUNC_PUTENV
  if test $REPLACE_PUTENV = 1; then
    AC_LIBOBJ([putenv])
    gl_PREREQ_PUTENV
  fi
  gl_STDLIB_MODULE_INDICATOR([putenv])
  gl_FUNC_RAISE
  if test $HAVE_RAISE = 0 || test $REPLACE_RAISE = 1; then
    AC_LIBOBJ([raise])
    gl_PREREQ_RAISE
  fi
  gl_SIGNAL_MODULE_INDICATOR([raise])
  gl_FUNC_RAWMEMCHR
  if test $HAVE_RAWMEMCHR = 0; then
    AC_LIBOBJ([rawmemchr])
    gl_PREREQ_RAWMEMCHR
  fi
  gl_STRING_MODULE_INDICATOR([rawmemchr])
  gl_FUNC_READDIR
  if test $HAVE_READDIR = 0; then
    AC_LIBOBJ([readdir])
  fi
  gl_DIRENT_MODULE_INDICATOR([readdir])
  gl_FUNC_READLINK
  if test $HAVE_READLINK = 0 || test $REPLACE_READLINK = 1; then
    AC_LIBOBJ([readlink])
    gl_PREREQ_READLINK
  fi
  gl_UNISTD_MODULE_INDICATOR([readlink])
  gl_FUNC_REALLOC_GNU
  if test $REPLACE_REALLOC = 1; then
    AC_LIBOBJ([realloc])
  fi
  gl_FUNC_REALLOC_POSIX
  if test $REPLACE_REALLOC = 1; then
    AC_LIBOBJ([realloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([realloc-posix])
  gl_FUNC_REALLOCARRAY
  if test $HAVE_REALLOCARRAY = 0 || test $REPLACE_REALLOCARRAY = 1; then
    AC_LIBOBJ([reallocarray])
    gl_PREREQ_REALLOCARRAY
  fi
  gl_MODULE_INDICATOR([reallocarray])
  gl_STDLIB_MODULE_INDICATOR([reallocarray])
  gl_FUNC_REWINDDIR
  if test $HAVE_REWINDDIR = 0; then
    AC_LIBOBJ([rewinddir])
  fi
  gl_DIRENT_MODULE_INDICATOR([rewinddir])
  gl_FUNC_RMDIR
  if test $REPLACE_RMDIR = 1; then
    AC_LIBOBJ([rmdir])
  fi
  gl_UNISTD_MODULE_INDICATOR([rmdir])
  gl_SAVE_CWD
  AC_PROG_MKDIR_P
  gl_FUNC_SELECT
  if test $REPLACE_SELECT = 1; then
    AC_LIBOBJ([select])
  fi
  gl_SYS_SELECT_MODULE_INDICATOR([select])
  gl_FUNC_SETENV
  if test $HAVE_SETENV = 0 || test $REPLACE_SETENV = 1; then
    AC_LIBOBJ([setenv])
  fi
  gl_STDLIB_MODULE_INDICATOR([setenv])
  gl_FUNC_SETLOCALE
  if test $REPLACE_SETLOCALE = 1; then
    AC_LIBOBJ([setlocale])
    gl_PREREQ_SETLOCALE
  fi
  gl_LOCALE_MODULE_INDICATOR([setlocale])
  gl_FUNC_SETLOCALE_NULL
  if test $SETLOCALE_NULL_ALL_MTSAFE = 0 || test $SETLOCALE_NULL_ONE_MTSAFE = 0; then
    AC_LIBOBJ([setlocale-lock])
    gl_PREREQ_SETLOCALE_LOCK
  fi
  gl_LOCALE_MODULE_INDICATOR([setlocale_null])
  gl_SIGACTION
  if test $HAVE_SIGACTION = 0; then
    AC_LIBOBJ([sigaction])
    gl_PREREQ_SIGACTION
  fi
  gl_SIGNAL_MODULE_INDICATOR([sigaction])
  gl_SIGNAL_H
  gl_SIGNAL_H_REQUIRE_DEFAULTS
  gl_SIGNALBLOCKING
  if test $HAVE_POSIX_SIGNALBLOCKING = 0; then
    AC_LIBOBJ([sigprocmask])
    gl_PREREQ_SIGPROCMASK
  fi
  gl_SIGNAL_MODULE_INDICATOR([sigprocmask])
  gl_SIZE_MAX
  gl_FUNC_SNPRINTF
  gl_STDIO_MODULE_INDICATOR([snprintf])
  gl_MODULE_INDICATOR([snprintf])
  AC_REQUIRE([gl_SOCKETLIB])
  AC_REQUIRE([gl_SOCKETS])
  gl_TYPE_SOCKLEN_T
  gt_TYPE_SSIZE_T
  gl_FUNC_STAT
  if test $REPLACE_STAT = 1; then
    AC_LIBOBJ([stat])
    case "$host_os" in
      mingw*)
        AC_LIBOBJ([stat-w32])
        ;;
    esac
    gl_PREREQ_STAT
  fi
  gl_SYS_STAT_MODULE_INDICATOR([stat])
  gl_STAT_TIME
  gl_STAT_BIRTHTIME
  gl_STDALIGN_H
  AM_STDBOOL_H
  gl_STDDEF_H
  gl_STDDEF_H_REQUIRE_DEFAULTS
  gl_STDINT_H
  gl_STDIO_H
  gl_STDIO_H_REQUIRE_DEFAULTS
  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  gl_STDIO_MODULE_INDICATOR([fscanf])
  gl_MODULE_INDICATOR([fscanf])
  gl_STDIO_MODULE_INDICATOR([scanf])
  gl_MODULE_INDICATOR([scanf])
  gl_STDIO_MODULE_INDICATOR([fgetc])
  gl_STDIO_MODULE_INDICATOR([getc])
  gl_STDIO_MODULE_INDICATOR([getchar])
  gl_STDIO_MODULE_INDICATOR([fgets])
  gl_STDIO_MODULE_INDICATOR([fread])
  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  gl_STDIO_MODULE_INDICATOR([fprintf])
  gl_STDIO_MODULE_INDICATOR([printf])
  gl_STDIO_MODULE_INDICATOR([vfprintf])
  gl_STDIO_MODULE_INDICATOR([vprintf])
  gl_STDIO_MODULE_INDICATOR([fputc])
  gl_STDIO_MODULE_INDICATOR([putc])
  gl_STDIO_MODULE_INDICATOR([putchar])
  gl_STDIO_MODULE_INDICATOR([fputs])
  gl_STDIO_MODULE_INDICATOR([puts])
  gl_STDIO_MODULE_INDICATOR([fwrite])
  gl_STDLIB_H
  gl_STDLIB_H_REQUIRE_DEFAULTS
  gl_FUNC_STPCPY
  if test $HAVE_STPCPY = 0; then
    AC_LIBOBJ([stpcpy])
    gl_PREREQ_STPCPY
  fi
  gl_STRING_MODULE_INDICATOR([stpcpy])
  gl_STRCASE
  if test $HAVE_STRCASECMP = 0; then
    AC_LIBOBJ([strcasecmp])
    gl_PREREQ_STRCASECMP
  fi
  if test $HAVE_STRNCASECMP = 0; then
    AC_LIBOBJ([strncasecmp])
    gl_PREREQ_STRNCASECMP
  fi
  gl_FUNC_STRDUP_POSIX
  if test $REPLACE_STRDUP = 1; then
    AC_LIBOBJ([strdup])
    gl_PREREQ_STRDUP
  fi
  gl_STRING_MODULE_INDICATOR([strdup])
  gl_FUNC_STRERROR
  if test $REPLACE_STRERROR = 1; then
    AC_LIBOBJ([strerror])
  fi
  gl_MODULE_INDICATOR([strerror])
  gl_STRING_MODULE_INDICATOR([strerror])
  AC_REQUIRE([gl_HEADER_ERRNO_H])
  AC_REQUIRE([gl_FUNC_STRERROR_0])
  if test -n "$ERRNO_H" || test $REPLACE_STRERROR_0 = 1; then
    AC_LIBOBJ([strerror-override])
    gl_PREREQ_SYS_H_WINSOCK2
  fi
  if test $gl_cond_libtool = false; then
    gl_ltlibdeps="$gl_ltlibdeps $LTLIBICONV"
    gl_libdeps="$gl_libdeps $LIBICONV"
  fi
  gl_STRING_H
  gl_STRING_H_REQUIRE_DEFAULTS
  gl_STRINGS_H
  gl_STRINGS_H_REQUIRE_DEFAULTS
  gl_FUNC_STRNLEN
  if test $HAVE_DECL_STRNLEN = 0 || test $REPLACE_STRNLEN = 1; then
    AC_LIBOBJ([strnlen])
    gl_PREREQ_STRNLEN
  fi
  gl_STRING_MODULE_INDICATOR([strnlen])
  gl_FUNC_STRPTIME
  if test $HAVE_STRPTIME = 0; then
    AC_LIBOBJ([strptime])
    gl_PREREQ_STRPTIME
  fi
  gl_TIME_MODULE_INDICATOR([strptime])
  gl_FUNC_STRSIGNAL
  if test $HAVE_STRSIGNAL = 0 || test $REPLACE_STRSIGNAL = 1; then
    AC_LIBOBJ([strsignal])
    gl_PREREQ_STRSIGNAL
  fi
  gl_STRING_MODULE_INDICATOR([strsignal])
  gl_FUNC_SYMLINK
  if test $HAVE_SYMLINK = 0 || test $REPLACE_SYMLINK = 1; then
    AC_LIBOBJ([symlink])
  fi
  gl_UNISTD_MODULE_INDICATOR([symlink])
  gl_SYS_RANDOM_H
  gl_SYS_RANDOM_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_RESOURCE_H
  gl_SYS_RESOURCE_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_SELECT_H
  gl_SYS_SELECT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_SOCKET_H
  gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_STAT_H
  gl_SYS_STAT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_TIME_H
  gl_SYS_TIME_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_TIMES_H
  gl_SYS_TIMES_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_TYPES_H
  gl_SYS_TYPES_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_UIO_H
  gl_SYS_UIO_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_UTSNAME_H
  gl_SYS_UTSNAME_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_WAIT_H
  gl_SYS_WAIT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_GEN_TEMPNAME
  gl_MODULE_INDICATOR([tempname])
  AC_CHECK_HEADERS([sys/single_threaded.h])
  AC_REQUIRE([gl_THREADLIB])
  gl_TIME_H
  gl_TIME_H_REQUIRE_DEFAULTS
  gl_TIME_R
  if test $HAVE_LOCALTIME_R = 0 || test $REPLACE_LOCALTIME_R = 1; then
    AC_LIBOBJ([time_r])
    gl_PREREQ_TIME_R
  fi
  gl_TIME_MODULE_INDICATOR([time_r])
  gl_TIME_RZ
  if test $HAVE_TIMEZONE_T = 0; then
    AC_LIBOBJ([time_rz])
  fi
  gl_TIME_MODULE_INDICATOR([time_rz])
  gl_FUNC_TIMEGM
  if test $HAVE_TIMEGM = 0 || test $REPLACE_TIMEGM = 1; then
    AC_LIBOBJ([timegm])
    gl_PREREQ_TIMEGM
  fi
  gl_TIME_MODULE_INDICATOR([timegm])
  gl_TLS
  gl_FUNC_TZSET
  if test $REPLACE_TZSET = 1; then
    AC_LIBOBJ([tzset])
  fi
  gl_TIME_MODULE_INDICATOR([tzset])
  gl_FUNC_UNAME
  if test $HAVE_UNAME = 0; then
    AC_LIBOBJ([uname])
    gl_PREREQ_UNAME
  fi
  gl_SYS_UTSNAME_MODULE_INDICATOR([uname])
  gl_LIBUNISTRING_LIBHEADER([0.9.11], [unicase.h])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.1], [unicase/empty-prefix-context])
  gl_LIBUNISTRING_MODULE([0.9.1], [unicase/empty-suffix-context])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unicase/tolower])
  gl_LIBUNISTRING_MODULE([0.9.8], [unicase/toupper])
  gl_LIBUNISTRING_MODULE([0.9.8], [unicase/u8-tolower])
  gl_LIBUNISTRING_MODULE([0.9.8], [unicase/u8-toupper])
  gl_LIBUNISTRING_LIBHEADER([0.9.11], [uniconv.h])
  gl_LIBUNISTRING_MODULE([0.9], [uniconv/u32-conv-to-enc])
  gl_LIBUNISTRING_MODULE([0.9], [uniconv/u8-conv-from-enc])
  gl_LIBUNISTRING_MODULE([0.9], [uniconv/u8-conv-to-enc])
  gl_LIBUNISTRING_LIBHEADER([0.9.8], [unictype.h])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/combining-class])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-alnum])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-alpha])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-blank])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-cntrl])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-digit])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-graph])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-lower])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-print])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-punct])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-space])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-upper])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-xdigit])
  AC_REQUIRE([AC_C_INLINE])
  gl_LIBUNISTRING_MODULE([0.9.8], [unictype/property-soft-dotted])
  gl_LIBUNISTRING_LIBHEADER([0.9.11], [uninorm.h])
  gl_MODULE_INDICATOR_FOR_TESTS([uninorm/u8-normalize])
  gl_LIBUNISTRING_MODULE([0.9.8], [uninorm/u8-normalize])
  gl_UNISTD_H
  gl_UNISTD_H_REQUIRE_DEFAULTS
  gl_UNISTD_SAFER
  gl_LIBUNISTRING_LIBHEADER([0.9.11], [unistr.h])
  gl_MODULE_INDICATOR([unistr/u16-mbtoucr])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u16-mbtoucr])
  gl_LIBUNISTRING_MODULE([0.9.3], [unistr/u16-to-u8])
  gl_MODULE_INDICATOR([unistr/u16-uctomb])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u16-uctomb])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u32-mblen])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u32-to-u8])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-check])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-cpy])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-mblen])
  gl_LIBUNISTRING_MODULE([0.9.4], [unistr/u8-mbsnlen])
  gl_MODULE_INDICATOR([unistr/u8-mbtouc])
  gl_LIBUNISTRING_MODULE([0.9.4], [unistr/u8-mbtouc])
  gl_MODULE_INDICATOR([unistr/u8-mbtouc-unsafe])
  gl_LIBUNISTRING_MODULE([0.9.4], [unistr/u8-mbtouc-unsafe])
  gl_MODULE_INDICATOR([unistr/u8-mbtoucr])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-mbtoucr])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-prev])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-strmblen])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-strmbtouc])
  gl_LIBUNISTRING_MODULE([0.9.3], [unistr/u8-to-u16])
  gl_LIBUNISTRING_MODULE([0.9.3], [unistr/u8-to-u32])
  gl_MODULE_INDICATOR([unistr/u8-uctomb])
  gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-uctomb])
  gl_LIBUNISTRING_LIBHEADER([0.9.11], [unitypes.h])
  AH_VERBATIM([unitypes_restrict], [
  /* This definition is a duplicate of the one in unitypes.h.
     It is here so that we can cope with an older version of unitypes.h
     that does not contain this definition and that is pre-installed among
     the public header files.  */
  # if defined __restrict \
       || 2 < __GNUC__ + (95 <= __GNUC_MINOR__) \
       || __clang_major__ >= 3
  #  define _UC_RESTRICT __restrict
  # elif 199901L <= __STDC_VERSION__ || defined restrict
  #  define _UC_RESTRICT restrict
  # else
  #  define _UC_RESTRICT
  # endif
  ])
  gl_FUNC_UNLINK
  if test $REPLACE_UNLINK = 1; then
    AC_LIBOBJ([unlink])
  fi
  gl_UNISTD_MODULE_INDICATOR([unlink])
  gl_FUNC_UNSETENV
  if test $HAVE_UNSETENV = 0 || test $REPLACE_UNSETENV = 1; then
    AC_LIBOBJ([unsetenv])
    gl_PREREQ_UNSETENV
  fi
  gl_STDLIB_MODULE_INDICATOR([unsetenv])
  AC_REQUIRE([AC_C_RESTRICT])
  gl_FUNC_VASNPRINTF
  gl_FUNC_VASPRINTF
  gl_STDIO_MODULE_INDICATOR([vasprintf])
  m4_ifdef([AM_XGETTEXT_OPTION],
    [AM_][XGETTEXT_OPTION([--flag=asprintf:2:c-format])
     AM_][XGETTEXT_OPTION([--flag=vasprintf:2:c-format])])
  gl_FUNC_WAITPID
  if test $HAVE_WAITPID = 0; then
    AC_LIBOBJ([waitpid])
  fi
  gl_SYS_WAIT_MODULE_INDICATOR([waitpid])
  gl_WCHAR_H
  gl_WCHAR_H_REQUIRE_DEFAULTS
  gl_WCTYPE_H
  gl_WCTYPE_H_REQUIRE_DEFAULTS
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-mutex])
      ;;
  esac
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-once])
      ;;
  esac
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-recmutex])
      ;;
  esac
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-rwlock])
      ;;
  esac
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-spawn])
      ;;
  esac
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_LIBOBJ([windows-tls])
      ;;
  esac
  gl_FUNC_WMEMCHR
  if test $HAVE_WMEMCHR = 0; then
    AC_LIBOBJ([wmemchr])
  fi
  gl_WCHAR_MODULE_INDICATOR([wmemchr])
  gl_FUNC_WMEMPCPY
  if test $HAVE_WMEMPCPY = 0; then
    AC_LIBOBJ([wmempcpy])
  fi
  gl_WCHAR_MODULE_INDICATOR([wmempcpy])
  gl_XALLOC
  gl_MODULE_INDICATOR([xalloc])
  gl_MODULE_INDICATOR([xalloc-die])
  gl_XSIZE
  # End of code from modules
  m4_ifval(gl_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gl_LIBSOURCES_DIR])[ ||
      for gl_file in ]gl_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gl_LIBSOURCES_DIR])
  m4_popdef([gl_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gl_libobjs=
    gl_ltlibobjs=
    if test -n "$gl_LIBOBJS"; then
      # Remove the extension.
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $gl_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gl_libobjs="$gl_libobjs $i.$ac_objext"
        gl_ltlibobjs="$gl_ltlibobjs $i.lo"
      done
    fi
    AC_SUBST([gl_LIBOBJS], [$gl_libobjs])
    AC_SUBST([gl_LTLIBOBJS], [$gl_ltlibobjs])
  ])
  gltests_libdeps=
  gltests_ltlibdeps=
  m4_pushdef([AC_LIBOBJ], m4_defn([gltests_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gltests_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gltests_LIBSOURCES]))
  m4_pushdef([gltests_LIBSOURCES_LIST], [])
  m4_pushdef([gltests_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gltests])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='tests'
changequote(,)dnl
  gltests_WITNESS=IN_`echo "${PACKAGE-$PACKAGE_TARNAME}" | LC_ALL=C tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ | LC_ALL=C sed -e 's/[^A-Z0-9_]/_/g'`_GNULIB_TESTS
changequote([, ])dnl
  AC_SUBST([gltests_WITNESS])
  gl_module_indicator_condition=$gltests_WITNESS
  m4_pushdef([gl_MODULE_INDICATOR_CONDITION], [$gl_module_indicator_condition])
  m4_popdef([gl_MODULE_INDICATOR_CONDITION])
  m4_ifval(gltests_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gltests_LIBSOURCES_DIR])[ ||
      for gl_file in ]gltests_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gltests_LIBSOURCES_DIR])
  m4_popdef([gltests_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gltests_libobjs=
    gltests_ltlibobjs=
    if test -n "$gltests_LIBOBJS"; then
      # Remove the extension.
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $gltests_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gltests_libobjs="$gltests_libobjs $i.$ac_objext"
        gltests_ltlibobjs="$gltests_ltlibobjs $i.lo"
      done
    fi
    AC_SUBST([gltests_LIBOBJS], [$gltests_libobjs])
    AC_SUBST([gltests_LTLIBOBJS], [$gltests_ltlibobjs])
  ])
])
m4trace:m4/gnulib-comp.m4:1391: -1- AC_DEFUN([gl_LIBOBJ], [
  AS_LITERAL_IF([$1], [gl_LIBSOURCES([$1.c])])dnl
  gl_LIBOBJS="$gl_LIBOBJS $1.$ac_objext"
])
m4trace:m4/gnulib-comp.m4:1398: -1- AC_DEFUN([gl_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gl_LIBOBJ($ac_func)])
])
m4trace:m4/gnulib-comp.m4:1407: -1- AC_DEFUN([gl_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gl_LIBSOURCES_DIR], [libgnu])
      m4_append([gl_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])
m4trace:m4/gnulib-comp.m4:1418: -1- AC_DEFUN([gltests_LIBOBJ], [
  AS_LITERAL_IF([$1], [gltests_LIBSOURCES([$1.c])])dnl
  gltests_LIBOBJS="$gltests_LIBOBJS $1.$ac_objext"
])
m4trace:m4/gnulib-comp.m4:1425: -1- AC_DEFUN([gltests_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gltests_LIBOBJ($ac_func)])
])
m4trace:m4/gnulib-comp.m4:1434: -1- AC_DEFUN([gltests_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gltests_LIBSOURCES_DIR], [tests])
      m4_append([gltests_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])
m4trace:m4/gnulib-comp.m4:1445: -1- AC_DEFUN([gl_FILE_LIST], [
  build-aux/config.rpath
  lib/_Noreturn.h
  lib/access.c
  lib/alloca.c
  lib/alloca.in.h
  lib/allocator.c
  lib/allocator.h
  lib/areadlink.c
  lib/areadlink.h
  lib/arg-nonnull.h
  lib/array-mergesort.h
  lib/asnprintf.c
  lib/asprintf.c
  lib/assure.h
  lib/at-func.c
  lib/attribute.h
  lib/base64.c
  lib/base64.h
  lib/basename-lgpl.c
  lib/basename-lgpl.h
  lib/bitrotate.c
  lib/bitrotate.h
  lib/btowc.c
  lib/byteswap.in.h
  lib/c++defs.h
  lib/c-ctype.c
  lib/c-ctype.h
  lib/c-strcase.h
  lib/c-strcasecmp.c
  lib/c-strcaseeq.h
  lib/c-strncasecmp.c
  lib/calloc.c
  lib/canonicalize.c
  lib/canonicalize.h
  lib/careadlinkat.c
  lib/careadlinkat.h
  lib/cdefs.h
  lib/chdir-long.c
  lib/chdir-long.h
  lib/cloexec.c
  lib/cloexec.h
  lib/close.c
  lib/closedir.c
  lib/concat-filename.c
  lib/concat-filename.h
  lib/ctype.in.h
  lib/dirent-private.h
  lib/dirent.in.h
  lib/dirfd.c
  lib/dirname-lgpl.c
  lib/dirname.h
  lib/dup-safer-flag.c
  lib/dup-safer.c
  lib/dup.c
  lib/dup2.c
  lib/errno.in.h
  lib/error.c
  lib/error.h
  lib/exitfail.c
  lib/exitfail.h
  lib/fchdir.c
  lib/fcntl.c
  lib/fcntl.in.h
  lib/fd-hook.c
  lib/fd-hook.h
  lib/fd-safer-flag.c
  lib/fd-safer.c
  lib/fdopendir.c
  lib/file-set.c
  lib/file-set.h
  lib/filemode.c
  lib/filemode.h
  lib/filename.h
  lib/filenamecat-lgpl.c
  lib/filenamecat.h
  lib/findprog-in.c
  lib/findprog.h
  lib/flexmember.h
  lib/float+.h
  lib/float.c
  lib/float.in.h
  lib/fnmatch.c
  lib/fnmatch.in.h
  lib/fnmatch_loop.c
  lib/fpucw.h
  lib/free.c
  lib/frexp.c
  lib/frexpf.c
  lib/fseek.c
  lib/fseeko.c
  lib/fstat.c
  lib/fstatat.c
  lib/ftell.c
  lib/ftello.c
  lib/ftruncate.c
  lib/getcwd-lgpl.c
  lib/getcwd.c
  lib/getdtablesize.c
  lib/gethostname.c
  lib/getlogin_r.c
  lib/getopt-cdefs.in.h
  lib/getopt-core.h
  lib/getopt-ext.h
  lib/getopt-pfx-core.h
  lib/getopt-pfx-ext.h
  lib/getopt.c
  lib/getopt.in.h
  lib/getopt1.c
  lib/getopt_int.h
  lib/getprogname.c
  lib/getprogname.h
  lib/getrandom.c
  lib/getrusage.c
  lib/gettext.h
  lib/gettimeofday.c
  lib/gl_openssl.h
  lib/glob-libc.h
  lib/glob.c
  lib/glob.in.h
  lib/glob_internal.h
  lib/glob_pattern_p.c
  lib/globfree.c
  lib/glthread/lock.c
  lib/glthread/lock.h
  lib/glthread/threadlib.c
  lib/glthread/tls.c
  lib/glthread/tls.h
  lib/hard-locale.c
  lib/hard-locale.h
  lib/hash-pjw.c
  lib/hash-pjw.h
  lib/hash-triple-simple.c
  lib/hash-triple.h
  lib/hash.c
  lib/hash.h
  lib/ialloc.c
  lib/ialloc.h
  lib/iconv.c
  lib/iconv.in.h
  lib/iconv_close.c
  lib/iconv_open-aix.gperf
  lib/iconv_open-hpux.gperf
  lib/iconv_open-irix.gperf
  lib/iconv_open-osf.gperf
  lib/iconv_open-solaris.gperf
  lib/iconv_open-zos.gperf
  lib/iconv_open.c
  lib/iconveh.h
  lib/idx.h
  lib/intprops.h
  lib/inttypes.in.h
  lib/isatty.c
  lib/isblank.c
  lib/isnan.c
  lib/isnand-nolibm.h
  lib/isnand.c
  lib/itold.c
  lib/langinfo.in.h
  lib/lc-charset-dispatch.c
  lib/lc-charset-dispatch.h
  lib/libc-config.h
  lib/limits.in.h
  lib/link.c
  lib/localcharset.c
  lib/localcharset.h
  lib/locale.in.h
  lib/localename-table.c
  lib/localename-table.h
  lib/localename.c
  lib/localename.h
  lib/lseek.c
  lib/lstat.c
  lib/malloc.c
  lib/malloc/scratch_buffer.h
  lib/malloc/scratch_buffer_dupfree.c
  lib/malloc/scratch_buffer_grow.c
  lib/malloc/scratch_buffer_grow_preserve.c
  lib/malloc/scratch_buffer_set_array_size.c
  lib/malloca.c
  lib/malloca.h
  lib/math.c
  lib/math.in.h
  lib/mbrtowc-impl-utf8.h
  lib/mbrtowc-impl.h
  lib/mbrtowc.c
  lib/mbsinit.c
  lib/mbsrtowcs-impl.h
  lib/mbsrtowcs-state.c
  lib/mbsrtowcs.c
  lib/mbtowc-impl.h
  lib/mbtowc-lock.c
  lib/mbtowc-lock.h
  lib/mbtowc.c
  lib/md2.c
  lib/md2.h
  lib/md4.c
  lib/md4.h
  lib/md5.c
  lib/md5.h
  lib/memchr.c
  lib/memchr.valgrind
  lib/mempcpy.c
  lib/memrchr.c
  lib/minmax.h
  lib/mkdir.c
  lib/mkfifo.c
  lib/mkostemp.c
  lib/mkostemps.c
  lib/mktime-internal.h
  lib/mktime.c
  lib/msvc-inval.c
  lib/msvc-inval.h
  lib/msvc-nothrow.c
  lib/msvc-nothrow.h
  lib/nanosleep.c
  lib/nproc.c
  lib/nproc.h
  lib/nstrftime.c
  lib/open.c
  lib/openat-die.c
  lib/openat-priv.h
  lib/openat-proc.c
  lib/openat.c
  lib/openat.h
  lib/opendir.c
  lib/pathmax.h
  lib/pipe-safer.c
  lib/pipe.c
  lib/printf-args.c
  lib/printf-args.h
  lib/printf-parse.c
  lib/printf-parse.h
  lib/progname.c
  lib/progname.h
  lib/putenv.c
  lib/raise.c
  lib/rawmemchr.c
  lib/rawmemchr.valgrind
  lib/readdir.c
  lib/readlink.c
  lib/realloc.c
  lib/reallocarray.c
  lib/rewinddir.c
  lib/rmdir.c
  lib/same-inode.h
  lib/save-cwd.c
  lib/save-cwd.h
  lib/scratch_buffer.h
  lib/select.c
  lib/setenv.c
  lib/setlocale-lock.c
  lib/setlocale.c
  lib/setlocale_null.c
  lib/setlocale_null.h
  lib/sha1.c
  lib/sha1.h
  lib/sha256.c
  lib/sha256.h
  lib/sha512.c
  lib/sha512.h
  lib/sig-handler.c
  lib/sig-handler.h
  lib/sigaction.c
  lib/siglist.h
  lib/signal.in.h
  lib/sigprocmask.c
  lib/size_max.h
  lib/snprintf.c
  lib/sockets.c
  lib/sockets.h
  lib/stat-time.c
  lib/stat-time.h
  lib/stat-w32.c
  lib/stat-w32.h
  lib/stat.c
  lib/stdalign.in.h
  lib/stdbool.in.h
  lib/stddef.in.h
  lib/stdint.in.h
  lib/stdio-impl.h
  lib/stdio.in.h
  lib/stdlib.in.h
  lib/stpcpy.c
  lib/strcasecmp.c
  lib/strdup.c
  lib/streq.h
  lib/strerror-override.c
  lib/strerror-override.h
  lib/strerror.c
  lib/strftime.h
  lib/striconveh.c
  lib/striconveh.h
  lib/striconveha.c
  lib/striconveha.h
  lib/string.in.h
  lib/strings.in.h
  lib/stripslash.c
  lib/strncasecmp.c
  lib/strnlen.c
  lib/strnlen1.c
  lib/strnlen1.h
  lib/strptime.c
  lib/strsignal.c
  lib/symlink.c
  lib/sys_random.in.h
  lib/sys_resource.in.h
  lib/sys_select.in.h
  lib/sys_socket.c
  lib/sys_socket.in.h
  lib/sys_stat.in.h
  lib/sys_time.in.h
  lib/sys_times.in.h
  lib/sys_types.in.h
  lib/sys_uio.in.h
  lib/sys_utsname.in.h
  lib/sys_wait.in.h
  lib/tempname.c
  lib/tempname.h
  lib/thread-optim.h
  lib/time-internal.h
  lib/time.in.h
  lib/time_r.c
  lib/time_rz.c
  lib/timegm.c
  lib/tzset.c
  lib/u64.c
  lib/u64.h
  lib/uname.c
  lib/unicase.in.h
  lib/unicase/cased.c
  lib/unicase/cased.h
  lib/unicase/caseprop.h
  lib/unicase/context.h
  lib/unicase/empty-prefix-context.c
  lib/unicase/empty-suffix-context.c
  lib/unicase/ignorable.c
  lib/unicase/ignorable.h
  lib/unicase/simple-mapping.h
  lib/unicase/special-casing-table.gperf
  lib/unicase/special-casing.c
  lib/unicase/special-casing.in.h
  lib/unicase/tolower.c
  lib/unicase/tolower.h
  lib/unicase/toupper.c
  lib/unicase/toupper.h
  lib/unicase/u-casemap.h
  lib/unicase/u8-casemap.c
  lib/unicase/u8-tolower.c
  lib/unicase/u8-toupper.c
  lib/unicase/unicasemap.h
  lib/uniconv.in.h
  lib/uniconv/u-conv-to-enc.h
  lib/uniconv/u32-conv-to-enc.c
  lib/uniconv/u8-conv-from-enc.c
  lib/uniconv/u8-conv-to-enc.c
  lib/unictype.in.h
  lib/unictype/bitmap.h
  lib/unictype/combiningclass.c
  lib/unictype/combiningclass.h
  lib/unictype/ctype_alnum.c
  lib/unictype/ctype_alnum.h
  lib/unictype/ctype_alpha.c
  lib/unictype/ctype_alpha.h
  lib/unictype/ctype_blank.c
  lib/unictype/ctype_blank.h
  lib/unictype/ctype_cntrl.c
  lib/unictype/ctype_cntrl.h
  lib/unictype/ctype_digit.c
  lib/unictype/ctype_digit.h
  lib/unictype/ctype_graph.c
  lib/unictype/ctype_graph.h
  lib/unictype/ctype_lower.c
  lib/unictype/ctype_lower.h
  lib/unictype/ctype_print.c
  lib/unictype/ctype_print.h
  lib/unictype/ctype_punct.c
  lib/unictype/ctype_punct.h
  lib/unictype/ctype_space.c
  lib/unictype/ctype_space.h
  lib/unictype/ctype_upper.c
  lib/unictype/ctype_upper.h
  lib/unictype/ctype_xdigit.c
  lib/unictype/ctype_xdigit.h
  lib/unictype/pr_soft_dotted.c
  lib/unictype/pr_soft_dotted.h
  lib/uninorm.in.h
  lib/uninorm/decompose-internal.c
  lib/uninorm/decompose-internal.h
  lib/uninorm/normalize-internal.h
  lib/uninorm/u-normalize-internal.h
  lib/uninorm/u8-normalize.c
  lib/unistd--.h
  lib/unistd-safer.h
  lib/unistd.c
  lib/unistd.in.h
  lib/unistr.in.h
  lib/unistr/u-cpy.h
  lib/unistr/u16-mbtoucr.c
  lib/unistr/u16-to-u8.c
  lib/unistr/u16-uctomb-aux.c
  lib/unistr/u16-uctomb.c
  lib/unistr/u32-mblen.c
  lib/unistr/u32-to-u8.c
  lib/unistr/u8-check.c
  lib/unistr/u8-cpy.c
  lib/unistr/u8-mblen.c
  lib/unistr/u8-mbsnlen.c
  lib/unistr/u8-mbtouc-aux.c
  lib/unistr/u8-mbtouc-unsafe-aux.c
  lib/unistr/u8-mbtouc-unsafe.c
  lib/unistr/u8-mbtouc.c
  lib/unistr/u8-mbtoucr.c
  lib/unistr/u8-prev.c
  lib/unistr/u8-strmblen.c
  lib/unistr/u8-strmbtouc.c
  lib/unistr/u8-to-u16.c
  lib/unistr/u8-to-u32.c
  lib/unistr/u8-uctomb-aux.c
  lib/unistr/u8-uctomb.c
  lib/unitypes.in.h
  lib/unlink.c
  lib/unsetenv.c
  lib/vasnprintf.c
  lib/vasnprintf.h
  lib/vasprintf.c
  lib/verify.h
  lib/w32sock.h
  lib/waitpid.c
  lib/warn-on-use.h
  lib/wchar.in.h
  lib/wctype-h.c
  lib/wctype.in.h
  lib/windows-initguard.h
  lib/windows-mutex.c
  lib/windows-mutex.h
  lib/windows-once.c
  lib/windows-once.h
  lib/windows-recmutex.c
  lib/windows-recmutex.h
  lib/windows-rwlock.c
  lib/windows-rwlock.h
  lib/windows-spawn.c
  lib/windows-spawn.h
  lib/windows-tls.c
  lib/windows-tls.h
  lib/wmemchr-impl.h
  lib/wmemchr.c
  lib/wmempcpy.c
  lib/xalloc-die.c
  lib/xalloc-oversized.h
  lib/xalloc.h
  lib/xmalloc.c
  lib/xsize.c
  lib/xsize.h
  m4/00gnulib.m4
  m4/__inline.m4
  m4/absolute-header.m4
  m4/access.m4
  m4/alloca.m4
  m4/base64.m4
  m4/bison.m4
  m4/btowc.m4
  m4/builtin-expect.m4
  m4/byteswap.m4
  m4/calloc.m4
  m4/canonicalize.m4
  m4/chdir-long.m4
  m4/clock_time.m4
  m4/close.m4
  m4/closedir.m4
  m4/codeset.m4
  m4/ctype_h.m4
  m4/d-ino.m4
  m4/d-type.m4
  m4/dirent_h.m4
  m4/dirfd.m4
  m4/double-slash-root.m4
  m4/dup.m4
  m4/dup2.m4
  m4/eaccess.m4
  m4/eealloc.m4
  m4/environ.m4
  m4/errno_h.m4
  m4/error.m4
  m4/exponentd.m4
  m4/extensions.m4
  m4/extern-inline.m4
  m4/fchdir.m4
  m4/fcntl-o.m4
  m4/fcntl.m4
  m4/fcntl_h.m4
  m4/fdopendir.m4
  m4/filemode.m4
  m4/filenamecat.m4
  m4/findprog-in.m4
  m4/flexmember.m4
  m4/float_h.m4
  m4/fnmatch.m4
  m4/fnmatch_h.m4
  m4/fpieee.m4
  m4/free.m4
  m4/frexp.m4
  m4/frexpf.m4
  m4/fseek.m4
  m4/fseeko.m4
  m4/fstat.m4
  m4/fstatat.m4
  m4/ftell.m4
  m4/ftello.m4
  m4/ftruncate.m4
  m4/getcwd-abort-bug.m4
  m4/getcwd-path-max.m4
  m4/getcwd.m4
  m4/getdtablesize.m4
  m4/gethostname.m4
  m4/getlogin.m4
  m4/getlogin_r.m4
  m4/getopt.m4
  m4/getpagesize.m4
  m4/getprogname.m4
  m4/getrandom.m4
  m4/getrusage.m4
  m4/gettimeofday.m4
  m4/gl-openssl.m4
  m4/glob.m4
  m4/glob_h.m4
  m4/gnulib-common.m4
  m4/host-cpu-c-abi.m4
  m4/iconv.m4
  m4/iconv_h.m4
  m4/iconv_open.m4
  m4/include_next.m4
  m4/inline.m4
  m4/intl-thread-locale.m4
  m4/intlmacosx.m4
  m4/intmax_t.m4
  m4/inttypes.m4
  m4/inttypes_h.m4
  m4/isatty.m4
  m4/isblank.m4
  m4/isnand.m4
  m4/langinfo_h.m4
  m4/largefile.m4
  m4/lcmessage.m4
  m4/lib-ld.m4
  m4/lib-link.m4
  m4/lib-prefix.m4
  m4/libunistring-base.m4
  m4/limits-h.m4
  m4/link.m4
  m4/localcharset.m4
  m4/locale-fr.m4
  m4/locale-ja.m4
  m4/locale-zh.m4
  m4/locale_h.m4
  m4/localename.m4
  m4/lock.m4
  m4/lseek.m4
  m4/lstat.m4
  m4/malloc.m4
  m4/malloca.m4
  m4/math_h.m4
  m4/mathfunc.m4
  m4/mbrtowc.m4
  m4/mbsinit.m4
  m4/mbsrtowcs.m4
  m4/mbstate_t.m4
  m4/mbtowc.m4
  m4/md4.m4
  m4/md5.m4
  m4/memchr.m4
  m4/mempcpy.m4
  m4/memrchr.m4
  m4/minmax.m4
  m4/mkdir.m4
  m4/mkfifo.m4
  m4/mkostemp.m4
  m4/mkostemps.m4
  m4/mktime.m4
  m4/mmap-anon.m4
  m4/mode_t.m4
  m4/msvc-inval.m4
  m4/msvc-nothrow.m4
  m4/multiarch.m4
  m4/nanosleep.m4
  m4/nocrash.m4
  m4/nproc.m4
  m4/nstrftime.m4
  m4/off_t.m4
  m4/open-cloexec.m4
  m4/open-slash.m4
  m4/open.m4
  m4/openat.m4
  m4/opendir.m4
  m4/pathmax.m4
  m4/pid_t.m4
  m4/pipe.m4
  m4/printf.m4
  m4/pthread_rwlock_rdlock.m4
  m4/putenv.m4
  m4/raise.m4
  m4/rawmemchr.m4
  m4/readdir.m4
  m4/readlink.m4
  m4/realloc.m4
  m4/reallocarray.m4
  m4/rewinddir.m4
  m4/rmdir.m4
  m4/save-cwd.m4
  m4/select.m4
  m4/setenv.m4
  m4/setlocale.m4
  m4/setlocale_null.m4
  m4/sha1.m4
  m4/sha256.m4
  m4/sha512.m4
  m4/sigaction.m4
  m4/signal_h.m4
  m4/signalblocking.m4
  m4/size_max.m4
  m4/snprintf.m4
  m4/socketlib.m4
  m4/sockets.m4
  m4/socklen.m4
  m4/sockpfaf.m4
  m4/ssize_t.m4
  m4/stat-time.m4
  m4/stat.m4
  m4/std-gnu11.m4
  m4/stdalign.m4
  m4/stdbool.m4
  m4/stddef_h.m4
  m4/stdint.m4
  m4/stdint_h.m4
  m4/stdio_h.m4
  m4/stdlib_h.m4
  m4/stpcpy.m4
  m4/strcase.m4
  m4/strdup.m4
  m4/strerror.m4
  m4/string_h.m4
  m4/strings_h.m4
  m4/strnlen.m4
  m4/strptime.m4
  m4/strsignal.m4
  m4/symlink.m4
  m4/sys_random_h.m4
  m4/sys_resource_h.m4
  m4/sys_select_h.m4
  m4/sys_socket_h.m4
  m4/sys_stat_h.m4
  m4/sys_time_h.m4
  m4/sys_times_h.m4
  m4/sys_types_h.m4
  m4/sys_uio_h.m4
  m4/sys_utsname_h.m4
  m4/sys_wait_h.m4
  m4/tempname.m4
  m4/threadlib.m4
  m4/time_h.m4
  m4/time_r.m4
  m4/time_rz.m4
  m4/timegm.m4
  m4/tls.m4
  m4/tm_gmtoff.m4
  m4/tzset.m4
  m4/uname.m4
  m4/ungetc.m4
  m4/unistd-safer.m4
  m4/unistd_h.m4
  m4/unlink.m4
  m4/vasnprintf.m4
  m4/vasprintf.m4
  m4/visibility.m4
  m4/waitpid.m4
  m4/warn-on-use.m4
  m4/wchar_h.m4
  m4/wchar_t.m4
  m4/wctype_h.m4
  m4/wint_t.m4
  m4/wmemchr.m4
  m4/wmempcpy.m4
  m4/xalloc.m4
  m4/xsize.m4
  m4/year2038.m4
  m4/zzgnulib.m4
])
m4trace:m4/host-cpu-c-abi.m4:50: -1- AC_DEFUN([gl_HOST_CPU_C_ABI], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_C_ASM])
  AC_CACHE_CHECK([host CPU and C ABI], [gl_cv_host_cpu_c_abi],
    [case "$host_cpu" in

changequote(,)dnl
       i[34567]86 )
changequote([,])dnl
         gl_cv_host_cpu_c_abi=i386
         ;;

       x86_64 )
         # On x86_64 systems, the C compiler may be generating code in one of
         # these ABIs:
         # - 64-bit instruction set, 64-bit pointers, 64-bit 'long': x86_64.
         # - 64-bit instruction set, 64-bit pointers, 32-bit 'long': x86_64
         #   with native Windows (mingw, MSVC).
         # - 64-bit instruction set, 32-bit pointers, 32-bit 'long': x86_64-x32.
         # - 32-bit instruction set, 32-bit pointers, 32-bit 'long': i386.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if (defined __x86_64__ || defined __amd64__ \
                     || defined _M_X64 || defined _M_AMD64)
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [AC_COMPILE_IFELSE(
              [AC_LANG_SOURCE(
                 [[#if defined __ILP32__ || defined _ILP32
                    int ok;
                   #else
                    error fail
                   #endif
                 ]])],
              [gl_cv_host_cpu_c_abi=x86_64-x32],
              [gl_cv_host_cpu_c_abi=x86_64])],
           [gl_cv_host_cpu_c_abi=i386])
         ;;

changequote(,)dnl
       alphaev[4-8] | alphaev56 | alphapca5[67] | alphaev6[78] )
changequote([,])dnl
         gl_cv_host_cpu_c_abi=alpha
         ;;

       arm* | aarch64 )
         # Assume arm with EABI.
         # On arm64 systems, the C compiler may be generating code in one of
         # these ABIs:
         # - aarch64 instruction set, 64-bit pointers, 64-bit 'long': arm64.
         # - aarch64 instruction set, 32-bit pointers, 32-bit 'long': arm64-ilp32.
         # - 32-bit instruction set, 32-bit pointers, 32-bit 'long': arm or armhf.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#ifdef __aarch64__
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [AC_COMPILE_IFELSE(
              [AC_LANG_SOURCE(
                [[#if defined __ILP32__ || defined _ILP32
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
              [gl_cv_host_cpu_c_abi=arm64-ilp32],
              [gl_cv_host_cpu_c_abi=arm64])],
           [# Don't distinguish little-endian and big-endian arm, since they
            # don't require different machine code for simple operations and
            # since the user can distinguish them through the preprocessor
            # defines __ARMEL__ vs. __ARMEB__.
            # But distinguish arm which passes floating-point arguments and
            # return values in integer registers (r0, r1, ...) - this is
            # gcc -mfloat-abi=soft or gcc -mfloat-abi=softfp - from arm which
            # passes them in float registers (s0, s1, ...) and double registers
            # (d0, d1, ...) - this is gcc -mfloat-abi=hard. GCC 4.6 or newer
            # sets the preprocessor defines __ARM_PCS (for the first case) and
            # __ARM_PCS_VFP (for the second case), but older GCC does not.
            echo 'double ddd; void func (double dd) { ddd = dd; }' > conftest.c
            # Look for a reference to the register d0 in the .s file.
            AC_TRY_COMMAND(${CC-cc} $CFLAGS $CPPFLAGS $gl_c_asm_opt conftest.c) >/dev/null 2>&1
            if LC_ALL=C grep 'd0,' conftest.$gl_asmext >/dev/null; then
              gl_cv_host_cpu_c_abi=armhf
            else
              gl_cv_host_cpu_c_abi=arm
            fi
            rm -f conftest*
           ])
         ;;

       hppa1.0 | hppa1.1 | hppa2.0* | hppa64 )
         # On hppa, the C compiler may be generating 32-bit code or 64-bit
         # code. In the latter case, it defines _LP64 and __LP64__.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#ifdef __LP64__
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [gl_cv_host_cpu_c_abi=hppa64],
           [gl_cv_host_cpu_c_abi=hppa])
         ;;

       ia64* )
         # On ia64 on HP-UX, the C compiler may be generating 64-bit code or
         # 32-bit code. In the latter case, it defines _ILP32.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#ifdef _ILP32
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [gl_cv_host_cpu_c_abi=ia64-ilp32],
           [gl_cv_host_cpu_c_abi=ia64])
         ;;

       mips* )
         # We should also check for (_MIPS_SZPTR == 64), but gcc keeps this
         # at 32.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if defined _MIPS_SZLONG && (_MIPS_SZLONG == 64)
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [gl_cv_host_cpu_c_abi=mips64],
           [# In the n32 ABI, _ABIN32 is defined, _ABIO32 is not defined (but
            # may later get defined by <sgidefs.h>), and _MIPS_SIM == _ABIN32.
            # In the 32 ABI, _ABIO32 is defined, _ABIN32 is not defined (but
            # may later get defined by <sgidefs.h>), and _MIPS_SIM == _ABIO32.
            AC_COMPILE_IFELSE(
              [AC_LANG_SOURCE(
                 [[#if (_MIPS_SIM == _ABIN32)
                    int ok;
                   #else
                    error fail
                   #endif
                 ]])],
              [gl_cv_host_cpu_c_abi=mipsn32],
              [gl_cv_host_cpu_c_abi=mips])])
         ;;

       powerpc* )
         # Different ABIs are in use on AIX vs. Mac OS X vs. Linux,*BSD.
         # No need to distinguish them here; the caller may distinguish
         # them based on the OS.
         # On powerpc64 systems, the C compiler may still be generating
         # 32-bit code. And on powerpc-ibm-aix systems, the C compiler may
         # be generating 64-bit code.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if defined __powerpc64__ || defined __LP64__
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [# On powerpc64, there are two ABIs on Linux: The AIX compatible
            # one and the ELFv2 one. The latter defines _CALL_ELF=2.
            AC_COMPILE_IFELSE(
              [AC_LANG_SOURCE(
                 [[#if defined _CALL_ELF && _CALL_ELF == 2
                    int ok;
                   #else
                    error fail
                   #endif
                 ]])],
              [gl_cv_host_cpu_c_abi=powerpc64-elfv2],
              [gl_cv_host_cpu_c_abi=powerpc64])
           ],
           [gl_cv_host_cpu_c_abi=powerpc])
         ;;

       rs6000 )
         gl_cv_host_cpu_c_abi=powerpc
         ;;

       riscv32 | riscv64 )
         # There are 2 architectures (with variants): rv32* and rv64*.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if __riscv_xlen == 64
                  int ok;
                #else
                  error fail
                #endif
              ]])],
           [cpu=riscv64],
           [cpu=riscv32])
         # There are 6 ABIs: ilp32, ilp32f, ilp32d, lp64, lp64f, lp64d.
         # Size of 'long' and 'void *':
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if defined __LP64__
                  int ok;
                #else
                  error fail
                #endif
              ]])],
           [main_abi=lp64],
           [main_abi=ilp32])
         # Float ABIs:
         # __riscv_float_abi_double:
         #   'float' and 'double' are passed in floating-point registers.
         # __riscv_float_abi_single:
         #   'float' are passed in floating-point registers.
         # __riscv_float_abi_soft:
         #   No values are passed in floating-point registers.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if defined __riscv_float_abi_double
                  int ok;
                #else
                  error fail
                #endif
              ]])],
           [float_abi=d],
           [AC_COMPILE_IFELSE(
              [AC_LANG_SOURCE(
                 [[#if defined __riscv_float_abi_single
                     int ok;
                   #else
                     error fail
                   #endif
                 ]])],
              [float_abi=f],
              [float_abi=''])
           ])
         gl_cv_host_cpu_c_abi="${cpu}-${main_abi}${float_abi}"
         ;;

       s390* )
         # On s390x, the C compiler may be generating 64-bit (= s390x) code
         # or 31-bit (= s390) code.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if defined __LP64__ || defined __s390x__
                  int ok;
                #else
                  error fail
                #endif
              ]])],
           [gl_cv_host_cpu_c_abi=s390x],
           [gl_cv_host_cpu_c_abi=s390])
         ;;

       sparc | sparc64 )
         # UltraSPARCs running Linux have `uname -m` = "sparc64", but the
         # C compiler still generates 32-bit code.
         AC_COMPILE_IFELSE(
           [AC_LANG_SOURCE(
              [[#if defined __sparcv9 || defined __arch64__
                 int ok;
                #else
                 error fail
                #endif
              ]])],
           [gl_cv_host_cpu_c_abi=sparc64],
           [gl_cv_host_cpu_c_abi=sparc])
         ;;

       *)
         gl_cv_host_cpu_c_abi="$host_cpu"
         ;;
     esac
    ])

  dnl In most cases, $HOST_CPU and $HOST_CPU_C_ABI are the same.
  HOST_CPU=`echo "$gl_cv_host_cpu_c_abi" | sed -e 's/-.*//'`
  HOST_CPU_C_ABI="$gl_cv_host_cpu_c_abi"
  AC_SUBST([HOST_CPU])
  AC_SUBST([HOST_CPU_C_ABI])

  # This was
  #   AC_DEFINE_UNQUOTED([__${HOST_CPU}__])
  #   AC_DEFINE_UNQUOTED([__${HOST_CPU_C_ABI}__])
  # earlier, but KAI C++ 3.2d doesn't like this.
  sed -e 's/-/_/g' >> confdefs.h <<EOF
#ifndef __${HOST_CPU}__
#define __${HOST_CPU}__ 1
#endif
#ifndef __${HOST_CPU_C_ABI}__
#define __${HOST_CPU_C_ABI}__ 1
#endif
EOF
  AH_TOP([/* CPU and C ABI indicator */
#ifndef __i386__
#undef __i386__
#endif
#ifndef __x86_64_x32__
#undef __x86_64_x32__
#endif
#ifndef __x86_64__
#undef __x86_64__
#endif
#ifndef __alpha__
#undef __alpha__
#endif
#ifndef __arm__
#undef __arm__
#endif
#ifndef __armhf__
#undef __armhf__
#endif
#ifndef __arm64_ilp32__
#undef __arm64_ilp32__
#endif
#ifndef __arm64__
#undef __arm64__
#endif
#ifndef __hppa__
#undef __hppa__
#endif
#ifndef __hppa64__
#undef __hppa64__
#endif
#ifndef __ia64_ilp32__
#undef __ia64_ilp32__
#endif
#ifndef __ia64__
#undef __ia64__
#endif
#ifndef __m68k__
#undef __m68k__
#endif
#ifndef __mips__
#undef __mips__
#endif
#ifndef __mipsn32__
#undef __mipsn32__
#endif
#ifndef __mips64__
#undef __mips64__
#endif
#ifndef __powerpc__
#undef __powerpc__
#endif
#ifndef __powerpc64__
#undef __powerpc64__
#endif
#ifndef __powerpc64_elfv2__
#undef __powerpc64_elfv2__
#endif
#ifndef __riscv32__
#undef __riscv32__
#endif
#ifndef __riscv64__
#undef __riscv64__
#endif
#ifndef __riscv32_ilp32__
#undef __riscv32_ilp32__
#endif
#ifndef __riscv32_ilp32f__
#undef __riscv32_ilp32f__
#endif
#ifndef __riscv32_ilp32d__
#undef __riscv32_ilp32d__
#endif
#ifndef __riscv64_ilp32__
#undef __riscv64_ilp32__
#endif
#ifndef __riscv64_ilp32f__
#undef __riscv64_ilp32f__
#endif
#ifndef __riscv64_ilp32d__
#undef __riscv64_ilp32d__
#endif
#ifndef __riscv64_lp64__
#undef __riscv64_lp64__
#endif
#ifndef __riscv64_lp64f__
#undef __riscv64_lp64f__
#endif
#ifndef __riscv64_lp64d__
#undef __riscv64_lp64d__
#endif
#ifndef __s390__
#undef __s390__
#endif
#ifndef __s390x__
#undef __s390x__
#endif
#ifndef __sh__
#undef __sh__
#endif
#ifndef __sparc__
#undef __sparc__
#endif
#ifndef __sparc64__
#undef __sparc64__
#endif
])

])
m4trace:m4/host-cpu-c-abi.m4:463: -1- AC_DEFUN([gl_HOST_CPU_C_ABI_32BIT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([32-bit host C ABI], [gl_cv_host_cpu_c_abi_32bit],
    [if test -n "$gl_cv_host_cpu_c_abi"; then
       case "$gl_cv_host_cpu_c_abi" in
         i386 | x86_64-x32 | arm | armhf | arm64-ilp32 | hppa | ia64-ilp32 | mips | mipsn32 | powerpc | riscv*-ilp32* | s390 | sparc)
           gl_cv_host_cpu_c_abi_32bit=yes ;;
         x86_64 | alpha | arm64 | hppa64 | ia64 | mips64 | powerpc64 | powerpc64-elfv2 | riscv*-lp64* | s390x | sparc64 )
           gl_cv_host_cpu_c_abi_32bit=no ;;
         *)
           gl_cv_host_cpu_c_abi_32bit=unknown ;;
       esac
     else
       case "$host_cpu" in

         # CPUs that only support a 32-bit ABI.
         arc \
         | bfin \
         | cris* \
         | csky \
         | epiphany \
         | ft32 \
         | h8300 \
         | m68k \
         | microblaze | microblazeel \
         | nds32 | nds32le | nds32be \
         | nios2 | nios2eb | nios2el \
         | or1k* \
         | or32 \
         | sh | sh[1234] | sh[1234]e[lb] \
         | tic6x \
         | xtensa* )
           gl_cv_host_cpu_c_abi_32bit=yes
           ;;

         # CPUs that only support a 64-bit ABI.
changequote(,)dnl
         alpha | alphaev[4-8] | alphaev56 | alphapca5[67] | alphaev6[78] \
         | mmix )
changequote([,])dnl
           gl_cv_host_cpu_c_abi_32bit=no
           ;;

changequote(,)dnl
         i[34567]86 )
changequote([,])dnl
           gl_cv_host_cpu_c_abi_32bit=yes
           ;;

         x86_64 )
           # On x86_64 systems, the C compiler may be generating code in one of
           # these ABIs:
           # - 64-bit instruction set, 64-bit pointers, 64-bit 'long': x86_64.
           # - 64-bit instruction set, 64-bit pointers, 32-bit 'long': x86_64
           #   with native Windows (mingw, MSVC).
           # - 64-bit instruction set, 32-bit pointers, 32-bit 'long': x86_64-x32.
           # - 32-bit instruction set, 32-bit pointers, 32-bit 'long': i386.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if (defined __x86_64__ || defined __amd64__ \
                       || defined _M_X64 || defined _M_AMD64) \
                      && !(defined __ILP32__ || defined _ILP32)
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         arm* | aarch64 )
           # Assume arm with EABI.
           # On arm64 systems, the C compiler may be generating code in one of
           # these ABIs:
           # - aarch64 instruction set, 64-bit pointers, 64-bit 'long': arm64.
           # - aarch64 instruction set, 32-bit pointers, 32-bit 'long': arm64-ilp32.
           # - 32-bit instruction set, 32-bit pointers, 32-bit 'long': arm or armhf.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if defined __aarch64__ && !(defined __ILP32__ || defined _ILP32)
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         hppa1.0 | hppa1.1 | hppa2.0* | hppa64 )
           # On hppa, the C compiler may be generating 32-bit code or 64-bit
           # code. In the latter case, it defines _LP64 and __LP64__.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#ifdef __LP64__
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         ia64* )
           # On ia64 on HP-UX, the C compiler may be generating 64-bit code or
           # 32-bit code. In the latter case, it defines _ILP32.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#ifdef _ILP32
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=yes],
             [gl_cv_host_cpu_c_abi_32bit=no])
           ;;

         mips* )
           # We should also check for (_MIPS_SZPTR == 64), but gcc keeps this
           # at 32.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if defined _MIPS_SZLONG && (_MIPS_SZLONG == 64)
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         powerpc* )
           # Different ABIs are in use on AIX vs. Mac OS X vs. Linux,*BSD.
           # No need to distinguish them here; the caller may distinguish
           # them based on the OS.
           # On powerpc64 systems, the C compiler may still be generating
           # 32-bit code. And on powerpc-ibm-aix systems, the C compiler may
           # be generating 64-bit code.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if defined __powerpc64__ || defined __LP64__
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         rs6000 )
           gl_cv_host_cpu_c_abi_32bit=yes
           ;;

         riscv32 | riscv64 )
           # There are 6 ABIs: ilp32, ilp32f, ilp32d, lp64, lp64f, lp64d.
           # Size of 'long' and 'void *':
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if defined __LP64__
                    int ok;
                  #else
                    error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         s390* )
           # On s390x, the C compiler may be generating 64-bit (= s390x) code
           # or 31-bit (= s390) code.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if defined __LP64__ || defined __s390x__
                    int ok;
                  #else
                    error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         sparc | sparc64 )
           # UltraSPARCs running Linux have `uname -m` = "sparc64", but the
           # C compiler still generates 32-bit code.
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE(
                [[#if defined __sparcv9 || defined __arch64__
                   int ok;
                  #else
                   error fail
                  #endif
                ]])],
             [gl_cv_host_cpu_c_abi_32bit=no],
             [gl_cv_host_cpu_c_abi_32bit=yes])
           ;;

         *)
           gl_cv_host_cpu_c_abi_32bit=unknown
           ;;
       esac
     fi
    ])

  HOST_CPU_C_ABI_32BIT="$gl_cv_host_cpu_c_abi_32bit"
])
m4trace:m4/iconv.m4:16: -1- AC_DEFUN([AM_ICONV_LINKFLAGS_BODY], [
  dnl Prerequisites of AC_LIB_LINKFLAGS_BODY.
  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
  AC_REQUIRE([AC_LIB_RPATH])

  dnl Search for libiconv and define LIBICONV, LTLIBICONV and INCICONV
  dnl accordingly.
  AC_LIB_LINKFLAGS_BODY([iconv])
])
m4trace:m4/iconv.m4:27: -1- AC_DEFUN([AM_ICONV_LINK], [
  dnl Some systems have iconv in libc, some have it in libiconv (OSF/1 and
  dnl those with the standalone portable GNU libiconv installed).
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Search for libiconv and define LIBICONV, LTLIBICONV and INCICONV
  dnl accordingly.
  AC_REQUIRE([AM_ICONV_LINKFLAGS_BODY])

  dnl Add $INCICONV to CPPFLAGS before performing the following checks,
  dnl because if the user has installed libiconv and not disabled its use
  dnl via --without-libiconv-prefix, he wants to use it. The first
  dnl AC_LINK_IFELSE will then fail, the second AC_LINK_IFELSE will succeed.
  am_save_CPPFLAGS="$CPPFLAGS"
  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INCICONV])

  AC_CACHE_CHECK([for iconv], [am_cv_func_iconv], [
    am_cv_func_iconv="no, consider installing GNU libiconv"
    am_cv_lib_iconv=no
    AC_LINK_IFELSE(
      [AC_LANG_PROGRAM(
         [[
#include <stdlib.h>
#include <iconv.h>
         ]],
         [[iconv_t cd = iconv_open("","");
           iconv(cd,NULL,NULL,NULL,NULL);
           iconv_close(cd);]])],
      [am_cv_func_iconv=yes])
    if test "$am_cv_func_iconv" != yes; then
      am_save_LIBS="$LIBS"
      LIBS="$LIBS $LIBICONV"
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[
#include <stdlib.h>
#include <iconv.h>
           ]],
           [[iconv_t cd = iconv_open("","");
             iconv(cd,NULL,NULL,NULL,NULL);
             iconv_close(cd);]])],
        [am_cv_lib_iconv=yes]
        [am_cv_func_iconv=yes])
      LIBS="$am_save_LIBS"
    fi
  ])
  if test "$am_cv_func_iconv" = yes; then
    AC_CACHE_CHECK([for working iconv], [am_cv_func_iconv_works], [
      dnl This tests against bugs in AIX 5.1, AIX 6.1..7.1, HP-UX 11.11,
      dnl Solaris 10.
      am_save_LIBS="$LIBS"
      if test $am_cv_lib_iconv = yes; then
        LIBS="$LIBS $LIBICONV"
      fi
      am_cv_func_iconv_works=no
      for ac_iconv_const in '' 'const'; do
        AC_RUN_IFELSE(
          [AC_LANG_PROGRAM(
             [[
#include <iconv.h>
#include <string.h>

#ifndef ICONV_CONST
# define ICONV_CONST $ac_iconv_const
#endif
             ]],
             [[int result = 0;
  /* Test against AIX 5.1...7.2 bug: Failures are not distinguishable from
     successful returns.  This is even documented in
     <https://www.ibm.com/support/knowledgecenter/ssw_aix_72/i_bostechref/iconv.html> */
  {
    iconv_t cd_utf8_to_88591 = iconv_open ("ISO8859-1", "UTF-8");
    if (cd_utf8_to_88591 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\342\202\254"; /* EURO SIGN */
        char buf[10];
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = strlen (input);
        char *outptr = buf;
        size_t outbytesleft = sizeof (buf);
        size_t res = iconv (cd_utf8_to_88591,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if (res == 0)
          result |= 1;
        iconv_close (cd_utf8_to_88591);
      }
  }
  /* Test against Solaris 10 bug: Failures are not distinguishable from
     successful returns.  */
  {
    iconv_t cd_ascii_to_88591 = iconv_open ("ISO8859-1", "646");
    if (cd_ascii_to_88591 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\263";
        char buf[10];
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = strlen (input);
        char *outptr = buf;
        size_t outbytesleft = sizeof (buf);
        size_t res = iconv (cd_ascii_to_88591,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if (res == 0)
          result |= 2;
        iconv_close (cd_ascii_to_88591);
      }
  }
  /* Test against AIX 6.1..7.1 bug: Buffer overrun.  */
  {
    iconv_t cd_88591_to_utf8 = iconv_open ("UTF-8", "ISO-8859-1");
    if (cd_88591_to_utf8 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\304";
        static char buf[2] = { (char)0xDE, (char)0xAD };
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = 1;
        char *outptr = buf;
        size_t outbytesleft = 1;
        size_t res = iconv (cd_88591_to_utf8,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if (res != (size_t)(-1) || outptr - buf > 1 || buf[1] != (char)0xAD)
          result |= 4;
        iconv_close (cd_88591_to_utf8);
      }
  }
#if 0 /* This bug could be worked around by the caller.  */
  /* Test against HP-UX 11.11 bug: Positive return value instead of 0.  */
  {
    iconv_t cd_88591_to_utf8 = iconv_open ("utf8", "iso88591");
    if (cd_88591_to_utf8 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\304rger mit b\366sen B\374bchen ohne Augenma\337";
        char buf[50];
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = strlen (input);
        char *outptr = buf;
        size_t outbytesleft = sizeof (buf);
        size_t res = iconv (cd_88591_to_utf8,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if ((int)res > 0)
          result |= 8;
        iconv_close (cd_88591_to_utf8);
      }
  }
#endif
  /* Test against HP-UX 11.11 bug: No converter from EUC-JP to UTF-8 is
     provided.  */
  {
    /* Try standardized names.  */
    iconv_t cd1 = iconv_open ("UTF-8", "EUC-JP");
    /* Try IRIX, OSF/1 names.  */
    iconv_t cd2 = iconv_open ("UTF-8", "eucJP");
    /* Try AIX names.  */
    iconv_t cd3 = iconv_open ("UTF-8", "IBM-eucJP");
    /* Try HP-UX names.  */
    iconv_t cd4 = iconv_open ("utf8", "eucJP");
    if (cd1 == (iconv_t)(-1) && cd2 == (iconv_t)(-1)
        && cd3 == (iconv_t)(-1) && cd4 == (iconv_t)(-1))
      result |= 16;
    if (cd1 != (iconv_t)(-1))
      iconv_close (cd1);
    if (cd2 != (iconv_t)(-1))
      iconv_close (cd2);
    if (cd3 != (iconv_t)(-1))
      iconv_close (cd3);
    if (cd4 != (iconv_t)(-1))
      iconv_close (cd4);
  }
  return result;
]])],
          [am_cv_func_iconv_works=yes], ,
          [case "$host_os" in
             aix* | hpux*) am_cv_func_iconv_works="guessing no" ;;
             *)            am_cv_func_iconv_works="guessing yes" ;;
           esac])
        test "$am_cv_func_iconv_works" = no || break
      done
      LIBS="$am_save_LIBS"
    ])
    case "$am_cv_func_iconv_works" in
      *no) am_func_iconv=no am_cv_lib_iconv=no ;;
      *)   am_func_iconv=yes ;;
    esac
  else
    am_func_iconv=no am_cv_lib_iconv=no
  fi
  if test "$am_func_iconv" = yes; then
    AC_DEFINE([HAVE_ICONV], [1],
      [Define if you have the iconv() function and it works.])
  fi
  if test "$am_cv_lib_iconv" = yes; then
    AC_MSG_CHECKING([how to link with libiconv])
    AC_MSG_RESULT([$LIBICONV])
  else
    dnl If $LIBICONV didn't lead to a usable library, we don't need $INCICONV
    dnl either.
    CPPFLAGS="$am_save_CPPFLAGS"
    LIBICONV=
    LTLIBICONV=
  fi
  AC_SUBST([LIBICONV])
  AC_SUBST([LTLIBICONV])
])
m4trace:m4/iconv.m4:243: -1- AC_DEFUN_ONCE([AM_ICONV], [
  AM_ICONV_LINK
  if test "$am_cv_func_iconv" = yes; then
    AC_CACHE_CHECK([whether iconv is compatible with its POSIX signature],
      [gl_cv_iconv_nonconst],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[
#include <stdlib.h>
#include <iconv.h>
extern
#ifdef __cplusplus
"C"
#endif
size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
            ]],
            [[]])],
         [gl_cv_iconv_nonconst=yes],
         [gl_cv_iconv_nonconst=no])
      ])
  else
    dnl When compiling GNU libiconv on a system that does not have iconv yet,
    dnl pick the POSIX compliant declaration without 'const'.
    gl_cv_iconv_nonconst=yes
  fi
  if test $gl_cv_iconv_nonconst = yes; then
    iconv_arg1=""
  else
    iconv_arg1="const"
  fi
  AC_DEFINE_UNQUOTED([ICONV_CONST], [$iconv_arg1],
    [Define as const if the declaration of iconv() needs const.])
  dnl Also substitute ICONV_CONST in the gnulib generated <iconv.h>.
  m4_ifdef([gl_ICONV_H_DEFAULTS],
    [AC_REQUIRE([gl_ICONV_H_DEFAULTS])
     if test $gl_cv_iconv_nonconst != yes; then
       ICONV_CONST="const"
     fi
    ])
])
m4trace:m4/iconv_h.m4:7: -1- AC_DEFUN_ONCE([gl_ICONV_H], [
  AC_REQUIRE([gl_ICONV_H_DEFAULTS])

  dnl Execute this unconditionally, because ICONV_H may be set by other
  dnl modules, after this code is executed.
  gl_CHECK_NEXT_HEADERS([iconv.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <iconv.h>
    ]], [iconv iconv_open])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/iconv_h.m4:25: -1- AC_DEFUN([gl_REPLACE_ICONV_H], [
  gl_ICONV_H_REQUIRE_DEFAULTS
  ICONV_H='iconv.h'
  AM_CONDITIONAL([GL_GENERATE_ICONV_H], [test -n "$ICONV_H"])
])
m4trace:m4/iconv_h.m4:36: -1- AC_DEFUN([gl_ICONV_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_ICONV_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/iconv_h.m4:46: -1- AC_DEFUN([gl_ICONV_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_ICONV_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ICONV])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_ICONV_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_ICONV_H_DEFAULTS])
])
m4trace:m4/iconv_h.m4:55: -1- AC_DEFUN([gl_ICONV_H_DEFAULTS], [
  m4_ifdef([gl_ANSI_CXX], [AC_REQUIRE([gl_ANSI_CXX])])
  dnl Assume proper GNU behavior unless another module says otherwise.
  ICONV_CONST=;         AC_SUBST([ICONV_CONST])
  REPLACE_ICONV=0;      AC_SUBST([REPLACE_ICONV])
  REPLACE_ICONV_OPEN=0; AC_SUBST([REPLACE_ICONV_OPEN])
  REPLACE_ICONV_UTF=0;  AC_SUBST([REPLACE_ICONV_UTF])
  ICONV_H='';           AC_SUBST([ICONV_H])
  m4_ifdef([gl_POSIXCHECK],
    [ICONV_H='iconv.h'],
    [if m4_ifdef([gl_ANSI_CXX], [test "$CXX" != no], [false]); then
       dnl Override <fnmatch.h> always, to support the C++ GNULIB_NAMESPACE.
       ICONV_H='iconv.h'
     fi
    ])
  AM_CONDITIONAL([GL_GENERATE_ICONV_H], [test -n "$ICONV_H"])
])
m4trace:m4/iconv_open.m4:7: -1- AC_DEFUN([gl_FUNC_ICONV_OPEN], [
  AC_REQUIRE([AM_ICONV])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_ICONV_H_DEFAULTS])
  if test "$am_cv_func_iconv" = yes; then
    dnl Provide the <iconv.h> override, for the sake of the C++ aliases.
    gl_REPLACE_ICONV_H
    dnl Test whether iconv_open accepts standardized encoding names.
    dnl We know that GNU libiconv and GNU libc do.
    AC_EGREP_CPP([gnu_iconv], [
      #include <iconv.h>
      #if defined _LIBICONV_VERSION || (defined __GLIBC__ && !defined __UCLIBC__)
       gnu_iconv
      #endif
      ], [gl_func_iconv_gnu=yes], [gl_func_iconv_gnu=no])
    if test $gl_func_iconv_gnu = no; then
      iconv_flavor=
      case "$host_os" in
        aix*)         iconv_flavor=ICONV_FLAVOR_AIX ;;
        irix*)        iconv_flavor=ICONV_FLAVOR_IRIX ;;
        hpux*)        iconv_flavor=ICONV_FLAVOR_HPUX ;;
        osf*)         iconv_flavor=ICONV_FLAVOR_OSF ;;
        solaris*)     iconv_flavor=ICONV_FLAVOR_SOLARIS ;;
        openedition*) iconv_flavor=ICONV_FLAVOR_ZOS ;;
      esac
      if test -n "$iconv_flavor"; then
        AC_DEFINE_UNQUOTED([ICONV_FLAVOR], [$iconv_flavor],
          [Define to a symbolic name denoting the flavor of iconv_open()
           implementation.])
        gl_REPLACE_ICONV_OPEN
      fi
    fi
    m4_ifdef([gl_FUNC_ICONV_OPEN_UTF_SUPPORT], [
      gl_FUNC_ICONV_OPEN_UTF_SUPPORT
      case "$gl_cv_func_iconv_supports_utf" in
        *yes) ;;
        *)
          REPLACE_ICONV_UTF=1
          AC_DEFINE([REPLACE_ICONV_UTF], [1],
            [Define if the iconv() functions are enhanced to handle the UTF-{16,32}{BE,LE} encodings.])
          REPLACE_ICONV=1
          gl_REPLACE_ICONV_OPEN
          ;;
      esac
    ])
  fi
])
m4trace:m4/iconv_open.m4:56: -1- AC_DEFUN([gl_REPLACE_ICONV_OPEN], [
  gl_REPLACE_ICONV_H
  REPLACE_ICONV_OPEN=1
])
m4trace:m4/include_next.m4:36: -1- AC_DEFUN([gl_INCLUDE_NEXT], [
  AC_LANG_PREPROC_REQUIRE()
  AC_CACHE_CHECK([whether the preprocessor supports include_next],
    [gl_cv_have_include_next],
    [rm -rf conftestd1a conftestd1b conftestd2
     mkdir conftestd1a conftestd1b conftestd2
     dnl IBM C 9.0, 10.1 (original versions, prior to the 2009-01 updates) on
     dnl AIX 6.1 support include_next when used as first preprocessor directive
     dnl in a file, but not when preceded by another include directive. Check
     dnl for this bug by including <stdio.h>.
     dnl Additionally, with this same compiler, include_next is a no-op when
     dnl used in a header file that was included by specifying its absolute
     dnl file name. Despite these two bugs, include_next is used in the
     dnl compiler's <math.h>. By virtue of the second bug, we need to use
     dnl include_next as well in this case.
     cat <<EOF > conftestd1a/conftest.h
#define DEFINED_IN_CONFTESTD1
#include_next <conftest.h>
#ifdef DEFINED_IN_CONFTESTD2
int foo;
#else
#error "include_next doesn't work"
#endif
EOF
     cat <<EOF > conftestd1b/conftest.h
#define DEFINED_IN_CONFTESTD1
#include <stdio.h>
#include_next <conftest.h>
#ifdef DEFINED_IN_CONFTESTD2
int foo;
#else
#error "include_next doesn't work"
#endif
EOF
     cat <<EOF > conftestd2/conftest.h
#ifndef DEFINED_IN_CONFTESTD1
#error "include_next test doesn't work"
#endif
#define DEFINED_IN_CONFTESTD2
EOF
     gl_save_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="$gl_save_CPPFLAGS -Iconftestd1b -Iconftestd2"
dnl We intentionally avoid using AC_LANG_SOURCE here.
     AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[#include <conftest.h>]],
       [gl_cv_have_include_next=yes],
       [CPPFLAGS="$gl_save_CPPFLAGS -Iconftestd1a -Iconftestd2"
        AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[#include <conftest.h>]],
          [gl_cv_have_include_next=buggy],
          [gl_cv_have_include_next=no])
       ])
     CPPFLAGS="$gl_save_CPPFLAGS"
     rm -rf conftestd1a conftestd1b conftestd2
    ])
  PRAGMA_SYSTEM_HEADER=
  if test $gl_cv_have_include_next = yes; then
    INCLUDE_NEXT=include_next
    INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include_next
    if test -n "$GCC"; then
      PRAGMA_SYSTEM_HEADER='#pragma GCC system_header'
    fi
  else
    if test $gl_cv_have_include_next = buggy; then
      INCLUDE_NEXT=include
      INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include_next
    else
      INCLUDE_NEXT=include
      INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include
    fi
  fi
  AC_SUBST([INCLUDE_NEXT])
  AC_SUBST([INCLUDE_NEXT_AS_FIRST_DIRECTIVE])
  AC_SUBST([PRAGMA_SYSTEM_HEADER])

  dnl HP NonStop systems, which define __TANDEM, limit the line length
  dnl after including some system header files.
  AC_CACHE_CHECK([whether source code line length is unlimited],
    [gl_cv_source_line_length_unlimited],
    [AC_EGREP_CPP([choke me],
       [
#ifdef __TANDEM
choke me
#endif
       ],
       [gl_cv_source_line_length_unlimited=no],
       [gl_cv_source_line_length_unlimited=yes])
    ])
  if test $gl_cv_source_line_length_unlimited = no; then
    PRAGMA_COLUMNS="#pragma COLUMNS 10000"
  else
    PRAGMA_COLUMNS=
  fi
  AC_SUBST([PRAGMA_COLUMNS])
])
m4trace:m4/include_next.m4:156: -1- AC_DEFUN([gl_CHECK_NEXT_HEADERS], [
  gl_NEXT_HEADERS_INTERNAL([$1], [check])
])
m4trace:m4/include_next.m4:166: -1- AC_DEFUN([gl_NEXT_HEADERS], [
  gl_NEXT_HEADERS_INTERNAL([$1], [assume])
])
m4trace:m4/include_next.m4:172: -1- AC_DEFUN([gl_NEXT_HEADERS_INTERNAL], [
  AC_REQUIRE([gl_INCLUDE_NEXT])
  AC_REQUIRE([AC_CANONICAL_HOST])

  m4_if([$2], [check],
    [AC_CHECK_HEADERS_ONCE([$1])
    ])

  m4_foreach_w([gl_HEADER_NAME], [$1],
    [AS_VAR_PUSHDEF([gl_next_header],
                    [gl_cv_next_]m4_defn([gl_HEADER_NAME]))
     if test $gl_cv_have_include_next = yes; then
       AS_VAR_SET([gl_next_header], ['<'gl_HEADER_NAME'>'])
     else
       AC_CACHE_CHECK(
         [absolute name of <]m4_defn([gl_HEADER_NAME])[>],
         [gl_next_header],
         [m4_if([$2], [check],
            [AS_VAR_PUSHDEF([gl_header_exists],
                            [ac_cv_header_]m4_defn([gl_HEADER_NAME]))
             if test AS_VAR_GET([gl_header_exists]) = yes; then
             AS_VAR_POPDEF([gl_header_exists])
            ])
           gl_ABSOLUTE_HEADER_ONE(gl_HEADER_NAME)
           AS_VAR_COPY([gl_header], [gl_cv_absolute_]AS_TR_SH(gl_HEADER_NAME))
           AS_VAR_SET([gl_next_header], ['"'$gl_header'"'])
          m4_if([$2], [check],
            [else
               AS_VAR_SET([gl_next_header], ['<'gl_HEADER_NAME'>'])
             fi
            ])
         ])
     fi
     AC_SUBST(
       AS_TR_CPP([NEXT_]m4_defn([gl_HEADER_NAME])),
       [AS_VAR_GET([gl_next_header])])
     if test $gl_cv_have_include_next = yes || test $gl_cv_have_include_next = buggy; then
       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include_next'
       gl_next_as_first_directive='<'gl_HEADER_NAME'>'
     else
       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include'
       gl_next_as_first_directive=AS_VAR_GET([gl_next_header])
     fi
     AC_SUBST(
       AS_TR_CPP([NEXT_AS_FIRST_DIRECTIVE_]m4_defn([gl_HEADER_NAME])),
       [$gl_next_as_first_directive])
     AS_VAR_POPDEF([gl_next_header])])
])
m4trace:m4/inline.m4:12: -1- AC_DEFUN([gl_INLINE], [
  AC_REQUIRE([AC_C_INLINE])
  AC_CACHE_CHECK([whether the compiler generally respects inline],
    [gl_cv_c_inline_effective],
    [if test $ac_cv_c_inline = no; then
       gl_cv_c_inline_effective=no
     else
       dnl GCC defines __NO_INLINE__ if not optimizing or if -fno-inline is
       dnl specified.
       dnl Use AC_COMPILE_IFELSE here, not AC_EGREP_CPP, because the result
       dnl depends on optimization flags, which can be in CFLAGS.
       dnl (AC_EGREP_CPP looks only at the CPPFLAGS.)
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[]],
           [[#ifdef __NO_INLINE__
               #error "inline is not effective"
             #endif]])],
         [gl_cv_c_inline_effective=yes],
         [gl_cv_c_inline_effective=no])
     fi
    ])
  if test $gl_cv_c_inline_effective = yes; then
    AC_DEFINE([HAVE_INLINE], [1],
      [Define to 1 if the compiler supports one of the keywords
       'inline', '__inline__', '__inline' and effectively inlines
       functions marked as such.])
  fi
])
m4trace:m4/intl-thread-locale.m4:18: -1- AC_DEFUN([gt_INTL_THREAD_LOCALE_NAME], [
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl Persuade Solaris <locale.h> to define 'locale_t'.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl Test whether uselocale() exists and works at all.
  gt_FUNC_USELOCALE

  dnl On OpenBSD >= 6.2, the locale_t type and the uselocale(), newlocale(),
  dnl duplocale(), freelocale() functions exist but are effectively useless,
  dnl because the locale_t value depends only on the LC_CTYPE category of the
  dnl locale and furthermore contains only one bit of information (it
  dnl distinguishes the "C" locale from the *.UTF-8 locales). See
  dnl <https://cvsweb.openbsd.org/src/lib/libc/locale/newlocale.c?rev=1.1&content-type=text/x-cvsweb-markup>.
  dnl In the setlocale() implementation they have thought about the programs
  dnl that use the API ("Even though only LC_CTYPE has any effect in the
  dnl OpenBSD base system, store complete information about the global locale,
  dnl such that third-party software can access it"), but for uselocale()
  dnl they did not think about the programs.
  dnl In this situation, even the HAVE_NAMELESS_LOCALES support does not work.
  dnl So, define HAVE_FAKE_LOCALES and disable all locale_t support.
  case "$gt_cv_func_uselocale_works" in
    *yes)
      AC_CHECK_HEADERS_ONCE([xlocale.h])
      AC_CACHE_CHECK([for fake locale system (OpenBSD)],
        [gt_cv_locale_fake],
        [AC_RUN_IFELSE(
           [AC_LANG_SOURCE([[
#include <locale.h>
#if HAVE_XLOCALE_H
# include <xlocale.h>
#endif
int main ()
{
  locale_t loc1, loc2;
  if (setlocale (LC_ALL, "de_DE.UTF-8") == NULL) return 1;
  if (setlocale (LC_ALL, "fr_FR.UTF-8") == NULL) return 1;
  loc1 = newlocale (LC_ALL_MASK, "de_DE.UTF-8", (locale_t)0);
  loc2 = newlocale (LC_ALL_MASK, "fr_FR.UTF-8", (locale_t)0);
  return !(loc1 == loc2);
}]])],
           [gt_cv_locale_fake=yes],
           [gt_cv_locale_fake=no],
           [dnl Guess the locale system is fake only on OpenBSD.
            case "$host_os" in
              openbsd*) gt_cv_locale_fake="guessing yes" ;;
              *)        gt_cv_locale_fake="guessing no" ;;
            esac
           ])
        ])
      ;;
    *) gt_cv_locale_fake=no ;;
  esac
  case "$gt_cv_locale_fake" in
    *yes)
      gt_fake_locales=yes
      AC_DEFINE([HAVE_FAKE_LOCALES], [1],
        [Define if the locale_t type contains insufficient information, as on OpenBSD.])
      ;;
    *)
      gt_fake_locales=no
      ;;
  esac

  case "$gt_cv_func_uselocale_works" in
    *yes)
      AC_CACHE_CHECK([for Solaris 11.4 locale system],
        [gt_cv_locale_solaris114],
        [case "$host_os" in
           solaris*)
             dnl Test whether <locale.h> defines locale_t as a typedef of
             dnl 'struct _LC_locale_t **' (whereas Illumos defines it as a
             dnl typedef of 'struct _locale *').
             dnl Another possible test would be to include <sys/localedef.h>
             dnl and test whether it defines the _LC_core_data_locale_t type.
             dnl This type was added in Solaris 11.4.
             AC_COMPILE_IFELSE(
               [AC_LANG_PROGRAM([[
                  #include <locale.h>
                  struct _LC_locale_t *x;
                  locale_t y;
                ]],
                [[*y = x;]])],
               [gt_cv_locale_solaris114=yes],
               [gt_cv_locale_solaris114=no])
             ;;
           *) gt_cv_locale_solaris114=no ;;
         esac
        ])
      ;;
    *) gt_cv_locale_solaris114=no ;;
  esac
  if test $gt_cv_locale_solaris114 = yes; then
    AC_DEFINE([HAVE_SOLARIS114_LOCALES], [1],
      [Define if the locale_t type is as on Solaris 11.4.])
  fi

  dnl Solaris 12 will maybe provide getlocalename_l.  If it does, it will
  dnl improve the implementation of gl_locale_name_thread(), by removing
  dnl the use of undocumented structures.
  case "$gt_cv_func_uselocale_works" in
    *yes)
      AC_CHECK_FUNCS([getlocalename_l])
      ;;
  esac

  dnl This code is for platforms where the locale_t type does not provide access
  dnl to the name of each locale category.  This code has the drawback that it
  dnl requires the gnulib overrides of 'newlocale', 'duplocale', 'freelocale',
  dnl which is a problem for GNU libunistring.  Therefore try hard to avoid
  dnl enabling this code!
  gt_nameless_locales=no
  case "$host_os" in
    dnl It's needed on AIX 7.2.
    aix*)
      gt_nameless_locales=yes
      AC_DEFINE([HAVE_NAMELESS_LOCALES], [1],
        [Define if the locale_t type does not contain the name of each locale category.])
      ;;
  esac

  dnl We cannot support uselocale() on platforms where the locale_t type is
  dnl fake.  So, set
  dnl   gt_good_uselocale = gt_working_uselocale && !gt_fake_locales.
  if test $gt_working_uselocale = yes && test $gt_fake_locales = no; then
    gt_good_uselocale=yes
    AC_DEFINE([HAVE_GOOD_USELOCALE], [1],
      [Define if the uselocale exists, may be safely called, and returns sufficient information.])
  else
    gt_good_uselocale=no
  fi

  dnl Set gt_localename_enhances_locale_funcs to indicate whether localename.c
  dnl overrides newlocale(), duplocale(), freelocale() to keep track of locale
  dnl names.
  if test $gt_good_uselocale = yes && test $gt_nameless_locales = yes; then
    gt_localename_enhances_locale_funcs=yes
    LOCALENAME_ENHANCE_LOCALE_FUNCS=1
    AC_DEFINE([LOCALENAME_ENHANCE_LOCALE_FUNCS], [1],
      [Define if localename.c overrides newlocale(), duplocale(), freelocale().])
  else
    gt_localename_enhances_locale_funcs=no
  fi
])
m4trace:m4/intl-thread-locale.m4:167: -1- AC_DEFUN([gt_FUNC_USELOCALE], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Persuade glibc and Solaris <locale.h> to define 'locale_t'.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([uselocale])

  dnl On AIX 7.2, the uselocale() function is not documented and leads to
  dnl crashes in subsequent setlocale() invocations.
  dnl In 2019, some versions of z/OS lack the locale_t type and have a broken
  dnl uselocale function.
  if test $ac_cv_func_uselocale = yes; then
    AC_CHECK_HEADERS_ONCE([xlocale.h])
    AC_CACHE_CHECK([whether uselocale works],
      [gt_cv_func_uselocale_works],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE([[
#include <locale.h>
#if HAVE_XLOCALE_H
# include <xlocale.h>
#endif
locale_t loc1;
int main ()
{
  uselocale (NULL);
  setlocale (LC_ALL, "en_US.UTF-8");
  return 0;
}]])],
         [gt_cv_func_uselocale_works=yes],
         [gt_cv_func_uselocale_works=no],
         [# Guess no on AIX and z/OS, yes otherwise.
          case "$host_os" in
            aix* | openedition*) gt_cv_func_uselocale_works="guessing no" ;;
            *)                   gt_cv_func_uselocale_works="guessing yes" ;;
          esac
         ])
      ])
  else
    gt_cv_func_uselocale_works=no
  fi
  case "$gt_cv_func_uselocale_works" in
    *yes)
      gt_working_uselocale=yes
      AC_DEFINE([HAVE_WORKING_USELOCALE], [1],
        [Define if the uselocale function exists and may safely be called.])
      ;;
    *)
      gt_working_uselocale=no
      ;;
  esac
])
m4trace:m4/intlmacosx.m4:18: -1- AC_DEFUN([gt_INTL_MACOSX], [
  dnl Check for API introduced in Mac OS X 10.4.
  AC_CACHE_CHECK([for CFPreferencesCopyAppValue],
    [gt_cv_func_CFPreferencesCopyAppValue],
    [gt_save_LIBS="$LIBS"
     LIBS="$LIBS -Wl,-framework -Wl,CoreFoundation"
     AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <CoreFoundation/CFPreferences.h>]],
          [[CFPreferencesCopyAppValue(NULL, NULL)]])],
       [gt_cv_func_CFPreferencesCopyAppValue=yes],
       [gt_cv_func_CFPreferencesCopyAppValue=no])
     LIBS="$gt_save_LIBS"])
  if test $gt_cv_func_CFPreferencesCopyAppValue = yes; then
    AC_DEFINE([HAVE_CFPREFERENCESCOPYAPPVALUE], [1],
      [Define to 1 if you have the Mac OS X function CFPreferencesCopyAppValue in the CoreFoundation framework.])
  fi
  dnl Don't check for the API introduced in Mac OS X 10.5, CFLocaleCopyCurrent,
  dnl because in macOS 10.13.4 it has the following behaviour:
  dnl When two or more languages are specified in the
  dnl "System Preferences > Language & Region > Preferred Languages" panel,
  dnl it returns en_CC where CC is the territory (even when English is not among
  dnl the preferred languages!).  What we want instead is what
  dnl CFLocaleCopyCurrent returned in earlier macOS releases and what
  dnl CFPreferencesCopyAppValue still returns, namely ll_CC where ll is the
  dnl first among the preferred languages and CC is the territory.
  AC_CACHE_CHECK([for CFLocaleCopyPreferredLanguages], [gt_cv_func_CFLocaleCopyPreferredLanguages],
    [gt_save_LIBS="$LIBS"
     LIBS="$LIBS -Wl,-framework -Wl,CoreFoundation"
     AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <CoreFoundation/CFLocale.h>]],
          [[CFLocaleCopyPreferredLanguages();]])],
       [gt_cv_func_CFLocaleCopyPreferredLanguages=yes],
       [gt_cv_func_CFLocaleCopyPreferredLanguages=no])
     LIBS="$gt_save_LIBS"])
  if test $gt_cv_func_CFLocaleCopyPreferredLanguages = yes; then
    AC_DEFINE([HAVE_CFLOCALECOPYPREFERREDLANGUAGES], [1],
      [Define to 1 if you have the Mac OS X function CFLocaleCopyPreferredLanguages in the CoreFoundation framework.])
  fi
  INTL_MACOSX_LIBS=
  if test $gt_cv_func_CFPreferencesCopyAppValue = yes \
     || test $gt_cv_func_CFLocaleCopyPreferredLanguages = yes; then
    INTL_MACOSX_LIBS="-Wl,-framework -Wl,CoreFoundation"
  fi
  AC_SUBST([INTL_MACOSX_LIBS])
])
m4trace:m4/intmax_t.m4:15: -1- AC_DEFUN([gl_AC_TYPE_INTMAX_T], [
  dnl For simplicity, we assume that a header file defines 'intmax_t' if and
  dnl only if it defines 'uintmax_t'.
  AC_REQUIRE([gl_AC_HEADER_INTTYPES_H])
  AC_REQUIRE([gl_AC_HEADER_STDINT_H])
  if test $gl_cv_header_inttypes_h = no && test $gl_cv_header_stdint_h = no; then
    AC_DEFINE_UNQUOTED([intmax_t], [long long],
     [Define to long or long long if <inttypes.h> and <stdint.h> don't define.])
  else
    AC_DEFINE([HAVE_INTMAX_T], [1],
      [Define if you have the 'intmax_t' type in <stdint.h> or <inttypes.h>.])
  fi
])
m4trace:m4/intmax_t.m4:32: -1- AC_DEFUN([gt_AC_TYPE_INTMAX_T], [
  AC_REQUIRE([gl_AC_HEADER_INTTYPES_H])
  AC_REQUIRE([gl_AC_HEADER_STDINT_H])
  AC_CACHE_CHECK([for intmax_t], [gt_cv_c_intmax_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[
#include <stddef.h>
#include <stdlib.h>
#if HAVE_STDINT_H_WITH_UINTMAX
#include <stdint.h>
#endif
#if HAVE_INTTYPES_H_WITH_UINTMAX
#include <inttypes.h>
#endif
          ]],
          [[intmax_t x = -1; return !x;]])],
       [gt_cv_c_intmax_t=yes],
       [gt_cv_c_intmax_t=no])])
  if test $gt_cv_c_intmax_t = yes; then
    AC_DEFINE([HAVE_INTMAX_T], [1],
      [Define if you have the 'intmax_t' type in <stdint.h> or <inttypes.h>.])
  else
    AC_DEFINE_UNQUOTED([intmax_t], [long long],
     [Define to long or long long if <stdint.h> and <inttypes.h> don't define.])
  fi
])
m4trace:m4/inttypes.m4:10: -1- AC_DEFUN_ONCE([gl_INTTYPES_H], [
  AC_REQUIRE([gl_INTTYPES_INCOMPLETE])
  gl_INTTYPES_PRI_SCN
])
m4trace:m4/inttypes.m4:16: -1- AC_DEFUN_ONCE([gl_INTTYPES_INCOMPLETE], [
  AC_REQUIRE([gl_STDINT_H])
  AC_CHECK_HEADERS_ONCE([inttypes.h])

  dnl Override <inttypes.h> always, so that the portability warnings work.
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])
  gl_CHECK_NEXT_HEADERS([inttypes.h])

  AC_REQUIRE([gl_MULTIARCH])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <inttypes.h>
    ]], [imaxabs imaxdiv strtoimax strtoumax])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/inttypes.m4:36: -1- AC_DEFUN([gl_INTTYPES_PRI_SCN], [
  PRIPTR_PREFIX=
  if test -n "$STDINT_H"; then
    dnl Using the gnulib <stdint.h>. It defines intptr_t to 'long' or
    dnl 'long long', depending on _WIN64.
    AC_COMPILE_IFELSE(
      [AC_LANG_PROGRAM([[
         #ifdef _WIN64
         LLP64
         #endif
         ]])
      ],
      [PRIPTR_PREFIX='"l"'],
      [PRIPTR_PREFIX='"ll"'])
  else
    dnl Using the system's <stdint.h>.
    for glpfx in '' l ll I64; do
      case $glpfx in
        '')  gltype1='int';;
        l)   gltype1='long int';;
        ll)  gltype1='long long int';;
        I64) gltype1='__int64';;
      esac
      AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([[#include <stdint.h>
           extern intptr_t foo;
           extern $gltype1 foo;]])],
        [PRIPTR_PREFIX='"'$glpfx'"'])
      test -n "$PRIPTR_PREFIX" && break
    done
  fi
  AC_SUBST([PRIPTR_PREFIX])

  gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
    [INT32_MAX_LT_INTMAX_MAX],
    [defined INT32_MAX && defined INTMAX_MAX],
    [INT32_MAX < INTMAX_MAX],
    [sizeof (int) < sizeof (long long int)])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
      [INT64_MAX_EQ_LONG_MAX],
      [defined INT64_MAX],
      [INT64_MAX == LONG_MAX],
      [sizeof (long long int) == sizeof (long int)])
  else
    INT64_MAX_EQ_LONG_MAX=-1
  fi
  gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
    [UINT32_MAX_LT_UINTMAX_MAX],
    [defined UINT32_MAX && defined UINTMAX_MAX],
    [UINT32_MAX < UINTMAX_MAX],
    [sizeof (unsigned int) < sizeof (unsigned long long int)])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
      [UINT64_MAX_EQ_ULONG_MAX],
      [defined UINT64_MAX],
      [UINT64_MAX == ULONG_MAX],
      [sizeof (unsigned long long int) == sizeof (unsigned long int)])
  else
    UINT64_MAX_EQ_ULONG_MAX=-1
  fi
])
m4trace:m4/inttypes.m4:106: -1- AC_DEFUN([gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION], [
  AC_CACHE_CHECK([whether $3],
    [gl_cv_test_$1],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[/* Work also in C++ mode.  */
            #define __STDC_LIMIT_MACROS 1

            /* Work if build is not clean.  */
            #define _GL_JUST_INCLUDE_SYSTEM_STDINT_H

            #include <limits.h>
            #if HAVE_STDINT_H
             #include <stdint.h>
            #endif

            #if $2
             #define CONDITION ($3)
            #else
             #define CONDITION ($4)
            #endif
            int test[CONDITION ? 1 : -1];]])],
       [gl_cv_test_$1=yes],
       [gl_cv_test_$1=no])])
  if test $gl_cv_test_$1 = yes; then
    $1=1;
  else
    $1=0;
  fi
  AC_SUBST([$1])
])
m4trace:m4/inttypes.m4:143: -1- AC_DEFUN([gl_INTTYPES_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_INTTYPES_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/inttypes.m4:153: -1- AC_DEFUN([gl_INTTYPES_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_INTTYPES_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXABS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXDIV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOIMAX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUMAX])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_INTTYPES_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])
])
m4trace:m4/inttypes.m4:165: -1- AC_DEFUN([gl_INTTYPES_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_IMAXABS=1;   AC_SUBST([HAVE_DECL_IMAXABS])
  HAVE_DECL_IMAXDIV=1;   AC_SUBST([HAVE_DECL_IMAXDIV])
  HAVE_DECL_STRTOIMAX=1; AC_SUBST([HAVE_DECL_STRTOIMAX])
  HAVE_DECL_STRTOUMAX=1; AC_SUBST([HAVE_DECL_STRTOUMAX])
  HAVE_IMAXDIV_T=1;      AC_SUBST([HAVE_IMAXDIV_T])
  REPLACE_STRTOIMAX=0;   AC_SUBST([REPLACE_STRTOIMAX])
  REPLACE_STRTOUMAX=0;   AC_SUBST([REPLACE_STRTOUMAX])
  INT32_MAX_LT_INTMAX_MAX=1;  AC_SUBST([INT32_MAX_LT_INTMAX_MAX])
  INT64_MAX_EQ_LONG_MAX='defined _LP64';  AC_SUBST([INT64_MAX_EQ_LONG_MAX])
  PRIPTR_PREFIX=__PRIPTR_PREFIX;  AC_SUBST([PRIPTR_PREFIX])
  UINT32_MAX_LT_UINTMAX_MAX=1;  AC_SUBST([UINT32_MAX_LT_UINTMAX_MAX])
  UINT64_MAX_EQ_ULONG_MAX='defined _LP64';  AC_SUBST([UINT64_MAX_EQ_ULONG_MAX])
])
m4trace:m4/inttypes_h.m4:12: -1- AC_DEFUN([gl_AC_HEADER_INTTYPES_H], [
  AC_CACHE_CHECK([for inttypes.h], [gl_cv_header_inttypes_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[
#include <sys/types.h>
#include <inttypes.h>
          ]],
          [[uintmax_t i = (uintmax_t) -1; return !i;]])],
       [gl_cv_header_inttypes_h=yes],
       [gl_cv_header_inttypes_h=no])])
  if test $gl_cv_header_inttypes_h = yes; then
    AC_DEFINE_UNQUOTED([HAVE_INTTYPES_H_WITH_UINTMAX], [1],
      [Define if <inttypes.h> exists, doesn't clash with <sys/types.h>,
       and declares uintmax_t. ])
  fi
])
m4trace:m4/isatty.m4:7: -1- AC_DEFUN([gl_FUNC_ISATTY], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl On native Windows, the system's isatty(), defined as an alias of _isatty()
  dnl in the "oldnames" library, returns true for the NUL device.
  case $host_os in
    mingw*) REPLACE_ISATTY=1 ;;
  esac
])
m4trace:m4/isatty.m4:19: -1- AC_DEFUN([gl_PREREQ_ISATTY], [:])
m4trace:m4/isblank.m4:7: -1- AC_DEFUN([gl_FUNC_ISBLANK], [
  dnl Persuade glibc <ctype.h> to declare isblank().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_CTYPE_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([isblank])
  if test $ac_cv_func_isblank = no; then
    HAVE_ISBLANK=0
  fi
])
m4trace:m4/isnand.m4:9: -1- AC_DEFUN([gl_FUNC_ISNAND], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  ISNAND_LIBM=
  gl_HAVE_ISNAND_NO_LIBM
  if test $gl_cv_func_isnand_no_libm = no; then
    gl_HAVE_ISNAND_IN_LIBM
    if test $gl_cv_func_isnand_in_libm = yes; then
      ISNAND_LIBM=-lm
    fi
  fi
  dnl The variable gl_func_isnand set here is used by isnan.m4.
  if test $gl_cv_func_isnand_no_libm = yes \
     || test $gl_cv_func_isnand_in_libm = yes; then
    gl_func_isnand=yes
  else
    gl_func_isnand=no
    HAVE_ISNAND=0
  fi
  AC_SUBST([ISNAND_LIBM])
])
m4trace:m4/isnand.m4:33: -1- AC_DEFUN([gl_FUNC_ISNAND_NO_LIBM], [
  gl_HAVE_ISNAND_NO_LIBM
  gl_func_isnand_no_libm=$gl_cv_func_isnand_no_libm
  if test $gl_cv_func_isnand_no_libm = yes; then
    AC_DEFINE([HAVE_ISNAND_IN_LIBC], [1],
      [Define if the isnan(double) function is available in libc.])
  fi
])
m4trace:m4/isnand.m4:44: -1- AC_DEFUN([gl_PREREQ_ISNAND], [
  AC_REQUIRE([gl_DOUBLE_EXPONENT_LOCATION])
])
m4trace:m4/isnand.m4:51: -1- AC_DEFUN([gl_HAVE_ISNAND_IN_LIBM], [
  AC_CACHE_CHECK([whether isnan(double) can be used with libm],
    [gl_cv_func_isnand_in_libm],
    [
      save_LIBS="$LIBS"
      LIBS="$LIBS -lm"
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnand
             # define isnand(x) __builtin_isnan ((double)(x))
             #elif defined isnan
             # undef isnand
             # define isnand(x) isnan ((double)(x))
             #endif
             double x;]],
           [[return isnand (x);]])],
        [gl_cv_func_isnand_in_libm=yes],
        [gl_cv_func_isnand_in_libm=no])
      LIBS="$save_LIBS"
    ])
])
m4trace:m4/isnand.m4:76: -1- AC_DEFUN([gl_HAVE_ISNAND_NO_LIBM], [
  AC_CACHE_CHECK([whether isnan(double) can be used without linking with libm],
    [gl_cv_func_isnand_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <math.h>
             #if (__GNUC__ >= 4) || (__clang_major__ >= 4)
             # undef isnand
             # define isnand(x) __builtin_isnan ((double)(x))
             #else
             # undef isnand
             # define isnand(x) isnan ((double)(x))
             #endif
             double x;]],
           [[return isnand (x);]])],
        [gl_cv_func_isnand_no_libm=yes],
        [gl_cv_func_isnand_no_libm=no])
    ])
])
m4trace:m4/langinfo_h.m4:7: -1- AC_DEFUN_ONCE([gl_LANGINFO_H], [
  AC_REQUIRE([gl_LANGINFO_H_DEFAULTS])

  dnl Persuade glibc-2.0.6 <langinfo.h> to define CODESET.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl <langinfo.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([langinfo.h])

  dnl Determine whether <langinfo.h> exists. It is missing on mingw and BeOS.
  HAVE_LANGINFO_CODESET=0
  HAVE_LANGINFO_T_FMT_AMPM=0
  HAVE_LANGINFO_ALTMON=0
  HAVE_LANGINFO_ERA=0
  HAVE_LANGINFO_YESEXPR=0
  AC_CHECK_HEADERS_ONCE([langinfo.h])
  if test $ac_cv_header_langinfo_h = yes; then
    HAVE_LANGINFO_H=1
    dnl Determine what <langinfo.h> defines.
    dnl CODESET is missing on OpenBSD 3.8.
    dnl ERA etc. are missing on OpenBSD 6.7.
    dnl T_FMT_AMPM and YESEXPR, NOEXPR are missing on IRIX 5.3.
    dnl ALTMON_* are missing on glibc 2.26 and many other systems.
    AC_CACHE_CHECK([whether langinfo.h defines CODESET],
      [gl_cv_header_langinfo_codeset],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[#include <langinfo.h>
int a = CODESET;
]])],
         [gl_cv_header_langinfo_codeset=yes],
         [gl_cv_header_langinfo_codeset=no])
      ])
    if test $gl_cv_header_langinfo_codeset = yes; then
      HAVE_LANGINFO_CODESET=1
    fi
    AC_CACHE_CHECK([whether langinfo.h defines T_FMT_AMPM],
      [gl_cv_header_langinfo_t_fmt_ampm],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[#include <langinfo.h>
int a = T_FMT_AMPM;
]])],
         [gl_cv_header_langinfo_t_fmt_ampm=yes],
         [gl_cv_header_langinfo_t_fmt_ampm=no])
      ])
    if test $gl_cv_header_langinfo_t_fmt_ampm = yes; then
      HAVE_LANGINFO_T_FMT_AMPM=1
    fi
    AC_CACHE_CHECK([whether langinfo.h defines ALTMON_1],
      [gl_cv_header_langinfo_altmon],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[#include <langinfo.h>
int a = ALTMON_1;
]])],
         [gl_cv_header_langinfo_altmon=yes],
         [gl_cv_header_langinfo_altmon=no])
      ])
    if test $gl_cv_header_langinfo_altmon = yes; then
      HAVE_LANGINFO_ALTMON=1
    fi
    AC_CACHE_CHECK([whether langinfo.h defines ERA],
      [gl_cv_header_langinfo_era],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[#include <langinfo.h>
int a = ERA;
]])],
         [gl_cv_header_langinfo_era=yes],
         [gl_cv_header_langinfo_era=no])
      ])
    if test $gl_cv_header_langinfo_era = yes; then
      HAVE_LANGINFO_ERA=1
    fi
    AC_CACHE_CHECK([whether langinfo.h defines YESEXPR],
      [gl_cv_header_langinfo_yesexpr],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[#include <langinfo.h>
int a = YESEXPR;
]])],
         [gl_cv_header_langinfo_yesexpr=yes],
         [gl_cv_header_langinfo_yesexpr=no])
      ])
    if test $gl_cv_header_langinfo_yesexpr = yes; then
      HAVE_LANGINFO_YESEXPR=1
    fi
  else
    HAVE_LANGINFO_H=0
  fi
  AC_SUBST([HAVE_LANGINFO_H])
  AC_SUBST([HAVE_LANGINFO_CODESET])
  AC_SUBST([HAVE_LANGINFO_T_FMT_AMPM])
  AC_SUBST([HAVE_LANGINFO_ALTMON])
  AC_SUBST([HAVE_LANGINFO_ERA])
  AC_SUBST([HAVE_LANGINFO_YESEXPR])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <langinfo.h>
    ]], [nl_langinfo])
])
m4trace:m4/langinfo_h.m4:111: -1- AC_DEFUN([gl_LANGINFO_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_LANGINFO_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/langinfo_h.m4:123: -1- AC_DEFUN([gl_LANGINFO_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_LANGINFO_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NL_LANGINFO])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_LANGINFO_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_LANGINFO_H_DEFAULTS])
])
m4trace:m4/langinfo_h.m4:132: -1- AC_DEFUN([gl_LANGINFO_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_NL_LANGINFO=1;    AC_SUBST([HAVE_NL_LANGINFO])
  REPLACE_NL_LANGINFO=0; AC_SUBST([REPLACE_NL_LANGINFO])
])
m4trace:m4/largefile.m4:13: -1- AC_DEFUN([gl_SET_LARGEFILE_SOURCE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_FUNC_FSEEKO
  case "$host_os" in
    hpux*)
      AC_DEFINE([_LARGEFILE_SOURCE], [1],
        [Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2).])
      ;;
  esac
])
m4trace:m4/largefile.m4:83: -1- AC_DEFUN([AC_SYS_LARGEFILE], [AC_ARG_ENABLE(largefile,
               [  --disable-largefile     omit support for large files])
AS_IF([test "$enable_largefile" != no],
 [AC_CACHE_CHECK([for special C compiler options needed for large files],
    ac_cv_sys_largefile_CC,
    [ac_cv_sys_largefile_CC=no
     if test "$GCC" != yes; then
       ac_save_CC=$CC
       while :; do
         # IRIX 6.2 and later do not support large files by default,
         # so use the C compiler's -n32 option if that helps.
         AC_LANG_CONFTEST([AC_LANG_PROGRAM([_AC_SYS_LARGEFILE_TEST_INCLUDES])])
         AC_COMPILE_IFELSE([], [break])
         CC="$CC -n32"
         AC_COMPILE_IFELSE([], [ac_cv_sys_largefile_CC=' -n32'; break])
         break
       done
       CC=$ac_save_CC
       rm -f conftest.$ac_ext
    fi])
  if test "$ac_cv_sys_largefile_CC" != no; then
    CC=$CC$ac_cv_sys_largefile_CC
  fi

  _AC_SYS_LARGEFILE_MACRO_VALUE(_FILE_OFFSET_BITS, 64,
    ac_cv_sys_file_offset_bits,
    [Number of bits in a file offset, on hosts where this is settable.],
    [_AC_SYS_LARGEFILE_TEST_INCLUDES])
  AS_CASE([$ac_cv_sys_file_offset_bits],
    [unknown],
      [_AC_SYS_LARGEFILE_MACRO_VALUE([_LARGE_FILES], [1],
         [ac_cv_sys_large_files],
         [Define for large files, on AIX-style hosts.],
         [_AC_SYS_LARGEFILE_TEST_INCLUDES])],
    [64],
      [gl_YEAR2038_BODY([])])])
])
m4trace:m4/largefile.m4:126: -1- AC_DEFUN([gl_LARGEFILE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      dnl Native Windows.
      dnl mingw64 defines off_t to a 64-bit type already, if
      dnl _FILE_OFFSET_BITS=64, which is ensured by AC_SYS_LARGEFILE.
      AC_CACHE_CHECK([for 64-bit off_t], [gl_cv_type_off_t_64],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <sys/types.h>
                int verify_off_t_size[sizeof (off_t) >= 8 ? 1 : -1];
              ]],
              [[]])],
           [gl_cv_type_off_t_64=yes], [gl_cv_type_off_t_64=no])
        ])
      if test $gl_cv_type_off_t_64 = no; then
        WINDOWS_64_BIT_OFF_T=1
      else
        WINDOWS_64_BIT_OFF_T=0
      fi
      dnl Some mingw versions define, if _FILE_OFFSET_BITS=64, 'struct stat'
      dnl to 'struct _stat32i64' or 'struct _stat64' (depending on
      dnl _USE_32BIT_TIME_T), which has a 32-bit st_size member.
      AC_CACHE_CHECK([for 64-bit st_size], [gl_cv_member_st_size_64],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <sys/types.h>
                struct stat buf;
                int verify_st_size_size[sizeof (buf.st_size) >= 8 ? 1 : -1];
              ]],
              [[]])],
           [gl_cv_member_st_size_64=yes], [gl_cv_member_st_size_64=no])
        ])
      if test $gl_cv_member_st_size_64 = no; then
        WINDOWS_64_BIT_ST_SIZE=1
      else
        WINDOWS_64_BIT_ST_SIZE=0
      fi
      ;;
    *)
      dnl Nothing to do on gnulib's side.
      dnl A 64-bit off_t is
      dnl   - already the default on Mac OS X, FreeBSD, NetBSD, OpenBSD, IRIX,
      dnl     OSF/1, Cygwin,
      dnl   - enabled by _FILE_OFFSET_BITS=64 (ensured by AC_SYS_LARGEFILE) on
      dnl     glibc, HP-UX, Solaris,
      dnl   - enabled by _LARGE_FILES=1 (ensured by AC_SYS_LARGEFILE) on AIX,
      dnl   - impossible to achieve on Minix 3.1.8.
      WINDOWS_64_BIT_OFF_T=0
      WINDOWS_64_BIT_ST_SIZE=0
      ;;
  esac
])
m4trace:m4/lcmessage.m4:22: -1- AC_DEFUN([gt_LC_MESSAGES], [
  AC_CACHE_CHECK([for LC_MESSAGES], [gt_cv_val_LC_MESSAGES],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <locale.h>]],
          [[return LC_MESSAGES]])],
       [gt_cv_val_LC_MESSAGES=yes],
       [gt_cv_val_LC_MESSAGES=no])])
  if test $gt_cv_val_LC_MESSAGES = yes; then
    AC_DEFINE([HAVE_LC_MESSAGES], [1],
      [Define if your <locale.h> file defines LC_MESSAGES.])
  fi
])
m4trace:m4/lib-ld.m4:12: -1- AC_DEFUN([AC_LIB_PROG_LD_GNU], [AC_CACHE_CHECK([if the linker ($LD) is GNU ld], [acl_cv_prog_gnu_ld],
[# I'd rather use --version here, but apparently some GNU lds only accept -v.
case `$LD -v 2>&1 </dev/null` in
*GNU* | *'with BFD'*)
  acl_cv_prog_gnu_ld=yes
  ;;
*)
  acl_cv_prog_gnu_ld=no
  ;;
esac])
with_gnu_ld=$acl_cv_prog_gnu_ld
])
m4trace:m4/lib-ld.m4:27: -1- AC_DEFUN([AC_LIB_PROG_LD], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl

AC_ARG_WITH([gnu-ld],
    [AS_HELP_STRING([--with-gnu-ld],
        [assume the C compiler uses GNU ld [default=no]])],
    [test "$withval" = no || with_gnu_ld=yes],
    [with_gnu_ld=no])dnl

# Prepare PATH_SEPARATOR.
# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
  # contains only /bin. Note that ksh looks also at the FPATH variable,
  # so we have to set that as well for the test.
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
           || PATH_SEPARATOR=';'
       }
fi

if test -n "$LD"; then
  AC_MSG_CHECKING([for ld])
elif test "$GCC" = yes; then
  AC_MSG_CHECKING([for ld used by $CC])
elif test "$with_gnu_ld" = yes; then
  AC_MSG_CHECKING([for GNU ld])
else
  AC_MSG_CHECKING([for non-GNU ld])
fi
if test -n "$LD"; then
  # Let the user override the test with a path.
  :
else
  AC_CACHE_VAL([acl_cv_path_LD],
  [
    acl_cv_path_LD= # Final result of this test
    ac_prog=ld # Program to search in $PATH
    if test "$GCC" = yes; then
      # Check if gcc -print-prog-name=ld gives a path.
      case $host in
        *-*-mingw*)
          # gcc leaves a trailing carriage return which upsets mingw
          acl_output=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
        *)
          acl_output=`($CC -print-prog-name=ld) 2>&5` ;;
      esac
      case $acl_output in
        # Accept absolute paths.
        [[\\/]]* | ?:[[\\/]]*)
          re_direlt='/[[^/]][[^/]]*/\.\./'
          # Canonicalize the pathname of ld
          acl_output=`echo "$acl_output" | sed 's%\\\\%/%g'`
          while echo "$acl_output" | grep "$re_direlt" > /dev/null 2>&1; do
            acl_output=`echo $acl_output | sed "s%$re_direlt%/%"`
          done
          # Got the pathname. No search in PATH is needed.
          acl_cv_path_LD="$acl_output"
          ac_prog=
          ;;
        "")
          # If it fails, then pretend we aren't using GCC.
          ;;
        *)
          # If it is relative, then search for the first ld in PATH.
          with_gnu_ld=unknown
          ;;
      esac
    fi
    if test -n "$ac_prog"; then
      # Search for $ac_prog in $PATH.
      acl_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
      for ac_dir in $PATH; do
        IFS="$acl_save_ifs"
        test -z "$ac_dir" && ac_dir=.
        if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
          acl_cv_path_LD="$ac_dir/$ac_prog"
          # Check to see if the program is GNU ld.  I'd rather use --version,
          # but apparently some variants of GNU ld only accept -v.
          # Break only if it was the GNU/non-GNU ld that we prefer.
          case `"$acl_cv_path_LD" -v 2>&1 </dev/null` in
            *GNU* | *'with BFD'*)
              test "$with_gnu_ld" != no && break
              ;;
            *)
              test "$with_gnu_ld" != yes && break
              ;;
          esac
        fi
      done
      IFS="$acl_save_ifs"
    fi
    case $host in
      *-*-aix*)
        AC_COMPILE_IFELSE(
          [AC_LANG_SOURCE(
             [[#if defined __powerpc64__ || defined __LP64__
                int ok;
               #else
                error fail
               #endif
             ]])],
          [# The compiler produces 64-bit code. Add option '-b64' so that the
           # linker groks 64-bit object files.
           case "$acl_cv_path_LD " in
             *" -b64 "*) ;;
             *) acl_cv_path_LD="$acl_cv_path_LD -b64" ;;
           esac
          ], [])
        ;;
      sparc64-*-netbsd*)
        AC_COMPILE_IFELSE(
          [AC_LANG_SOURCE(
             [[#if defined __sparcv9 || defined __arch64__
                int ok;
               #else
                error fail
               #endif
             ]])],
          [],
          [# The compiler produces 32-bit code. Add option '-m elf32_sparc'
           # so that the linker groks 32-bit object files.
           case "$acl_cv_path_LD " in
             *" -m elf32_sparc "*) ;;
             *) acl_cv_path_LD="$acl_cv_path_LD -m elf32_sparc" ;;
           esac
          ])
        ;;
    esac
  ])
  LD="$acl_cv_path_LD"
fi
if test -n "$LD"; then
  AC_MSG_RESULT([$LD])
else
  AC_MSG_RESULT([no])
  AC_MSG_ERROR([no acceptable ld found in \$PATH])
fi
AC_LIB_PROG_LD_GNU
])
m4trace:m4/lib-link.m4:17: -1- AC_DEFUN([AC_LIB_LINKFLAGS], [
  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
  AC_REQUIRE([AC_LIB_RPATH])
  pushdef([Name],[m4_translit([$1],[./+-], [____])])
  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],
                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
  AC_CACHE_CHECK([how to link with lib[]$1], [ac_cv_lib[]Name[]_libs], [
    AC_LIB_LINKFLAGS_BODY([$1], [$2])
    ac_cv_lib[]Name[]_libs="$LIB[]NAME"
    ac_cv_lib[]Name[]_ltlibs="$LTLIB[]NAME"
    ac_cv_lib[]Name[]_cppflags="$INC[]NAME"
    ac_cv_lib[]Name[]_prefix="$LIB[]NAME[]_PREFIX"
  ])
  LIB[]NAME="$ac_cv_lib[]Name[]_libs"
  LTLIB[]NAME="$ac_cv_lib[]Name[]_ltlibs"
  INC[]NAME="$ac_cv_lib[]Name[]_cppflags"
  LIB[]NAME[]_PREFIX="$ac_cv_lib[]Name[]_prefix"
  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)
  AC_SUBST([LIB]NAME)
  AC_SUBST([LTLIB]NAME)
  AC_SUBST([LIB]NAME[_PREFIX])
  dnl Also set HAVE_LIB[]NAME so that AC_LIB_HAVE_LINKFLAGS can reuse the
  dnl results of this search when this library appears as a dependency.
  HAVE_LIB[]NAME=yes
  popdef([NAME])
  popdef([Name])
])
m4trace:m4/lib-link.m4:57: -1- AC_DEFUN([AC_LIB_HAVE_LINKFLAGS], [
  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
  AC_REQUIRE([AC_LIB_RPATH])
  pushdef([Name],[m4_translit([$1],[./+-], [____])])
  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],
                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])

  dnl Search for lib[]Name and define LIB[]NAME, LTLIB[]NAME and INC[]NAME
  dnl accordingly.
  AC_LIB_LINKFLAGS_BODY([$1], [$2])

  dnl Add $INC[]NAME to CPPFLAGS before performing the following checks,
  dnl because if the user has installed lib[]Name and not disabled its use
  dnl via --without-lib[]Name-prefix, he wants to use it.
  ac_save_CPPFLAGS="$CPPFLAGS"
  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)

  AC_CACHE_CHECK([for lib[]$1], [ac_cv_lib[]Name], [
    ac_save_LIBS="$LIBS"
    dnl If $LIB[]NAME contains some -l options, add it to the end of LIBS,
    dnl because these -l options might require -L options that are present in
    dnl LIBS. -l options benefit only from the -L options listed before it.
    dnl Otherwise, add it to the front of LIBS, because it may be a static
    dnl library that depends on another static library that is present in LIBS.
    dnl Static libraries benefit only from the static libraries listed after
    dnl it.
    case " $LIB[]NAME" in
      *" -l"*) LIBS="$LIBS $LIB[]NAME" ;;
      *)       LIBS="$LIB[]NAME $LIBS" ;;
    esac
    AC_LINK_IFELSE(
      [AC_LANG_PROGRAM([[$3]], [[$4]])],
      [ac_cv_lib[]Name=yes],
      [ac_cv_lib[]Name='m4_if([$5], [], [no], [[$5]])'])
    LIBS="$ac_save_LIBS"
  ])
  if test "$ac_cv_lib[]Name" = yes; then
    HAVE_LIB[]NAME=yes
    AC_DEFINE([HAVE_LIB]NAME, 1, [Define if you have the lib][$1 library.])
    AC_MSG_CHECKING([how to link with lib[]$1])
    AC_MSG_RESULT([$LIB[]NAME])
  else
    HAVE_LIB[]NAME=no
    dnl If $LIB[]NAME didn't lead to a usable library, we don't need
    dnl $INC[]NAME either.
    CPPFLAGS="$ac_save_CPPFLAGS"
    LIB[]NAME=
    LTLIB[]NAME=
    LIB[]NAME[]_PREFIX=
  fi
  AC_SUBST([HAVE_LIB]NAME)
  AC_SUBST([LIB]NAME)
  AC_SUBST([LTLIB]NAME)
  AC_SUBST([LIB]NAME[_PREFIX])
  popdef([NAME])
  popdef([Name])
])
m4trace:m4/lib-link.m4:125: -1- AC_DEFUN([AC_LIB_RPATH], [
  dnl Complain if config.rpath is missing.
  AC_REQUIRE_AUX_FILE([config.rpath])
  AC_REQUIRE([AC_PROG_CC])                dnl we use $CC, $GCC, $LDFLAGS
  AC_REQUIRE([AC_LIB_PROG_LD])            dnl we use $LD, $with_gnu_ld
  AC_REQUIRE([AC_CANONICAL_HOST])         dnl we use $host
  AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT]) dnl we use $ac_aux_dir
  AC_CACHE_CHECK([for shared library run path origin], [acl_cv_rpath], [
    CC="$CC" GCC="$GCC" LDFLAGS="$LDFLAGS" LD="$LD" with_gnu_ld="$with_gnu_ld" \
    ${CONFIG_SHELL-/bin/sh} "$ac_aux_dir/config.rpath" "$host" > conftest.sh
    . ./conftest.sh
    rm -f ./conftest.sh
    acl_cv_rpath=done
  ])
  wl="$acl_cv_wl"
  acl_libext="$acl_cv_libext"
  acl_shlibext="$acl_cv_shlibext"
  acl_libname_spec="$acl_cv_libname_spec"
  acl_library_names_spec="$acl_cv_library_names_spec"
  acl_hardcode_libdir_flag_spec="$acl_cv_hardcode_libdir_flag_spec"
  acl_hardcode_libdir_separator="$acl_cv_hardcode_libdir_separator"
  acl_hardcode_direct="$acl_cv_hardcode_direct"
  acl_hardcode_minus_L="$acl_cv_hardcode_minus_L"
  dnl Determine whether the user wants rpath handling at all.
  AC_ARG_ENABLE([rpath],
    [  --disable-rpath         do not hardcode runtime library paths],
    :, enable_rpath=yes)
])
m4trace:m4/lib-link.m4:161: -1- AC_DEFUN([AC_LIB_FROMPACKAGE], [
  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],
                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
  define([acl_frompackage_]NAME, [$2])
  popdef([NAME])
  pushdef([PACK],[$2])
  pushdef([PACKUP],[m4_translit(PACK,[abcdefghijklmnopqrstuvwxyz./+-],
                                     [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
  define([acl_libsinpackage_]PACKUP,
    m4_ifdef([acl_libsinpackage_]PACKUP, [m4_defn([acl_libsinpackage_]PACKUP)[, ]],)[lib$1])
  popdef([PACKUP])
  popdef([PACK])
])
m4trace:m4/lib-link.m4:181: -1- AC_DEFUN([AC_LIB_LINKFLAGS_BODY], [
  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])
  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],
                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
  pushdef([PACK],[m4_ifdef([acl_frompackage_]NAME, [acl_frompackage_]NAME, lib[$1])])
  pushdef([PACKUP],[m4_translit(PACK,[abcdefghijklmnopqrstuvwxyz./+-],
                                     [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])
  pushdef([PACKLIBS],[m4_ifdef([acl_frompackage_]NAME, [acl_libsinpackage_]PACKUP, lib[$1])])
  dnl By default, look in $includedir and $libdir.
  use_additional=yes
  AC_LIB_WITH_FINAL_PREFIX([
    eval additional_includedir=\"$includedir\"
    eval additional_libdir=\"$libdir\"
    eval additional_libdir2=\"$exec_prefix/$acl_libdirstem2\"
    eval additional_libdir3=\"$exec_prefix/$acl_libdirstem3\"
  ])
  AC_ARG_WITH(PACK[-prefix],
[[  --with-]]PACK[[-prefix[=DIR]  search for ]PACKLIBS[ in DIR/include and DIR/lib
  --without-]]PACK[[-prefix     don't search for ]PACKLIBS[ in includedir and libdir]],
[
    if test "X$withval" = "Xno"; then
      use_additional=no
    else
      if test "X$withval" = "X"; then
        AC_LIB_WITH_FINAL_PREFIX([
          eval additional_includedir=\"$includedir\"
          eval additional_libdir=\"$libdir\"
          eval additional_libdir2=\"$exec_prefix/$acl_libdirstem2\"
          eval additional_libdir3=\"$exec_prefix/$acl_libdirstem3\"
        ])
      else
        additional_includedir="$withval/include"
        additional_libdir="$withval/$acl_libdirstem"
        additional_libdir2="$withval/$acl_libdirstem2"
        additional_libdir3="$withval/$acl_libdirstem3"
      fi
    fi
])
  if test "X$additional_libdir2" = "X$additional_libdir"; then
    additional_libdir2=
  fi
  if test "X$additional_libdir3" = "X$additional_libdir"; then
    additional_libdir3=
  fi
  dnl Search the library and its dependencies in $additional_libdir and
  dnl $LDFLAGS. Using breadth-first-seach.
  LIB[]NAME=
  LTLIB[]NAME=
  INC[]NAME=
  LIB[]NAME[]_PREFIX=
  dnl HAVE_LIB${NAME} is an indicator that LIB${NAME}, LTLIB${NAME} have been
  dnl computed. So it has to be reset here.
  HAVE_LIB[]NAME=
  rpathdirs=
  ltrpathdirs=
  names_already_handled=
  names_next_round='$1 $2'
  while test -n "$names_next_round"; do
    names_this_round="$names_next_round"
    names_next_round=
    for name in $names_this_round; do
      already_handled=
      for n in $names_already_handled; do
        if test "$n" = "$name"; then
          already_handled=yes
          break
        fi
      done
      if test -z "$already_handled"; then
        names_already_handled="$names_already_handled $name"
        dnl See if it was already located by an earlier AC_LIB_LINKFLAGS
        dnl or AC_LIB_HAVE_LINKFLAGS call.
        uppername=`echo "$name" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./+-|ABCDEFGHIJKLMNOPQRSTUVWXYZ____|'`
        eval value=\"\$HAVE_LIB$uppername\"
        if test -n "$value"; then
          if test "$value" = yes; then
            eval value=\"\$LIB$uppername\"
            test -z "$value" || LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$value"
            eval value=\"\$LTLIB$uppername\"
            test -z "$value" || LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }$value"
          else
            dnl An earlier call to AC_LIB_HAVE_LINKFLAGS has determined
            dnl that this library doesn't exist. So just drop it.
            :
          fi
        else
          dnl Search the library lib$name in $additional_libdir and $LDFLAGS
          dnl and the already constructed $LIBNAME/$LTLIBNAME.
          found_dir=
          found_la=
          found_so=
          found_a=
          eval libname=\"$acl_libname_spec\"    # typically: libname=lib$name
          if test -n "$acl_shlibext"; then
            shrext=".$acl_shlibext"             # typically: shrext=.so
          else
            shrext=
          fi
          if test $use_additional = yes; then
            for additional_libdir_variable in additional_libdir additional_libdir2 additional_libdir3; do
              if test "X$found_dir" = "X"; then
                eval dir=\$$additional_libdir_variable
                if test -n "$dir"; then
                  dnl The same code as in the loop below:
                  dnl First look for a shared library.
                  if test -n "$acl_shlibext"; then
                    if test -f "$dir/$libname$shrext" && acl_is_expected_elfclass < "$dir/$libname$shrext"; then
                      found_dir="$dir"
                      found_so="$dir/$libname$shrext"
                    else
                      if test "$acl_library_names_spec" = '$libname$shrext$versuffix'; then
                        ver=`(cd "$dir" && \
                              for f in "$libname$shrext".*; do echo "$f"; done \
                              | sed -e "s,^$libname$shrext\\\\.,," \
                              | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \
                              | sed 1q ) 2>/dev/null`
                        if test -n "$ver" && test -f "$dir/$libname$shrext.$ver" && acl_is_expected_elfclass < "$dir/$libname$shrext.$ver"; then
                          found_dir="$dir"
                          found_so="$dir/$libname$shrext.$ver"
                        fi
                      else
                        eval library_names=\"$acl_library_names_spec\"
                        for f in $library_names; do
                          if test -f "$dir/$f" && acl_is_expected_elfclass < "$dir/$f"; then
                            found_dir="$dir"
                            found_so="$dir/$f"
                            break
                          fi
                        done
                      fi
                    fi
                  fi
                  dnl Then look for a static library.
                  if test "X$found_dir" = "X"; then
                    if test -f "$dir/$libname.$acl_libext" && ${AR-ar} -p "$dir/$libname.$acl_libext" | acl_is_expected_elfclass; then
                      found_dir="$dir"
                      found_a="$dir/$libname.$acl_libext"
                    fi
                  fi
                  if test "X$found_dir" != "X"; then
                    if test -f "$dir/$libname.la"; then
                      found_la="$dir/$libname.la"
                    fi
                  fi
                fi
              fi
            done
          fi
          if test "X$found_dir" = "X"; then
            for x in $LDFLAGS $LTLIB[]NAME; do
              AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
              case "$x" in
                -L*)
                  dir=`echo "X$x" | sed -e 's/^X-L//'`
                  dnl First look for a shared library.
                  if test -n "$acl_shlibext"; then
                    if test -f "$dir/$libname$shrext" && acl_is_expected_elfclass < "$dir/$libname$shrext"; then
                      found_dir="$dir"
                      found_so="$dir/$libname$shrext"
                    else
                      if test "$acl_library_names_spec" = '$libname$shrext$versuffix'; then
                        ver=`(cd "$dir" && \
                              for f in "$libname$shrext".*; do echo "$f"; done \
                              | sed -e "s,^$libname$shrext\\\\.,," \
                              | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \
                              | sed 1q ) 2>/dev/null`
                        if test -n "$ver" && test -f "$dir/$libname$shrext.$ver" && acl_is_expected_elfclass < "$dir/$libname$shrext.$ver"; then
                          found_dir="$dir"
                          found_so="$dir/$libname$shrext.$ver"
                        fi
                      else
                        eval library_names=\"$acl_library_names_spec\"
                        for f in $library_names; do
                          if test -f "$dir/$f" && acl_is_expected_elfclass < "$dir/$f"; then
                            found_dir="$dir"
                            found_so="$dir/$f"
                            break
                          fi
                        done
                      fi
                    fi
                  fi
                  dnl Then look for a static library.
                  if test "X$found_dir" = "X"; then
                    if test -f "$dir/$libname.$acl_libext" && ${AR-ar} -p "$dir/$libname.$acl_libext" | acl_is_expected_elfclass; then
                      found_dir="$dir"
                      found_a="$dir/$libname.$acl_libext"
                    fi
                  fi
                  if test "X$found_dir" != "X"; then
                    if test -f "$dir/$libname.la"; then
                      found_la="$dir/$libname.la"
                    fi
                  fi
                  ;;
              esac
              if test "X$found_dir" != "X"; then
                break
              fi
            done
          fi
          if test "X$found_dir" != "X"; then
            dnl Found the library.
            LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$found_dir -l$name"
            if test "X$found_so" != "X"; then
              dnl Linking with a shared library. We attempt to hardcode its
              dnl directory into the executable's runpath, unless it's the
              dnl standard /usr/lib.
              if test "$enable_rpath" = no \
                 || test "X$found_dir" = "X/usr/$acl_libdirstem" \
                 || test "X$found_dir" = "X/usr/$acl_libdirstem2" \
                 || test "X$found_dir" = "X/usr/$acl_libdirstem3"; then
                dnl No hardcoding is needed.
                LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_so"
              else
                dnl Use an explicit option to hardcode DIR into the resulting
                dnl binary.
                dnl Potentially add DIR to ltrpathdirs.
                dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.
                haveit=
                for x in $ltrpathdirs; do
                  if test "X$x" = "X$found_dir"; then
                    haveit=yes
                    break
                  fi
                done
                if test -z "$haveit"; then
                  ltrpathdirs="$ltrpathdirs $found_dir"
                fi
                dnl The hardcoding into $LIBNAME is system dependent.
                if test "$acl_hardcode_direct" = yes; then
                  dnl Using DIR/libNAME.so during linking hardcodes DIR into the
                  dnl resulting binary.
                  LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_so"
                else
                  if test -n "$acl_hardcode_libdir_flag_spec" && test "$acl_hardcode_minus_L" = no; then
                    dnl Use an explicit option to hardcode DIR into the resulting
                    dnl binary.
                    LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_so"
                    dnl Potentially add DIR to rpathdirs.
                    dnl The rpathdirs will be appended to $LIBNAME at the end.
                    haveit=
                    for x in $rpathdirs; do
                      if test "X$x" = "X$found_dir"; then
                        haveit=yes
                        break
                      fi
                    done
                    if test -z "$haveit"; then
                      rpathdirs="$rpathdirs $found_dir"
                    fi
                  else
                    dnl Rely on "-L$found_dir".
                    dnl But don't add it if it's already contained in the LDFLAGS
                    dnl or the already constructed $LIBNAME
                    haveit=
                    for x in $LDFLAGS $LIB[]NAME; do
                      AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
                      if test "X$x" = "X-L$found_dir"; then
                        haveit=yes
                        break
                      fi
                    done
                    if test -z "$haveit"; then
                      LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir"
                    fi
                    if test "$acl_hardcode_minus_L" != no; then
                      dnl FIXME: Not sure whether we should use
                      dnl "-L$found_dir -l$name" or "-L$found_dir $found_so"
                      dnl here.
                      LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_so"
                    else
                      dnl We cannot use $acl_hardcode_runpath_var and LD_RUN_PATH
                      dnl here, because this doesn't fit in flags passed to the
                      dnl compiler. So give up. No hardcoding. This affects only
                      dnl very old systems.
                      dnl FIXME: Not sure whether we should use
                      dnl "-L$found_dir -l$name" or "-L$found_dir $found_so"
                      dnl here.
                      LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-l$name"
                    fi
                  fi
                fi
              fi
            else
              if test "X$found_a" != "X"; then
                dnl Linking with a static library.
                LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$found_a"
              else
                dnl We shouldn't come here, but anyway it's good to have a
                dnl fallback.
                LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir -l$name"
              fi
            fi
            dnl Assume the include files are nearby.
            additional_includedir=
            case "$found_dir" in
              */$acl_libdirstem | */$acl_libdirstem/)
                basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e "s,/$acl_libdirstem/"'*$,,'`
                if test "$name" = '$1'; then
                  LIB[]NAME[]_PREFIX="$basedir"
                fi
                additional_includedir="$basedir/include"
                ;;
              */$acl_libdirstem2 | */$acl_libdirstem2/)
                basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e "s,/$acl_libdirstem2/"'*$,,'`
                if test "$name" = '$1'; then
                  LIB[]NAME[]_PREFIX="$basedir"
                fi
                additional_includedir="$basedir/include"
                ;;
              */$acl_libdirstem3 | */$acl_libdirstem3/)
                basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e "s,/$acl_libdirstem3/"'*$,,'`
                if test "$name" = '$1'; then
                  LIB[]NAME[]_PREFIX="$basedir"
                fi
                additional_includedir="$basedir/include"
                ;;
            esac
            if test "X$additional_includedir" != "X"; then
              dnl Potentially add $additional_includedir to $INCNAME.
              dnl But don't add it
              dnl   1. if it's the standard /usr/include,
              dnl   2. if it's /usr/local/include and we are using GCC on Linux,
              dnl   3. if it's already present in $CPPFLAGS or the already
              dnl      constructed $INCNAME,
              dnl   4. if it doesn't exist as a directory.
              if test "X$additional_includedir" != "X/usr/include"; then
                haveit=
                if test "X$additional_includedir" = "X/usr/local/include"; then
                  if test -n "$GCC"; then
                    case $host_os in
                      linux* | gnu* | k*bsd*-gnu) haveit=yes;;
                    esac
                  fi
                fi
                if test -z "$haveit"; then
                  for x in $CPPFLAGS $INC[]NAME; do
                    AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
                    if test "X$x" = "X-I$additional_includedir"; then
                      haveit=yes
                      break
                    fi
                  done
                  if test -z "$haveit"; then
                    if test -d "$additional_includedir"; then
                      dnl Really add $additional_includedir to $INCNAME.
                      INC[]NAME="${INC[]NAME}${INC[]NAME:+ }-I$additional_includedir"
                    fi
                  fi
                fi
              fi
            fi
            dnl Look for dependencies.
            if test -n "$found_la"; then
              dnl Read the .la file. It defines the variables
              dnl dlname, library_names, old_library, dependency_libs, current,
              dnl age, revision, installed, dlopen, dlpreopen, libdir.
              save_libdir="$libdir"
              case "$found_la" in
                */* | *\\*) . "$found_la" ;;
                *) . "./$found_la" ;;
              esac
              libdir="$save_libdir"
              dnl We use only dependency_libs.
              for dep in $dependency_libs; do
                case "$dep" in
                  -L*)
                    dependency_libdir=`echo "X$dep" | sed -e 's/^X-L//'`
                    dnl Potentially add $dependency_libdir to $LIBNAME and $LTLIBNAME.
                    dnl But don't add it
                    dnl   1. if it's the standard /usr/lib,
                    dnl   2. if it's /usr/local/lib and we are using GCC on Linux,
                    dnl   3. if it's already present in $LDFLAGS or the already
                    dnl      constructed $LIBNAME,
                    dnl   4. if it doesn't exist as a directory.
                    if test "X$dependency_libdir" != "X/usr/$acl_libdirstem" \
                       && test "X$dependency_libdir" != "X/usr/$acl_libdirstem2" \
                       && test "X$dependency_libdir" != "X/usr/$acl_libdirstem3"; then
                      haveit=
                      if test "X$dependency_libdir" = "X/usr/local/$acl_libdirstem" \
                         || test "X$dependency_libdir" = "X/usr/local/$acl_libdirstem2" \
                         || test "X$dependency_libdir" = "X/usr/local/$acl_libdirstem3"; then
                        if test -n "$GCC"; then
                          case $host_os in
                            linux* | gnu* | k*bsd*-gnu) haveit=yes;;
                          esac
                        fi
                      fi
                      if test -z "$haveit"; then
                        haveit=
                        for x in $LDFLAGS $LIB[]NAME; do
                          AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
                          if test "X$x" = "X-L$dependency_libdir"; then
                            haveit=yes
                            break
                          fi
                        done
                        if test -z "$haveit"; then
                          if test -d "$dependency_libdir"; then
                            dnl Really add $dependency_libdir to $LIBNAME.
                            LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-L$dependency_libdir"
                          fi
                        fi
                        haveit=
                        for x in $LDFLAGS $LTLIB[]NAME; do
                          AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
                          if test "X$x" = "X-L$dependency_libdir"; then
                            haveit=yes
                            break
                          fi
                        done
                        if test -z "$haveit"; then
                          if test -d "$dependency_libdir"; then
                            dnl Really add $dependency_libdir to $LTLIBNAME.
                            LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$dependency_libdir"
                          fi
                        fi
                      fi
                    fi
                    ;;
                  -R*)
                    dir=`echo "X$dep" | sed -e 's/^X-R//'`
                    if test "$enable_rpath" != no; then
                      dnl Potentially add DIR to rpathdirs.
                      dnl The rpathdirs will be appended to $LIBNAME at the end.
                      haveit=
                      for x in $rpathdirs; do
                        if test "X$x" = "X$dir"; then
                          haveit=yes
                          break
                        fi
                      done
                      if test -z "$haveit"; then
                        rpathdirs="$rpathdirs $dir"
                      fi
                      dnl Potentially add DIR to ltrpathdirs.
                      dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.
                      haveit=
                      for x in $ltrpathdirs; do
                        if test "X$x" = "X$dir"; then
                          haveit=yes
                          break
                        fi
                      done
                      if test -z "$haveit"; then
                        ltrpathdirs="$ltrpathdirs $dir"
                      fi
                    fi
                    ;;
                  -l*)
                    dnl Handle this in the next round.
                    dnl But on GNU systems, ignore -lc options, because
                    dnl   - linking with libc is the default anyway,
                    dnl   - linking with libc.a may produce an error
                    dnl     "/usr/bin/ld: dynamic STT_GNU_IFUNC symbol `strcmp' with pointer equality in `/usr/lib/libc.a(strcmp.o)' can not be used when making an executable; recompile with -fPIE and relink with -pie"
                    dnl     or may produce an executable that always crashes, see
                    dnl     <https://lists.gnu.org/archive/html/grep-devel/2020-09/msg00052.html>.
                    dep=`echo "X$dep" | sed -e 's/^X-l//'`
                    if test "X$dep" != Xc \
                       || case $host_os in
                            linux* | gnu* | k*bsd*-gnu) false ;;
                            *)                          true ;;
                          esac; then
                      names_next_round="$names_next_round $dep"
                    fi
                    ;;
                  *.la)
                    dnl Handle this in the next round. Throw away the .la's
                    dnl directory; it is already contained in a preceding -L
                    dnl option.
                    names_next_round="$names_next_round "`echo "X$dep" | sed -e 's,^X.*/,,' -e 's,^lib,,' -e 's,\.la$,,'`
                    ;;
                  *)
                    dnl Most likely an immediate library name.
                    LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$dep"
                    LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }$dep"
                    ;;
                esac
              done
            fi
          else
            dnl Didn't find the library; assume it is in the system directories
            dnl known to the linker and runtime loader. (All the system
            dnl directories known to the linker should also be known to the
            dnl runtime loader, otherwise the system is severely misconfigured.)
            LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }-l$name"
            LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }-l$name"
          fi
        fi
      fi
    done
  done
  if test "X$rpathdirs" != "X"; then
    if test -n "$acl_hardcode_libdir_separator"; then
      dnl Weird platform: only the last -rpath option counts, the user must
      dnl pass all path elements in one option. We can arrange that for a
      dnl single library, but not when more than one $LIBNAMEs are used.
      alldirs=
      for found_dir in $rpathdirs; do
        alldirs="${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$found_dir"
      done
      dnl Note: acl_hardcode_libdir_flag_spec uses $libdir and $wl.
      acl_save_libdir="$libdir"
      libdir="$alldirs"
      eval flag=\"$acl_hardcode_libdir_flag_spec\"
      libdir="$acl_save_libdir"
      LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$flag"
    else
      dnl The -rpath options are cumulative.
      for found_dir in $rpathdirs; do
        acl_save_libdir="$libdir"
        libdir="$found_dir"
        eval flag=\"$acl_hardcode_libdir_flag_spec\"
        libdir="$acl_save_libdir"
        LIB[]NAME="${LIB[]NAME}${LIB[]NAME:+ }$flag"
      done
    fi
  fi
  if test "X$ltrpathdirs" != "X"; then
    dnl When using libtool, the option that works for both libraries and
    dnl executables is -R. The -R options are cumulative.
    for found_dir in $ltrpathdirs; do
      LTLIB[]NAME="${LTLIB[]NAME}${LTLIB[]NAME:+ }-R$found_dir"
    done
  fi
  popdef([PACKLIBS])
  popdef([PACKUP])
  popdef([PACK])
  popdef([NAME])
])
m4trace:m4/lib-link.m4:718: -1- AC_DEFUN([AC_LIB_APPENDTOVAR], [
  for element in [$2]; do
    haveit=
    for x in $[$1]; do
      AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
      if test "X$x" = "X$element"; then
        haveit=yes
        break
      fi
    done
    if test -z "$haveit"; then
      [$1]="${[$1]}${[$1]:+ }$element"
    fi
  done
])
m4trace:m4/lib-link.m4:742: -1- AC_DEFUN([AC_LIB_LINKFLAGS_FROM_LIBS], [
  AC_REQUIRE([AC_LIB_RPATH])
  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])
  $1=
  if test "$enable_rpath" != no; then
    if test -n "$acl_hardcode_libdir_flag_spec" && test "$acl_hardcode_minus_L" = no; then
      dnl Use an explicit option to hardcode directories into the resulting
      dnl binary.
      rpathdirs=
      next=
      for opt in $2; do
        if test -n "$next"; then
          dir="$next"
          dnl No need to hardcode the standard /usr/lib.
          if test "X$dir" != "X/usr/$acl_libdirstem" \
             && test "X$dir" != "X/usr/$acl_libdirstem2" \
             && test "X$dir" != "X/usr/$acl_libdirstem3"; then
            rpathdirs="$rpathdirs $dir"
          fi
          next=
        else
          case $opt in
            -L) next=yes ;;
            -L*) dir=`echo "X$opt" | sed -e 's,^X-L,,'`
                 dnl No need to hardcode the standard /usr/lib.
                 if test "X$dir" != "X/usr/$acl_libdirstem" \
                    && test "X$dir" != "X/usr/$acl_libdirstem2" \
                    && test "X$dir" != "X/usr/$acl_libdirstem3"; then
                   rpathdirs="$rpathdirs $dir"
                 fi
                 next= ;;
            *) next= ;;
          esac
        fi
      done
      if test "X$rpathdirs" != "X"; then
        if test -n ""$3""; then
          dnl libtool is used for linking. Use -R options.
          for dir in $rpathdirs; do
            $1="${$1}${$1:+ }-R$dir"
          done
        else
          dnl The linker is used for linking directly.
          if test -n "$acl_hardcode_libdir_separator"; then
            dnl Weird platform: only the last -rpath option counts, the user
            dnl must pass all path elements in one option.
            alldirs=
            for dir in $rpathdirs; do
              alldirs="${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$dir"
            done
            acl_save_libdir="$libdir"
            libdir="$alldirs"
            eval flag=\"$acl_hardcode_libdir_flag_spec\"
            libdir="$acl_save_libdir"
            $1="$flag"
          else
            dnl The -rpath options are cumulative.
            for dir in $rpathdirs; do
              acl_save_libdir="$libdir"
              libdir="$dir"
              eval flag=\"$acl_hardcode_libdir_flag_spec\"
              libdir="$acl_save_libdir"
              $1="${$1}${$1:+ }$flag"
            done
          fi
        fi
      fi
    fi
  fi
  AC_SUBST([$1])
])
m4trace:m4/lib-prefix.m4:15: -1- AC_DEFUN([AC_LIB_PREFIX], [
  AC_BEFORE([$0], [AC_LIB_LINKFLAGS])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])
  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])
  dnl By default, look in $includedir and $libdir.
  use_additional=yes
  AC_LIB_WITH_FINAL_PREFIX([
    eval additional_includedir=\"$includedir\"
    eval additional_libdir=\"$libdir\"
  ])
  AC_ARG_WITH([lib-prefix],
[[  --with-lib-prefix[=DIR] search for libraries in DIR/include and DIR/lib
  --without-lib-prefix    don't search for libraries in includedir and libdir]],
[
    if test "X$withval" = "Xno"; then
      use_additional=no
    else
      if test "X$withval" = "X"; then
        AC_LIB_WITH_FINAL_PREFIX([
          eval additional_includedir=\"$includedir\"
          eval additional_libdir=\"$libdir\"
        ])
      else
        additional_includedir="$withval/include"
        additional_libdir="$withval/$acl_libdirstem"
      fi
    fi
])
  if test $use_additional = yes; then
    dnl Potentially add $additional_includedir to $CPPFLAGS.
    dnl But don't add it
    dnl   1. if it's the standard /usr/include,
    dnl   2. if it's already present in $CPPFLAGS,
    dnl   3. if it's /usr/local/include and we are using GCC on Linux,
    dnl   4. if it doesn't exist as a directory.
    if test "X$additional_includedir" != "X/usr/include"; then
      haveit=
      for x in $CPPFLAGS; do
        AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
        if test "X$x" = "X-I$additional_includedir"; then
          haveit=yes
          break
        fi
      done
      if test -z "$haveit"; then
        if test "X$additional_includedir" = "X/usr/local/include"; then
          if test -n "$GCC"; then
            case $host_os in
              linux* | gnu* | k*bsd*-gnu) haveit=yes;;
            esac
          fi
        fi
        if test -z "$haveit"; then
          if test -d "$additional_includedir"; then
            dnl Really add $additional_includedir to $CPPFLAGS.
            CPPFLAGS="${CPPFLAGS}${CPPFLAGS:+ }-I$additional_includedir"
          fi
        fi
      fi
    fi
    dnl Potentially add $additional_libdir to $LDFLAGS.
    dnl But don't add it
    dnl   1. if it's the standard /usr/lib,
    dnl   2. if it's already present in $LDFLAGS,
    dnl   3. if it's /usr/local/lib and we are using GCC on Linux,
    dnl   4. if it doesn't exist as a directory.
    if test "X$additional_libdir" != "X/usr/$acl_libdirstem"; then
      haveit=
      for x in $LDFLAGS; do
        AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
        if test "X$x" = "X-L$additional_libdir"; then
          haveit=yes
          break
        fi
      done
      if test -z "$haveit"; then
        if test "X$additional_libdir" = "X/usr/local/$acl_libdirstem"; then
          if test -n "$GCC"; then
            case $host_os in
              linux*) haveit=yes;;
            esac
          fi
        fi
        if test -z "$haveit"; then
          if test -d "$additional_libdir"; then
            dnl Really add $additional_libdir to $LDFLAGS.
            LDFLAGS="${LDFLAGS}${LDFLAGS:+ }-L$additional_libdir"
          fi
        fi
      fi
    fi
  fi
])
m4trace:m4/lib-prefix.m4:115: -1- AC_DEFUN([AC_LIB_PREPARE_PREFIX], [
  dnl Unfortunately, prefix and exec_prefix get only finally determined
  dnl at the end of configure.
  if test "X$prefix" = "XNONE"; then
    acl_final_prefix="$ac_default_prefix"
  else
    acl_final_prefix="$prefix"
  fi
  if test "X$exec_prefix" = "XNONE"; then
    acl_final_exec_prefix='${prefix}'
  else
    acl_final_exec_prefix="$exec_prefix"
  fi
  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  eval acl_final_exec_prefix=\"$acl_final_exec_prefix\"
  prefix="$acl_save_prefix"
])
m4trace:m4/lib-prefix.m4:138: -1- AC_DEFUN([AC_LIB_WITH_FINAL_PREFIX], [
  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  $1
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"
])
m4trace:m4/lib-prefix.m4:155: -1- AC_DEFUN([AC_LIB_PREPARE_MULTILIB], [
  dnl There is no formal standard regarding lib, lib32, and lib64.
  dnl On most glibc systems, the current practice is that on a system supporting
  dnl 32-bit and 64-bit instruction sets or ABIs, 64-bit libraries go under
  dnl $prefix/lib64 and 32-bit libraries go under $prefix/lib. However, on
  dnl Arch Linux based distributions, it's the opposite: 32-bit libraries go
  dnl under $prefix/lib32 and 64-bit libraries go under $prefix/lib.
  dnl We determine the compiler's default mode by looking at the compiler's
  dnl library search path. If at least one of its elements ends in /lib64 or
  dnl points to a directory whose absolute pathname ends in /lib64, we use that
  dnl for 64-bit ABIs. Similarly for 32-bit ABIs. Otherwise we use the default,
  dnl namely "lib".
  dnl On Solaris systems, the current practice is that on a system supporting
  dnl 32-bit and 64-bit instruction sets or ABIs, 64-bit libraries go under
  dnl $prefix/lib/64 (which is a symlink to either $prefix/lib/sparcv9 or
  dnl $prefix/lib/amd64) and 32-bit libraries go under $prefix/lib.
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_HOST_CPU_C_ABI_32BIT])

  AC_CACHE_CHECK([for ELF binary format], [gl_cv_elf],
    [AC_EGREP_CPP([Extensible Linking Format],
       [#ifdef __ELF__
        Extensible Linking Format
        #endif
       ],
       [gl_cv_elf=yes],
       [gl_cv_elf=no])
    ])
  if test $gl_cv_elf = yes; then
    # Extract the ELF class of a file (5th byte) in decimal.
    # Cf. https://en.wikipedia.org/wiki/Executable_and_Linkable_Format#File_header
    if od -A x < /dev/null >/dev/null 2>/dev/null; then
      # Use POSIX od.
      func_elfclass ()
      {
        od -A n -t d1 -j 4 -N 1
      }
    else
      # Use BSD hexdump.
      func_elfclass ()
      {
        dd bs=1 count=1 skip=4 2>/dev/null | hexdump -e '1/1 "%3d "'
        echo
      }
    fi
    # Use 'expr', not 'test', to compare the values of func_elfclass, because on
    # Solaris 11 OpenIndiana and Solaris 11 OmniOS, the result is 001 or 002,
    # not 1 or 2.
changequote(,)dnl
    case $HOST_CPU_C_ABI_32BIT in
      yes)
        # 32-bit ABI.
        acl_is_expected_elfclass ()
        {
          expr "`func_elfclass | sed -e 's/[ 	]//g'`" = 1 > /dev/null
        }
        ;;
      no)
        # 64-bit ABI.
        acl_is_expected_elfclass ()
        {
          expr "`func_elfclass | sed -e 's/[ 	]//g'`" = 2 > /dev/null
        }
        ;;
      *)
        # Unknown.
        acl_is_expected_elfclass ()
        {
          :
        }
        ;;
    esac
changequote([,])dnl
  else
    acl_is_expected_elfclass ()
    {
      :
    }
  fi

  dnl Allow the user to override the result by setting acl_cv_libdirstems.
  AC_CACHE_CHECK([for the common suffixes of directories in the library search path],
    [acl_cv_libdirstems],
    [dnl Try 'lib' first, because that's the default for libdir in GNU, see
     dnl <https://www.gnu.org/prep/standards/html_node/Directory-Variables.html>.
     acl_libdirstem=lib
     acl_libdirstem2=
     acl_libdirstem3=
     case "$host_os" in
       solaris*)
         dnl See Solaris 10 Software Developer Collection > Solaris 64-bit Developer's Guide > The Development Environment
         dnl <https://docs.oracle.com/cd/E19253-01/816-5138/dev-env/index.html>.
         dnl "Portable Makefiles should refer to any library directories using the 64 symbolic link."
         dnl But we want to recognize the sparcv9 or amd64 subdirectory also if the
         dnl symlink is missing, so we set acl_libdirstem2 too.
         if test $HOST_CPU_C_ABI_32BIT = no; then
           acl_libdirstem2=lib/64
           case "$host_cpu" in
             sparc*)        acl_libdirstem3=lib/sparcv9 ;;
             i*86 | x86_64) acl_libdirstem3=lib/amd64 ;;
           esac
         fi
         ;;
       *)
         dnl If $CC generates code for a 32-bit ABI, the libraries are
         dnl surely under $prefix/lib or $prefix/lib32, not $prefix/lib64.
         dnl Similarly, if $CC generates code for a 64-bit ABI, the libraries
         dnl are surely under $prefix/lib or $prefix/lib64, not $prefix/lib32.
         dnl Find the compiler's search path. However, non-system compilers
         dnl sometimes have odd library search paths. But we can't simply invoke
         dnl '/usr/bin/gcc -print-search-dirs' because that would not take into
         dnl account the -m32/-m31 or -m64 options from the $CC or $CFLAGS.
         searchpath=`(LC_ALL=C $CC $CPPFLAGS $CFLAGS -print-search-dirs) 2>/dev/null \
                     | sed -n -e 's,^libraries: ,,p' | sed -e 's,^=,,'`
         if test $HOST_CPU_C_ABI_32BIT != no; then
           # 32-bit or unknown ABI.
           if test -d /usr/lib32; then
             acl_libdirstem2=lib32
           fi
         fi
         if test $HOST_CPU_C_ABI_32BIT != yes; then
           # 64-bit or unknown ABI.
           if test -d /usr/lib64; then
             acl_libdirstem3=lib64
           fi
         fi
         if test -n "$searchpath"; then
           acl_save_IFS="${IFS= 	}"; IFS=":"
           for searchdir in $searchpath; do
             if test -d "$searchdir"; then
               case "$searchdir" in
                 */lib32/ | */lib32 ) acl_libdirstem2=lib32 ;;
                 */lib64/ | */lib64 ) acl_libdirstem3=lib64 ;;
                 */../ | */.. )
                   # Better ignore directories of this form. They are misleading.
                   ;;
                 *) searchdir=`cd "$searchdir" && pwd`
                    case "$searchdir" in
                      */lib32 ) acl_libdirstem2=lib32 ;;
                      */lib64 ) acl_libdirstem3=lib64 ;;
                    esac ;;
               esac
             fi
           done
           IFS="$acl_save_IFS"
           if test $HOST_CPU_C_ABI_32BIT = yes; then
             # 32-bit ABI.
             acl_libdirstem3=
           fi
           if test $HOST_CPU_C_ABI_32BIT = no; then
             # 64-bit ABI.
             acl_libdirstem2=
           fi
         fi
         ;;
     esac
     test -n "$acl_libdirstem2" || acl_libdirstem2="$acl_libdirstem"
     test -n "$acl_libdirstem3" || acl_libdirstem3="$acl_libdirstem"
     acl_cv_libdirstems="$acl_libdirstem,$acl_libdirstem2,$acl_libdirstem3"
    ])
  dnl Decompose acl_cv_libdirstems into acl_libdirstem, acl_libdirstem2, and
  dnl acl_libdirstem3.
changequote(,)dnl
  acl_libdirstem=`echo "$acl_cv_libdirstems" | sed -e 's/,.*//'`
  acl_libdirstem2=`echo "$acl_cv_libdirstems" | sed -e 's/^[^,]*,//' -e 's/,.*//'`
  acl_libdirstem3=`echo "$acl_cv_libdirstems" | sed -e 's/^[^,]*,[^,]*,//' -e 's/,.*//'`
changequote([,])dnl
])
m4trace:m4/libtool.m4:61: -1- AC_DEFUN([LT_INIT], [AC_PREREQ([2.62])dnl We use AC_PATH_PROGS_FEATURE_CHECK
AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
AC_BEFORE([$0], [LT_LANG])dnl
AC_BEFORE([$0], [LT_OUTPUT])dnl
AC_BEFORE([$0], [LTDL_INIT])dnl
m4_require([_LT_CHECK_BUILDDIR])dnl

dnl Autoconf doesn't catch unexpanded LT_ macros by default:
m4_pattern_forbid([^_?LT_[A-Z_]+$])dnl
m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl
dnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4
dnl unless we require an AC_DEFUNed macro:
AC_REQUIRE([LTOPTIONS_VERSION])dnl
AC_REQUIRE([LTSUGAR_VERSION])dnl
AC_REQUIRE([LTVERSION_VERSION])dnl
AC_REQUIRE([LTOBSOLETE_VERSION])dnl
m4_require([_LT_PROG_LTMAIN])dnl

_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])

dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

# This can be used to rebuild libtool when needed
LIBTOOL_DEPS=$ltmain

# Always use our own libtool.
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
AC_SUBST(LIBTOOL)dnl

_LT_SETUP

# Only expand once:
m4_define([LT_INIT])
])
m4trace:m4/libtool.m4:99: -1- AU_DEFUN([AC_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])], [], [])
m4trace:m4/libtool.m4:99: -1- AC_DEFUN([AC_PROG_LIBTOOL], [m4_warn([obsolete], [The macro `AC_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:m4/libtool.m4:100: -1- AU_DEFUN([AM_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])], [], [])
m4trace:m4/libtool.m4:100: -1- AC_DEFUN([AM_PROG_LIBTOOL], [m4_warn([obsolete], [The macro `AM_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:m4/libtool.m4:619: -1- AC_DEFUN([LT_OUTPUT], [: ${CONFIG_LT=./config.lt}
AC_MSG_NOTICE([creating $CONFIG_LT])
_LT_GENERATED_FILE_INIT(["$CONFIG_LT"],
[# Run this file to recreate a libtool stub with the current configuration.])

cat >>"$CONFIG_LT" <<\_LTEOF
lt_cl_silent=false
exec AS_MESSAGE_LOG_FD>>config.log
{
  echo
  AS_BOX([Running $as_me.])
} >&AS_MESSAGE_LOG_FD

lt_cl_help="\
'$as_me' creates a local libtool stub from the current configuration,
for use in further configure time tests before the real libtool is
generated.

Usage: $[0] [[OPTIONS]]

  -h, --help      print this help, then exit
  -V, --version   print version number, then exit
  -q, --quiet     do not print progress messages
  -d, --debug     don't remove temporary files

Report bugs to <bug-libtool@gnu.org>."

lt_cl_version="\
m4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl
m4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])
configured by $[0], generated by m4_PACKAGE_STRING.

Copyright (C) 2011 Free Software Foundation, Inc.
This config.lt script is free software; the Free Software Foundation
gives unlimited permision to copy, distribute and modify it."

while test 0 != $[#]
do
  case $[1] in
    --version | --v* | -V )
      echo "$lt_cl_version"; exit 0 ;;
    --help | --h* | -h )
      echo "$lt_cl_help"; exit 0 ;;
    --debug | --d* | -d )
      debug=: ;;
    --quiet | --q* | --silent | --s* | -q )
      lt_cl_silent=: ;;

    -*) AC_MSG_ERROR([unrecognized option: $[1]
Try '$[0] --help' for more information.]) ;;

    *) AC_MSG_ERROR([unrecognized argument: $[1]
Try '$[0] --help' for more information.]) ;;
  esac
  shift
done

if $lt_cl_silent; then
  exec AS_MESSAGE_FD>/dev/null
fi
_LTEOF

cat >>"$CONFIG_LT" <<_LTEOF
_LT_OUTPUT_LIBTOOL_COMMANDS_INIT
_LTEOF

cat >>"$CONFIG_LT" <<\_LTEOF
AC_MSG_NOTICE([creating $ofile])
_LT_OUTPUT_LIBTOOL_COMMANDS
AS_EXIT(0)
_LTEOF
chmod +x "$CONFIG_LT"

# configure is writing to config.log, but config.lt does its own redirection,
# appending to config.log, which fails on DOS, as config.log is still kept
# open by configure.  Here we exec the FD to /dev/null, effectively closing
# config.log, so it can be properly (re)opened and appended to by config.lt.
lt_cl_success=:
test yes = "$silent" &&
  lt_config_lt_args="$lt_config_lt_args --quiet"
exec AS_MESSAGE_LOG_FD>/dev/null
$SHELL "$CONFIG_LT" $lt_config_lt_args || lt_cl_success=false
exec AS_MESSAGE_LOG_FD>>config.log
$lt_cl_success || AS_EXIT(1)
])
m4trace:m4/libtool.m4:811: -1- AC_DEFUN([LT_SUPPORTED_TAG], [])
m4trace:m4/libtool.m4:822: -1- AC_DEFUN([LT_LANG], [AC_BEFORE([$0], [LT_OUTPUT])dnl
m4_case([$1],
  [C],			[_LT_LANG(C)],
  [C++],		[_LT_LANG(CXX)],
  [Go],			[_LT_LANG(GO)],
  [Java],		[_LT_LANG(GCJ)],
  [Fortran 77],		[_LT_LANG(F77)],
  [Fortran],		[_LT_LANG(FC)],
  [Windows Resource],	[_LT_LANG(RC)],
  [m4_ifdef([_LT_LANG_]$1[_CONFIG],
    [_LT_LANG($1)],
    [m4_fatal([$0: unsupported language: "$1"])])])dnl
])
m4trace:m4/libtool.m4:914: -1- AU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])
m4trace:m4/libtool.m4:914: -1- AC_DEFUN([AC_LIBTOOL_CXX], [m4_warn([obsolete], [The macro `AC_LIBTOOL_CXX' is obsolete.
You should run autoupdate.])dnl
LT_LANG(C++)])
m4trace:m4/libtool.m4:915: -1- AU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])
m4trace:m4/libtool.m4:915: -1- AC_DEFUN([AC_LIBTOOL_F77], [m4_warn([obsolete], [The macro `AC_LIBTOOL_F77' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran 77)])
m4trace:m4/libtool.m4:916: -1- AU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])
m4trace:m4/libtool.m4:916: -1- AC_DEFUN([AC_LIBTOOL_FC], [m4_warn([obsolete], [The macro `AC_LIBTOOL_FC' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran)])
m4trace:m4/libtool.m4:917: -1- AU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])
m4trace:m4/libtool.m4:917: -1- AC_DEFUN([AC_LIBTOOL_GCJ], [m4_warn([obsolete], [The macro `AC_LIBTOOL_GCJ' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Java)])
m4trace:m4/libtool.m4:918: -1- AU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])
m4trace:m4/libtool.m4:918: -1- AC_DEFUN([AC_LIBTOOL_RC], [m4_warn([obsolete], [The macro `AC_LIBTOOL_RC' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Windows Resource)])
m4trace:m4/libtool.m4:1246: -1- AC_DEFUN([_LT_WITH_SYSROOT], [AC_MSG_CHECKING([for sysroot])
AC_ARG_WITH([sysroot],
[AS_HELP_STRING([--with-sysroot@<:@=DIR@:>@],
  [Search for dependent libraries within DIR (or the compiler's sysroot
   if not specified).])],
[], [with_sysroot=no])

dnl lt_sysroot will always be passed unquoted.  We quote it here
dnl in case the user passed a directory name.
lt_sysroot=
case $with_sysroot in #(
 yes)
   if test yes = "$GCC"; then
     lt_sysroot=`$CC --print-sysroot 2>/dev/null`
   fi
   ;; #(
 /*)
   lt_sysroot=`echo "$with_sysroot" | sed -e "$sed_quote_subst"`
   ;; #(
 no|'')
   ;; #(
 *)
   AC_MSG_RESULT([$with_sysroot])
   AC_MSG_ERROR([The sysroot must be an absolute path.])
   ;;
esac

 AC_MSG_RESULT([${lt_sysroot:-no}])
_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl
[dependent libraries, and where our libraries should be installed.])])
m4trace:m4/libtool.m4:1577: -1- AC_DEFUN([_LT_COMPILER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])
   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
   lt_compiler_flag="$3"  ## exclude from sc_useless_quotes_in_assignment
   # Insert the option either (1) after the last *FLAGS variable, or
   # (2) before a word containing "conftest.", or (3) at the end.
   # Note that $ac_compile itself does not contain backslashes and begins
   # with a dollar sign (not a hyphen), so the echo should work correctly.
   # The option is referenced via a variable to avoid confusing sed.
   lt_compile=`echo "$ac_compile" | $SED \
   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
   -e 's: [[^ ]]*conftest\.: $lt_compiler_flag&:; t' \
   -e 's:$: $lt_compiler_flag:'`
   (eval echo "\"\$as_me:$LINENO: $lt_compile\"" >&AS_MESSAGE_LOG_FD)
   (eval "$lt_compile" 2>conftest.err)
   ac_status=$?
   cat conftest.err >&AS_MESSAGE_LOG_FD
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   if (exit $ac_status) && test -s "$ac_outfile"; then
     # The compiler can only warn and ignore the option if not recognized
     # So say no if there are warnings other than the usual output.
     $ECHO "$_lt_compiler_boilerplate" | $SED '/^$/d' >conftest.exp
     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
       $2=yes
     fi
   fi
   $RM conftest*
])

if test yes = "[$]$2"; then
    m4_if([$5], , :, [$5])
else
    m4_if([$6], , :, [$6])
fi
])
m4trace:m4/libtool.m4:1619: -1- AU_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])], [], [])
m4trace:m4/libtool.m4:1619: -1- AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [m4_warn([obsolete], [The macro `AC_LIBTOOL_COMPILER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])])
m4trace:m4/libtool.m4:1628: -1- AC_DEFUN([_LT_LINKER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   save_LDFLAGS=$LDFLAGS
   LDFLAGS="$LDFLAGS $3"
   echo "$lt_simple_link_test_code" > conftest.$ac_ext
   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
     # The linker can only warn and ignore the option if not recognized
     # So say no if there are warnings
     if test -s conftest.err; then
       # Append any errors to the config.log.
       cat conftest.err 1>&AS_MESSAGE_LOG_FD
       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
       if diff conftest.exp conftest.er2 >/dev/null; then
         $2=yes
       fi
     else
       $2=yes
     fi
   fi
   $RM -r conftest*
   LDFLAGS=$save_LDFLAGS
])

if test yes = "[$]$2"; then
    m4_if([$4], , :, [$4])
else
    m4_if([$5], , :, [$5])
fi
])
m4trace:m4/libtool.m4:1663: -1- AU_DEFUN([AC_LIBTOOL_LINKER_OPTION], [m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])], [], [])
m4trace:m4/libtool.m4:1663: -1- AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [m4_warn([obsolete], [The macro `AC_LIBTOOL_LINKER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])])
m4trace:m4/libtool.m4:1670: -1- AC_DEFUN([LT_CMD_MAX_LEN], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
# find the maximum length of command line arguments
AC_MSG_CHECKING([the maximum length of command line arguments])
AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
  i=0
  teststring=ABCD

  case $build_os in
  msdosdjgpp*)
    # On DJGPP, this test can blow up pretty badly due to problems in libc
    # (any single argument exceeding 2000 bytes causes a buffer overrun
    # during glob expansion).  Even if it were fixed, the result of this
    # check would be larger than it should be.
    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
    ;;

  gnu*)
    # Under GNU Hurd, this test is not required because there is
    # no limit to the length of command line arguments.
    # Libtool will interpret -1 as no limit whatsoever
    lt_cv_sys_max_cmd_len=-1;
    ;;

  cygwin* | mingw* | cegcc*)
    # On Win9x/ME, this test blows up -- it succeeds, but takes
    # about 5 minutes as the teststring grows exponentially.
    # Worse, since 9x/ME are not pre-emptively multitasking,
    # you end up with a "frozen" computer, even though with patience
    # the test eventually succeeds (with a max line length of 256k).
    # Instead, let's just punt: use the minimum linelength reported by
    # all of the supported platforms: 8192 (on NT/2K/XP).
    lt_cv_sys_max_cmd_len=8192;
    ;;

  mint*)
    # On MiNT this can take a long time and run out of memory.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  amigaos*)
    # On AmigaOS with pdksh, this test takes hours, literally.
    # So we just punt and use a minimum line length of 8192.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)
    # This has been around since 386BSD, at least.  Likely further.
    if test -x /sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
    elif test -x /usr/sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
    else
      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
    fi
    # And add a safety zone
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    ;;

  interix*)
    # We know the value 262144 and hardcode it with a safety zone (like BSD)
    lt_cv_sys_max_cmd_len=196608
    ;;

  os2*)
    # The test takes a long time on OS/2.
    lt_cv_sys_max_cmd_len=8192
    ;;

  osf*)
    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
    # nice to cause kernel panics so lets avoid the loop below.
    # First set a reasonable default.
    lt_cv_sys_max_cmd_len=16384
    #
    if test -x /sbin/sysconfig; then
      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
        *1*) lt_cv_sys_max_cmd_len=-1 ;;
      esac
    fi
    ;;
  sco3.2v5*)
    lt_cv_sys_max_cmd_len=102400
    ;;
  sysv5* | sco5v6* | sysv4.2uw2*)
    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
    if test -n "$kargmax"; then
      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[	 ]]//'`
    else
      lt_cv_sys_max_cmd_len=32768
    fi
    ;;
  *)
    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
    if test -n "$lt_cv_sys_max_cmd_len" && \
       test undefined != "$lt_cv_sys_max_cmd_len"; then
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    else
      # Make teststring a little bigger before we do anything with it.
      # a 1K string should be a reasonable start.
      for i in 1 2 3 4 5 6 7 8; do
        teststring=$teststring$teststring
      done
      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
      # If test is not a shell built-in, we'll probably end up computing a
      # maximum length that is only half of the actual maximum length, but
      # we can't tell.
      while { test X`env echo "$teststring$teststring" 2>/dev/null` \
	         = "X$teststring$teststring"; } >/dev/null 2>&1 &&
	      test 17 != "$i" # 1/2 MB should be enough
      do
        i=`expr $i + 1`
        teststring=$teststring$teststring
      done
      # Only check the string length outside the loop.
      lt_cv_sys_max_cmd_len=`expr "X$teststring" : ".*" 2>&1`
      teststring=
      # Add a significant safety factor because C++ compilers can tack on
      # massive amounts of additional arguments before passing them to the
      # linker.  It appears as though 1/2 is a usable value.
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
    fi
    ;;
  esac
])
if test -n "$lt_cv_sys_max_cmd_len"; then
  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)
else
  AC_MSG_RESULT(none)
fi
max_cmd_len=$lt_cv_sys_max_cmd_len
_LT_DECL([], [max_cmd_len], [0],
    [What is the maximum length of a command?])
])
m4trace:m4/libtool.m4:1809: -1- AU_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])], [], [])
m4trace:m4/libtool.m4:1809: -1- AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [m4_warn([obsolete], [The macro `AC_LIBTOOL_SYS_MAX_CMD_LEN' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])])
m4trace:m4/libtool.m4:1920: -1- AC_DEFUN([LT_SYS_DLOPEN_SELF], [m4_require([_LT_HEADER_DLFCN])dnl
if test yes != "$enable_dlopen"; then
  enable_dlopen=unknown
  enable_dlopen_self=unknown
  enable_dlopen_self_static=unknown
else
  lt_cv_dlopen=no
  lt_cv_dlopen_libs=

  case $host_os in
  beos*)
    lt_cv_dlopen=load_add_on
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ;;

  mingw* | pw32* | cegcc*)
    lt_cv_dlopen=LoadLibrary
    lt_cv_dlopen_libs=
    ;;

  cygwin*)
    lt_cv_dlopen=dlopen
    lt_cv_dlopen_libs=
    ;;

  darwin*)
    # if libdl is installed we need to link against it
    AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],[
    lt_cv_dlopen=dyld
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ])
    ;;

  tpf*)
    # Don't try to run any link tests for TPF.  We know it's impossible
    # because TPF is a cross-compiler, and we know how we open DSOs.
    lt_cv_dlopen=dlopen
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=no
    ;;

  *)
    AC_CHECK_FUNC([shl_load],
	  [lt_cv_dlopen=shl_load],
      [AC_CHECK_LIB([dld], [shl_load],
	    [lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld],
	[AC_CHECK_FUNC([dlopen],
	      [lt_cv_dlopen=dlopen],
	  [AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],
	    [AC_CHECK_LIB([svld], [dlopen],
		  [lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld],
	      [AC_CHECK_LIB([dld], [dld_link],
		    [lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld])
	      ])
	    ])
	  ])
	])
      ])
    ;;
  esac

  if test no = "$lt_cv_dlopen"; then
    enable_dlopen=no
  else
    enable_dlopen=yes
  fi

  case $lt_cv_dlopen in
  dlopen)
    save_CPPFLAGS=$CPPFLAGS
    test yes = "$ac_cv_header_dlfcn_h" && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"

    save_LDFLAGS=$LDFLAGS
    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"

    save_LIBS=$LIBS
    LIBS="$lt_cv_dlopen_libs $LIBS"

    AC_CACHE_CHECK([whether a program can dlopen itself],
	  lt_cv_dlopen_self, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,
	    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)
    ])

    if test yes = "$lt_cv_dlopen_self"; then
      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],
	  lt_cv_dlopen_self_static, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,
	    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)
      ])
    fi

    CPPFLAGS=$save_CPPFLAGS
    LDFLAGS=$save_LDFLAGS
    LIBS=$save_LIBS
    ;;
  esac

  case $lt_cv_dlopen_self in
  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
  *) enable_dlopen_self=unknown ;;
  esac

  case $lt_cv_dlopen_self_static in
  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
  *) enable_dlopen_self_static=unknown ;;
  esac
fi
_LT_DECL([dlopen_support], [enable_dlopen], [0],
	 [Whether dlopen is supported])
_LT_DECL([dlopen_self], [enable_dlopen_self], [0],
	 [Whether dlopen of programs is supported])
_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],
	 [Whether dlopen of statically linked programs is supported])
])
m4trace:m4/libtool.m4:2045: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])], [], [])
m4trace:m4/libtool.m4:2045: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [m4_warn([obsolete], [The macro `AC_LIBTOOL_DLOPEN_SELF' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])])
m4trace:m4/libtool.m4:3166: -1- AC_DEFUN([_LT_PATH_TOOL_PREFIX], [m4_require([_LT_DECL_EGREP])dnl
AC_MSG_CHECKING([for $1])
AC_CACHE_VAL(lt_cv_path_MAGIC_CMD,
[case $MAGIC_CMD in
[[\\/*] |  ?:[\\/]*])
  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.
  ;;
*)
  lt_save_MAGIC_CMD=$MAGIC_CMD
  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
dnl $ac_dummy forces splitting on constant user-supplied paths.
dnl POSIX.2 word splitting is done only on the output of word expansions,
dnl not every word.  This closes a longstanding sh security hole.
  ac_dummy="m4_if([$2], , $PATH, [$2])"
  for ac_dir in $ac_dummy; do
    IFS=$lt_save_ifs
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/$1"; then
      lt_cv_path_MAGIC_CMD=$ac_dir/"$1"
      if test -n "$file_magic_test_file"; then
	case $deplibs_check_method in
	"file_magic "*)
	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
	  MAGIC_CMD=$lt_cv_path_MAGIC_CMD
	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
	    $EGREP "$file_magic_regex" > /dev/null; then
	    :
	  else
	    cat <<_LT_EOF 1>&2

*** Warning: the command libtool uses to detect shared libraries,
*** $file_magic_cmd, produces output that libtool cannot recognize.
*** The result is that libtool may fail to recognize shared libraries
*** as such.  This will affect the creation of libtool libraries that
*** depend on shared libraries, but programs linked with such libtool
*** libraries will work regardless of this problem.  Nevertheless, you
*** may want to report the problem to your system manager and/or to
*** bug-libtool@gnu.org

_LT_EOF
	  fi ;;
	esac
      fi
      break
    fi
  done
  IFS=$lt_save_ifs
  MAGIC_CMD=$lt_save_MAGIC_CMD
  ;;
esac])
MAGIC_CMD=$lt_cv_path_MAGIC_CMD
if test -n "$MAGIC_CMD"; then
  AC_MSG_RESULT($MAGIC_CMD)
else
  AC_MSG_RESULT(no)
fi
_LT_DECL([], [MAGIC_CMD], [0],
	 [Used to examine libraries when file_magic_cmd begins with "file"])dnl
])
m4trace:m4/libtool.m4:3228: -1- AU_DEFUN([AC_PATH_TOOL_PREFIX], [m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])], [], [])
m4trace:m4/libtool.m4:3228: -1- AC_DEFUN([AC_PATH_TOOL_PREFIX], [m4_warn([obsolete], [The macro `AC_PATH_TOOL_PREFIX' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])])
m4trace:m4/libtool.m4:3251: -1- AC_DEFUN([LT_PATH_LD], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_REQUIRE([AC_CANONICAL_BUILD])dnl
m4_require([_LT_DECL_SED])dnl
m4_require([_LT_DECL_EGREP])dnl
m4_require([_LT_PROG_ECHO_BACKSLASH])dnl

AC_ARG_WITH([gnu-ld],
    [AS_HELP_STRING([--with-gnu-ld],
	[assume the C compiler uses GNU ld @<:@default=no@:>@])],
    [test no = "$withval" || with_gnu_ld=yes],
    [with_gnu_ld=no])dnl

ac_prog=ld
if test yes = "$GCC"; then
  # Check if gcc -print-prog-name=ld gives a path.
  AC_MSG_CHECKING([for ld used by $CC])
  case $host in
  *-*-mingw*)
    # gcc leaves a trailing carriage return, which upsets mingw
    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
  *)
    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
  esac
  case $ac_prog in
    # Accept absolute paths.
    [[\\/]]* | ?:[[\\/]]*)
      re_direlt='/[[^/]][[^/]]*/\.\./'
      # Canonicalize the pathname of ld
      ac_prog=`$ECHO "$ac_prog"| $SED 's%\\\\%/%g'`
      while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
      done
      test -z "$LD" && LD=$ac_prog
      ;;
  "")
    # If it fails, then pretend we aren't using GCC.
    ac_prog=ld
    ;;
  *)
    # If it is relative, then search for the first ld in PATH.
    with_gnu_ld=unknown
    ;;
  esac
elif test yes = "$with_gnu_ld"; then
  AC_MSG_CHECKING([for GNU ld])
else
  AC_MSG_CHECKING([for non-GNU ld])
fi
AC_CACHE_VAL(lt_cv_path_LD,
[if test -z "$LD"; then
  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
  for ac_dir in $PATH; do
    IFS=$lt_save_ifs
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
      lt_cv_path_LD=$ac_dir/$ac_prog
      # Check to see if the program is GNU ld.  I'd rather use --version,
      # but apparently some variants of GNU ld only accept -v.
      # Break only if it was the GNU/non-GNU ld that we prefer.
      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
      *GNU* | *'with BFD'*)
	test no != "$with_gnu_ld" && break
	;;
      *)
	test yes != "$with_gnu_ld" && break
	;;
      esac
    fi
  done
  IFS=$lt_save_ifs
else
  lt_cv_path_LD=$LD # Let the user override the test with a path.
fi])
LD=$lt_cv_path_LD
if test -n "$LD"; then
  AC_MSG_RESULT($LD)
else
  AC_MSG_RESULT(no)
fi
test -z "$LD" && AC_MSG_ERROR([no acceptable ld found in \$PATH])
_LT_PATH_LD_GNU
AC_SUBST([LD])

_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])
])
m4trace:m4/libtool.m4:3340: -1- AU_DEFUN([AM_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])], [], [])
m4trace:m4/libtool.m4:3340: -1- AC_DEFUN([AM_PROG_LD], [m4_warn([obsolete], [The macro `AM_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:m4/libtool.m4:3341: -1- AU_DEFUN([AC_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])], [], [])
m4trace:m4/libtool.m4:3341: -1- AC_DEFUN([AC_PROG_LD], [m4_warn([obsolete], [The macro `AC_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:m4/libtool.m4:3670: -1- AC_DEFUN([LT_PATH_NM], [AC_REQUIRE([AC_PROG_CC])dnl
AC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,
[if test -n "$NM"; then
  # Let the user override the test.
  lt_cv_path_NM=$NM
else
  lt_nm_to_check=${ac_tool_prefix}nm
  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
    lt_nm_to_check="$lt_nm_to_check nm"
  fi
  for lt_tmp_nm in $lt_nm_to_check; do
    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
      IFS=$lt_save_ifs
      test -z "$ac_dir" && ac_dir=.
      tmp_nm=$ac_dir/$lt_tmp_nm
      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext"; then
	# Check to see if the nm accepts a BSD-compat flag.
	# Adding the 'sed 1q' prevents false positives on HP-UX, which says:
	#   nm: unknown option "B" ignored
	# Tru64's nm complains that /dev/null is an invalid object file
	# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty
	case $build_os in
	mingw*) lt_bad_file=conftest.nm/nofile ;;
	*) lt_bad_file=/dev/null ;;
	esac
	case `"$tmp_nm" -B $lt_bad_file 2>&1 | sed '1q'` in
	*$lt_bad_file* | *'Invalid file or object type'*)
	  lt_cv_path_NM="$tmp_nm -B"
	  break 2
	  ;;
	*)
	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
	  */dev/null*)
	    lt_cv_path_NM="$tmp_nm -p"
	    break 2
	    ;;
	  *)
	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
	    continue # so that we can try to find one that supports BSD flags
	    ;;
	  esac
	  ;;
	esac
      fi
    done
    IFS=$lt_save_ifs
  done
  : ${lt_cv_path_NM=no}
fi])
if test no != "$lt_cv_path_NM"; then
  NM=$lt_cv_path_NM
else
  # Didn't find any BSD compatible name lister, look for dumpbin.
  if test -n "$DUMPBIN"; then :
    # Let the user override the test.
  else
    AC_CHECK_TOOLS(DUMPBIN, [dumpbin "link -dump"], :)
    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in
    *COFF*)
      DUMPBIN="$DUMPBIN -symbols -headers"
      ;;
    *)
      DUMPBIN=:
      ;;
    esac
  fi
  AC_SUBST([DUMPBIN])
  if test : != "$DUMPBIN"; then
    NM=$DUMPBIN
  fi
fi
test -z "$NM" && NM=nm
AC_SUBST([NM])
_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl

AC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],
  [lt_cv_nm_interface="BSD nm"
  echo "int some_variable = 0;" > conftest.$ac_ext
  (eval echo "\"\$as_me:$LINENO: $ac_compile\"" >&AS_MESSAGE_LOG_FD)
  (eval "$ac_compile" 2>conftest.err)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:$LINENO: $NM \\\"conftest.$ac_objext\\\"\"" >&AS_MESSAGE_LOG_FD)
  (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:$LINENO: output\"" >&AS_MESSAGE_LOG_FD)
  cat conftest.out >&AS_MESSAGE_LOG_FD
  if $GREP 'External.*some_variable' conftest.out > /dev/null; then
    lt_cv_nm_interface="MS dumpbin"
  fi
  rm -f conftest*])
])
m4trace:m4/libtool.m4:3765: -1- AU_DEFUN([AM_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])], [], [])
m4trace:m4/libtool.m4:3765: -1- AC_DEFUN([AM_PROG_NM], [m4_warn([obsolete], [The macro `AM_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:m4/libtool.m4:3766: -1- AU_DEFUN([AC_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])], [], [])
m4trace:m4/libtool.m4:3766: -1- AC_DEFUN([AC_PROG_NM], [m4_warn([obsolete], [The macro `AC_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:m4/libtool.m4:3837: -1- AC_DEFUN([_LT_DLL_DEF_P], [dnl
  test DEF = "`$SED -n dnl
    -e '\''s/^[[	 ]]*//'\'' dnl Strip leading whitespace
    -e '\''/^\(;.*\)*$/d'\'' dnl      Delete empty lines and comments
    -e '\''s/^\(EXPORTS\|LIBRARY\)\([[	 ]].*\)*$/DEF/p'\'' dnl
    -e q dnl                          Only consider the first "real" line
    $1`" dnl
])
m4trace:m4/libtool.m4:3851: -1- AC_DEFUN([LT_LIB_M], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
LIBM=
case $host in
*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)
  # These system don't have libm, or don't need it
  ;;
*-ncr-sysv4.3*)
  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=-lmw)
  AC_CHECK_LIB(m, cos, LIBM="$LIBM -lm")
  ;;
*)
  AC_CHECK_LIB(m, cos, LIBM=-lm)
  ;;
esac
AC_SUBST([LIBM])
])
m4trace:m4/libtool.m4:3870: -1- AU_DEFUN([AC_CHECK_LIBM], [m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])], [], [])
m4trace:m4/libtool.m4:3870: -1- AC_DEFUN([AC_CHECK_LIBM], [m4_warn([obsolete], [The macro `AC_CHECK_LIBM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])])
m4trace:m4/libtool.m4:8147: -1- AC_DEFUN([LT_PROG_GCJ], [m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],
  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],
    [AC_CHECK_TOOL(GCJ, gcj,)
      test set = "${GCJFLAGS+set}" || GCJFLAGS="-g -O2"
      AC_SUBST(GCJFLAGS)])])[]dnl
])
m4trace:m4/libtool.m4:8156: -1- AU_DEFUN([LT_AC_PROG_GCJ], [m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])], [], [])
m4trace:m4/libtool.m4:8156: -1- AC_DEFUN([LT_AC_PROG_GCJ], [m4_warn([obsolete], [The macro `LT_AC_PROG_GCJ' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])])
m4trace:m4/libtool.m4:8163: -1- AC_DEFUN([LT_PROG_GO], [AC_CHECK_TOOL(GOC, gccgo,)
])
m4trace:m4/libtool.m4:8170: -1- AC_DEFUN([LT_PROG_RC], [AC_CHECK_TOOL(RC, windres,)
])
m4trace:m4/libtool.m4:8175: -1- AU_DEFUN([LT_AC_PROG_RC], [m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])], [], [])
m4trace:m4/libtool.m4:8175: -1- AC_DEFUN([LT_AC_PROG_RC], [m4_warn([obsolete], [The macro `LT_AC_PROG_RC' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])])
m4trace:m4/libtool.m4:8295: -1- AU_DEFUN([LT_AC_PROG_SED], [m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])], [], [])
m4trace:m4/libtool.m4:8295: -1- AC_DEFUN([LT_AC_PROG_SED], [m4_warn([obsolete], [The macro `LT_AC_PROG_SED' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])])
m4trace:m4/libunistring-base.m4:22: -1- AC_DEFUN([gl_LIBUNISTRING_MODULE], [
  AC_REQUIRE([gl_LIBUNISTRING_LIB_PREPARE])
  dnl Use the variables HAVE_LIBUNISTRING, LIBUNISTRING_VERSION from
  dnl gl_LIBUNISTRING_CORE if that macro has been run.
  AM_CONDITIONAL(AS_TR_CPP([LIBUNISTRING_COMPILE_$2]),
    [gl_LIBUNISTRING_VERSION_CMP([$1])])
])
m4trace:m4/libunistring-base.m4:48: -1- AC_DEFUN([gl_LIBUNISTRING_LIBHEADER], [
  AC_REQUIRE([gl_LIBUNISTRING_LIB_PREPARE])
  dnl Use the variables HAVE_LIBUNISTRING, LIBUNISTRING_VERSION from
  dnl gl_LIBUNISTRING_CORE if that macro has been run.
  if gl_LIBUNISTRING_VERSION_CMP([$1]); then
    LIBUNISTRING_[]AS_TR_CPP([$2])='$2'
  else
    LIBUNISTRING_[]AS_TR_CPP([$2])=
  fi
  AC_SUBST([LIBUNISTRING_]AS_TR_CPP([$2]))
])
m4trace:m4/libunistring-base.m4:63: -1- AC_DEFUN([gl_LIBUNISTRING_LIB_PREPARE], [
  dnl Ensure that HAVE_LIBUNISTRING is fully determined at this point.
  m4_ifdef([gl_LIBUNISTRING], [AC_REQUIRE([gl_LIBUNISTRING])])

  AC_REQUIRE([AC_PROG_AWK])

dnl Sed expressions to extract the parts of a version number.
changequote(,)
gl_libunistring_sed_extract_major='/^[0-9]/{s/^\([0-9]*\).*/\1/p;q;}
i\
0
q
'
gl_libunistring_sed_extract_minor='/^[0-9][0-9]*[.][0-9]/{s/^[0-9]*[.]\([0-9]*\).*/\1/p;q;}
i\
0
q
'
gl_libunistring_sed_extract_subminor='/^[0-9][0-9]*[.][0-9][0-9]*[.][0-9]/{s/^[0-9]*[.][0-9]*[.]\([0-9]*\).*/\1/p;q;}
i\
0
q
'
changequote([,])

  if test "$HAVE_LIBUNISTRING" = yes; then
    LIBUNISTRING_VERSION_MAJOR=`echo "$LIBUNISTRING_VERSION" | sed -n -e "$gl_libunistring_sed_extract_major"`
    LIBUNISTRING_VERSION_MINOR=`echo "$LIBUNISTRING_VERSION" | sed -n -e "$gl_libunistring_sed_extract_minor"`
    LIBUNISTRING_VERSION_SUBMINOR=`echo "$LIBUNISTRING_VERSION" | sed -n -e "$gl_libunistring_sed_extract_subminor"`
  fi
])
m4trace:m4/libunistring-base.m4:99: -1- AC_DEFUN([gl_LIBUNISTRING_VERSION_CMP], [ { test "$HAVE_LIBUNISTRING" != yes \
    || {
         dnl AS_LITERAL_IF exists and works fine since autoconf-2.59 at least.
         AS_LITERAL_IF([$1],
           [dnl This is the optimized variant, that assumes the argument is a literal:
            m4_pushdef([requested_version_major],
              [gl_LIBUNISTRING_ARG_OR_ZERO(m4_bpatsubst([$1], [^\([0-9]*\).*], [\1]), [])])
            m4_pushdef([requested_version_minor],
              [gl_LIBUNISTRING_ARG_OR_ZERO(m4_bpatsubst([$1], [^[0-9]*[.]\([0-9]*\).*], [\1]), [$1])])
            m4_pushdef([requested_version_subminor],
              [gl_LIBUNISTRING_ARG_OR_ZERO(m4_bpatsubst([$1], [^[0-9]*[.][0-9]*[.]\([0-9]*\).*], [\1]), [$1])])
            test $LIBUNISTRING_VERSION_MAJOR -lt requested_version_major \
            || { test $LIBUNISTRING_VERSION_MAJOR -eq requested_version_major \
                 && { test $LIBUNISTRING_VERSION_MINOR -lt requested_version_minor \
                      || { test $LIBUNISTRING_VERSION_MINOR -eq requested_version_minor \
                           && test $LIBUNISTRING_VERSION_SUBMINOR -lt requested_version_subminor
                         }
                    }
               }
            m4_popdef([requested_version_subminor])
            m4_popdef([requested_version_minor])
            m4_popdef([requested_version_major])
           ],
           [dnl This is the unoptimized variant:
            requested_version_major=`echo '$1' | sed -n -e "$gl_libunistring_sed_extract_major"`
            requested_version_minor=`echo '$1' | sed -n -e "$gl_libunistring_sed_extract_minor"`
            requested_version_subminor=`echo '$1' | sed -n -e "$gl_libunistring_sed_extract_subminor"`
            test $LIBUNISTRING_VERSION_MAJOR -lt $requested_version_major \
            || { test $LIBUNISTRING_VERSION_MAJOR -eq $requested_version_major \
                 && { test $LIBUNISTRING_VERSION_MINOR -lt $requested_version_minor \
                      || { test $LIBUNISTRING_VERSION_MINOR -eq $requested_version_minor \
                           && test $LIBUNISTRING_VERSION_SUBMINOR -lt $requested_version_subminor
                         }
                    }
               }
           ])
       }
  }])
m4trace:m4/limits-h.m4:10: -1- AC_DEFUN_ONCE([gl_LIMITS_H], [
  gl_CHECK_NEXT_HEADERS([limits.h])

  AC_CACHE_CHECK([whether limits.h has WORD_BIT, BOOL_WIDTH etc.],
    [gl_cv_header_limits_width],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#ifndef __STDC_WANT_IEC_60559_BFP_EXT__
             #define __STDC_WANT_IEC_60559_BFP_EXT__ 1
            #endif
            #include <limits.h>
            long long llm = LLONG_MAX;
            int wb = WORD_BIT;
            int ullw = ULLONG_WIDTH;
            int bw = BOOL_WIDTH;
          ]])],
       [gl_cv_header_limits_width=yes],
       [gl_cv_header_limits_width=no])])
  if test "$gl_cv_header_limits_width" = yes; then
    LIMITS_H=
  else
    LIMITS_H=limits.h
  fi
  AC_SUBST([LIMITS_H])
  AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [test -n "$LIMITS_H"])
])
m4trace:m4/limits-h.m4:39: -1- AC_DEFUN([gl_REPLACE_LIMITS_H], [
  AC_REQUIRE([gl_LIMITS_H])
  LIMITS_H='limits.h'
  AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [test -n "$LIMITS_H"])
])
m4trace:m4/link.m4:7: -1- AC_DEFUN([gl_FUNC_LINK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([link])
  if test $ac_cv_func_link = no; then
    HAVE_LINK=0
  else
    AC_CACHE_CHECK([whether link obeys POSIX],
      [gl_cv_func_link_works],
      [touch conftest.a
       # Assume that if we have lstat, we can also check symlinks.
       if test $ac_cv_func_lstat = yes; then
         ln -s conftest.a conftest.lnk
       fi
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
             #include <stdio.h>
           ]],
           [[int result = 0;
             if (!link ("conftest.a", "conftest.b/"))
               result |= 1;
#if HAVE_LSTAT
             if (!link ("conftest.lnk/", "conftest.b"))
               result |= 2;
             if (rename ("conftest.a", "conftest.b"))
               result |= 4;
             if (!link ("conftest.b", "conftest.lnk"))
               result |= 8;
#endif
             return result;
           ]])],
         [gl_cv_func_link_works=yes], [gl_cv_func_link_works=no],
         [case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_link_works="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_link_works="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_link_works="$gl_cross_guess_normal" ;;
          esac
         ])
       rm -f conftest.a conftest.b conftest.lnk])
    case "$gl_cv_func_link_works" in
      *yes) ;;
      *)
        REPLACE_LINK=1
        ;;
    esac
  fi
])
m4trace:m4/localcharset.m4:7: -1- AC_DEFUN([gl_LOCALCHARSET], [
  dnl Prerequisites of lib/localcharset.c.
  AC_REQUIRE([AM_LANGINFO_CODESET])
])
m4trace:m4/locale-fr.m4:10: -1- AC_DEFUN([gt_LOCALE_FR], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AM_LANGINFO_CODESET])
  AC_CACHE_CHECK([for a traditional french locale], [gt_cv_locale_fr], [
    AC_LANG_CONFTEST([AC_LANG_SOURCE([[
#include <locale.h>
#include <time.h>
#if HAVE_LANGINFO_CODESET
# include <langinfo.h>
#endif
#include <stdlib.h>
#include <string.h>
struct tm t;
char buf[16];
int main () {
  /* On BeOS and Haiku, locales are not implemented in libc.  Rather, libintl
     imitates locale dependent behaviour by looking at the environment
     variables, and all locales use the UTF-8 encoding.  */
#if defined __BEOS__ || defined __HAIKU__
  return 1;
#else
  /* Check whether the given locale name is recognized by the system.  */
# if defined _WIN32 && !defined __CYGWIN__
  /* On native Windows, setlocale(category, "") looks at the system settings,
     not at the environment variables.  Also, when an encoding suffix such
     as ".65001" or ".54936" is specified, it succeeds but sets the LC_CTYPE
     category of the locale to "C".  */
  if (setlocale (LC_ALL, getenv ("LC_ALL")) == NULL
      || strcmp (setlocale (LC_CTYPE, NULL), "C") == 0)
    return 1;
# else
  if (setlocale (LC_ALL, "") == NULL) return 1;
# endif
  /* Check whether nl_langinfo(CODESET) is nonempty and not "ASCII" or "646".
     On Mac OS X 10.3.5 (Darwin 7.5) in the fr_FR locale, nl_langinfo(CODESET)
     is empty, and the behaviour of Tcl 8.4 in this locale is not useful.
     On OpenBSD 4.0, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "646". In this situation,
     some unit tests fail.
     On MirBSD 10, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "UTF-8".  */
# if HAVE_LANGINFO_CODESET
  {
    const char *cs = nl_langinfo (CODESET);
    if (cs[0] == '\0' || strcmp (cs, "ASCII") == 0 || strcmp (cs, "646") == 0
        || strcmp (cs, "UTF-8") == 0)
      return 1;
  }
# endif
# ifdef __CYGWIN__
  /* On Cygwin, avoid locale names without encoding suffix, because the
     locale_charset() function relies on the encoding suffix.  Note that
     LC_ALL is set on the command line.  */
  if (strchr (getenv ("LC_ALL"), '.') == NULL) return 1;
# endif
  /* Check whether in the abbreviation of the second month, the second
     character (should be U+00E9: LATIN SMALL LETTER E WITH ACUTE) is only
     one byte long. This excludes the UTF-8 encoding.  */
  t.tm_year = 1975 - 1900; t.tm_mon = 2 - 1; t.tm_mday = 4;
  if (strftime (buf, sizeof (buf), "%b", &t) < 3 || buf[2] != 'v') return 1;
# if !defined __BIONIC__ /* Bionic libc's 'struct lconv' is just a dummy.  */
  /* Check whether the decimal separator is a comma.
     On NetBSD 3.0 in the fr_FR.ISO8859-1 locale, localeconv()->decimal_point
     are nl_langinfo(RADIXCHAR) are both ".".  */
  if (localeconv () ->decimal_point[0] != ',') return 1;
# endif
  return 0;
#endif
}
      ]])])
    if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
      case "$host_os" in
        # Handle native Windows specially, because there setlocale() interprets
        # "ar" as "Arabic" or "Arabic_Saudi Arabia.1256",
        # "fr" or "fra" as "French" or "French_France.1252",
        # "ge"(!) or "deu"(!) as "German" or "German_Germany.1252",
        # "ja" as "Japanese" or "Japanese_Japan.932",
        # and similar.
        mingw*)
          # Test for the native Windows locale name.
          if (LC_ALL=French_France.1252 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_fr=French_France.1252
          else
            # None found.
            gt_cv_locale_fr=none
          fi
          ;;
        *)
          # Setting LC_ALL is not enough. Need to set LC_TIME to empty, because
          # otherwise on Mac OS X 10.3.5 the LC_TIME=C from the beginning of the
          # configure script would override the LC_ALL setting. Likewise for
          # LC_CTYPE, which is also set at the beginning of the configure script.
          # Test for the usual locale name.
          if (LC_ALL=fr_FR LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_fr=fr_FR
          else
            # Test for the locale name with explicit encoding suffix.
            if (LC_ALL=fr_FR.ISO-8859-1 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
              gt_cv_locale_fr=fr_FR.ISO-8859-1
            else
              # Test for the AIX, OSF/1, FreeBSD, NetBSD, OpenBSD locale name.
              if (LC_ALL=fr_FR.ISO8859-1 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                gt_cv_locale_fr=fr_FR.ISO8859-1
              else
                # Test for the HP-UX locale name.
                if (LC_ALL=fr_FR.iso88591 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                  gt_cv_locale_fr=fr_FR.iso88591
                else
                  # Test for the Solaris 7 locale name.
                  if (LC_ALL=fr LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                    gt_cv_locale_fr=fr
                  else
                    # None found.
                    gt_cv_locale_fr=none
                  fi
                fi
              fi
            fi
          fi
          ;;
      esac
    fi
    rm -fr conftest*
  ])
  LOCALE_FR=$gt_cv_locale_fr
  AC_SUBST([LOCALE_FR])
])
m4trace:m4/locale-fr.m4:140: -1- AC_DEFUN([gt_LOCALE_FR_UTF8], [
  AC_REQUIRE([AM_LANGINFO_CODESET])
  AC_CACHE_CHECK([for a french Unicode locale], [gt_cv_locale_fr_utf8], [
    AC_LANG_CONFTEST([AC_LANG_SOURCE([[
#include <locale.h>
#include <time.h>
#if HAVE_LANGINFO_CODESET
# include <langinfo.h>
#endif
#include <stdlib.h>
#include <string.h>
struct tm t;
char buf[16];
int main () {
  /* On BeOS and Haiku, locales are not implemented in libc.  Rather, libintl
     imitates locale dependent behaviour by looking at the environment
     variables, and all locales use the UTF-8 encoding.  */
#if !(defined __BEOS__ || defined __HAIKU__)
  /* Check whether the given locale name is recognized by the system.  */
# if defined _WIN32 && !defined __CYGWIN__
  /* On native Windows, setlocale(category, "") looks at the system settings,
     not at the environment variables.  Also, when an encoding suffix such
     as ".65001" or ".54936" is specified, it succeeds but sets the LC_CTYPE
     category of the locale to "C".  */
  if (setlocale (LC_ALL, getenv ("LC_ALL")) == NULL
      || strcmp (setlocale (LC_CTYPE, NULL), "C") == 0)
    return 1;
# else
  if (setlocale (LC_ALL, "") == NULL) return 1;
# endif
  /* Check whether nl_langinfo(CODESET) is nonempty and not "ASCII" or "646".
     On Mac OS X 10.3.5 (Darwin 7.5) in the fr_FR locale, nl_langinfo(CODESET)
     is empty, and the behaviour of Tcl 8.4 in this locale is not useful.
     On OpenBSD 4.0, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "646". In this situation,
     some unit tests fail.  */
# if HAVE_LANGINFO_CODESET
  {
    const char *cs = nl_langinfo (CODESET);
    if (cs[0] == '\0' || strcmp (cs, "ASCII") == 0 || strcmp (cs, "646") == 0)
      return 1;
  }
# endif
# ifdef __CYGWIN__
  /* On Cygwin, avoid locale names without encoding suffix, because the
     locale_charset() function relies on the encoding suffix.  Note that
     LC_ALL is set on the command line.  */
  if (strchr (getenv ("LC_ALL"), '.') == NULL) return 1;
# endif
  /* Check whether in the abbreviation of the second month, the second
     character (should be U+00E9: LATIN SMALL LETTER E WITH ACUTE) is
     two bytes long, with UTF-8 encoding.  */
  t.tm_year = 1975 - 1900; t.tm_mon = 2 - 1; t.tm_mday = 4;
  if (strftime (buf, sizeof (buf), "%b", &t) < 4
      || buf[1] != (char) 0xc3 || buf[2] != (char) 0xa9 || buf[3] != 'v')
    return 1;
#endif
#if !defined __BIONIC__ /* Bionic libc's 'struct lconv' is just a dummy.  */
  /* Check whether the decimal separator is a comma.
     On NetBSD 3.0 in the fr_FR.ISO8859-1 locale, localeconv()->decimal_point
     are nl_langinfo(RADIXCHAR) are both ".".  */
  if (localeconv () ->decimal_point[0] != ',') return 1;
#endif
  return 0;
}
      ]])])
    if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
      case "$host_os" in
        # Handle native Windows specially, because there setlocale() interprets
        # "ar" as "Arabic" or "Arabic_Saudi Arabia.1256",
        # "fr" or "fra" as "French" or "French_France.1252",
        # "ge"(!) or "deu"(!) as "German" or "German_Germany.1252",
        # "ja" as "Japanese" or "Japanese_Japan.932",
        # and similar.
        mingw*)
          # Test for the hypothetical native Windows locale name.
          if (LC_ALL=French_France.65001 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_fr_utf8=French_France.65001
          else
            # None found.
            gt_cv_locale_fr_utf8=none
          fi
          ;;
        *)
          # Setting LC_ALL is not enough. Need to set LC_TIME to empty, because
          # otherwise on Mac OS X 10.3.5 the LC_TIME=C from the beginning of the
          # configure script would override the LC_ALL setting. Likewise for
          # LC_CTYPE, which is also set at the beginning of the configure script.
          # Test for the usual locale name.
          if (LC_ALL=fr_FR LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_fr_utf8=fr_FR
          else
            # Test for the locale name with explicit encoding suffix.
            if (LC_ALL=fr_FR.UTF-8 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
              gt_cv_locale_fr_utf8=fr_FR.UTF-8
            else
              # Test for the Solaris 7 locale name.
              if (LC_ALL=fr.UTF-8 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                gt_cv_locale_fr_utf8=fr.UTF-8
              else
                # None found.
                gt_cv_locale_fr_utf8=none
              fi
            fi
          fi
          ;;
      esac
    fi
    rm -fr conftest*
  ])
  LOCALE_FR_UTF8=$gt_cv_locale_fr_utf8
  AC_SUBST([LOCALE_FR_UTF8])
])
m4trace:m4/locale-ja.m4:10: -1- AC_DEFUN([gt_LOCALE_JA], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AM_LANGINFO_CODESET])
  AC_CACHE_CHECK([for a traditional japanese locale], [gt_cv_locale_ja], [
    AC_LANG_CONFTEST([AC_LANG_SOURCE([[
#include <locale.h>
#include <time.h>
#if HAVE_LANGINFO_CODESET
# include <langinfo.h>
#endif
#include <stdlib.h>
#include <string.h>
struct tm t;
char buf[16];
int main ()
{
  /* On BeOS and Haiku, locales are not implemented in libc.  Rather, libintl
     imitates locale dependent behaviour by looking at the environment
     variables, and all locales use the UTF-8 encoding.  */
#if defined __BEOS__ || defined __HAIKU__
  return 1;
#else
  /* Check whether the given locale name is recognized by the system.  */
# if defined _WIN32 && !defined __CYGWIN__
  /* On native Windows, setlocale(category, "") looks at the system settings,
     not at the environment variables.  Also, when an encoding suffix such
     as ".65001" or ".54936" is specified, it succeeds but sets the LC_CTYPE
     category of the locale to "C".  */
  if (setlocale (LC_ALL, getenv ("LC_ALL")) == NULL
      || strcmp (setlocale (LC_CTYPE, NULL), "C") == 0)
    return 1;
# else
  if (setlocale (LC_ALL, "") == NULL) return 1;
# endif
  /* Check whether nl_langinfo(CODESET) is nonempty and not "ASCII" or "646".
     On Mac OS X 10.3.5 (Darwin 7.5) in the fr_FR locale, nl_langinfo(CODESET)
     is empty, and the behaviour of Tcl 8.4 in this locale is not useful.
     On OpenBSD 4.0, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "646". In this situation,
     some unit tests fail.
     On MirBSD 10, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "UTF-8".  */
# if HAVE_LANGINFO_CODESET
  {
    const char *cs = nl_langinfo (CODESET);
    if (cs[0] == '\0' || strcmp (cs, "ASCII") == 0 || strcmp (cs, "646") == 0
        || strcmp (cs, "UTF-8") == 0)
      return 1;
  }
# endif
# ifdef __CYGWIN__
  /* On Cygwin, avoid locale names without encoding suffix, because the
     locale_charset() function relies on the encoding suffix.  Note that
     LC_ALL is set on the command line.  */
  if (strchr (getenv ("LC_ALL"), '.') == NULL) return 1;
# endif
  /* Check whether MB_CUR_MAX is > 1.  This excludes the dysfunctional locales
     on Cygwin 1.5.x.  */
  if (MB_CUR_MAX == 1)
    return 1;
  /* Check whether in a month name, no byte in the range 0x80..0x9F occurs.
     This excludes the UTF-8 encoding (except on MirBSD).  */
  {
    const char *p;
    t.tm_year = 1975 - 1900; t.tm_mon = 2 - 1; t.tm_mday = 4;
    if (strftime (buf, sizeof (buf), "%B", &t) < 2) return 1;
    for (p = buf; *p != '\0'; p++)
      if ((unsigned char) *p >= 0x80 && (unsigned char) *p < 0xa0)
        return 1;
  }
  return 0;
#endif
}
      ]])])
    if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
      case "$host_os" in
        # Handle native Windows specially, because there setlocale() interprets
        # "ar" as "Arabic" or "Arabic_Saudi Arabia.1256",
        # "fr" or "fra" as "French" or "French_France.1252",
        # "ge"(!) or "deu"(!) as "German" or "German_Germany.1252",
        # "ja" as "Japanese" or "Japanese_Japan.932",
        # and similar.
        mingw*)
          # Note that on native Windows, the Japanese locale is
          # Japanese_Japan.932, and CP932 is very different from EUC-JP, so we
          # cannot use it here.
          gt_cv_locale_ja=none
          ;;
        *)
          # Setting LC_ALL is not enough. Need to set LC_TIME to empty, because
          # otherwise on Mac OS X 10.3.5 the LC_TIME=C from the beginning of the
          # configure script would override the LC_ALL setting. Likewise for
          # LC_CTYPE, which is also set at the beginning of the configure script.
          # Test for the AIX locale name.
          if (LC_ALL=ja_JP LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_ja=ja_JP
          else
            # Test for the locale name with explicit encoding suffix.
            if (LC_ALL=ja_JP.EUC-JP LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
              gt_cv_locale_ja=ja_JP.EUC-JP
            else
              # Test for the HP-UX, OSF/1, NetBSD locale name.
              if (LC_ALL=ja_JP.eucJP LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                gt_cv_locale_ja=ja_JP.eucJP
              else
                # Test for the IRIX, FreeBSD locale name.
                if (LC_ALL=ja_JP.EUC LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                  gt_cv_locale_ja=ja_JP.EUC
                else
                  # Test for the Solaris 7 locale name.
                  if (LC_ALL=ja LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                    gt_cv_locale_ja=ja
                  else
                    # Special test for NetBSD 1.6.
                    if test -f /usr/share/locale/ja_JP.eucJP/LC_CTYPE; then
                      gt_cv_locale_ja=ja_JP.eucJP
                    else
                      # None found.
                      gt_cv_locale_ja=none
                    fi
                  fi
                fi
              fi
            fi
          fi
          ;;
      esac
    fi
    rm -fr conftest*
  ])
  LOCALE_JA=$gt_cv_locale_ja
  AC_SUBST([LOCALE_JA])
])
m4trace:m4/locale-zh.m4:10: -1- AC_DEFUN([gt_LOCALE_ZH_CN], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AM_LANGINFO_CODESET])
  AC_CACHE_CHECK([for a transitional chinese locale], [gt_cv_locale_zh_CN], [
    AC_LANG_CONFTEST([AC_LANG_SOURCE([[
#include <locale.h>
#include <stdlib.h>
#include <time.h>
#if HAVE_LANGINFO_CODESET
# include <langinfo.h>
#endif
#include <stdlib.h>
#include <string.h>
struct tm t;
char buf[16];
int main ()
{
  /* On BeOS and Haiku, locales are not implemented in libc.  Rather, libintl
     imitates locale dependent behaviour by looking at the environment
     variables, and all locales use the UTF-8 encoding.  */
#if defined __BEOS__ || defined __HAIKU__
  return 1;
#else
  /* Check whether the given locale name is recognized by the system.  */
# if defined _WIN32 && !defined __CYGWIN__
  /* On native Windows, setlocale(category, "") looks at the system settings,
     not at the environment variables.  Also, when an encoding suffix such
     as ".65001" or ".54936" is specified, it succeeds but sets the LC_CTYPE
     category of the locale to "C".  */
  if (setlocale (LC_ALL, getenv ("LC_ALL")) == NULL
      || strcmp (setlocale (LC_CTYPE, NULL), "C") == 0)
    return 1;
# else
  if (setlocale (LC_ALL, "") == NULL) return 1;
# endif
  /* Check whether nl_langinfo(CODESET) is nonempty and not "ASCII" or "646".
     On Mac OS X 10.3.5 (Darwin 7.5) in the fr_FR locale, nl_langinfo(CODESET)
     is empty, and the behaviour of Tcl 8.4 in this locale is not useful.
     On OpenBSD 4.0, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "646". In this situation,
     some unit tests fail.
     On MirBSD 10, when an unsupported locale is specified, setlocale()
     succeeds but then nl_langinfo(CODESET) is "UTF-8".  */
# if HAVE_LANGINFO_CODESET
  {
    const char *cs = nl_langinfo (CODESET);
    if (cs[0] == '\0' || strcmp (cs, "ASCII") == 0 || strcmp (cs, "646") == 0
        || strcmp (cs, "UTF-8") == 0)
      return 1;
  }
# endif
# ifdef __CYGWIN__
  /* On Cygwin, avoid locale names without encoding suffix, because the
     locale_charset() function relies on the encoding suffix.  Note that
     LC_ALL is set on the command line.  */
  if (strchr (getenv ("LC_ALL"), '.') == NULL) return 1;
# endif
  /* Check whether in a month name, no byte in the range 0x80..0x9F occurs.
     This excludes the UTF-8 encoding (except on MirBSD).  */
  {
    const char *p;
    t.tm_year = 1975 - 1900; t.tm_mon = 2 - 1; t.tm_mday = 4;
    if (strftime (buf, sizeof (buf), "%B", &t) < 2) return 1;
    for (p = buf; *p != '\0'; p++)
      if ((unsigned char) *p >= 0x80 && (unsigned char) *p < 0xa0)
        return 1;
  }
  /* Check whether a typical GB18030 multibyte sequence is recognized as a
     single wide character.  This excludes the GB2312 and GBK encodings.  */
  if (mblen ("\203\062\332\066", 5) != 4)
    return 1;
  return 0;
#endif
}
      ]])])
    if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
      case "$host_os" in
        # Handle native Windows specially, because there setlocale() interprets
        # "ar" as "Arabic" or "Arabic_Saudi Arabia.1256",
        # "fr" or "fra" as "French" or "French_France.1252",
        # "ge"(!) or "deu"(!) as "German" or "German_Germany.1252",
        # "ja" as "Japanese" or "Japanese_Japan.932",
        # and similar.
        mingw*)
          # Test for the hypothetical native Windows locale name.
          if (LC_ALL=Chinese_China.54936 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_zh_CN=Chinese_China.54936
          else
            # None found.
            gt_cv_locale_zh_CN=none
          fi
          ;;
        solaris2.8)
          # On Solaris 8, the locales zh_CN.GB18030, zh_CN.GBK, zh.GBK are
          # broken. One witness is the test case in gl_MBRTOWC_SANITYCHECK.
          # Another witness is that "LC_ALL=zh_CN.GB18030 bash -c true" dumps core.
          gt_cv_locale_zh_CN=none
          ;;
        *)
          # Setting LC_ALL is not enough. Need to set LC_TIME to empty, because
          # otherwise on Mac OS X 10.3.5 the LC_TIME=C from the beginning of the
          # configure script would override the LC_ALL setting. Likewise for
          # LC_CTYPE, which is also set at the beginning of the configure script.
          # Test for the locale name without encoding suffix.
          if (LC_ALL=zh_CN LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
            gt_cv_locale_zh_CN=zh_CN
          else
            # Test for the locale name with explicit encoding suffix.
            if (LC_ALL=zh_CN.GB18030 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
              gt_cv_locale_zh_CN=zh_CN.GB18030
            else
              # None found.
              gt_cv_locale_zh_CN=none
            fi
          fi
          ;;
      esac
    else
      # If there was a link error, due to mblen(), the system is so old that
      # it certainly doesn't have a chinese locale.
      gt_cv_locale_zh_CN=none
    fi
    rm -fr conftest*
  ])
  LOCALE_ZH_CN=$gt_cv_locale_zh_CN
  AC_SUBST([LOCALE_ZH_CN])
])
m4trace:m4/locale_h.m4:7: -1- AC_DEFUN_ONCE([gl_LOCALE_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_LOCALE_H_DEFAULTS])

  dnl Persuade glibc <locale.h> to define locale_t and the int_p_*, int_n_*
  dnl members of 'struct lconv'.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl If <stddef.h> is replaced, then <locale.h> must also be replaced.
  AC_REQUIRE([gl_STDDEF_H])

  AC_REQUIRE([gl_LOCALE_T])

  dnl Solaris 11.0 defines the int_p_*, int_n_* members of 'struct lconv'
  dnl only if _LCONV_C99 is defined.
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    solaris*)
      AC_DEFINE([_LCONV_C99], [1], [Define to 1 on Solaris.])
      ;;
  esac

  AC_CACHE_CHECK([whether locale.h conforms to POSIX:2001],
    [gl_cv_header_locale_h_posix2001],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <locale.h>
            int x = LC_MESSAGES;
            int y = sizeof (((struct lconv *) 0)->decimal_point);]],
          [[]])],
       [gl_cv_header_locale_h_posix2001=yes],
       [gl_cv_header_locale_h_posix2001=no])])

  dnl Check whether 'struct lconv' is complete.
  dnl Bionic libc's 'struct lconv' is just a dummy.
  dnl On OpenBSD 4.9, HP-UX 11, IRIX 6.5, OSF/1 5.1, Solaris 9, Cygwin 1.5.x,
  dnl mingw, MSVC 9, it lacks the int_p_* and int_n_* members.
  AC_CACHE_CHECK([whether struct lconv is properly defined],
    [gl_cv_sys_struct_lconv_ok],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <locale.h>
            struct lconv l;
            int x = sizeof (l.decimal_point);
            int y = sizeof (l.int_p_cs_precedes);]],
          [[]])],
       [gl_cv_sys_struct_lconv_ok=yes],
       [gl_cv_sys_struct_lconv_ok=no])
    ])
  if test $gl_cv_sys_struct_lconv_ok = no; then
    dnl On native Windows with MSVC, merely define these member names as macros.
    dnl This avoids trouble in C++ mode.
    case "$host_os" in
      mingw*)
        AC_EGREP_CPP([Special], [
#ifdef _MSC_VER
 Special
#endif
          ],
          [],
          [REPLACE_STRUCT_LCONV=1])
        ;;
      *) REPLACE_STRUCT_LCONV=1 ;;
    esac
  fi

  dnl <locale.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_NEXT_HEADERS([locale.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <locale.h>
/* Some systems provide declarations in a non-standard header.  */
#if HAVE_XLOCALE_H
# include <xlocale.h>
#endif
    ]],
    [setlocale newlocale duplocale freelocale])
])
m4trace:m4/locale_h.m4:91: -1- AC_DEFUN([gl_LOCALE_T], [
  dnl Persuade glibc and Solaris <locale.h> to define locale_t.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl Check whether use of locale_t requires inclusion of <xlocale.h>,
  dnl e.g. on Mac OS X 10.5. If <locale.h> does not define locale_t by
  dnl itself, we assume that <xlocale.h> will do so.
  AC_CACHE_CHECK([whether locale.h defines locale_t],
    [gl_cv_header_locale_has_locale_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <locale.h>
            locale_t x;]],
          [[]])],
       [gl_cv_header_locale_has_locale_t=yes],
       [gl_cv_header_locale_has_locale_t=no])
    ])

  dnl Check for <xlocale.h>.
  AC_CHECK_HEADERS_ONCE([xlocale.h])
  if test $ac_cv_header_xlocale_h = yes; then
    HAVE_XLOCALE_H=1
    if test $gl_cv_header_locale_has_locale_t = yes; then
      gl_cv_header_locale_h_needs_xlocale_h=no
    else
      gl_cv_header_locale_h_needs_xlocale_h=yes
    fi
    HAVE_LOCALE_T=1
  else
    HAVE_XLOCALE_H=0
    gl_cv_header_locale_h_needs_xlocale_h=no
    if test $gl_cv_header_locale_has_locale_t = yes; then
      HAVE_LOCALE_T=1
    else
      HAVE_LOCALE_T=0
    fi
  fi
  AC_SUBST([HAVE_XLOCALE_H])
])
m4trace:m4/locale_h.m4:136: -1- AC_DEFUN([gl_LOCALE_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_LOCALE_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/locale_h.m4:148: -1- AC_DEFUN([gl_LOCALE_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_LOCALE_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALECONV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETLOCALE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETLOCALE_NULL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUPLOCALE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALENAME])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_LOCALE_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_LOCALE_H_DEFAULTS])
])
m4trace:m4/locale_h.m4:161: -1- AC_DEFUN([gl_LOCALE_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_NEWLOCALE=1;       AC_SUBST([HAVE_NEWLOCALE])
  HAVE_DUPLOCALE=1;       AC_SUBST([HAVE_DUPLOCALE])
  HAVE_FREELOCALE=1;      AC_SUBST([HAVE_FREELOCALE])
  REPLACE_LOCALECONV=0;   AC_SUBST([REPLACE_LOCALECONV])
  REPLACE_SETLOCALE=0;    AC_SUBST([REPLACE_SETLOCALE])
  REPLACE_NEWLOCALE=0;    AC_SUBST([REPLACE_NEWLOCALE])
  REPLACE_DUPLOCALE=0;    AC_SUBST([REPLACE_DUPLOCALE])
  REPLACE_FREELOCALE=0;   AC_SUBST([REPLACE_FREELOCALE])
  REPLACE_STRUCT_LCONV=0; AC_SUBST([REPLACE_STRUCT_LCONV])
  LOCALENAME_ENHANCE_LOCALE_FUNCS=0; AC_SUBST([LOCALENAME_ENHANCE_LOCALE_FUNCS])
])
m4trace:m4/localename.m4:7: -1- AC_DEFUN([gl_LOCALENAME], [
  AC_REQUIRE([gl_LOCALE_H_DEFAULTS])
  AC_REQUIRE([gl_LOCALE_T])
  AC_REQUIRE([gt_LC_MESSAGES])
  AC_REQUIRE([gt_INTL_THREAD_LOCALE_NAME])
  AC_REQUIRE([gt_INTL_MACOSX])
  AC_CHECK_HEADERS_ONCE([langinfo.h])
  if test $HAVE_LOCALE_T = 1; then
    AC_CHECK_FUNCS_ONCE([newlocale duplocale freelocale])
    gl_func_newlocale="$ac_cv_func_newlocale"
    gl_func_duplocale="$ac_cv_func_duplocale"
    gl_func_freelocale="$ac_cv_func_freelocale"
  else
    dnl In 2019, some versions of z/OS lack the locale_t type and have broken
    dnl newlocale, duplocale, freelocale functions.
    gl_func_newlocale=no
    gl_func_duplocale=no
    gl_func_freelocale=no
  fi
  if test $gl_func_newlocale != yes; then
    HAVE_NEWLOCALE=0
  fi
  if test $gl_func_duplocale != yes; then
    HAVE_DUPLOCALE=0
  fi
  if test $gl_func_freelocale != yes; then
    HAVE_FREELOCALE=0
  fi
  if test $gt_localename_enhances_locale_funcs = yes; then
    REPLACE_NEWLOCALE=1
    REPLACE_DUPLOCALE=1
    REPLACE_FREELOCALE=1
  fi
])
m4trace:m4/lock.m4:9: -1- AC_DEFUN([gl_LOCK], [
  AC_REQUIRE([gl_THREADLIB])
  if test "$gl_threads_api" = posix; then
    # OSF/1 4.0 and Mac OS X 10.1 lack the pthread_rwlock_t type and the
    # pthread_rwlock_* functions.
    has_rwlock=false
    AC_CHECK_TYPE([pthread_rwlock_t],
      [has_rwlock=true
       AC_DEFINE([HAVE_PTHREAD_RWLOCK], [1],
         [Define if the POSIX multithreading library has read/write locks.])],
      [],
      [#include <pthread.h>])
    if $has_rwlock; then
      gl_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER
    fi
    # glibc defines PTHREAD_MUTEX_RECURSIVE as enum, not as a macro.
    AC_COMPILE_IFELSE([
      AC_LANG_PROGRAM(
        [[#include <pthread.h>]],
        [[
#if __FreeBSD__ == 4
error "No, in FreeBSD 4.0 recursive mutexes actually don't work."
#elif (defined __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ \
       && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ < 1070)
error "No, in Mac OS X < 10.7 recursive mutexes actually don't work."
#else
int x = (int)PTHREAD_MUTEX_RECURSIVE;
return !x;
#endif
        ]])],
      [AC_DEFINE([HAVE_PTHREAD_MUTEX_RECURSIVE], [1],
         [Define if the <pthread.h> defines PTHREAD_MUTEX_RECURSIVE.])])
  fi
  gl_PREREQ_LOCK
])
m4trace:m4/lock.m4:47: -1- AC_DEFUN([gl_PREREQ_LOCK], [:])
m4trace:m4/lseek.m4:7: -1- AC_DEFUN([gl_FUNC_LSEEK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AC_PROG_CC])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CACHE_CHECK([whether lseek detects pipes], [gl_cv_func_lseek_pipe],
    [case "$host_os" in
       mingw*)
         dnl Native Windows.
         dnl The result of lseek (fd, (off_t)0, SEEK_CUR) or
         dnl SetFilePointer(handle, 0, NULL, FILE_CURRENT)
         dnl for a pipe depends on the environment: In a Cygwin 1.5
         dnl environment it succeeds (wrong); in a Cygwin 1.7 environment
         dnl it fails with a wrong errno value.
         gl_cv_func_lseek_pipe=no
         ;;
       *)
         if test $cross_compiling = no; then
           AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h> /* for off_t */
#include <stdio.h> /* for SEEK_CUR */
#if HAVE_UNISTD_H
# include <unistd.h>
#else /* on Windows with MSVC */
# include <io.h>
#endif
]GL_MDA_DEFINES],
[[
  /* Exit with success only if stdin is seekable.  */
  return lseek (0, (off_t)0, SEEK_CUR) < 0;
]])],
             [if test -s conftest$ac_exeext \
                 && ./conftest$ac_exeext < conftest.$ac_ext \
                 && test 1 = "`echo hi \
                   | { ./conftest$ac_exeext; echo $?; cat >/dev/null; }`"; then
                gl_cv_func_lseek_pipe=yes
              else
                gl_cv_func_lseek_pipe=no
              fi
             ],
             [gl_cv_func_lseek_pipe=no])
         else
           AC_COMPILE_IFELSE(
             [AC_LANG_SOURCE([[
#if defined __BEOS__
/* BeOS mistakenly return 0 when trying to seek on pipes.  */
  Choke me.
#endif]])],
             [gl_cv_func_lseek_pipe=yes], [gl_cv_func_lseek_pipe=no])
         fi
         ;;
     esac
    ])
  if test "$gl_cv_func_lseek_pipe" = no; then
    REPLACE_LSEEK=1
    AC_DEFINE([LSEEK_PIPE_BROKEN], [1],
      [Define to 1 if lseek does not detect pipes.])
  fi

  AC_REQUIRE([gl_SYS_TYPES_H])
  if test $WINDOWS_64_BIT_OFF_T = 1; then
    REPLACE_LSEEK=1
  fi

  dnl macOS SEEK_DATA is incompatible with other platforms.
  case $host_os in
    darwin*)
      REPLACE_LSEEK=1;;
  esac
])
m4trace:m4/lstat.m4:11: -1- AC_DEFUN([gl_FUNC_LSTAT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  dnl If lstat does not exist, the replacement <sys/stat.h> does
  dnl "#define lstat stat", and lstat.c is a no-op.
  AC_CHECK_FUNCS_ONCE([lstat])
  if test $ac_cv_func_lstat = yes; then
    AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
    case $host_os,$gl_cv_func_lstat_dereferences_slashed_symlink in
      solaris* | *no)
        REPLACE_LSTAT=1
        ;;
    esac
  else
    HAVE_LSTAT=0
  fi
])
m4trace:m4/lstat.m4:31: -1- AC_DEFUN([gl_PREREQ_LSTAT], [:])
m4trace:m4/lstat.m4:33: -1- AC_DEFUN([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK], [
  dnl We don't use AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK any more, because it
  dnl is no longer maintained in Autoconf and because it invokes AC_LIBOBJ.
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether lstat correctly handles trailing slash],
    [gl_cv_func_lstat_dereferences_slashed_symlink],
    [rm -f conftest.sym conftest.file
     echo >conftest.file
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [AC_INCLUDES_DEFAULT],
          [[struct stat sbuf;
            if (symlink ("conftest.file", "conftest.sym") != 0)
              return 1;
            /* Linux will dereference the symlink and fail, as required by
               POSIX.  That is better in the sense that it means we will not
               have to compile and use the lstat wrapper.  */
            return lstat ("conftest.sym/", &sbuf) == 0;
          ]])],
       [gl_cv_func_lstat_dereferences_slashed_symlink=yes],
       [gl_cv_func_lstat_dereferences_slashed_symlink=no],
       [case "$host_os" in
          linux-* | linux)
            # Guess yes on Linux systems.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing yes" ;;
          *-gnu* | gnu*)
            # Guess yes on glibc systems.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing yes" ;;
          mingw*)
            # Guess no on native Windows.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing no" ;;
          *)
            # If we don't know, obey --enable-cross-guesses.
            gl_cv_func_lstat_dereferences_slashed_symlink="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -f conftest.sym conftest.file
    ])
  case "$gl_cv_func_lstat_dereferences_slashed_symlink" in
    *yes)
      AC_DEFINE_UNQUOTED([LSTAT_FOLLOWS_SLASHED_SYMLINK], [1],
        [Define to 1 if 'lstat' dereferences a symlink specified
         with a trailing slash.])
      ;;
  esac
])
m4trace:m4/ltoptions.m4:14: -1- AC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])
m4trace:m4/ltoptions.m4:113: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN], [_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'dlopen' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:113: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN], [m4_warn([obsolete], [The macro `AC_LIBTOOL_DLOPEN' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'dlopen' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:148: -1- AU_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'win32-dll' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:148: -1- AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [m4_warn([obsolete], [The macro `AC_LIBTOOL_WIN32_DLL' is obsolete.
You should run autoupdate.])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'win32-dll' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:197: -1- AC_DEFUN([AC_ENABLE_SHARED], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])
])
m4trace:m4/ltoptions.m4:201: -1- AC_DEFUN([AC_DISABLE_SHARED], [_LT_SET_OPTION([LT_INIT], [disable-shared])
])
m4trace:m4/ltoptions.m4:205: -1- AU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])
m4trace:m4/ltoptions.m4:205: -1- AC_DEFUN([AM_ENABLE_SHARED], [m4_warn([obsolete], [The macro `AM_ENABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_SHARED($@)])
m4trace:m4/ltoptions.m4:206: -1- AU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])
m4trace:m4/ltoptions.m4:206: -1- AC_DEFUN([AM_DISABLE_SHARED], [m4_warn([obsolete], [The macro `AM_DISABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_SHARED($@)])
m4trace:m4/ltoptions.m4:251: -1- AC_DEFUN([AC_ENABLE_STATIC], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])
])
m4trace:m4/ltoptions.m4:255: -1- AC_DEFUN([AC_DISABLE_STATIC], [_LT_SET_OPTION([LT_INIT], [disable-static])
])
m4trace:m4/ltoptions.m4:259: -1- AU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])
m4trace:m4/ltoptions.m4:259: -1- AC_DEFUN([AM_ENABLE_STATIC], [m4_warn([obsolete], [The macro `AM_ENABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_STATIC($@)])
m4trace:m4/ltoptions.m4:260: -1- AU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])
m4trace:m4/ltoptions.m4:260: -1- AC_DEFUN([AM_DISABLE_STATIC], [m4_warn([obsolete], [The macro `AM_DISABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_STATIC($@)])
m4trace:m4/ltoptions.m4:305: -1- AU_DEFUN([AC_ENABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'fast-install' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:305: -1- AC_DEFUN([AC_ENABLE_FAST_INSTALL], [m4_warn([obsolete], [The macro `AC_ENABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'fast-install' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:312: -1- AU_DEFUN([AC_DISABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:312: -1- AC_DEFUN([AC_DISABLE_FAST_INSTALL], [m4_warn([obsolete], [The macro `AC_DISABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:411: -1- AU_DEFUN([AC_LIBTOOL_PICMODE], [_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'pic-only' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:411: -1- AC_DEFUN([AC_LIBTOOL_PICMODE], [m4_warn([obsolete], [The macro `AC_LIBTOOL_PICMODE' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'pic-only' option into LT_INIT's first parameter.])
])
m4trace:m4/ltsugar.m4:14: -1- AC_DEFUN([LTSUGAR_VERSION], [m4_if([0.1])])
m4trace:m4/ltversion.m4:18: -1- AC_DEFUN([LTVERSION_VERSION], [macro_version='2.4.6'
macro_revision='2.4.6'
_LT_DECL(, macro_version, 0, [Which release of libtool.m4 was used?])
_LT_DECL(, macro_revision, 0)
])
m4trace:m4/lt~obsolete.m4:37: -1- AC_DEFUN([LTOBSOLETE_VERSION], [m4_if([1])])
m4trace:m4/lt~obsolete.m4:41: -1- AC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH])
m4trace:m4/lt~obsolete.m4:42: -1- AC_DEFUN([_LT_AC_SHELL_INIT])
m4trace:m4/lt~obsolete.m4:43: -1- AC_DEFUN([_LT_AC_SYS_LIBPATH_AIX])
m4trace:m4/lt~obsolete.m4:45: -1- AC_DEFUN([_LT_AC_TAGVAR])
m4trace:m4/lt~obsolete.m4:46: -1- AC_DEFUN([AC_LTDL_ENABLE_INSTALL])
m4trace:m4/lt~obsolete.m4:47: -1- AC_DEFUN([AC_LTDL_PREOPEN])
m4trace:m4/lt~obsolete.m4:48: -1- AC_DEFUN([_LT_AC_SYS_COMPILER])
m4trace:m4/lt~obsolete.m4:49: -1- AC_DEFUN([_LT_AC_LOCK])
m4trace:m4/lt~obsolete.m4:50: -1- AC_DEFUN([AC_LIBTOOL_SYS_OLD_ARCHIVE])
m4trace:m4/lt~obsolete.m4:51: -1- AC_DEFUN([_LT_AC_TRY_DLOPEN_SELF])
m4trace:m4/lt~obsolete.m4:52: -1- AC_DEFUN([AC_LIBTOOL_PROG_CC_C_O])
m4trace:m4/lt~obsolete.m4:53: -1- AC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS])
m4trace:m4/lt~obsolete.m4:54: -1- AC_DEFUN([AC_LIBTOOL_OBJDIR])
m4trace:m4/lt~obsolete.m4:55: -1- AC_DEFUN([AC_LTDL_OBJDIR])
m4trace:m4/lt~obsolete.m4:56: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH])
m4trace:m4/lt~obsolete.m4:57: -1- AC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP])
m4trace:m4/lt~obsolete.m4:58: -1- AC_DEFUN([AC_PATH_MAGIC])
m4trace:m4/lt~obsolete.m4:59: -1- AC_DEFUN([AC_PROG_LD_GNU])
m4trace:m4/lt~obsolete.m4:60: -1- AC_DEFUN([AC_PROG_LD_RELOAD_FLAG])
m4trace:m4/lt~obsolete.m4:61: -1- AC_DEFUN([AC_DEPLIBS_CHECK_METHOD])
m4trace:m4/lt~obsolete.m4:62: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI])
m4trace:m4/lt~obsolete.m4:63: -1- AC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE])
m4trace:m4/lt~obsolete.m4:64: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC])
m4trace:m4/lt~obsolete.m4:65: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS])
m4trace:m4/lt~obsolete.m4:66: -1- AC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP])
m4trace:m4/lt~obsolete.m4:67: -1- AC_DEFUN([LT_AC_PROG_EGREP])
m4trace:m4/lt~obsolete.m4:72: -1- AC_DEFUN([_AC_PROG_LIBTOOL])
m4trace:m4/lt~obsolete.m4:73: -1- AC_DEFUN([AC_LIBTOOL_SETUP])
m4trace:m4/lt~obsolete.m4:74: -1- AC_DEFUN([_LT_AC_CHECK_DLFCN])
m4trace:m4/lt~obsolete.m4:75: -1- AC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER])
m4trace:m4/lt~obsolete.m4:76: -1- AC_DEFUN([_LT_AC_TAGCONFIG])
m4trace:m4/lt~obsolete.m4:78: -1- AC_DEFUN([_LT_AC_LANG_CXX])
m4trace:m4/lt~obsolete.m4:79: -1- AC_DEFUN([_LT_AC_LANG_F77])
m4trace:m4/lt~obsolete.m4:80: -1- AC_DEFUN([_LT_AC_LANG_GCJ])
m4trace:m4/lt~obsolete.m4:81: -1- AC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG])
m4trace:m4/lt~obsolete.m4:82: -1- AC_DEFUN([_LT_AC_LANG_C_CONFIG])
m4trace:m4/lt~obsolete.m4:83: -1- AC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG])
m4trace:m4/lt~obsolete.m4:84: -1- AC_DEFUN([_LT_AC_LANG_CXX_CONFIG])
m4trace:m4/lt~obsolete.m4:85: -1- AC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG])
m4trace:m4/lt~obsolete.m4:86: -1- AC_DEFUN([_LT_AC_LANG_F77_CONFIG])
m4trace:m4/lt~obsolete.m4:87: -1- AC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG])
m4trace:m4/lt~obsolete.m4:88: -1- AC_DEFUN([_LT_AC_LANG_GCJ_CONFIG])
m4trace:m4/lt~obsolete.m4:89: -1- AC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG])
m4trace:m4/lt~obsolete.m4:90: -1- AC_DEFUN([_LT_AC_LANG_RC_CONFIG])
m4trace:m4/lt~obsolete.m4:91: -1- AC_DEFUN([AC_LIBTOOL_CONFIG])
m4trace:m4/lt~obsolete.m4:92: -1- AC_DEFUN([_LT_AC_FILE_LTDLL_C])
m4trace:m4/lt~obsolete.m4:94: -1- AC_DEFUN([_LT_AC_PROG_CXXCPP])
m4trace:m4/lt~obsolete.m4:97: -1- AC_DEFUN([_LT_PROG_F77])
m4trace:m4/lt~obsolete.m4:98: -1- AC_DEFUN([_LT_PROG_FC])
m4trace:m4/lt~obsolete.m4:99: -1- AC_DEFUN([_LT_PROG_CXX])
m4trace:m4/malloc.m4:9: -1- AC_DEFUN([_AC_FUNC_MALLOC_IF], [
  AC_REQUIRE([AC_CANONICAL_HOST])dnl for cross-compiles
  AC_CACHE_CHECK([whether malloc (0) returns nonnull],
    [ac_cv_func_malloc_0_nonnull],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
          ]],
          [[void *p = malloc (0);
            int result = !p;
            free (p);
            return result;]])
       ],
       [ac_cv_func_malloc_0_nonnull=yes],
       [ac_cv_func_malloc_0_nonnull=no],
       [case "$host_os" in
          # Guess yes on platforms where we know the result.
          *-gnu* | freebsd* | netbsd* | openbsd* | bitrig* \
          | gnu* | *-musl* | midnightbsd* \
          | hpux* | solaris* | cygwin* | mingw* | msys* )
            ac_cv_func_malloc_0_nonnull="guessing yes" ;;
          # If we don't know, obey --enable-cross-guesses.
          *) ac_cv_func_malloc_0_nonnull="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  AS_CASE([$ac_cv_func_malloc_0_nonnull], [*yes], [$1], [$2])
])
m4trace:m4/malloc.m4:42: -1- AC_DEFUN([gl_FUNC_MALLOC_GNU], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC = 0; then
    _AC_FUNC_MALLOC_IF([], [REPLACE_MALLOC=1])
  fi
])
m4trace:m4/malloc.m4:55: -1- AC_DEFUN([gl_FUNC_MALLOC_PTRDIFF], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_MALLOC_PTRDIFF])
  test "$gl_cv_malloc_ptrdiff" = yes || REPLACE_MALLOC=1
])
m4trace:m4/malloc.m4:65: -1- AC_DEFUN([gl_CHECK_MALLOC_PTRDIFF], [
  AC_CACHE_CHECK([whether malloc is ptrdiff_t safe],
    [gl_cv_malloc_ptrdiff],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdint.h>
          ]],
          [[/* 64-bit ptrdiff_t is so wide that no practical platform
               can exceed it.  */
            #define WIDE_PTRDIFF (PTRDIFF_MAX >> 31 >> 31 != 0)

            /* On rare machines where size_t fits in ptrdiff_t there
               is no problem.  */
            #define NARROW_SIZE (SIZE_MAX <= PTRDIFF_MAX)

            /* glibc 2.30 and later malloc refuses to exceed ptrdiff_t
               bounds even on 32-bit platforms.  We don't know which
               non-glibc systems are safe.  */
            #define KNOWN_SAFE (2 < __GLIBC__ + (30 <= __GLIBC_MINOR__))

            #if WIDE_PTRDIFF || NARROW_SIZE || KNOWN_SAFE
              return 0;
            #else
              #error "malloc might not be ptrdiff_t safe"
              syntax error
            #endif
          ]])],
       [gl_cv_malloc_ptrdiff=yes],
       [gl_cv_malloc_ptrdiff=no])
    ])
])
m4trace:m4/malloc.m4:103: -1- AC_DEFUN([gl_FUNC_MALLOC_POSIX], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_PTRDIFF])
  AC_REQUIRE([gl_CHECK_MALLOC_POSIX])
  if test "$gl_cv_func_malloc_posix" = yes; then
    AC_DEFINE([HAVE_MALLOC_POSIX], [1],
      [Define if malloc, realloc, and calloc set errno on allocation failure.])
  else
    REPLACE_MALLOC=1
  fi
])
m4trace:m4/malloc.m4:118: -1- AC_DEFUN([gl_CHECK_MALLOC_POSIX], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether malloc, realloc, calloc set errno on failure],
    [gl_cv_func_malloc_posix],
    [
      dnl It is too dangerous to try to allocate a large amount of memory:
      dnl some systems go to their knees when you do that. So assume that
      dnl all Unix implementations of the function set errno on failure,
      dnl except on those platforms where we have seen 'test-malloc-gnu',
      dnl 'test-realloc-gnu', 'test-calloc-gnu' fail.
      case "$host_os" in
        mingw*)
          gl_cv_func_malloc_posix=no ;;
        irix* | solaris*)
          dnl On IRIX 6.5, the three functions return NULL with errno unset
          dnl when the argument is larger than PTRDIFF_MAX.
          dnl On Solaris 11.3, the three functions return NULL with errno set
          dnl to EAGAIN, not ENOMEM, when the argument is larger than
          dnl PTRDIFF_MAX.
          dnl Here is a test program:
m4_divert_push([KILL])
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#define ptrdiff_t long
#ifndef PTRDIFF_MAX
# define PTRDIFF_MAX ((ptrdiff_t) ((1UL << (8 * sizeof (ptrdiff_t) - 1)) - 1))
#endif

int main ()
{
  void *p;

  fprintf (stderr, "PTRDIFF_MAX = %lu\n", (unsigned long) PTRDIFF_MAX);

  errno = 0;
  p = malloc ((unsigned long) PTRDIFF_MAX + 1);
  fprintf (stderr, "p=%p errno=%d\n", p, errno);

  errno = 0;
  p = calloc (PTRDIFF_MAX / 2 + 1, 2);
  fprintf (stderr, "p=%p errno=%d\n", p, errno);

  errno = 0;
  p = realloc (NULL, (unsigned long) PTRDIFF_MAX + 1);
  fprintf (stderr, "p=%p errno=%d\n", p, errno);

  return 0;
}
m4_divert_pop([KILL])
          gl_cv_func_malloc_posix=no ;;
        *)
          gl_cv_func_malloc_posix=yes ;;
      esac
    ])
])
m4trace:m4/malloca.m4:8: -1- AC_DEFUN([gl_MALLOCA], [
  dnl Use the autoconf tests for alloca(), but not the AC_SUBSTed variables
  dnl @ALLOCA@ and @LTALLOCA@.
  dnl gl_FUNC_ALLOCA   dnl Already brought in by the module dependencies.
  AC_REQUIRE([gl_EEMALLOC])
])
m4trace:m4/math_h.m4:7: -1- AC_DEFUN_ONCE([gl_MATH_H], [
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
  gl_CHECK_NEXT_HEADERS([math.h])

  AC_CACHE_CHECK([whether NAN macro works], [gl_cv_header_math_nan_works],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <math.h>]],
      [[/* Solaris 10 has a broken definition of NAN.  Other platforms
        fail to provide NAN, or provide it only in C99 mode; this
        test only needs to fail when NAN is provided but wrong.  */
         float f = 1.0f;
#ifdef NAN
         f = NAN;
#endif
         return f == 0;]])],
      [gl_cv_header_math_nan_works=yes],
      [gl_cv_header_math_nan_works=no])])
  if test $gl_cv_header_math_nan_works = no; then
    REPLACE_NAN=1
  fi
  AC_CACHE_CHECK([whether HUGE_VAL works], [gl_cv_header_math_huge_val_works],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <math.h>]],
      [[/* Solaris 10 has a broken definition of HUGE_VAL.  */
         double d = HUGE_VAL;
         return d == 0;]])],
      [gl_cv_header_math_huge_val_works=yes],
      [gl_cv_header_math_huge_val_works=no])])
  if test $gl_cv_header_math_huge_val_works = no; then
    REPLACE_HUGE_VAL=1
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <math.h>]],
    [acosf acosl asinf asinl atanf atanl
     cbrt cbrtf cbrtl ceilf ceill copysign copysignf copysignl cosf cosl coshf
     expf expl exp2 exp2f exp2l expm1 expm1f expm1l
     fabsf fabsl floorf floorl fma fmaf fmal
     fmod fmodf fmodl frexpf frexpl hypotf hypotl
     ilogb ilogbf ilogbl
     ldexpf ldexpl
     log logf logl log10 log10f log10l log1p log1pf log1pl log2 log2f log2l
     logb logbf logbl
     modf modff modfl powf
     remainder remainderf remainderl
     rint rintf rintl round roundf roundl sinf sinl sinhf sqrtf sqrtl
     tanf tanl tanhf trunc truncf truncl])
])
m4trace:m4/math_h.m4:60: -1- AC_DEFUN([gl_MATH_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_MATH_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/math_h.m4:72: -1- AC_DEFUN([gl_MATH_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_MATH_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACOSF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACOSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ASINF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ASINL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATANL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATAN2F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEIL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEILF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEILL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGNF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGNL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSHF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2L])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1L])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FABSF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FABSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOOR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOORF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOORL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMA])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMAF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMAL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMODF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMODL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXPF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXPL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGBF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGBL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISFINITE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISINF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNAN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNAND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNANL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LDEXPF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LDEXPL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10L])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1P])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1PF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1PL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2F])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2L])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGBF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGBL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODFF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODFL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POWF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDER])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDERF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDERL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUNDF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUNDL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNBIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINHF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SQRTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SQRTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANHF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCL])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_J0], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_J1], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_JN], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_Y0], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_Y1], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_YN], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_MATH_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_MATH_H_DEFAULTS])
])
m4trace:m4/math_h.m4:182: -1- AC_DEFUN([gl_MATH_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_ACOSF=1;                     AC_SUBST([HAVE_ACOSF])
  HAVE_ACOSL=1;                     AC_SUBST([HAVE_ACOSL])
  HAVE_ASINF=1;                     AC_SUBST([HAVE_ASINF])
  HAVE_ASINL=1;                     AC_SUBST([HAVE_ASINL])
  HAVE_ATANF=1;                     AC_SUBST([HAVE_ATANF])
  HAVE_ATANL=1;                     AC_SUBST([HAVE_ATANL])
  HAVE_ATAN2F=1;                    AC_SUBST([HAVE_ATAN2F])
  HAVE_CBRT=1;                      AC_SUBST([HAVE_CBRT])
  HAVE_CBRTF=1;                     AC_SUBST([HAVE_CBRTF])
  HAVE_CBRTL=1;                     AC_SUBST([HAVE_CBRTL])
  HAVE_COPYSIGN=1;                  AC_SUBST([HAVE_COPYSIGN])
  HAVE_COPYSIGNL=1;                 AC_SUBST([HAVE_COPYSIGNL])
  HAVE_COSF=1;                      AC_SUBST([HAVE_COSF])
  HAVE_COSL=1;                      AC_SUBST([HAVE_COSL])
  HAVE_COSHF=1;                     AC_SUBST([HAVE_COSHF])
  HAVE_EXPF=1;                      AC_SUBST([HAVE_EXPF])
  HAVE_EXPL=1;                      AC_SUBST([HAVE_EXPL])
  HAVE_EXPM1=1;                     AC_SUBST([HAVE_EXPM1])
  HAVE_EXPM1F=1;                    AC_SUBST([HAVE_EXPM1F])
  HAVE_FABSF=1;                     AC_SUBST([HAVE_FABSF])
  HAVE_FABSL=1;                     AC_SUBST([HAVE_FABSL])
  HAVE_FMA=1;                       AC_SUBST([HAVE_FMA])
  HAVE_FMAF=1;                      AC_SUBST([HAVE_FMAF])
  HAVE_FMAL=1;                      AC_SUBST([HAVE_FMAL])
  HAVE_FMODF=1;                     AC_SUBST([HAVE_FMODF])
  HAVE_FMODL=1;                     AC_SUBST([HAVE_FMODL])
  HAVE_FREXPF=1;                    AC_SUBST([HAVE_FREXPF])
  HAVE_HYPOTF=1;                    AC_SUBST([HAVE_HYPOTF])
  HAVE_HYPOTL=1;                    AC_SUBST([HAVE_HYPOTL])
  HAVE_ILOGB=1;                     AC_SUBST([HAVE_ILOGB])
  HAVE_ILOGBF=1;                    AC_SUBST([HAVE_ILOGBF])
  HAVE_ILOGBL=1;                    AC_SUBST([HAVE_ILOGBL])
  HAVE_ISNANF=1;                    AC_SUBST([HAVE_ISNANF])
  HAVE_ISNAND=1;                    AC_SUBST([HAVE_ISNAND])
  HAVE_ISNANL=1;                    AC_SUBST([HAVE_ISNANL])
  HAVE_LDEXPF=1;                    AC_SUBST([HAVE_LDEXPF])
  HAVE_LOGF=1;                      AC_SUBST([HAVE_LOGF])
  HAVE_LOGL=1;                      AC_SUBST([HAVE_LOGL])
  HAVE_LOG10F=1;                    AC_SUBST([HAVE_LOG10F])
  HAVE_LOG10L=1;                    AC_SUBST([HAVE_LOG10L])
  HAVE_LOG1P=1;                     AC_SUBST([HAVE_LOG1P])
  HAVE_LOG1PF=1;                    AC_SUBST([HAVE_LOG1PF])
  HAVE_LOG1PL=1;                    AC_SUBST([HAVE_LOG1PL])
  HAVE_LOGBF=1;                     AC_SUBST([HAVE_LOGBF])
  HAVE_LOGBL=1;                     AC_SUBST([HAVE_LOGBL])
  HAVE_MODFF=1;                     AC_SUBST([HAVE_MODFF])
  HAVE_MODFL=1;                     AC_SUBST([HAVE_MODFL])
  HAVE_POWF=1;                      AC_SUBST([HAVE_POWF])
  HAVE_REMAINDER=1;                 AC_SUBST([HAVE_REMAINDER])
  HAVE_REMAINDERF=1;                AC_SUBST([HAVE_REMAINDERF])
  HAVE_RINT=1;                      AC_SUBST([HAVE_RINT])
  HAVE_RINTL=1;                     AC_SUBST([HAVE_RINTL])
  HAVE_SINF=1;                      AC_SUBST([HAVE_SINF])
  HAVE_SINL=1;                      AC_SUBST([HAVE_SINL])
  HAVE_SINHF=1;                     AC_SUBST([HAVE_SINHF])
  HAVE_SQRTF=1;                     AC_SUBST([HAVE_SQRTF])
  HAVE_SQRTL=1;                     AC_SUBST([HAVE_SQRTL])
  HAVE_TANF=1;                      AC_SUBST([HAVE_TANF])
  HAVE_TANL=1;                      AC_SUBST([HAVE_TANL])
  HAVE_TANHF=1;                     AC_SUBST([HAVE_TANHF])
  HAVE_DECL_ACOSL=1;                AC_SUBST([HAVE_DECL_ACOSL])
  HAVE_DECL_ASINL=1;                AC_SUBST([HAVE_DECL_ASINL])
  HAVE_DECL_ATANL=1;                AC_SUBST([HAVE_DECL_ATANL])
  HAVE_DECL_CBRTF=1;                AC_SUBST([HAVE_DECL_CBRTF])
  HAVE_DECL_CBRTL=1;                AC_SUBST([HAVE_DECL_CBRTL])
  HAVE_DECL_CEILF=1;                AC_SUBST([HAVE_DECL_CEILF])
  HAVE_DECL_CEILL=1;                AC_SUBST([HAVE_DECL_CEILL])
  HAVE_DECL_COPYSIGNF=1;            AC_SUBST([HAVE_DECL_COPYSIGNF])
  HAVE_DECL_COSL=1;                 AC_SUBST([HAVE_DECL_COSL])
  HAVE_DECL_EXPL=1;                 AC_SUBST([HAVE_DECL_EXPL])
  HAVE_DECL_EXP2=1;                 AC_SUBST([HAVE_DECL_EXP2])
  HAVE_DECL_EXP2F=1;                AC_SUBST([HAVE_DECL_EXP2F])
  HAVE_DECL_EXP2L=1;                AC_SUBST([HAVE_DECL_EXP2L])
  HAVE_DECL_EXPM1L=1;               AC_SUBST([HAVE_DECL_EXPM1L])
  HAVE_DECL_FLOORF=1;               AC_SUBST([HAVE_DECL_FLOORF])
  HAVE_DECL_FLOORL=1;               AC_SUBST([HAVE_DECL_FLOORL])
  HAVE_DECL_FREXPL=1;               AC_SUBST([HAVE_DECL_FREXPL])
  HAVE_DECL_LDEXPL=1;               AC_SUBST([HAVE_DECL_LDEXPL])
  HAVE_DECL_LOGL=1;                 AC_SUBST([HAVE_DECL_LOGL])
  HAVE_DECL_LOG10L=1;               AC_SUBST([HAVE_DECL_LOG10L])
  HAVE_DECL_LOG2=1;                 AC_SUBST([HAVE_DECL_LOG2])
  HAVE_DECL_LOG2F=1;                AC_SUBST([HAVE_DECL_LOG2F])
  HAVE_DECL_LOG2L=1;                AC_SUBST([HAVE_DECL_LOG2L])
  HAVE_DECL_LOGB=1;                 AC_SUBST([HAVE_DECL_LOGB])
  HAVE_DECL_REMAINDER=1;            AC_SUBST([HAVE_DECL_REMAINDER])
  HAVE_DECL_REMAINDERL=1;           AC_SUBST([HAVE_DECL_REMAINDERL])
  HAVE_DECL_RINTF=1;                AC_SUBST([HAVE_DECL_RINTF])
  HAVE_DECL_ROUND=1;                AC_SUBST([HAVE_DECL_ROUND])
  HAVE_DECL_ROUNDF=1;               AC_SUBST([HAVE_DECL_ROUNDF])
  HAVE_DECL_ROUNDL=1;               AC_SUBST([HAVE_DECL_ROUNDL])
  HAVE_DECL_SINL=1;                 AC_SUBST([HAVE_DECL_SINL])
  HAVE_DECL_SQRTL=1;                AC_SUBST([HAVE_DECL_SQRTL])
  HAVE_DECL_TANL=1;                 AC_SUBST([HAVE_DECL_TANL])
  HAVE_DECL_TRUNC=1;                AC_SUBST([HAVE_DECL_TRUNC])
  HAVE_DECL_TRUNCF=1;               AC_SUBST([HAVE_DECL_TRUNCF])
  HAVE_DECL_TRUNCL=1;               AC_SUBST([HAVE_DECL_TRUNCL])
  REPLACE_ACOSF=0;                  AC_SUBST([REPLACE_ACOSF])
  REPLACE_ASINF=0;                  AC_SUBST([REPLACE_ASINF])
  REPLACE_ATANF=0;                  AC_SUBST([REPLACE_ATANF])
  REPLACE_ATAN2F=0;                 AC_SUBST([REPLACE_ATAN2F])
  REPLACE_CBRTF=0;                  AC_SUBST([REPLACE_CBRTF])
  REPLACE_CBRTL=0;                  AC_SUBST([REPLACE_CBRTL])
  REPLACE_CEIL=0;                   AC_SUBST([REPLACE_CEIL])
  REPLACE_CEILF=0;                  AC_SUBST([REPLACE_CEILF])
  REPLACE_CEILL=0;                  AC_SUBST([REPLACE_CEILL])
  REPLACE_COSF=0;                   AC_SUBST([REPLACE_COSF])
  REPLACE_COSHF=0;                  AC_SUBST([REPLACE_COSHF])
  REPLACE_EXPF=0;                   AC_SUBST([REPLACE_EXPF])
  REPLACE_EXPL=0;                   AC_SUBST([REPLACE_EXPL])
  REPLACE_EXPM1=0;                  AC_SUBST([REPLACE_EXPM1])
  REPLACE_EXPM1F=0;                 AC_SUBST([REPLACE_EXPM1F])
  REPLACE_EXPM1L=0;                 AC_SUBST([REPLACE_EXPM1L])
  REPLACE_EXP2=0;                   AC_SUBST([REPLACE_EXP2])
  REPLACE_EXP2L=0;                  AC_SUBST([REPLACE_EXP2L])
  REPLACE_FABSL=0;                  AC_SUBST([REPLACE_FABSL])
  REPLACE_FLOOR=0;                  AC_SUBST([REPLACE_FLOOR])
  REPLACE_FLOORF=0;                 AC_SUBST([REPLACE_FLOORF])
  REPLACE_FLOORL=0;                 AC_SUBST([REPLACE_FLOORL])
  REPLACE_FMA=0;                    AC_SUBST([REPLACE_FMA])
  REPLACE_FMAF=0;                   AC_SUBST([REPLACE_FMAF])
  REPLACE_FMAL=0;                   AC_SUBST([REPLACE_FMAL])
  REPLACE_FMOD=0;                   AC_SUBST([REPLACE_FMOD])
  REPLACE_FMODF=0;                  AC_SUBST([REPLACE_FMODF])
  REPLACE_FMODL=0;                  AC_SUBST([REPLACE_FMODL])
  REPLACE_FREXPF=0;                 AC_SUBST([REPLACE_FREXPF])
  REPLACE_FREXP=0;                  AC_SUBST([REPLACE_FREXP])
  REPLACE_FREXPL=0;                 AC_SUBST([REPLACE_FREXPL])
  REPLACE_HUGE_VAL=0;               AC_SUBST([REPLACE_HUGE_VAL])
  REPLACE_HYPOT=0;                  AC_SUBST([REPLACE_HYPOT])
  REPLACE_HYPOTF=0;                 AC_SUBST([REPLACE_HYPOTF])
  REPLACE_HYPOTL=0;                 AC_SUBST([REPLACE_HYPOTL])
  REPLACE_ILOGB=0;                  AC_SUBST([REPLACE_ILOGB])
  REPLACE_ILOGBF=0;                 AC_SUBST([REPLACE_ILOGBF])
  REPLACE_ILOGBL=0;                 AC_SUBST([REPLACE_ILOGBL])
  REPLACE_ISFINITE=0;               AC_SUBST([REPLACE_ISFINITE])
  REPLACE_ISINF=0;                  AC_SUBST([REPLACE_ISINF])
  REPLACE_ISNAN=0;                  AC_SUBST([REPLACE_ISNAN])
  REPLACE_LDEXPL=0;                 AC_SUBST([REPLACE_LDEXPL])
  REPLACE_LOG=0;                    AC_SUBST([REPLACE_LOG])
  REPLACE_LOGF=0;                   AC_SUBST([REPLACE_LOGF])
  REPLACE_LOGL=0;                   AC_SUBST([REPLACE_LOGL])
  REPLACE_LOG10=0;                  AC_SUBST([REPLACE_LOG10])
  REPLACE_LOG10F=0;                 AC_SUBST([REPLACE_LOG10F])
  REPLACE_LOG10L=0;                 AC_SUBST([REPLACE_LOG10L])
  REPLACE_LOG1P=0;                  AC_SUBST([REPLACE_LOG1P])
  REPLACE_LOG1PF=0;                 AC_SUBST([REPLACE_LOG1PF])
  REPLACE_LOG1PL=0;                 AC_SUBST([REPLACE_LOG1PL])
  REPLACE_LOG2=0;                   AC_SUBST([REPLACE_LOG2])
  REPLACE_LOG2F=0;                  AC_SUBST([REPLACE_LOG2F])
  REPLACE_LOG2L=0;                  AC_SUBST([REPLACE_LOG2L])
  REPLACE_LOGB=0;                   AC_SUBST([REPLACE_LOGB])
  REPLACE_LOGBF=0;                  AC_SUBST([REPLACE_LOGBF])
  REPLACE_LOGBL=0;                  AC_SUBST([REPLACE_LOGBL])
  REPLACE_MODF=0;                   AC_SUBST([REPLACE_MODF])
  REPLACE_MODFF=0;                  AC_SUBST([REPLACE_MODFF])
  REPLACE_MODFL=0;                  AC_SUBST([REPLACE_MODFL])
  REPLACE_NAN=0;                    AC_SUBST([REPLACE_NAN])
  REPLACE_REMAINDER=0;              AC_SUBST([REPLACE_REMAINDER])
  REPLACE_REMAINDERF=0;             AC_SUBST([REPLACE_REMAINDERF])
  REPLACE_REMAINDERL=0;             AC_SUBST([REPLACE_REMAINDERL])
  REPLACE_RINTL=0;                  AC_SUBST([REPLACE_RINTL])
  REPLACE_ROUND=0;                  AC_SUBST([REPLACE_ROUND])
  REPLACE_ROUNDF=0;                 AC_SUBST([REPLACE_ROUNDF])
  REPLACE_ROUNDL=0;                 AC_SUBST([REPLACE_ROUNDL])
  REPLACE_SIGNBIT=0;                AC_SUBST([REPLACE_SIGNBIT])
  REPLACE_SIGNBIT_USING_BUILTINS=0; AC_SUBST([REPLACE_SIGNBIT_USING_BUILTINS])
  REPLACE_SINF=0;                   AC_SUBST([REPLACE_SINF])
  REPLACE_SINHF=0;                  AC_SUBST([REPLACE_SINHF])
  REPLACE_SQRTF=0;                  AC_SUBST([REPLACE_SQRTF])
  REPLACE_SQRTL=0;                  AC_SUBST([REPLACE_SQRTL])
  REPLACE_TANF=0;                   AC_SUBST([REPLACE_TANF])
  REPLACE_TANHF=0;                  AC_SUBST([REPLACE_TANHF])
  REPLACE_TRUNC=0;                  AC_SUBST([REPLACE_TRUNC])
  REPLACE_TRUNCF=0;                 AC_SUBST([REPLACE_TRUNCF])
  REPLACE_TRUNCL=0;                 AC_SUBST([REPLACE_TRUNCL])
])
m4trace:m4/math_h.m4:368: -1- AC_DEFUN([gl_LONG_DOUBLE_VS_DOUBLE], [
  AC_CACHE_CHECK([whether long double and double are the same],
    [gl_cv_long_double_equals_double],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[#include <float.h>]],
          [[typedef int check[sizeof (long double) == sizeof (double)
                              && LDBL_MANT_DIG == DBL_MANT_DIG
                              && LDBL_MAX_EXP == DBL_MAX_EXP
                              && LDBL_MIN_EXP == DBL_MIN_EXP
                              ? 1 : -1];
          ]])],
       [gl_cv_long_double_equals_double=yes],
       [gl_cv_long_double_equals_double=no])
    ])
  if test $gl_cv_long_double_equals_double = yes; then
    AC_DEFINE([HAVE_SAME_LONG_DOUBLE_AS_DOUBLE], [1],
      [Define to 1 if 'long double' and 'double' have the same representation.])
    HAVE_SAME_LONG_DOUBLE_AS_DOUBLE=1
  else
    HAVE_SAME_LONG_DOUBLE_AS_DOUBLE=0
  fi
  AC_SUBST([HAVE_SAME_LONG_DOUBLE_AS_DOUBLE])
])
m4trace:m4/mathfunc.m4:13: -1- AC_DEFUN([gl_MATHFUNC], [
  dnl We need the RETTYPE and PARAMTYPES in order to force linking with the
  dnl function.
  dnl 1) With gcc >= 4.3 on glibc/x86_64, calls to the 'fabs' function
  dnl    are inlined by the compiler, therefore linking of these calls does
  dnl    not require -lm, but taking the function pointer of 'fabs' does.
  dnl 2) On MSVC 9, many math functions exist only as macros with arguments,
  dnl    whereas the function pointer is undefined.
  dnl On the other hand, taking just the function pointer is not enough.
  dnl 1) On AIX 7.1, when 'long double' is 128 bit large ("xlc -qldbl128" or
  dnl    "xlc -qlongdouble" or "gcc -mlong-double-128") many math functions
  dnl    exist as macros with arguments, that may reference libm or even
  dnl    completely undefined functions such as __rint128.
  dnl 2) In AIX 7.1 with gcc 4.2, when optimization is turned on, calls to
  dnl    rint() with simple arguments are turned into rintf() calls by the
  dnl    compiler. But while rint() is resides in libc, rintf() is in libm.
  m4_pushdef([func], [$1])
  m4_pushdef([FUNC], [m4_translit([$1],[abcdefghijklmnopqrstuvwxyz],
                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ])])
  m4_pushdef([ARGS], [m4_bpatsubst(
                        [m4_bpatsubst(
                           [m4_bpatsubst(
                              [m4_bpatsubst(
                                 [m4_bpatsubst(
                                    [m4_bpatsubst(
                                       [m4_bpatsubst(
                                          [m4_bpatsubst(
                                             [m4_bpatsubst(
                                                [$3],
                                                [int \*], [&i_ret])],
                                             [float \*], [&f_ret])],
                                          [double \*], [&d_ret])],
                                       [long double \*], [&l_ret])],
                                    [int], [2])],
                                 [float], [1.618034f])],
                              [long double], [1.618033988749894848L])],
                           [double], [1.6180339887])],
                        [void], [])])
  FUNC[]_LIBM=
  AC_CACHE_CHECK([whether func() can be used without linking with libm],
    [gl_cv_func_]func[_no_libm],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM(
           [[#ifndef __NO_MATH_INLINES
             # define __NO_MATH_INLINES 1 /* for glibc */
             #endif
             #include <math.h>
             $4
             $2 (* volatile funcptr) $3 = ]func[;
             int i_ret;
             float f_ret;
             double d_ret;
             long double l_ret;]],
           [[$2 y = funcptr ]ARGS[ + ]func[ ]ARGS[;
             $5
             return y < 0.3 || y > 1.7;
           ]])],
        [gl_cv_func_]func[_no_libm=yes],
        [gl_cv_func_]func[_no_libm=no])
    ])
  if test $gl_cv_func_[]func[]_no_libm = no; then
    AC_CACHE_CHECK([whether func() can be used with libm],
      [gl_cv_func_]func[_in_libm],
      [
        save_LIBS="$LIBS"
        LIBS="$LIBS -lm"
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM(
             [[#ifndef __NO_MATH_INLINES
               # define __NO_MATH_INLINES 1 /* for glibc */
               #endif
               #include <math.h>
               $4
               $2 (* volatile funcptr) $3 = ]func[;
               int i_ret;
               float f_ret;
               double d_ret;
               long double l_ret;]],
             [[$2 y = funcptr ]ARGS[ + ]func[ ]ARGS[;
               $5
               return y < 0.3 || y > 1.7;
             ]])],
          [gl_cv_func_]func[_in_libm=yes],
          [gl_cv_func_]func[_in_libm=no])
        LIBS="$save_LIBS"
      ])
    if test $gl_cv_func_[]func[]_in_libm = yes; then
      FUNC[]_LIBM=-lm
    fi
  fi
  AC_SUBST(FUNC[_LIBM])
  m4_popdef([ARGS])
  m4_popdef([FUNC])
  m4_popdef([func])
])
m4trace:m4/mathfunc.m4:120: -1- AC_DEFUN([gl_COMMON_DOUBLE_MATHFUNC], [
  AC_REQUIRE([gl_COMMON_DOUBLE_MATHFUNC_TEST])
  m4_pushdef([FUNC], [m4_translit([$1],[abcdefghijklmnopqrstuvwxyz],
                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ])])
  FUNC[]_LIBM="$POW_LIBM"
  AC_SUBST(FUNC[_LIBM])
  m4_popdef([FUNC])
])
m4trace:m4/mathfunc.m4:130: -1- AC_DEFUN([gl_COMMON_DOUBLE_MATHFUNC_TEST], [
  dnl We could use any of the following:
  dnl gl_MATHFUNC([acos], [double], [(double)])
  dnl gl_MATHFUNC([asin], [double], [(double)])
  dnl gl_MATHFUNC([atan], [double], [(double)])
  dnl gl_MATHFUNC([atan2], [double], [(double, double)])
  dnl gl_MATHFUNC([cbrt], [double], [(double)])
  dnl gl_MATHFUNC([cos], [double], [(double)])
  dnl gl_MATHFUNC([cosh], [double], [(double)])
  dnl gl_MATHFUNC([erf], [double], [(double)])
  dnl gl_MATHFUNC([erfc], [double], [(double)])
  dnl gl_MATHFUNC([exp], [double], [(double)])
  dnl gl_MATHFUNC([fmod], [double], [(double, double)])
  dnl gl_MATHFUNC([hypot], [double], [(double, double)])
  dnl gl_MATHFUNC([j0], [double], [(double)])
  dnl gl_MATHFUNC([j1], [double], [(double)])
  dnl gl_MATHFUNC([jn], [double], [(int, double)])
  dnl gl_MATHFUNC([lgamma], [double], [(double)])
  dnl gl_MATHFUNC([log], [double], [(double)])
  dnl gl_MATHFUNC([log10], [double], [(double)])
  dnl gl_MATHFUNC([log1p], [double], [(double)])
  dnl gl_MATHFUNC([pow], [double], [(double, double)])
  dnl gl_MATHFUNC([remainder], [double], [(double, double)])
  dnl gl_MATHFUNC([sin], [double], [(double)])
  dnl gl_MATHFUNC([sinh], [double], [(double)])
  dnl gl_MATHFUNC([sqrt], [double], [(double)])
  dnl gl_MATHFUNC([tan], [double], [(double)])
  dnl gl_MATHFUNC([tanh], [double], [(double)])
  dnl gl_MATHFUNC([y0], [double], [(double)])
  dnl gl_MATHFUNC([y1], [double], [(double)])
  dnl gl_MATHFUNC([yn], [double], [(int, double)])
  gl_MATHFUNC([pow], [double], [(double, double)])
])
m4trace:m4/mbrtowc.m4:8: -1- AC_DEFUN([gl_FUNC_MBRTOWC], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  AC_REQUIRE([gl_PTHREADLIB])
  AC_CHECK_HEADERS_ONCE([threads.h])

  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  gl_MBSTATE_T_BROKEN

  AC_CHECK_FUNCS_ONCE([mbrtowc])
  if test $ac_cv_func_mbrtowc = no; then
    HAVE_MBRTOWC=0
    AC_CHECK_DECLS([mbrtowc],,, [[
      #include <wchar.h>
    ]])
    if test $ac_cv_have_decl_mbrtowc = yes; then
      dnl On Minix 3.1.8, the system's <wchar.h> declares mbrtowc() although
      dnl it does not have the function. Avoid a collision with gnulib's
      dnl replacement.
      REPLACE_MBRTOWC=1
    fi
  else
    if test $REPLACE_MBSTATE_T = 1; then
      REPLACE_MBRTOWC=1
    else
      gl_MBRTOWC_NULL_ARG1
      gl_MBRTOWC_NULL_ARG2
      gl_MBRTOWC_RETVAL
      gl_MBRTOWC_NUL_RETVAL
      gl_MBRTOWC_STORES_INCOMPLETE
      gl_MBRTOWC_EMPTY_INPUT
      gl_MBRTOWC_C_LOCALE
      case "$gl_cv_func_mbrtowc_null_arg1" in
        *yes) ;;
        *) AC_DEFINE([MBRTOWC_NULL_ARG1_BUG], [1],
             [Define if the mbrtowc function has the NULL pwc argument bug.])
           REPLACE_MBRTOWC=1
           ;;
      esac
      case "$gl_cv_func_mbrtowc_null_arg2" in
        *yes) ;;
        *) AC_DEFINE([MBRTOWC_NULL_ARG2_BUG], [1],
             [Define if the mbrtowc function has the NULL string argument bug.])
           REPLACE_MBRTOWC=1
           ;;
      esac
      case "$gl_cv_func_mbrtowc_retval" in
        *yes) ;;
        *) AC_DEFINE([MBRTOWC_RETVAL_BUG], [1],
             [Define if the mbrtowc function returns a wrong return value.])
           REPLACE_MBRTOWC=1
           ;;
      esac
      case "$gl_cv_func_mbrtowc_nul_retval" in
        *yes) ;;
        *) AC_DEFINE([MBRTOWC_NUL_RETVAL_BUG], [1],
             [Define if the mbrtowc function does not return 0 for a NUL character.])
           REPLACE_MBRTOWC=1
           ;;
      esac
      case "$gl_cv_func_mbrtowc_stores_incomplete" in
        *no) ;;
        *) AC_DEFINE([MBRTOWC_STORES_INCOMPLETE_BUG], [1],
             [Define if the mbrtowc function stores a wide character when reporting incomplete input.])
           REPLACE_MBRTOWC=1
           ;;
      esac
      case "$gl_cv_func_mbrtowc_empty_input" in
        *yes) ;;
        *) AC_DEFINE([MBRTOWC_EMPTY_INPUT_BUG], [1],
             [Define if the mbrtowc function does not return (size_t) -2
              for empty input.])
           REPLACE_MBRTOWC=1
           ;;
      esac
      case "$gl_cv_func_mbrtowc_C_locale_sans_EILSEQ" in
        *yes) ;;
        *) AC_DEFINE([MBRTOWC_IN_C_LOCALE_MAYBE_EILSEQ], [1],
             [Define if the mbrtowc function may signal encoding errors in the C locale.])
           REPLACE_MBRTOWC=1
           ;;
      esac
    fi
  fi
  if test $REPLACE_MBSTATE_T = 1; then
    case "$host_os" in
      mingw*) LIB_MBRTOWC= ;;
      *)
        gl_WEAK_SYMBOLS
        case "$gl_cv_have_weak" in
          *yes) LIB_MBRTOWC= ;;
          *)    LIB_MBRTOWC="$LIBPTHREAD" ;;
        esac
        ;;
    esac
  else
    LIB_MBRTOWC=
  fi
  dnl LIB_MBRTOWC is expected to be '-pthread' or '-lpthread' on AIX
  dnl with gcc or xlc, and empty otherwise.
  AC_SUBST([LIB_MBRTOWC])
])
m4trace:m4/mbrtowc.m4:117: -1- AC_DEFUN([gl_MBSTATE_T_BROKEN], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  AC_CHECK_FUNCS_ONCE([mbsinit])
  AC_CHECK_FUNCS_ONCE([mbrtowc])
  dnl On native Windows, we know exactly how mbsinit() behaves and don't need
  dnl to override it, even if - like on MSVC - mbsinit() is only defined as
  dnl an inline function, not as a global function.
  if case "$host_os" in
       mingw*) true ;;
       *) test $ac_cv_func_mbsinit = yes ;;
     esac \
    && test $ac_cv_func_mbrtowc = yes; then
    gl_MBRTOWC_INCOMPLETE_STATE
    gl_MBRTOWC_SANITYCHECK
    REPLACE_MBSTATE_T=0
    case "$gl_cv_func_mbrtowc_incomplete_state" in
      *yes) ;;
      *) REPLACE_MBSTATE_T=1 ;;
    esac
    case "$gl_cv_func_mbrtowc_sanitycheck" in
      *yes) ;;
      *) REPLACE_MBSTATE_T=1 ;;
    esac
  else
    REPLACE_MBSTATE_T=1
  fi
])
m4trace:m4/mbrtowc.m4:153: -1- AC_DEFUN([gl_MBRTOWC_INCOMPLETE_STATE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_JA])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc handles incomplete characters],
    [gl_cv_func_mbrtowc_incomplete_state],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                     # Guess no on AIX and OSF/1.
        aix* | osf*) gl_cv_func_mbrtowc_incomplete_state="guessing no" ;;
                     # Guess yes otherwise.
        *)           gl_cv_func_mbrtowc_incomplete_state="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_JA != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  if (setlocale (LC_ALL, "$LOCALE_JA") != NULL)
    {
      const char input[] = "B\217\253\344\217\251\316er"; /* "Büßer" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 1, 1, &state) == (size_t)(-2))
        if (mbsinit (&state))
          return 2;
    }
  return 0;
}]])],
          [gl_cv_func_mbrtowc_incomplete_state=yes],
          [gl_cv_func_mbrtowc_incomplete_state=no],
          [:])
      else
        if test $LOCALE_FR_UTF8 != none; then
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      const char input[] = "B\303\274\303\237er"; /* "Büßer" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 1, 1, &state) == (size_t)(-2))
        if (mbsinit (&state))
          return 2;
    }
  return 0;
}]])],
          [gl_cv_func_mbrtowc_incomplete_state=yes],
          [gl_cv_func_mbrtowc_incomplete_state=no],
          [:])
        fi
      fi
    ])
])
m4trace:m4/mbrtowc.m4:229: -1- AC_DEFUN([gl_MBRTOWC_SANITYCHECK], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_ZH_CN])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc works as well as mbtowc],
    [gl_cv_func_mbrtowc_sanitycheck],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                    # Guess no on Solaris 8.
        solaris2.8) gl_cv_func_mbrtowc_sanitycheck="guessing no" ;;
                    # Guess yes otherwise.
        *)          gl_cv_func_mbrtowc_sanitycheck="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_ZH_CN != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <stdlib.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  /* This fails on Solaris 8:
     mbrtowc returns 2, and sets wc to 0x00F0.
     mbtowc returns 4 (correct) and sets wc to 0x5EDC.  */
  if (setlocale (LC_ALL, "$LOCALE_ZH_CN") != NULL)
    {
      char input[] = "B\250\271\201\060\211\070er"; /* "Büßer" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 3, 6, &state) != 4
          && mbtowc (&wc, input + 3, 6) == 4)
        return 2;
    }
  return 0;
}]])],
          [gl_cv_func_mbrtowc_sanitycheck=yes],
          [gl_cv_func_mbrtowc_sanitycheck=no],
          [:])
      fi
    ])
])
m4trace:m4/mbrtowc.m4:282: -1- AC_DEFUN([gl_MBRTOWC_NULL_ARG1], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc handles a NULL pwc argument],
    [gl_cv_func_mbrtowc_null_arg1],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                  # Guess no on Solaris.
        solaris*) gl_cv_func_mbrtowc_null_arg1="guessing no" ;;
                  # Guess yes otherwise.
        *)        gl_cv_func_mbrtowc_null_arg1="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_FR_UTF8 != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <stdlib.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  int result = 0;

  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      char input[] = "\303\237er";
      mbstate_t state;
      wchar_t wc;
      size_t ret;

      memset (&state, '\0', sizeof (mbstate_t));
      wc = (wchar_t) 0xBADFACE;
      ret = mbrtowc (&wc, input, 5, &state);
      if (ret != 2)
        result |= 1;
      if (!mbsinit (&state))
        result |= 2;

      memset (&state, '\0', sizeof (mbstate_t));
      ret = mbrtowc (NULL, input, 5, &state);
      if (ret != 2) /* Solaris 7 fails here: ret is -1.  */
        result |= 4;
      if (!mbsinit (&state))
        result |= 8;
    }
  return result;
}]])],
          [gl_cv_func_mbrtowc_null_arg1=yes],
          [gl_cv_func_mbrtowc_null_arg1=no],
          [:])
      fi
    ])
])
m4trace:m4/mbrtowc.m4:345: -1- AC_DEFUN([gl_MBRTOWC_NULL_ARG2], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc handles a NULL string argument],
    [gl_cv_func_mbrtowc_null_arg2],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
              # Guess no on OSF/1.
        osf*) gl_cv_func_mbrtowc_null_arg2="guessing no" ;;
              # Guess yes otherwise.
        *)    gl_cv_func_mbrtowc_null_arg2="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_FR_UTF8 != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      mbstate_t state;
      wchar_t wc;
      int ret;

      memset (&state, '\0', sizeof (mbstate_t));
      wc = (wchar_t) 0xBADFACE;
      mbrtowc (&wc, NULL, 5, &state);
      /* Check that wc was not modified.  */
      if (wc != (wchar_t) 0xBADFACE)
        return 2;
    }
  return 0;
}]])],
          [gl_cv_func_mbrtowc_null_arg2=yes],
          [gl_cv_func_mbrtowc_null_arg2=no],
          [:])
      fi
    ])
])
m4trace:m4/mbrtowc.m4:398: -1- AC_DEFUN([gl_MBRTOWC_RETVAL], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([gt_LOCALE_JA])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether mbrtowc has a correct return value],
    [gl_cv_func_mbrtowc_retval],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                                   # Guess no on HP-UX, Solaris, native Windows.
        hpux* | solaris* | mingw*) gl_cv_func_mbrtowc_retval="guessing no" ;;
                                   # Guess yes otherwise.
        *)                         gl_cv_func_mbrtowc_retval="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_FR_UTF8 != none || test $LOCALE_JA != none \
         || { case "$host_os" in mingw*) true;; *) false;; esac; }; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  int result = 0;
  int found_some_locale = 0;
  /* This fails on Solaris.  */
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      char input[] = "B\303\274\303\237er"; /* "Büßer" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 1, 1, &state) == (size_t)(-2))
        {
          input[1] = '\0';
          if (mbrtowc (&wc, input + 2, 5, &state) != 1)
            result |= 1;
        }
      found_some_locale = 1;
    }
  /* This fails on HP-UX 11.11.  */
  if (setlocale (LC_ALL, "$LOCALE_JA") != NULL)
    {
      char input[] = "B\217\253\344\217\251\316er"; /* "Büßer" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 1, 1, &state) == (size_t)(-2))
        {
          input[1] = '\0';
          if (mbrtowc (&wc, input + 2, 5, &state) != 2)
            result |= 2;
        }
      found_some_locale = 1;
    }
  /* This fails on native Windows.  */
  if (setlocale (LC_ALL, "Japanese_Japan.932") != NULL)
    {
      char input[] = "<\223\372\226\173\214\352>"; /* "<日本語>" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 3, 1, &state) == (size_t)(-2))
        {
          input[3] = '\0';
          if (mbrtowc (&wc, input + 4, 4, &state) != 1)
            result |= 4;
        }
      found_some_locale = 1;
    }
  if (setlocale (LC_ALL, "Chinese_Taiwan.950") != NULL)
    {
      char input[] = "<\244\351\245\273\273\171>"; /* "<日本語>" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 3, 1, &state) == (size_t)(-2))
        {
          input[3] = '\0';
          if (mbrtowc (&wc, input + 4, 4, &state) != 1)
            result |= 8;
        }
      found_some_locale = 1;
    }
  if (setlocale (LC_ALL, "Chinese_China.936") != NULL)
    {
      char input[] = "<\310\325\261\276\325\132>"; /* "<日本語>" */
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, input + 3, 1, &state) == (size_t)(-2))
        {
          input[3] = '\0';
          if (mbrtowc (&wc, input + 4, 4, &state) != 1)
            result |= 16;
        }
      found_some_locale = 1;
    }
  return (found_some_locale ? result : 77);
}]])],
          [gl_cv_func_mbrtowc_retval=yes],
          [if test $? != 77; then
             gl_cv_func_mbrtowc_retval=no
           fi
          ],
          [:])
      fi
    ])
])
m4trace:m4/mbrtowc.m4:521: -1- AC_DEFUN([gl_MBRTOWC_NUL_RETVAL], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_ZH_CN])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc returns 0 when parsing a NUL character],
    [gl_cv_func_mbrtowc_nul_retval],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                       # Guess no on Solaris 8 and 9.
        solaris2.[89]) gl_cv_func_mbrtowc_nul_retval="guessing no" ;;
                       # Guess yes otherwise.
        *)             gl_cv_func_mbrtowc_nul_retval="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_ZH_CN != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  /* This fails on Solaris 8 and 9.  */
  if (setlocale (LC_ALL, "$LOCALE_ZH_CN") != NULL)
    {
      mbstate_t state;
      wchar_t wc;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, "", 1, &state) != 0)
        return 2;
    }
  return 0;
}]])],
          [gl_cv_func_mbrtowc_nul_retval=yes],
          [gl_cv_func_mbrtowc_nul_retval=no],
          [:])
      fi
    ])
])
m4trace:m4/mbrtowc.m4:569: -1- AC_DEFUN([gl_MBRTOWC_STORES_INCOMPLETE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc stores incomplete characters],
    [gl_cv_func_mbrtowc_stores_incomplete],
    [
     dnl Initial guess, used when cross-compiling or when no suitable locale
     dnl is present.
changequote(,)dnl
     case "$host_os" in
               # Guess yes on native Windows.
       mingw*) gl_cv_func_mbrtowc_stores_incomplete="guessing yes" ;;
       *)      gl_cv_func_mbrtowc_stores_incomplete="guessing no" ;;
     esac
changequote([,])dnl
     case "$host_os" in
       mingw*)
         AC_RUN_IFELSE(
           [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  int result = 0;
  if (setlocale (LC_ALL, "French_France.65001") != NULL)
    {
      wchar_t wc = (wchar_t) 0xBADFACE;
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, "\303", 1, &state) == (size_t)(-2)
          && wc != (wchar_t) 0xBADFACE)
        result |= 1;
    }
  if (setlocale (LC_ALL, "Japanese_Japan.932") != NULL)
    {
      wchar_t wc = (wchar_t) 0xBADFACE;
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, "\226", 1, &state) == (size_t)(-2)
          && wc != (wchar_t) 0xBADFACE)
        result |= 2;
    }
  if (setlocale (LC_ALL, "Chinese_Taiwan.950") != NULL)
    {
      wchar_t wc = (wchar_t) 0xBADFACE;
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, "\245", 1, &state) == (size_t)(-2)
          && wc != (wchar_t) 0xBADFACE)
        result |= 4;
    }
  if (setlocale (LC_ALL, "Chinese_China.936") != NULL)
    {
      wchar_t wc = (wchar_t) 0xBADFACE;
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, "\261", 1, &state) == (size_t)(-2)
          && wc != (wchar_t) 0xBADFACE)
        result |= 8;
    }
  return result;
}]])],
           [gl_cv_func_mbrtowc_stores_incomplete=no],
           [gl_cv_func_mbrtowc_stores_incomplete=yes],
           [:])
         ;;
       *)
         AC_REQUIRE([gt_LOCALE_FR_UTF8])
         if test $LOCALE_FR_UTF8 != none; then
           AC_RUN_IFELSE(
             [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      wchar_t wc = (wchar_t) 0xBADFACE;
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (&wc, "\303", 1, &state) == (size_t)(-2)
          && wc != (wchar_t) 0xBADFACE)
        return 1;
    }
  return 0;
}]])],
             [gl_cv_func_mbrtowc_stores_incomplete=no],
             [gl_cv_func_mbrtowc_stores_incomplete=yes],
             [:])
         fi
         ;;
     esac
    ])
])
m4trace:m4/mbrtowc.m4:674: -1- AC_DEFUN([gl_MBRTOWC_EMPTY_INPUT], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbrtowc works on empty input],
    [gl_cv_func_mbrtowc_empty_input],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                              # Guess no on AIX and glibc systems.
        aix* | *-gnu* | gnu*) gl_cv_func_mbrtowc_empty_input="guessing no" ;;
                              # Guess yes on native Windows.
        mingw*)               gl_cv_func_mbrtowc_empty_input="guessing yes" ;;
        *)                    gl_cv_func_mbrtowc_empty_input="guessing yes" ;;
      esac
changequote([,])dnl
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
           #include <wchar.h>
           static wchar_t wc;
           static mbstate_t mbs;
           int
           main (void)
           {
             return mbrtowc (&wc, "", 0, &mbs) != (size_t) -2;
           }]])],
        [gl_cv_func_mbrtowc_empty_input=yes],
        [gl_cv_func_mbrtowc_empty_input=no],
        [:])
    ])
])
m4trace:m4/mbrtowc.m4:713: -1- AC_DEFUN([gl_MBRTOWC_C_LOCALE], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether the C locale is free of encoding errors],
    [gl_cv_func_mbrtowc_C_locale_sans_EILSEQ],
    [
     dnl Initial guess, used when cross-compiling or when no suitable locale
     dnl is present.
     gl_cv_func_mbrtowc_C_locale_sans_EILSEQ="$gl_cross_guess_normal"

     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <limits.h>
            #include <locale.h>
            #include <wchar.h>
          ]], [[
            int i;
            char *locale = setlocale (LC_ALL, "C");
            if (! locale)
              return 2;
            for (i = CHAR_MIN; i <= CHAR_MAX; i++)
              {
                char c = i;
                wchar_t wc;
                mbstate_t mbs = { 0, };
                size_t ss = mbrtowc (&wc, &c, 1, &mbs);
                if (1 < ss)
                  return 3;
              }
            return 0;
          ]])],
      [gl_cv_func_mbrtowc_C_locale_sans_EILSEQ=yes],
      [gl_cv_func_mbrtowc_C_locale_sans_EILSEQ=no],
      [case "$host_os" in
                 # Guess yes on native Windows.
         mingw*) gl_cv_func_mbrtowc_C_locale_sans_EILSEQ="guessing yes" ;;
       esac
      ])
    ])
])
m4trace:m4/mbrtowc.m4:755: -1- AC_DEFUN([gl_PREREQ_MBRTOWC], [
  AC_REQUIRE([AC_C_INLINE])
  :
])
m4trace:m4/mbrtowc.m4:761: -1- AC_DEFUN([gl_PREREQ_MBTOWC_LOCK], [
  gl_VISIBILITY
])
m4trace:m4/mbrtowc.m4:771: -1- AC_DEFUN([AC_FUNC_MBRTOWC], [
  dnl Same as AC_FUNC_MBRTOWC in autoconf-2.60.
  AC_CACHE_CHECK([whether mbrtowc and mbstate_t are properly declared],
    [gl_cv_func_mbrtowc],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
            [[#include <wchar.h>]],
            [[wchar_t wc;
              char const s[] = "";
              size_t n = 1;
              mbstate_t state;
              return ! (sizeof state && (mbrtowc) (&wc, s, n, &state));]])],
       [gl_cv_func_mbrtowc=yes],
       [gl_cv_func_mbrtowc=no])])
  if test $gl_cv_func_mbrtowc = yes; then
    AC_DEFINE([HAVE_MBRTOWC], [1],
      [Define to 1 if mbrtowc and mbstate_t are properly declared.])
  fi
])
m4trace:m4/mbsinit.m4:7: -1- AC_DEFUN([gl_FUNC_MBSINIT], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  gl_MBSTATE_T_BROKEN

  AC_CHECK_FUNCS_ONCE([mbsinit])
  if test $ac_cv_func_mbsinit = no; then
    HAVE_MBSINIT=0
    AC_CHECK_DECLS([mbsinit],,, [[
      #include <wchar.h>
    ]])
    if test $ac_cv_have_decl_mbsinit = yes; then
      dnl On Minix 3.1.8, the system's <wchar.h> declares mbsinit() although
      dnl it does not have the function. Avoid a collision with gnulib's
      dnl replacement.
      REPLACE_MBSINIT=1
    fi
  else
    if test $REPLACE_MBSTATE_T = 1; then
      REPLACE_MBSINIT=1
    else
      dnl On mingw, mbsinit() always returns 1, which is inappropriate for
      dnl states produced by mbrtowc() for an incomplete multibyte character
      dnl in multibyte locales.
      case "$host_os" in
        mingw*) REPLACE_MBSINIT=1 ;;
      esac
    fi
  fi
])
m4trace:m4/mbsinit.m4:42: -1- AC_DEFUN([gl_PREREQ_MBSINIT], [
  :
])
m4trace:m4/mbsrtowcs.m4:7: -1- AC_DEFUN([gl_FUNC_MBSRTOWCS], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])

  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  gl_MBSTATE_T_BROKEN

  AC_CHECK_FUNCS_ONCE([mbsrtowcs])
  if test $ac_cv_func_mbsrtowcs = no; then
    HAVE_MBSRTOWCS=0
    AC_CHECK_DECLS([mbsrtowcs],,, [[
      #include <wchar.h>
    ]])
    if test $ac_cv_have_decl_mbsrtowcs = yes; then
      dnl On Minix 3.1.8, the system's <wchar.h> declares mbsrtowcs() although
      dnl it does not have the function. Avoid a collision with gnulib's
      dnl replacement.
      REPLACE_MBSRTOWCS=1
    fi
  else
    if test $REPLACE_MBSTATE_T = 1; then
      REPLACE_MBSRTOWCS=1
    else
      gl_MBSRTOWCS_WORKS
      case "$gl_cv_func_mbsrtowcs_works" in
        *yes) ;;
        *) REPLACE_MBSRTOWCS=1 ;;
      esac
    fi
  fi
])
m4trace:m4/mbsrtowcs.m4:42: -1- AC_DEFUN([gl_MBSRTOWCS_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gt_LOCALE_FR])
  AC_REQUIRE([gt_LOCALE_FR_UTF8])
  AC_REQUIRE([gt_LOCALE_JA])
  AC_REQUIRE([gt_LOCALE_ZH_CN])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether mbsrtowcs works],
    [gl_cv_func_mbsrtowcs_works],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                                   # Guess no on HP-UX, Solaris, mingw.
        hpux* | solaris* | mingw*) gl_cv_func_mbsrtowcs_works="guessing no" ;;
                                   # Guess yes otherwise.
        *)                         gl_cv_func_mbsrtowcs_works="guessing yes" ;;
      esac
changequote([,])dnl
      if test $LOCALE_FR != none || test $LOCALE_FR_UTF8 != none || test $LOCALE_JA != none || test $LOCALE_ZH_CN != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <string.h>
#include <wchar.h>
int main ()
{
  int result = 0;
  /* Test whether the function supports a NULL destination argument.
     This fails on native Windows.  */
  if (setlocale (LC_ALL, "$LOCALE_FR") != NULL)
    {
      const char input[] = "\337er";
      const char *src = input;
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbsrtowcs (NULL, &src, 1, &state) != 3
          || src != input)
        result |= 1;
    }
  /* Test whether the function works when started with a conversion state
     in non-initial state.  This fails on HP-UX 11.11 and Solaris 10.  */
  if (setlocale (LC_ALL, "$LOCALE_FR_UTF8") != NULL)
    {
      const char input[] = "B\303\274\303\237er";
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (NULL, input + 1, 1, &state) == (size_t)(-2))
        if (!mbsinit (&state))
          {
            const char *src = input + 2;
            if (mbsrtowcs (NULL, &src, 10, &state) != 4)
              result |= 2;
          }
    }
  if (setlocale (LC_ALL, "$LOCALE_JA") != NULL)
    {
      const char input[] = "<\306\374\313\334\270\354>";
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (NULL, input + 3, 1, &state) == (size_t)(-2))
        if (!mbsinit (&state))
          {
            const char *src = input + 4;
            if (mbsrtowcs (NULL, &src, 10, &state) != 3)
              result |= 4;
          }
    }
  if (setlocale (LC_ALL, "$LOCALE_ZH_CN") != NULL)
    {
      const char input[] = "B\250\271\201\060\211\070er";
      mbstate_t state;

      memset (&state, '\0', sizeof (mbstate_t));
      if (mbrtowc (NULL, input + 1, 1, &state) == (size_t)(-2))
        if (!mbsinit (&state))
          {
            const char *src = input + 2;
            if (mbsrtowcs (NULL, &src, 10, &state) != 4)
              result |= 8;
          }
    }
  return result;
}]])],
          [gl_cv_func_mbsrtowcs_works=yes],
          [gl_cv_func_mbsrtowcs_works=no],
          [:])
      fi
    ])
])
m4trace:m4/mbsrtowcs.m4:139: -1- AC_DEFUN([gl_PREREQ_MBSRTOWCS], [
  :
])
m4trace:m4/mbstate_t.m4:15: -1- AC_DEFUN([AC_TYPE_MBSTATE_T], [
   AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS]) dnl for HP-UX 11.11

   AC_CACHE_CHECK([for mbstate_t], [ac_cv_type_mbstate_t],
     [AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM(
           [AC_INCLUDES_DEFAULT[
             #include <wchar.h>]],
           [[mbstate_t x; return sizeof x;]])],
        [ac_cv_type_mbstate_t=yes],
        [ac_cv_type_mbstate_t=no])])
   if test $ac_cv_type_mbstate_t = yes; then
     AC_DEFINE([HAVE_MBSTATE_T], [1],
               [Define to 1 if <wchar.h> declares mbstate_t.])
   else
     AC_DEFINE([mbstate_t], [int],
               [Define to a type if <wchar.h> does not define.])
   fi
])
m4trace:m4/mbtowc.m4:7: -1- AC_DEFUN([gl_FUNC_MBTOWC], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

  AC_CHECK_FUNCS([mbtowc])
  if test $ac_cv_func_mbtowc = no; then
    HAVE_MBTOWC=0
  else
    if false; then
      REPLACE_MBTOWC=1
    fi
  fi
])
m4trace:m4/mbtowc.m4:22: -1- AC_DEFUN([gl_PREREQ_MBTOWC], [
  :
])
m4trace:m4/md4.m4:8: -1- AC_DEFUN([gl_MD4], [
  AC_REQUIRE([gl_BIGENDIAN])
  :
])
m4trace:m4/md5.m4:7: -1- AC_DEFUN([gl_MD5], [
  dnl Prerequisites of lib/md5.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Determine HAVE_OPENSSL_MD5 and LIB_CRYPTO
  gl_CRYPTO_CHECK([MD5])
])
m4trace:m4/memchr.m4:7: -1- AC_DEFUN_ONCE([gl_FUNC_MEMCHR], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Check for prerequisites for memory fence checks.
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  # Detect platform-specific bugs in some versions of glibc:
  # memchr should not dereference anything with length 0
  #   https://bugzilla.redhat.com/show_bug.cgi?id=499689
  # memchr should not dereference overestimated length after a match
  #   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=521737
  #   https://sourceware.org/bugzilla/show_bug.cgi?id=10162
  # memchr should cast the second argument to 'unsigned char'.
  #   This bug exists in Android 4.3.
  # Assume that memchr works on platforms that lack mprotect.
  AC_CACHE_CHECK([whether memchr works], [gl_cv_func_memchr_works],
    [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <string.h>
#if HAVE_SYS_MMAN_H
# include <fcntl.h>
# include <unistd.h>
# include <sys/types.h>
# include <sys/mman.h>
# ifndef MAP_FILE
#  define MAP_FILE 0
# endif
#endif
]], [[
  int result = 0;
  char *fence = NULL;
#if HAVE_SYS_MMAN_H && HAVE_MPROTECT
# if HAVE_MAP_ANONYMOUS
  const int flags = MAP_ANONYMOUS | MAP_PRIVATE;
  const int fd = -1;
# else /* !HAVE_MAP_ANONYMOUS */
  const int flags = MAP_FILE | MAP_PRIVATE;
  int fd = open ("/dev/zero", O_RDONLY, 0666);
  if (fd >= 0)
# endif
    {
      int pagesize = getpagesize ();
      char *two_pages =
        (char *) mmap (NULL, 2 * pagesize, PROT_READ | PROT_WRITE,
                       flags, fd, 0);
      if (two_pages != (char *)(-1)
          && mprotect (two_pages + pagesize, pagesize, PROT_NONE) == 0)
        fence = two_pages + pagesize;
    }
#endif
  if (fence)
    {
      /* Test against bugs on glibc systems.  */
      if (memchr (fence, 0, 0))
        result |= 1;
      strcpy (fence - 9, "12345678");
      if (memchr (fence - 9, 0, 79) != fence - 1)
        result |= 2;
      if (memchr (fence - 1, 0, 3) != fence - 1)
        result |= 4;
      /* Test against bug on AIX 7.2.  */
      if (memchr (fence - 4, '6', 16) != fence - 4)
        result |= 8;
    }
  /* Test against bug on Android 4.3.  */
  {
    char input[3];
    input[0] = 'a';
    input[1] = 'b';
    input[2] = 'c';
    if (memchr (input, 0x789abc00 | 'b', 3) != input + 1)
      result |= 16;
  }
  return result;
]])],
       [gl_cv_func_memchr_works=yes],
       [gl_cv_func_memchr_works=no],
       [case "$host_os" in
                           # Guess no on Android.
          linux*-android*) gl_cv_func_memchr_works="guessing no" ;;
                           # Guess yes on native Windows.
          mingw*)          gl_cv_func_memchr_works="guessing yes" ;;
                           # If we don't know, obey --enable-cross-guesses.
          *)               gl_cv_func_memchr_works="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  case "$gl_cv_func_memchr_works" in
    *yes) ;;
    *) REPLACE_MEMCHR=1 ;;
  esac
])
m4trace:m4/memchr.m4:104: -1- AC_DEFUN([gl_PREREQ_MEMCHR], [
  AC_CHECK_HEADERS([bp-sym.h])
])
m4trace:m4/mempcpy.m4:8: -1- AC_DEFUN([gl_FUNC_MEMPCPY], [
  dnl Persuade glibc <string.h> to declare mempcpy().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl The mempcpy() declaration in lib/string.in.h uses 'restrict'.
  AC_REQUIRE([AC_C_RESTRICT])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_FUNCS([mempcpy])
  if test $ac_cv_func_mempcpy = no; then
    HAVE_MEMPCPY=0
  fi
])
m4trace:m4/mempcpy.m4:24: -1- AC_DEFUN([gl_PREREQ_MEMPCPY], [
  :
])
m4trace:m4/memrchr.m4:8: -1- AC_DEFUN([gl_FUNC_MEMRCHR], [
  dnl Persuade glibc <string.h> to declare memrchr().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_DECLS_ONCE([memrchr])
  if test $ac_cv_have_decl_memrchr = no; then
    HAVE_DECL_MEMRCHR=0
  fi

  AC_CHECK_FUNCS([memrchr])
])
m4trace:m4/memrchr.m4:23: -1- AC_DEFUN([gl_PREREQ_MEMRCHR], [:])
m4trace:m4/minmax.m4:9: -1- AC_DEFUN([gl_MINMAX], [
  AC_REQUIRE([gl_PREREQ_MINMAX])
])
m4trace:m4/minmax.m4:15: -1- AC_DEFUN([gl_PREREQ_MINMAX], [
  gl_MINMAX_IN_HEADER([limits.h])
  gl_MINMAX_IN_HEADER([sys/param.h])
])
m4trace:m4/minmax.m4:25: -1- AC_DEFUN([gl_MINMAX_IN_HEADER], [
  m4_pushdef([header], AS_TR_SH([$1]))
  m4_pushdef([HEADER], AS_TR_CPP([$1]))
  AC_CACHE_CHECK([whether <$1> defines MIN and MAX],
    [gl_cv_minmax_in_]header,
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <$1>
            int x = MIN (42, 17);]],
          [[]])],
       [gl_cv_minmax_in_]header[=yes],
       [gl_cv_minmax_in_]header[=no])])
  if test $gl_cv_minmax_in_[]header = yes; then
    AC_DEFINE([HAVE_MINMAX_IN_]HEADER, 1,
      [Define to 1 if <$1> defines the MIN and MAX macros.])
  fi
  m4_popdef([HEADER])
  m4_popdef([header])
])
m4trace:m4/mkdir.m4:11: -1- AC_DEFUN([gl_FUNC_MKDIR], [dnl
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CACHE_CHECK([whether mkdir handles trailing slash],
    [gl_cv_func_mkdir_trailing_slash_works],
    [rm -rf conftest.dir
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM([[
          #include <sys/types.h>
          #include <sys/stat.h>
          ]GL_MDA_DEFINES],
          [[return mkdir ("conftest.dir/", 0700);]])],
       [gl_cv_func_mkdir_trailing_slash_works=yes],
       [gl_cv_func_mkdir_trailing_slash_works=no],
       [case "$host_os" in
                           # Guess yes on Linux systems.
          linux-* | linux) gl_cv_func_mkdir_trailing_slash_works="guessing yes" ;;
                           # Guess yes on glibc systems.
          *-gnu* | gnu*)   gl_cv_func_mkdir_trailing_slash_works="guessing yes" ;;
                           # Guess yes on MSVC, no on mingw.
          mingw*)          AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                             ],
                             [gl_cv_func_mkdir_trailing_slash_works="guessing yes"],
                             [gl_cv_func_mkdir_trailing_slash_works="guessing no"])
                           ;;
                           # If we don't know, obey --enable-cross-guesses.
          *)               gl_cv_func_mkdir_trailing_slash_works="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -rf conftest.dir
    ])
  case "$gl_cv_func_mkdir_trailing_slash_works" in
    *yes) ;;
    *)
      REPLACE_MKDIR=1
      ;;
  esac

  AC_CACHE_CHECK([whether mkdir handles trailing dot],
    [gl_cv_func_mkdir_trailing_dot_works],
    [rm -rf conftest.dir
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM([[
          #include <sys/types.h>
          #include <sys/stat.h>
          ]GL_MDA_DEFINES],
          [[return !mkdir ("conftest.dir/./", 0700);]])],
       [gl_cv_func_mkdir_trailing_dot_works=yes],
       [gl_cv_func_mkdir_trailing_dot_works=no],
       [case "$host_os" in
                         # Guess yes on glibc systems.
          *-gnu* | gnu*) gl_cv_func_mkdir_trailing_dot_works="guessing yes" ;;
                         # Guess yes on musl systems.
          *-musl*)       gl_cv_func_mkdir_trailing_dot_works="guessing yes" ;;
                         # Guess no on native Windows.
          mingw*)        gl_cv_func_mkdir_trailing_dot_works="guessing no" ;;
                         # If we don't know, obey --enable-cross-guesses.
          *)             gl_cv_func_mkdir_trailing_dot_works="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -rf conftest.dir
    ]
  )
  case "$gl_cv_func_mkdir_trailing_dot_works" in
    *yes) ;;
    *)
      REPLACE_MKDIR=1
      AC_DEFINE([FUNC_MKDIR_DOT_BUG], [1], [Define to 1 if mkdir mistakenly
        creates a directory given with a trailing dot component.])
      ;;
  esac
])
m4trace:m4/mkfifo.m4:11: -1- AC_DEFUN([gl_FUNC_MKFIFO], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl We can't use AC_CHECK_FUNC here, because mkfifo() is defined as a
  dnl static inline function when compiling for Android 4.4 or older.
  AC_CACHE_CHECK([for mkfifo], [gl_cv_func_mkfifo],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/stat.h>]],
          [[return mkfifo("/",0);]])
       ],
       [gl_cv_func_mkfifo=yes],
       [gl_cv_func_mkfifo=no])
    ])
  if test $gl_cv_func_mkfifo = no; then
    HAVE_MKFIFO=0
  else
    AC_DEFINE([HAVE_MKFIFO], [1],
      [Define to 1 if you have a 'mkfifo' function.])
    dnl Check for Solaris 9 and FreeBSD bug with trailing slash.
    AC_CHECK_FUNCS_ONCE([lstat])
    AC_CACHE_CHECK([whether mkfifo rejects trailing slashes],
      [gl_cv_func_mkfifo_works],
      [# Assume that if we have lstat, we can also check symlinks.
       if test $ac_cv_func_lstat = yes; then
         ln -s conftest.tmp conftest.lnk
       fi
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <sys/stat.h>
           ]],
           [[int result = 0;
             if (!mkfifo ("conftest.tmp/", 0600))
               result |= 1;
#if HAVE_LSTAT
             if (!mkfifo ("conftest.lnk/", 0600))
               result |= 2;
#endif
             return result;
           ]])],
         [gl_cv_func_mkfifo_works=yes], [gl_cv_func_mkfifo_works=no],
         [case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_mkfifo_works="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_mkfifo_works="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_mkfifo_works="$gl_cross_guess_normal" ;;
          esac
         ])
       rm -f conftest.tmp conftest.lnk])
    case "$gl_cv_func_mkfifo_works" in
      *yes) ;;
      *)
        AC_DEFINE([MKFIFO_TRAILING_SLASH_BUG], [1], [Define to 1 if mkfifo
          does not reject trailing slash])
        REPLACE_MKFIFO=1
        ;;
    esac
  fi
])
m4trace:m4/mkostemp.m4:7: -1- AC_DEFUN([gl_FUNC_MKOSTEMP], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

  dnl Persuade glibc <stdlib.h> to declare mkostemp().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([mkostemp])
  if test $ac_cv_func_mkostemp != yes; then
    HAVE_MKOSTEMP=0
  fi
])
m4trace:m4/mkostemp.m4:21: -1- AC_DEFUN([gl_PREREQ_MKOSTEMP], [
])
m4trace:m4/mkostemps.m4:7: -1- AC_DEFUN([gl_FUNC_MKOSTEMPS], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

  dnl Persuade glibc <stdlib.h> to declare mkostemps().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([mkostemps])
  if test $ac_cv_func_mkostemps != yes; then
    HAVE_MKOSTEMPS=0
  fi
])
m4trace:m4/mktime.m4:10: -1- AC_DEFUN([gl_TIME_T_IS_SIGNED], [
  AC_CACHE_CHECK([whether time_t is signed],
    [gl_cv_time_t_is_signed],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[#include <time.h>
                          char time_t_signed[(time_t) -1 < 0 ? 1 : -1];]])],
       [gl_cv_time_t_is_signed=yes],
       [gl_cv_time_t_is_signed=no])])
  if test $gl_cv_time_t_is_signed = yes; then
    AC_DEFINE([TIME_T_IS_SIGNED], [1], [Define to 1 if time_t is signed.])
  fi
])
m4trace:m4/mktime.m4:25: -1- AC_DEFUN([gl_FUNC_MKTIME_WORKS], [
  AC_REQUIRE([gl_TIME_T_IS_SIGNED])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl We don't use AC_FUNC_MKTIME any more, because it is no longer maintained
  dnl in Autoconf and because it invokes AC_LIBOBJ.
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_DECLS_ONCE([alarm])
  AC_REQUIRE([gl_MULTIARCH])
  AC_CACHE_CHECK([for working mktime], [gl_cv_func_working_mktime],
    [if test $APPLE_UNIVERSAL_BUILD = 1; then
       # A universal build on Apple Mac OS X platforms.
       # The test result would be 'yes' in 32-bit mode and 'no' in 64-bit mode.
       # But we need a configuration result that is valid in both modes.
       gl_cv_func_working_mktime="guessing no"
     else
       AC_RUN_IFELSE(
         [AC_LANG_SOURCE(
[[/* Test program from Paul Eggert and Tony Leneis.  */
#include <limits.h>
#include <stdlib.h>
#include <time.h>

#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif

#if HAVE_DECL_ALARM
# include <signal.h>
#endif

]GL_MDA_DEFINES[

#ifndef TIME_T_IS_SIGNED
# define TIME_T_IS_SIGNED 0
#endif

static time_t time_t_max;
static time_t time_t_min;

/* Values we'll use to set the TZ environment variable.  */
static char *tz_strings[] = {
  (char *) 0, "TZ=GMT0", "TZ=JST-9",
  "TZ=EST+3EDT+2,M10.1.0/00:00:00,M2.3.0/00:00:00"
};
#define N_STRINGS (sizeof (tz_strings) / sizeof (tz_strings[0]))

/* Return 0 if mktime fails to convert a date in the spring-forward gap.
   Based on a problem report from Andreas Jaeger.  */
static int
spring_forward_gap ()
{
  /* glibc (up to about 1998-10-07) failed this test. */
  struct tm tm;

  /* Use the portable POSIX.1 specification "TZ=PST8PDT,M4.1.0,M10.5.0"
     instead of "TZ=America/Vancouver" in order to detect the bug even
     on systems that don't support the Olson extension, or don't have the
     full zoneinfo tables installed.  */
  putenv ("TZ=PST8PDT,M4.1.0,M10.5.0");

  tm.tm_year = 98;
  tm.tm_mon = 3;
  tm.tm_mday = 5;
  tm.tm_hour = 2;
  tm.tm_min = 0;
  tm.tm_sec = 0;
  tm.tm_isdst = -1;
  return mktime (&tm) != (time_t) -1;
}

static int
mktime_test1 (time_t now)
{
  struct tm *lt;
  return ! (lt = localtime (&now)) || mktime (lt) == now;
}

static int
mktime_test (time_t now)
{
  return (mktime_test1 (now)
          && mktime_test1 ((time_t) (time_t_max - now))
          && mktime_test1 ((time_t) (time_t_min + now)));
}

static int
irix_6_4_bug ()
{
  /* Based on code from Ariel Faigon.  */
  struct tm tm;
  tm.tm_year = 96;
  tm.tm_mon = 3;
  tm.tm_mday = 0;
  tm.tm_hour = 0;
  tm.tm_min = 0;
  tm.tm_sec = 0;
  tm.tm_isdst = -1;
  mktime (&tm);
  return tm.tm_mon == 2 && tm.tm_mday == 31;
}

static int
bigtime_test (int j)
{
  struct tm tm;
  time_t now;
  tm.tm_year = tm.tm_mon = tm.tm_mday = tm.tm_hour = tm.tm_min = tm.tm_sec = j;
  now = mktime (&tm);
  if (now != (time_t) -1)
    {
      struct tm *lt = localtime (&now);
      if (! (lt
             && lt->tm_year == tm.tm_year
             && lt->tm_mon == tm.tm_mon
             && lt->tm_mday == tm.tm_mday
             && lt->tm_hour == tm.tm_hour
             && lt->tm_min == tm.tm_min
             && lt->tm_sec == tm.tm_sec
             && lt->tm_yday == tm.tm_yday
             && lt->tm_wday == tm.tm_wday
             && ((lt->tm_isdst < 0 ? -1 : 0 < lt->tm_isdst)
                  == (tm.tm_isdst < 0 ? -1 : 0 < tm.tm_isdst))))
        return 0;
    }
  return 1;
}

static int
year_2050_test ()
{
  /* The correct answer for 2050-02-01 00:00:00 in Pacific time,
     ignoring leap seconds.  */
  unsigned long int answer = 2527315200UL;

  struct tm tm;
  time_t t;
  tm.tm_year = 2050 - 1900;
  tm.tm_mon = 2 - 1;
  tm.tm_mday = 1;
  tm.tm_hour = tm.tm_min = tm.tm_sec = 0;
  tm.tm_isdst = -1;

  /* Use the portable POSIX.1 specification "TZ=PST8PDT,M4.1.0,M10.5.0"
     instead of "TZ=America/Vancouver" in order to detect the bug even
     on systems that don't support the Olson extension, or don't have the
     full zoneinfo tables installed.  */
  putenv ("TZ=PST8PDT,M4.1.0,M10.5.0");

  t = mktime (&tm);

  /* Check that the result is either a failure, or close enough
     to the correct answer that we can assume the discrepancy is
     due to leap seconds.  */
  return (t == (time_t) -1
          || (0 < t && answer - 120 <= t && t <= answer + 120));
}

int
main ()
{
  int result = 0;
  time_t t, delta;
  int i, j;
  int time_t_signed_magnitude = (time_t) ~ (time_t) 0 < (time_t) -1;

#if HAVE_DECL_ALARM
  /* This test makes some buggy mktime implementations loop.
     Give up after 60 seconds; a mktime slower than that
     isn't worth using anyway.  */
  signal (SIGALRM, SIG_DFL);
  alarm (60);
#endif

  time_t_max = (! TIME_T_IS_SIGNED
                ? (time_t) -1
                : ((((time_t) 1 << (sizeof (time_t) * CHAR_BIT - 2)) - 1)
                   * 2 + 1));
  time_t_min = (! TIME_T_IS_SIGNED
                ? (time_t) 0
                : time_t_signed_magnitude
                ? ~ (time_t) 0
                : ~ time_t_max);

  delta = time_t_max / 997; /* a suitable prime number */
  for (i = 0; i < N_STRINGS; i++)
    {
      if (tz_strings[i])
        putenv (tz_strings[i]);

      for (t = 0; t <= time_t_max - delta && (result & 1) == 0; t += delta)
        if (! mktime_test (t))
          result |= 1;
      if ((result & 2) == 0
          && ! (mktime_test ((time_t) 1)
                && mktime_test ((time_t) (60 * 60))
                && mktime_test ((time_t) (60 * 60 * 24))))
        result |= 2;

      for (j = 1; (result & 4) == 0; j <<= 1)
        {
          if (! bigtime_test (j))
            result |= 4;
          if (INT_MAX / 2 < j)
            break;
        }
      if ((result & 8) == 0 && ! bigtime_test (INT_MAX))
        result |= 8;
    }
  if (! irix_6_4_bug ())
    result |= 16;
  if (! spring_forward_gap ())
    result |= 32;
  if (! year_2050_test ())
    result |= 64;
  return result;
}]])],
         [gl_cv_func_working_mktime=yes],
         [gl_cv_func_working_mktime=no],
         [case "$host_os" in
                    # Guess no on native Windows.
            mingw*) gl_cv_func_working_mktime="guessing no" ;;
            *)      gl_cv_func_working_mktime="$gl_cross_guess_normal" ;;
          esac
         ])
     fi
    ])
])
m4trace:m4/mktime.m4:256: -1- AC_DEFUN([gl_FUNC_MKTIME], [
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_FUNC_MKTIME_WORKS])

  REPLACE_MKTIME=0
  if test "$gl_cv_func_working_mktime" != yes; then
    REPLACE_MKTIME=1
    AC_DEFINE([NEED_MKTIME_WORKING], [1],
      [Define if the compilation of mktime.c should define 'mktime'
       with the algorithmic workarounds.])
  fi
  case "$host_os" in
    mingw*)
      REPLACE_MKTIME=1
      AC_DEFINE([NEED_MKTIME_WINDOWS], [1],
        [Define if the compilation of mktime.c should define 'mktime'
         with the native Windows TZ workaround.])
      ;;
  esac
])
m4trace:m4/mktime.m4:280: -1- AC_DEFUN([gl_FUNC_MKTIME_INTERNAL], [
  AC_REQUIRE([gl_FUNC_MKTIME_WORKS])

  WANT_MKTIME_INTERNAL=0
  dnl BeOS has __mktime_internal in libc, but other platforms don't.
  AC_CHECK_FUNC([__mktime_internal],
    [AC_DEFINE([mktime_internal], [__mktime_internal],
       [Define to the real name of the mktime_internal function.])
    ],
    [dnl mktime works but it doesn't export __mktime_internal,
     dnl so we need to substitute our own mktime implementation.
     WANT_MKTIME_INTERNAL=1
     AC_DEFINE([NEED_MKTIME_INTERNAL], [1],
       [Define if the compilation of mktime.c should define 'mktime_internal'.])
    ])
])
m4trace:m4/mktime.m4:298: -1- AC_DEFUN([gl_PREREQ_MKTIME], [:])
m4trace:m4/mmap-anon.m4:16: -1- AC_DEFUN_ONCE([gl_FUNC_MMAP_ANON], [
  dnl Persuade glibc <sys/mman.h> to define MAP_ANONYMOUS.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  # Check for mmap(). Don't use AC_FUNC_MMAP, because it checks too much: it
  # fails on HP-UX 11, because MAP_FIXED mappings do not work. But this is
  # irrelevant for anonymous mappings.
  AC_CHECK_FUNC([mmap], [gl_have_mmap=yes], [gl_have_mmap=no])

  # Try to allow MAP_ANONYMOUS.
  gl_have_mmap_anonymous=no
  if test $gl_have_mmap = yes; then
    AC_MSG_CHECKING([for MAP_ANONYMOUS])
    AC_EGREP_CPP([I cannot identify this map], [
#include <sys/mman.h>
#ifdef MAP_ANONYMOUS
    I cannot identify this map
#endif
],
      [gl_have_mmap_anonymous=yes])
    if test $gl_have_mmap_anonymous != yes; then
      AC_EGREP_CPP([I cannot identify this map], [
#include <sys/mman.h>
#ifdef MAP_ANON
    I cannot identify this map
#endif
],
        [AC_DEFINE([MAP_ANONYMOUS], [MAP_ANON],
          [Define to a substitute value for mmap()'s MAP_ANONYMOUS flag.])
         gl_have_mmap_anonymous=yes])
    fi
    AC_MSG_RESULT([$gl_have_mmap_anonymous])
    if test $gl_have_mmap_anonymous = yes; then
      AC_DEFINE([HAVE_MAP_ANONYMOUS], [1],
        [Define to 1 if mmap()'s MAP_ANONYMOUS flag is available after including
         config.h and <sys/mman.h>.])
    fi
  fi
])
m4trace:m4/mode_t.m4:12: -1- AC_DEFUN([gl_PROMOTED_TYPE_MODE_T], [
  AC_REQUIRE([AC_TYPE_MODE_T])
  AC_CACHE_CHECK([for promoted mode_t type], [gl_cv_promoted_mode_t], [
    dnl Assume mode_t promotes to 'int' if and only if it is smaller than 'int',
    dnl and to itself otherwise. This assumption is not guaranteed by the ISO C
    dnl standard, but we don't know of any real-world counterexamples.
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>]],
      [[typedef int array[2 * (sizeof (mode_t) < sizeof (int)) - 1];]])],
      [gl_cv_promoted_mode_t='int'],
      [gl_cv_promoted_mode_t='mode_t'])
  ])
  AC_DEFINE_UNQUOTED([PROMOTED_MODE_T], [$gl_cv_promoted_mode_t],
    [Define to the type that is the result of default argument promotions of type mode_t.])
])
m4trace:m4/msvc-inval.m4:7: -1- AC_DEFUN([gl_MSVC_INVAL], [
  AC_CHECK_FUNCS_ONCE([_set_invalid_parameter_handler])
  if test $ac_cv_func__set_invalid_parameter_handler = yes; then
    HAVE_MSVC_INVALID_PARAMETER_HANDLER=1
    AC_DEFINE([HAVE_MSVC_INVALID_PARAMETER_HANDLER], [1],
      [Define to 1 on MSVC platforms that have the "invalid parameter handler"
       concept.])
  else
    HAVE_MSVC_INVALID_PARAMETER_HANDLER=0
  fi
  AC_SUBST([HAVE_MSVC_INVALID_PARAMETER_HANDLER])
])
m4trace:m4/msvc-nothrow.m4:7: -1- AC_DEFUN([gl_MSVC_NOTHROW], [
  AC_REQUIRE([gl_MSVC_INVAL])
])
m4trace:m4/multiarch.m4:21: -1- AC_DEFUN_ONCE([gl_MULTIARCH], [
  dnl Code similar to autoconf-2.63 AC_C_BIGENDIAN.
  AC_CACHE_CHECK([whether the compiler produces multi-arch binaries],
    [gl_cv_c_multiarch],
    [gl_cv_c_multiarch=no
     AC_COMPILE_IFELSE(
       [AC_LANG_SOURCE(
         [[#ifndef __APPLE_CC__
            not a universal capable compiler
           #endif
           typedef int dummy;
         ]])],
       [
        dnl Check for potential -arch flags.  It is not universal unless
        dnl there are at least two -arch flags with different values.
        arch=
        prev=
        for word in ${CC} ${CFLAGS} ${CPPFLAGS} ${LDFLAGS}; do
          if test -n "$prev"; then
            case $word in
              i?86 | x86_64 | ppc | ppc64 | arm | arm64)
                if test -z "$arch" || test "$arch" = "$word"; then
                  arch="$word"
                else
                  gl_cv_c_multiarch=yes
                fi
                ;;
            esac
            prev=
          else
            if test "x$word" = "x-arch"; then
              prev=arch
            fi
          fi
        done
       ])
    ])
  if test $gl_cv_c_multiarch = yes; then
    APPLE_UNIVERSAL_BUILD=1
  else
    APPLE_UNIVERSAL_BUILD=0
  fi
  AC_SUBST([APPLE_UNIVERSAL_BUILD])
])
m4trace:m4/nanosleep.m4:14: -1- AC_DEFUN([gl_FUNC_NANOSLEEP], [
 AC_REQUIRE([gl_TIME_H_DEFAULTS])
 AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

 dnl Persuade glibc and Solaris <time.h> to declare nanosleep.
 AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

 AC_CHECK_HEADERS_ONCE([sys/time.h])
 AC_REQUIRE([gl_FUNC_SELECT])

 AC_CHECK_DECLS_ONCE([alarm])

 nanosleep_save_libs=$LIBS

 # Solaris 2.5.1 needs -lposix4 to get the nanosleep function.
 # Solaris 7 prefers the library name -lrt to the obsolescent name -lposix4.
 LIB_NANOSLEEP=
 AC_SUBST([LIB_NANOSLEEP])
 AC_SEARCH_LIBS([nanosleep], [rt posix4],
                [test "$ac_cv_search_nanosleep" = "none required" ||
                 LIB_NANOSLEEP=$ac_cv_search_nanosleep])
 if test "x$ac_cv_search_nanosleep" != xno; then
   dnl The system has a nanosleep function.

   AC_REQUIRE([gl_MULTIARCH])
   if test $APPLE_UNIVERSAL_BUILD = 1; then
     # A universal build on Apple Mac OS X platforms.
     # The test result would be 'no (mishandles large arguments)' in 64-bit
     # mode but 'yes' in 32-bit mode. But we need a configuration result that
     # is valid in both modes.
     gl_cv_func_nanosleep='no (mishandles large arguments)'
   fi

   AC_CACHE_CHECK([for working nanosleep],
    [gl_cv_func_nanosleep],
    [
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE([[
          #include <errno.h>
          #include <limits.h>
          #include <signal.h>
          #if HAVE_SYS_TIME_H
           #include <sys/time.h>
          #endif
          #include <time.h>
          #include <unistd.h>
          #define TYPE_SIGNED(t) (! ((t) 0 < (t) -1))
          #define TYPE_MAXIMUM(t) \
            ((t) (! TYPE_SIGNED (t) \
                  ? (t) -1 \
                  : ((((t) 1 << (sizeof (t) * CHAR_BIT - 2)) - 1) * 2 + 1)))

          #if HAVE_DECL_ALARM
          static void
          check_for_SIGALRM (int sig)
          {
            if (sig != SIGALRM)
              _exit (1);
          }
          #endif

          int
          main ()
          {
            static struct timespec ts_sleep;
            static struct timespec ts_remaining;
            /* Test for major problems first.  */
            if (! nanosleep)
              return 2;
            ts_sleep.tv_sec = 0;
            ts_sleep.tv_nsec = 1;
            #if HAVE_DECL_ALARM
            {
              static struct sigaction act;
              act.sa_handler = check_for_SIGALRM;
              sigemptyset (&act.sa_mask);
              sigaction (SIGALRM, &act, NULL);
              alarm (1);
              if (nanosleep (&ts_sleep, NULL) != 0)
                return 3;
              /* Test for a minor problem: the handling of large arguments.  */
              ts_sleep.tv_sec = TYPE_MAXIMUM (time_t);
              ts_sleep.tv_nsec = 999999999;
              alarm (1);
              if (nanosleep (&ts_sleep, &ts_remaining) != -1)
                return 4;
              if (errno != EINTR)
                return 5;
              if (ts_remaining.tv_sec <= TYPE_MAXIMUM (time_t) - 10)
                return 6;
            }
            #else /* A simpler test for native Windows.  */
            if (nanosleep (&ts_sleep, &ts_remaining) < 0)
              return 3;
            #endif
            return 0;
          }]])],
       [gl_cv_func_nanosleep=yes],
       [case $? in dnl (
        4|5|6) gl_cv_func_nanosleep='no (mishandles large arguments)';; dnl (
        *)   gl_cv_func_nanosleep=no;;
        esac],
       [case "$host_os" in dnl ((
          linux*) # Guess it halfway works when the kernel is Linux.
            gl_cv_func_nanosleep='guessing no (mishandles large arguments)' ;;
          mingw*) # Guess no on native Windows.
            gl_cv_func_nanosleep='guessing no' ;;
          *)      # If we don't know, obey --enable-cross-guesses.
            gl_cv_func_nanosleep="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
   case "$gl_cv_func_nanosleep" in
     *yes)
       REPLACE_NANOSLEEP=0
       ;;
     *)
       REPLACE_NANOSLEEP=1
       case "$gl_cv_func_nanosleep" in
         *"mishandles large arguments"*)
           AC_DEFINE([HAVE_BUG_BIG_NANOSLEEP], [1],
             [Define to 1 if nanosleep mishandles large arguments.])
           ;;
         *)
           # The replacement uses select(). Add $LIBSOCKET to $LIB_NANOSLEEP.
           for ac_lib in $LIBSOCKET; do
             case " $LIB_NANOSLEEP " in
               *" $ac_lib "*) ;;
               *) LIB_NANOSLEEP="$LIB_NANOSLEEP $ac_lib";;
             esac
           done
           ;;
       esac
       ;;
   esac
 else
   HAVE_NANOSLEEP=0
 fi
 LIBS=$nanosleep_save_libs
])
m4trace:m4/nanosleep.m4:157: -1- AC_DEFUN([gl_PREREQ_NANOSLEEP], [
  AC_CHECK_HEADERS_ONCE([sys/select.h])
  gl_PREREQ_SIG_HANDLER_H
])
m4trace:m4/nocrash.m4:18: -1- AC_DEFUN([GL_NOCRASH], [[
#include <stdlib.h>
#if defined __MACH__ && defined __APPLE__
/* Avoid a crash on Mac OS X.  */
#include <mach/mach.h>
#include <mach/mach_error.h>
#include <mach/thread_status.h>
#include <mach/exception.h>
#include <mach/task.h>
#include <pthread.h>
/* The exception port on which our thread listens.  */
static mach_port_t our_exception_port;
/* The main function of the thread listening for exceptions of type
   EXC_BAD_ACCESS.  */
static void *
mach_exception_thread (void *arg)
{
  /* Buffer for a message to be received.  */
  struct {
    mach_msg_header_t head;
    mach_msg_body_t msgh_body;
    char data[1024];
  } msg;
  mach_msg_return_t retval;
  /* Wait for a message on the exception port.  */
  retval = mach_msg (&msg.head, MACH_RCV_MSG | MACH_RCV_LARGE, 0, sizeof (msg),
                     our_exception_port, MACH_MSG_TIMEOUT_NONE, MACH_PORT_NULL);
  if (retval != MACH_MSG_SUCCESS)
    abort ();
  exit (1);
}
static void
nocrash_init (void)
{
  mach_port_t self = mach_task_self ();
  /* Allocate a port on which the thread shall listen for exceptions.  */
  if (mach_port_allocate (self, MACH_PORT_RIGHT_RECEIVE, &our_exception_port)
      == KERN_SUCCESS) {
    /* See https://web.mit.edu/darwin/src/modules/xnu/osfmk/man/mach_port_insert_right.html.  */
    if (mach_port_insert_right (self, our_exception_port, our_exception_port,
                                MACH_MSG_TYPE_MAKE_SEND)
        == KERN_SUCCESS) {
      /* The exceptions we want to catch.  Only EXC_BAD_ACCESS is interesting
         for us.  */
      exception_mask_t mask = EXC_MASK_BAD_ACCESS;
      /* Create the thread listening on the exception port.  */
      pthread_attr_t attr;
      pthread_t thread;
      if (pthread_attr_init (&attr) == 0
          && pthread_attr_setdetachstate (&attr, PTHREAD_CREATE_DETACHED) == 0
          && pthread_create (&thread, &attr, mach_exception_thread, NULL) == 0) {
        pthread_attr_destroy (&attr);
        /* Replace the exception port info for these exceptions with our own.
           Note that we replace the exception port for the entire task, not only
           for a particular thread.  This has the effect that when our exception
           port gets the message, the thread specific exception port has already
           been asked, and we don't need to bother about it.
           See https://web.mit.edu/darwin/src/modules/xnu/osfmk/man/task_set_exception_ports.html.  */
        task_set_exception_ports (self, mask, our_exception_port,
                                  EXCEPTION_DEFAULT, MACHINE_THREAD_STATE);
      }
    }
  }
}
#elif defined _WIN32 && ! defined __CYGWIN__
/* Avoid a crash on native Windows.  */
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#include <winerror.h>
static LONG WINAPI
exception_filter (EXCEPTION_POINTERS *ExceptionInfo)
{
  switch (ExceptionInfo->ExceptionRecord->ExceptionCode)
    {
    case EXCEPTION_ACCESS_VIOLATION:
    case EXCEPTION_IN_PAGE_ERROR:
    case EXCEPTION_STACK_OVERFLOW:
    case EXCEPTION_GUARD_PAGE:
    case EXCEPTION_PRIV_INSTRUCTION:
    case EXCEPTION_ILLEGAL_INSTRUCTION:
    case EXCEPTION_DATATYPE_MISALIGNMENT:
    case EXCEPTION_ARRAY_BOUNDS_EXCEEDED:
    case EXCEPTION_NONCONTINUABLE_EXCEPTION:
      exit (1);
    }
  return EXCEPTION_CONTINUE_SEARCH;
}
static void
nocrash_init (void)
{
  SetUnhandledExceptionFilter ((LPTOP_LEVEL_EXCEPTION_FILTER) exception_filter);
}
#else
/* Avoid a crash on POSIX systems.  */
#include <signal.h>
#include <unistd.h>
/* A POSIX signal handler.  */
static void
exception_handler (int sig)
{
  _exit (1);
}
static void
nocrash_init (void)
{
#ifdef SIGSEGV
  signal (SIGSEGV, exception_handler);
#endif
#ifdef SIGBUS
  signal (SIGBUS, exception_handler);
#endif
}
#endif
]])
m4trace:m4/nproc.m4:7: -1- AC_DEFUN([gl_NPROC], [
  gl_PREREQ_NPROC
])
m4trace:m4/nproc.m4:13: -1- AC_DEFUN([gl_PREREQ_NPROC], [
  dnl Persuade glibc <sched.h> to declare CPU_SETSIZE, CPU_ISSET etc.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_HEADERS([sys/pstat.h sys/sysmp.h sys/param.h],,,
    [AC_INCLUDES_DEFAULT])
  dnl <sys/sysctl.h> requires <sys/param.h> on OpenBSD 4.0.
  AC_CHECK_HEADERS([sys/sysctl.h],,,
    [AC_INCLUDES_DEFAULT
     #if HAVE_SYS_PARAM_H
     # include <sys/param.h>
     #endif
    ])

  AC_CHECK_FUNCS([sched_getaffinity sched_getaffinity_np \
                  pstat_getdynamic sysmp sysctl])

  dnl Test whether sched_getaffinity has the expected declaration.
  dnl glibc 2.3.[0-2]:
  dnl   int sched_getaffinity (pid_t, unsigned int, unsigned long int *);
  dnl glibc 2.3.3:
  dnl   int sched_getaffinity (pid_t, cpu_set_t *);
  dnl glibc >= 2.3.4:
  dnl   int sched_getaffinity (pid_t, size_t, cpu_set_t *);
  if test $ac_cv_func_sched_getaffinity = yes; then
    AC_CACHE_CHECK([for glibc compatible sched_getaffinity],
      [gl_cv_func_sched_getaffinity3],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <errno.h>
              #include <sched.h>]],
            [[sched_getaffinity (0, 0, (cpu_set_t *) 0);]])],
         [gl_cv_func_sched_getaffinity3=yes],
         [gl_cv_func_sched_getaffinity3=no])
      ])
    if test $gl_cv_func_sched_getaffinity3 = yes; then
      AC_DEFINE([HAVE_SCHED_GETAFFINITY_LIKE_GLIBC], [1],
        [Define to 1 if sched_getaffinity has a glibc compatible declaration.])
    fi
  fi
])
m4trace:m4/nstrftime.m4:11: -1- AC_DEFUN([gl_FUNC_GNU_STRFTIME], [
 AC_REQUIRE([AC_C_RESTRICT])

 # This defines (or not) HAVE_TZNAME and HAVE_STRUCT_TM_TM_ZONE.
 AC_REQUIRE([AC_STRUCT_TIMEZONE])

 AC_REQUIRE([gl_TM_GMTOFF])

 AC_DEFINE([my_strftime], [nstrftime],
   [Define to the name of the strftime replacement function.])
])
m4trace:m4/octave_blas.m4:28: -1- AC_DEFUN([OCTAVE_BLAS], [
  AC_PREREQ(2.50)
  dnl Call reference macro to find BLAS library
  AX_BLAS

  if test "$cross_compiling" = yes ; then
    dnl Assume BLAS library exists when cross compiling
    ax_blas_ok=yes
    AC_MSG_CHECKING([BLAS can be called from Fortran])
    AC_MSG_RESULT([yes assumed for cross compilation])
    dnl Assume generic 4-byte BLAS library if not specified
    AC_MSG_CHECKING([BLAS library integer size])
    if test -z "$ax_cv_blas_integer_size" ; then
      ax_cv_blas_integer_size=4
    fi
    AC_MSG_RESULT([$ax_cv_blas_integer_size assumed for cross compilation])
  elif test $ax_blas_ok = yes; then
    ac_octave_save_LIBS="$LIBS"
    LIBS="$BLAS_LIBS $LIBS"
    AC_LANG_PUSH(Fortran 77)
    ## Check BLAS library integer size.
    ## If it does not appear to be 8 bytes, we assume it is 4 bytes.
    ## FIXME: this may fail with options like -ftrapping-math.
    AC_CACHE_CHECK([BLAS library integer size],
      [ax_cv_blas_integer_size],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM(,[[
      integer*8 two, n
      integer*4 n2(2)
      double precision d, a(1), b(1), ddot
      equivalence (n, n2)

      a(1) = 1.0
      b(1) = 1.0

c Generate 2**32 + 1 in an 8-byte integer.  Whether we have a big
c endian or little endian system, both 4-byte words of this value
c should be 1.

      two = 2
      n = (two ** 32) + 1

c Check that our expectation about the type conversions are correct.

      if (n2(1) .ne. 1 .or. n2(2) .ne. 1) then
        print *, 'invalid assumption about integer type conversion'
        stop 2
      endif

*     print *, n, n2(1), n2(2)
*     print *, a(1), b(1)

c DDOT will either see 1 or a large value for N.  Since INCX and INCY
c are both 0, we will never increment the index, so A and B only need to
c have a single element.  If N is interpreted as 1 (BLAS compiled with
c 4-byte integers) then the result will be 1.  If N is interpreted as a
c large value (BLAS compiled with 8-byte integers) then the result will
c be the summation a(1)*b(1) 2^32+1 times.  This will also take some
c time to compute, but at least for now it is the unusual case so we are
c much more likely to exit quickly after detecting that the BLAS library
c was compiled with 4-byte integers.

      d = ddot (n, a, 0, b, 0)

*     print *, a(1), b(1), d

c Success (0 exit status) means we detected BLAS compiled with
c 8-byte integers.

      if (d .eq. 1.0) then
        stop 1
      endif

        ]])],
        ax_cv_blas_integer_size=8,
        ax_cv_blas_integer_size=4)
      ])

  AC_LANG_POP(Fortran 77)
  LIBS="$ac_octave_save_LIBS"
fi

])
m4trace:m4/off_t.m4:10: -1- AC_DEFUN([gl_TYPE_OFF_T], [
  m4_ifdef([gl_LARGEFILE], [
    AC_REQUIRE([gl_LARGEFILE])
  ], [
    WINDOWS_64_BIT_OFF_T=0
  ])
  AC_SUBST([WINDOWS_64_BIT_OFF_T])
])
m4trace:m4/open-cloexec.m4:8: -1- AC_DEFUN([gl_PREPROC_O_CLOEXEC], [
  AC_CACHE_CHECK([for O_CLOEXEC],
    [gl_cv_macro_O_CLOEXEC],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[#include <fcntl.h>
                          #ifndef O_CLOEXEC
                            choke me;
                          #endif
                        ]],
                        [[return O_CLOEXEC;]])],
       [gl_cv_macro_O_CLOEXEC=yes],
       [gl_cv_macro_O_CLOEXEC=no])])
])
m4trace:m4/open-slash.m4:9: -1- AC_DEFUN([gl_OPEN_TRAILING_SLASH_BUG], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl open("foo/") should not create a file when the file name has a
  dnl trailing slash.  FreeBSD only has the problem on symlinks.
  AC_CHECK_FUNCS_ONCE([lstat])
  AC_CACHE_CHECK([whether open recognizes a trailing slash],
    [gl_cv_func_open_slash],
    [# Assume that if we have lstat, we can also check symlinks.
     if test $ac_cv_func_lstat = yes; then
       touch conftest.tmp
       ln -s conftest.tmp conftest.lnk
     fi
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE([[
#include <fcntl.h>
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
]GL_MDA_DEFINES[
int main ()
{
  int result = 0;
#if HAVE_LSTAT
  if (open ("conftest.lnk/", O_RDONLY) != -1)
    result |= 1;
#endif
  if (open ("conftest.sl/", O_CREAT, 0600) >= 0)
    result |= 2;
  return result;
}]])],
       [gl_cv_func_open_slash=yes],
       [gl_cv_func_open_slash=no],
       [
changequote(,)dnl
        case "$host_os" in
          freebsd* | aix* | hpux* | solaris2.[0-9] | solaris2.[0-9].*)
            gl_cv_func_open_slash="guessing no" ;;
          *)
            gl_cv_func_open_slash="guessing yes" ;;
        esac
changequote([,])dnl
       ])
     rm -f conftest.sl conftest.tmp conftest.lnk
    ])
  case "$gl_cv_func_open_slash" in
    *no)
      AC_DEFINE([OPEN_TRAILING_SLASH_BUG], [1],
        [Define to 1 if open() fails to recognize a trailing slash.])
      ;;
  esac
])
m4trace:m4/open.m4:7: -1- AC_DEFUN([gl_FUNC_OPEN], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_PREPROC_O_CLOEXEC])
  case "$host_os" in
    mingw* | pw*)
      REPLACE_OPEN=1
      ;;
    *)
      dnl open("foo/") should not create a file when the file name has a
      dnl trailing slash.  FreeBSD only has the problem on symlinks.
      AC_CHECK_FUNCS_ONCE([lstat])
      if test "$gl_cv_macro_O_CLOEXEC" != yes; then
        REPLACE_OPEN=1
      fi
      gl_OPEN_TRAILING_SLASH_BUG
      case "$gl_cv_func_open_slash" in
        *no)
          REPLACE_OPEN=1
          ;;
      esac
      ;;
  esac
  dnl Replace open() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    if test $REPLACE_OPEN = 0; then
      gl_TEST_FCHDIR
      if test $HAVE_FCHDIR = 0; then
        REPLACE_OPEN=1
      fi
    fi
  ])
  dnl Replace open() for supporting the gnulib-defined O_NONBLOCK flag.
  m4_ifdef([gl_NONBLOCKING_IO], [
    if test $REPLACE_OPEN = 0; then
      gl_NONBLOCKING_IO
      if test $gl_cv_have_open_O_NONBLOCK != yes; then
        REPLACE_OPEN=1
      fi
    fi
  ])
])
m4trace:m4/open.m4:52: -1- AC_DEFUN([gl_PREREQ_OPEN], [
  AC_REQUIRE([gl_PROMOTED_TYPE_MODE_T])
  :
])
m4trace:m4/openat.m4:11: -1- AC_DEFUN([gl_FUNC_OPENAT], [
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS_ONCE([openat])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_REQUIRE([gl_PREPROC_O_CLOEXEC])
  case $ac_cv_func_openat+$gl_cv_func_lstat_dereferences_slashed_symlink+$gl_cv_macro_O_CLOEXEC in
  yes+*yes+yes)
    ;;
  yes+*)
    # Solaris 10 lacks O_CLOEXEC.
    # Solaris 9 has *at functions, but uniformly mishandles trailing
    # slash in all of them.
    REPLACE_OPENAT=1
    ;;
  *)
    HAVE_OPENAT=0
    ;;
  esac
])
m4trace:m4/openat.m4:34: -1- AC_DEFUN([gl_PREREQ_OPENAT], [
  AC_REQUIRE([gl_PROMOTED_TYPE_MODE_T])
  :
])
m4trace:m4/opendir.m4:7: -1- AC_DEFUN([gl_FUNC_OPENDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_FUNCS([opendir])
  if test $ac_cv_func_opendir = no; then
    HAVE_OPENDIR=0
  fi
  dnl Replace opendir() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      if test $HAVE_OPENDIR = 1; then
        REPLACE_OPENDIR=1
      fi
    fi
  ])
  dnl Replace opendir() on OS/2 kLIBC to support dirfd() function replaced
  dnl by gnulib.
  case $host_os,$HAVE_OPENDIR in
    os2*,1)
      REPLACE_OPENDIR=1;;
  esac
])
m4trace:m4/pathmax.m4:8: -1- AC_DEFUN([gl_PATHMAX], [
  dnl Prerequisites of lib/pathmax.h.
  AC_CHECK_HEADERS_ONCE([sys/param.h])
])
m4trace:m4/pathmax.m4:16: -1- AC_DEFUN([gl_PATHMAX_SNIPPET], [[
/* Arrange to define PATH_MAX, like "pathmax.h" does. */
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
#include <limits.h>
#if defined HAVE_SYS_PARAM_H && !defined PATH_MAX && !defined MAXPATHLEN
# include <sys/param.h>
#endif
#if !defined PATH_MAX && defined MAXPATHLEN
# define PATH_MAX MAXPATHLEN
#endif
#ifdef __hpux
# undef PATH_MAX
# define PATH_MAX 1024
#endif
#if defined _WIN32 && ! defined __CYGWIN__
# undef PATH_MAX
# define PATH_MAX 260
#endif
]])
m4trace:m4/pathmax.m4:39: -1- AC_DEFUN([gl_PATHMAX_SNIPPET_PREREQ], [
  AC_CHECK_HEADERS_ONCE([unistd.h sys/param.h])
])
m4trace:m4/pipe.m4:7: -1- AC_DEFUN([gl_FUNC_PIPE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  AC_CHECK_FUNCS_ONCE([pipe])
  if test $ac_cv_func_pipe != yes; then
    HAVE_PIPE=0
  fi
])
m4trace:m4/pkg.m4:58: -1- AC_DEFUN([PKG_PROG_PKG_CONFIG], [m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])

if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
fi
if test -n "$PKG_CONFIG"; then
	_pkg_min_version=m4_default([$1], [0.9.0])
	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		PKG_CONFIG=""
	fi
fi[]dnl
])
m4trace:m4/pkg.m4:92: -1- AC_DEFUN([PKG_CHECK_EXISTS], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
if test -n "$PKG_CONFIG" && \
    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
  m4_default([$2], [:])
m4_ifvaln([$3], [else
  $3])dnl
fi])
m4trace:m4/pkg.m4:121: -1- AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])
if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi[]dnl
])
m4trace:m4/pkg.m4:139: -1- AC_DEFUN([PKG_CHECK_MODULES], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl

pkg_failed=no
AC_MSG_CHECKING([for $2])

_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
_PKG_CONFIG([$1][_LIBS], [libs], [$2])

m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
and $1[]_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.])

if test $pkg_failed = yes; then
        AC_MSG_RESULT([no])
        _PKG_SHORT_ERRORS_SUPPORTED
        if test $_pkg_short_errors_supported = yes; then
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
        else
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD

	m4_default([$4], [AC_MSG_ERROR(
[Package requirements ($2) were not met:

$$1_PKG_ERRORS

Consider adjusting the PKG_CONFIG_PATH environment variable if you
installed software in a non-standard prefix.

_PKG_TEXT])[]dnl
        ])
elif test $pkg_failed = untried; then
        AC_MSG_RESULT([no])
	m4_default([$4], [AC_MSG_FAILURE(
[The pkg-config script could not be found or is too old.  Make sure it
is in your PATH or set the PKG_CONFIG environment variable to the full
path to pkg-config.

_PKG_TEXT

To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl
        ])
else
	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
        AC_MSG_RESULT([yes])
	$3
fi[]dnl
])
m4trace:m4/pkg.m4:208: -1- AC_DEFUN([PKG_CHECK_MODULES_STATIC], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
_save_PKG_CONFIG=$PKG_CONFIG
PKG_CONFIG="$PKG_CONFIG --static"
PKG_CHECK_MODULES($@)
PKG_CONFIG=$_save_PKG_CONFIG[]dnl
])
m4trace:m4/pkg.m4:226: -1- AC_DEFUN([PKG_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([pkgconfigdir],
    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,
    [with_pkgconfigdir=]pkg_default)
AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:m4/pkg.m4:248: -1- AC_DEFUN([PKG_NOARCH_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([noarch-pkgconfigdir],
    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,
    [with_noarch_pkgconfigdir=]pkg_default)
AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:m4/pkg.m4:267: -1- AC_DEFUN([PKG_CHECK_VAR], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl

_PKG_CONFIG([$1], [variable="][$3]["], [$2])
AS_VAR_COPY([$1], [pkg_cv_][$1])

AS_VAR_IF([$1], [""], [$5], [$4])dnl
])
m4trace:m4/printf.m4:11: -1- AC_DEFUN([gl_PRINTF_SIZES_C99], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_AC_HEADER_STDINT_H])
  AC_REQUIRE([gl_AC_HEADER_INTTYPES_H])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports size specifiers as in C99],
    [gl_cv_func_printf_sizes_c99],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stddef.h>
#include <stdio.h>
#include <string.h>
#include <sys/types.h>
#if HAVE_STDINT_H_WITH_UINTMAX
# include <stdint.h>
#endif
#if HAVE_INTTYPES_H_WITH_UINTMAX
# include <inttypes.h>
#endif
static char buf[100];
int main ()
{
  int result = 0;
#if HAVE_STDINT_H_WITH_UINTMAX || HAVE_INTTYPES_H_WITH_UINTMAX
  buf[0] = '\0';
  if (sprintf (buf, "%ju %d", (uintmax_t) 12345671, 33, 44, 55) < 0
      || strcmp (buf, "12345671 33") != 0)
    result |= 1;
#else
  result |= 1;
#endif
  buf[0] = '\0';
  if (sprintf (buf, "%zu %d", (size_t) 12345672, 33, 44, 55) < 0
      || strcmp (buf, "12345672 33") != 0)
    result |= 2;
  buf[0] = '\0';
  if (sprintf (buf, "%tu %d", (ptrdiff_t) 12345673, 33, 44, 55) < 0
      || strcmp (buf, "12345673 33") != 0)
    result |= 4;
  buf[0] = '\0';
  if (sprintf (buf, "%Lg %d", (long double) 1.5, 33, 44, 55) < 0
      || strcmp (buf, "1.5 33") != 0)
    result |= 8;
  return result;
}]])],
        [gl_cv_func_printf_sizes_c99=yes],
        [gl_cv_func_printf_sizes_c99=no],
        [
         case "$host_os" in
changequote(,)dnl
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_printf_sizes_c99="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_printf_sizes_c99="guessing yes";;
           midnightbsd*)         gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_printf_sizes_c99="guessing no";;
           darwin*)              gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on OpenBSD >= 3.9.
           openbsd[1-2].* | openbsd3.[0-8] | openbsd3.[0-8].*)
                                 gl_cv_func_printf_sizes_c99="guessing no";;
           openbsd*)             gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on Solaris >= 2.10.
           solaris2.[1-9][0-9]*) gl_cv_func_printf_sizes_c99="guessing yes";;
           solaris*)             gl_cv_func_printf_sizes_c99="guessing no";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_printf_sizes_c99="guessing no";;
           netbsd*)              gl_cv_func_printf_sizes_c99="guessing yes";;
                                 # Guess yes on Android.
           linux*-android*)      gl_cv_func_printf_sizes_c99="guessing yes";;
changequote([,])dnl
                                 # Guess yes on MSVC, no on mingw.
           mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                   ],
                                   [gl_cv_func_printf_sizes_c99="guessing yes"],
                                   [gl_cv_func_printf_sizes_c99="guessing no"])
                                 ;;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_printf_sizes_c99="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:108: -1- AC_DEFUN([gl_PRINTF_LONG_DOUBLE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports 'long double' arguments],
    [gl_cv_func_printf_long_double],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[10000];
int main ()
{
  int result = 0;
  buf[0] = '\0';
  if (sprintf (buf, "%Lf %d", 1.75L, 33, 44, 55) < 0
      || strcmp (buf, "1.750000 33") != 0)
    result |= 1;
  buf[0] = '\0';
  if (sprintf (buf, "%Le %d", 1.75L, 33, 44, 55) < 0
      || strcmp (buf, "1.750000e+00 33") != 0)
    result |= 2;
  buf[0] = '\0';
  if (sprintf (buf, "%Lg %d", 1.75L, 33, 44, 55) < 0
      || strcmp (buf, "1.75 33") != 0)
    result |= 4;
  return result;
}]])],
        [gl_cv_func_printf_long_double=yes],
        [gl_cv_func_printf_long_double=no],
        [case "$host_os" in
                            # Guess no on BeOS.
           beos*)           gl_cv_func_printf_long_double="guessing no";;
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_printf_long_double="guessing yes";;
                            # Guess yes on MSVC, no on mingw.
           mingw*)          AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                              ],
                              [gl_cv_func_printf_long_double="guessing yes"],
                              [gl_cv_func_printf_long_double="guessing no"])
                            ;;
           *)               gl_cv_func_printf_long_double="guessing yes";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:164: -1- AC_DEFUN([gl_PRINTF_INFINITE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports infinite 'double' arguments],
    [gl_cv_func_printf_infinite],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static int
strisnan (const char *string, size_t start_index, size_t end_index)
{
  if (start_index < end_index)
    {
      if (string[start_index] == '-')
        start_index++;
      if (start_index + 3 <= end_index
          && memcmp (string + start_index, "nan", 3) == 0)
        {
          start_index += 3;
          if (start_index == end_index
              || (string[start_index] == '(' && string[end_index - 1] == ')'))
            return 1;
        }
    }
  return 0;
}
static int
have_minus_zero ()
{
  static double plus_zero = 0.0;
  double minus_zero = - plus_zero;
  return memcmp (&plus_zero, &minus_zero, sizeof (double)) != 0;
}
static char buf[10000];
static double zero = 0.0;
int main ()
{
  int result = 0;
  if (sprintf (buf, "%f", 1.0 / zero) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%f", -1.0 / zero) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%f", zero / zero) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 2;
  if (sprintf (buf, "%e", 1.0 / zero) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 4;
  if (sprintf (buf, "%e", -1.0 / zero) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 4;
  if (sprintf (buf, "%e", zero / zero) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 8;
  if (sprintf (buf, "%g", 1.0 / zero) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 16;
  if (sprintf (buf, "%g", -1.0 / zero) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 16;
  if (sprintf (buf, "%g", zero / zero) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 32;
  /* This test fails on HP-UX 10.20.  */
  if (have_minus_zero ())
    if (sprintf (buf, "%g", - zero) < 0
        || strcmp (buf, "-0") != 0)
    result |= 64;
  return result;
}]])],
        [gl_cv_func_printf_infinite=yes],
        [gl_cv_func_printf_infinite=no],
        [
         case "$host_os" in
changequote(,)dnl
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on FreeBSD >= 6.
           freebsd[1-5].*)       gl_cv_func_printf_infinite="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_printf_infinite="guessing yes";;
           midnightbsd*)         gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_printf_infinite="guessing no";;
           darwin*)              gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on HP-UX >= 11.
           hpux[7-9]* | hpux10*) gl_cv_func_printf_infinite="guessing no";;
           hpux*)                gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_printf_infinite="guessing no";;
           netbsd*)              gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on OpenBSD >= 6.0.
           openbsd[1-5].*)       gl_cv_func_printf_infinite="guessing no";;
           openbsd*)             gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_printf_infinite="guessing yes";;
                                 # Guess no on Android.
           linux*-android*)      gl_cv_func_printf_infinite="guessing no";;
changequote([,])dnl
                                 # Guess yes on MSVC, no on mingw.
           mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                   ],
                                   [gl_cv_func_printf_infinite="guessing yes"],
                                   [gl_cv_func_printf_infinite="guessing no"])
                                 ;;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_printf_infinite="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:290: -1- AC_DEFUN([gl_PRINTF_INFINITE_LONG_DOUBLE], [
  AC_REQUIRE([gl_PRINTF_LONG_DOUBLE])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_BIGENDIAN])
  AC_REQUIRE([gl_LONG_DOUBLE_VS_DOUBLE])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl The user can set or unset the variable gl_printf_safe to indicate
  dnl that he wishes a safe handling of non-IEEE-754 'long double' values.
  if test -n "$gl_printf_safe"; then
    AC_DEFINE([CHECK_PRINTF_SAFE], [1],
      [Define if you wish *printf() functions that have a safe handling of
       non-IEEE-754 'long double' values.])
  fi
  case "$gl_cv_func_printf_long_double" in
    *yes)
      AC_CACHE_CHECK([whether printf supports infinite 'long double' arguments],
        [gl_cv_func_printf_infinite_long_double],
        [
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
]GL_NOCRASH[
#include <float.h>
#include <stdio.h>
#include <string.h>
static int
strisnan (const char *string, size_t start_index, size_t end_index)
{
  if (start_index < end_index)
    {
      if (string[start_index] == '-')
        start_index++;
      if (start_index + 3 <= end_index
          && memcmp (string + start_index, "nan", 3) == 0)
        {
          start_index += 3;
          if (start_index == end_index
              || (string[start_index] == '(' && string[end_index - 1] == ')'))
            return 1;
        }
    }
  return 0;
}
static char buf[10000];
static long double zeroL = 0.0L;
int main ()
{
  int result = 0;
  nocrash_init();
  if (sprintf (buf, "%Lf", 1.0L / zeroL) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Lf", -1.0L / zeroL) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Lf", zeroL / zeroL) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 1;
  if (sprintf (buf, "%Le", 1.0L / zeroL) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Le", -1.0L / zeroL) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Le", zeroL / zeroL) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 1;
  if (sprintf (buf, "%Lg", 1.0L / zeroL) < 0
      || (strcmp (buf, "inf") != 0 && strcmp (buf, "infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Lg", -1.0L / zeroL) < 0
      || (strcmp (buf, "-inf") != 0 && strcmp (buf, "-infinity") != 0))
    result |= 1;
  if (sprintf (buf, "%Lg", zeroL / zeroL) < 0
      || !strisnan (buf, 0, strlen (buf)))
    result |= 1;
#if CHECK_PRINTF_SAFE && ((defined __ia64 && LDBL_MANT_DIG == 64) || (defined __x86_64__ || defined __amd64__) || (defined __i386 || defined __i386__ || defined _I386 || defined _M_IX86 || defined _X86_)) && !HAVE_SAME_LONG_DOUBLE_AS_DOUBLE
/* Representation of an 80-bit 'long double' as an initializer for a sequence
   of 'unsigned int' words.  */
# ifdef WORDS_BIGENDIAN
#  define LDBL80_WORDS(exponent,manthi,mantlo) \
     { ((unsigned int) (exponent) << 16) | ((unsigned int) (manthi) >> 16), \
       ((unsigned int) (manthi) << 16) | ((unsigned int) (mantlo) >> 16),   \
       (unsigned int) (mantlo) << 16                                        \
     }
# else
#  define LDBL80_WORDS(exponent,manthi,mantlo) \
     { mantlo, manthi, exponent }
# endif
  { /* Quiet NaN.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0xFFFF, 0xC3333333, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
    if (sprintf (buf, "%Le", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
    if (sprintf (buf, "%Lg", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
  }
  {
    /* Signalling NaN.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0xFFFF, 0x83333333, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
    if (sprintf (buf, "%Le", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
    if (sprintf (buf, "%Lg", x.value) < 0
        || !strisnan (buf, 0, strlen (buf)))
      result |= 2;
  }
  { /* Pseudo-NaN.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0xFFFF, 0x40000001, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 4;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 4;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 4;
  }
  { /* Pseudo-Infinity.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0xFFFF, 0x00000000, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 8;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 8;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 8;
  }
  { /* Pseudo-Zero.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0x4004, 0x00000000, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 16;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 16;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 16;
  }
  { /* Unnormalized number.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0x4000, 0x63333333, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 32;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 32;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 32;
  }
  { /* Pseudo-Denormal.  */
    static union { unsigned int word[4]; long double value; } x =
      { LDBL80_WORDS (0x0000, 0x83333333, 0x00000000) };
    if (sprintf (buf, "%Lf", x.value) <= 0)
      result |= 64;
    if (sprintf (buf, "%Le", x.value) <= 0)
      result |= 64;
    if (sprintf (buf, "%Lg", x.value) <= 0)
      result |= 64;
  }
#endif
  return result;
}]])],
            [gl_cv_func_printf_infinite_long_double=yes],
            [gl_cv_func_printf_infinite_long_double=no],
            [case "$host_cpu" in
                                     # Guess no on ia64, x86_64, i386.
               ia64 | x86_64 | i*86) gl_cv_func_printf_infinite_long_double="guessing no";;
               *)
                 case "$host_os" in
changequote(,)dnl
                                         # Guess yes on glibc systems.
                   *-gnu* | gnu*)        gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess yes on musl systems.
                   *-musl*)              gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess yes on FreeBSD >= 6.
                   freebsd[1-5].*)       gl_cv_func_printf_infinite_long_double="guessing no";;
                   freebsd* | kfreebsd*) gl_cv_func_printf_infinite_long_double="guessing yes";;
                   midnightbsd*)         gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess yes on HP-UX >= 11.
                   hpux[7-9]* | hpux10*) gl_cv_func_printf_infinite_long_double="guessing no";;
                   hpux*)                gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess yes on OpenBSD >= 6.0.
                   openbsd[1-5].*)       gl_cv_func_printf_infinite_long_double="guessing no";;
                   openbsd*)             gl_cv_func_printf_infinite_long_double="guessing yes";;
                                         # Guess no on Android.
                   linux*-android*)      gl_cv_func_printf_infinite_long_double="guessing no";;
changequote([,])dnl
                                         # Guess yes on MSVC, no on mingw.
                   mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                           ],
                                           [gl_cv_func_printf_infinite_long_double="guessing yes"],
                                           [gl_cv_func_printf_infinite_long_double="guessing no"])
                                         ;;
                                         # If we don't know, obey --enable-cross-guesses.
                   *)                    gl_cv_func_printf_infinite_long_double="$gl_cross_guess_normal";;
                 esac
                 ;;
             esac
            ])
        ])
      ;;
    *)
      gl_cv_func_printf_infinite_long_double="irrelevant"
      ;;
  esac
])
m4trace:m4/printf.m4:512: -1- AC_DEFUN([gl_PRINTF_DIRECTIVE_A], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the 'a' and 'A' directives],
    [gl_cv_func_printf_directive_a],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
static double zero = 0.0;
int main ()
{
  int result = 0;
  if (sprintf (buf, "%a %d", 3.1416015625, 33, 44, 55) < 0
      || (strcmp (buf, "0x1.922p+1 33") != 0
          && strcmp (buf, "0x3.244p+0 33") != 0
          && strcmp (buf, "0x6.488p-1 33") != 0
          && strcmp (buf, "0xc.91p-2 33") != 0))
    result |= 1;
  if (sprintf (buf, "%A %d", -3.1416015625, 33, 44, 55) < 0
      || (strcmp (buf, "-0X1.922P+1 33") != 0
          && strcmp (buf, "-0X3.244P+0 33") != 0
          && strcmp (buf, "-0X6.488P-1 33") != 0
          && strcmp (buf, "-0XC.91P-2 33") != 0))
    result |= 2;
  /* This catches a FreeBSD 13.0 bug: it doesn't round.  */
  if (sprintf (buf, "%.2a %d", 1.51, 33, 44, 55) < 0
      || (strcmp (buf, "0x1.83p+0 33") != 0
          && strcmp (buf, "0x3.05p-1 33") != 0
          && strcmp (buf, "0x6.0ap-2 33") != 0
          && strcmp (buf, "0xc.14p-3 33") != 0))
    result |= 4;
  /* This catches a Mac OS X 10.12.4 (Darwin 16.5) bug: it doesn't round.  */
  if (sprintf (buf, "%.0a %d", 1.51, 33, 44, 55) < 0
      || (strcmp (buf, "0x2p+0 33") != 0
          && strcmp (buf, "0x3p-1 33") != 0
          && strcmp (buf, "0x6p-2 33") != 0
          && strcmp (buf, "0xcp-3 33") != 0))
    result |= 4;
  /* This catches a FreeBSD 6.1 bug.  See
     <https://lists.gnu.org/r/bug-gnulib/2007-04/msg00107.html> */
  if (sprintf (buf, "%010a %d", 1.0 / zero, 33, 44, 55) < 0
      || buf[0] == '0')
    result |= 8;
  /* This catches a Mac OS X 10.3.9 (Darwin 7.9) bug.  */
  if (sprintf (buf, "%.1a", 1.999) < 0
      || (strcmp (buf, "0x1.0p+1") != 0
          && strcmp (buf, "0x2.0p+0") != 0
          && strcmp (buf, "0x4.0p-1") != 0
          && strcmp (buf, "0x8.0p-2") != 0))
    result |= 16;
  /* This catches the same Mac OS X 10.3.9 (Darwin 7.9) bug and also a
     glibc 2.4 bug <https://sourceware.org/bugzilla/show_bug.cgi?id=2908>.  */
  if (sprintf (buf, "%.1La", 1.999L) < 0
      || (strcmp (buf, "0x1.0p+1") != 0
          && strcmp (buf, "0x2.0p+0") != 0
          && strcmp (buf, "0x4.0p-1") != 0
          && strcmp (buf, "0x8.0p-2") != 0))
    result |= 32;
  return result;
}]])],
        [gl_cv_func_printf_directive_a=yes],
        [gl_cv_func_printf_directive_a=no],
        [
         case "$host_os" in
                                 # Guess yes on glibc >= 2.5 systems.
           *-gnu* | gnu*)
             AC_EGREP_CPP([BZ2908], [
               #include <features.h>
               #ifdef __GNU_LIBRARY__
                #if ((__GLIBC__ == 2 && __GLIBC_MINOR__ >= 5) || (__GLIBC__ > 2)) && !defined __UCLIBC__
                 BZ2908
                #endif
               #endif
               ],
               [gl_cv_func_printf_directive_a="guessing yes"],
               [gl_cv_func_printf_directive_a="guessing no"])
             ;;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_printf_directive_a="guessing yes";;
                                 # Guess no on Android.
           linux*-android*)      gl_cv_func_printf_directive_a="guessing no";;
                                 # Guess no on native Windows.
           mingw*)               gl_cv_func_printf_directive_a="guessing no";;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_printf_directive_a="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:610: -1- AC_DEFUN([gl_PRINTF_DIRECTIVE_F], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the 'F' directive],
    [gl_cv_func_printf_directive_f],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
static double zero = 0.0;
int main ()
{
  int result = 0;
  if (sprintf (buf, "%F %d", 1234567.0, 33, 44, 55) < 0
      || strcmp (buf, "1234567.000000 33") != 0)
    result |= 1;
  if (sprintf (buf, "%F", 1.0 / zero) < 0
      || (strcmp (buf, "INF") != 0 && strcmp (buf, "INFINITY") != 0))
    result |= 2;
  /* This catches a Cygwin 1.5.x bug.  */
  if (sprintf (buf, "%.F", 1234.0) < 0
      || strcmp (buf, "1234") != 0)
    result |= 4;
  return result;
}]])],
        [gl_cv_func_printf_directive_f=yes],
        [gl_cv_func_printf_directive_f=no],
        [
         case "$host_os" in
changequote(,)dnl
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on FreeBSD >= 6.
           freebsd[1-5].*)       gl_cv_func_printf_directive_f="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_printf_directive_f="guessing yes";;
           midnightbsd*)         gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_printf_directive_f="guessing no";;
           darwin*)              gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on OpenBSD >= 6.0.
           openbsd[1-5].*)       gl_cv_func_printf_directive_f="guessing no";;
           openbsd*)             gl_cv_func_printf_directive_f="guessing yes";;
                                 # Guess yes on Solaris >= 2.10.
           solaris2.[1-9][0-9]*) gl_cv_func_printf_directive_f="guessing yes";;
           solaris*)             gl_cv_func_printf_directive_f="guessing no";;
                                 # Guess no on Android.
           linux*-android*)      gl_cv_func_printf_directive_f="guessing no";;
changequote([,])dnl
                                 # Guess yes on MSVC, no on mingw.
           mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                   ],
                                   [gl_cv_func_printf_directive_f="guessing yes"],
                                   [gl_cv_func_printf_directive_f="guessing no"])
                                 ;;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_printf_directive_f="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:683: -1- AC_DEFUN([gl_PRINTF_DIRECTIVE_N], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the 'n' directive],
    [gl_cv_func_printf_directive_n],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#ifdef _MSC_VER
#include <inttypes.h>
/* See page about "Parameter Validation" on msdn.microsoft.com.
   <https://docs.microsoft.com/en-us/cpp/c-runtime-library/parameter-validation>
   <https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/set-invalid-parameter-handler-set-thread-local-invalid-parameter-handler>  */
static void cdecl
invalid_parameter_handler (const wchar_t *expression,
                           const wchar_t *function,
                           const wchar_t *file, unsigned int line,
                           uintptr_t dummy)
{
  exit (1);
}
#endif
static char fmtstring[10];
static char buf[100];
int main ()
{
  int count = -1;
#ifdef _MSC_VER
  _set_invalid_parameter_handler (invalid_parameter_handler);
#endif
  /* Copy the format string.  Some systems (glibc with _FORTIFY_SOURCE=2)
     support %n in format strings in read-only memory but not in writable
     memory.  */
  strcpy (fmtstring, "%d %n");
  if (sprintf (buf, fmtstring, 123, &count, 33, 44, 55) < 0
      || strcmp (buf, "123 ") != 0
      || count != 4)
    return 1;
  return 0;
}]])],
        [gl_cv_func_printf_directive_n=yes],
        [gl_cv_func_printf_directive_n=no],
        [case "$host_os" in
                            # Guess no on glibc when _FORTIFY_SOURCE >= 2.
           *-gnu* | gnu*)   AC_COMPILE_IFELSE(
                              [AC_LANG_SOURCE(
                                 [[#if _FORTIFY_SOURCE >= 2
                                    error fail
                                   #endif
                                 ]])],
                              [gl_cv_func_printf_directive_n="guessing yes"],
                              [gl_cv_func_printf_directive_n="guessing no"])
                            ;;
                            # Guess no on Android.
           linux*-android*) gl_cv_func_printf_directive_n="guessing no";;
                            # Guess no on native Windows.
           mingw*)          gl_cv_func_printf_directive_n="guessing no";;
           *)               gl_cv_func_printf_directive_n="guessing yes";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:757: -1- AC_DEFUN([gl_PRINTF_DIRECTIVE_LS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the 'ls' directive],
    [gl_cv_func_printf_directive_ls],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <wchar.h>
#include <string.h>
int main ()
{
  int result = 0;
  char buf[100];
  /* Test whether %ls works at all.
     This test fails on OpenBSD 4.0, IRIX 6.5, Solaris 2.6, Haiku, but not on
     Cygwin 1.5.  */
  {
    static const wchar_t wstring[] = { 'a', 'b', 'c', 0 };
    buf[0] = '\0';
    if (sprintf (buf, "%ls", wstring) < 0
        || strcmp (buf, "abc") != 0)
      result |= 1;
  }
  /* This test fails on IRIX 6.5, Solaris 2.6, Cygwin 1.5, Haiku (with an
     assertion failure inside libc), but not on OpenBSD 4.0.  */
  {
    static const wchar_t wstring[] = { 'a', 0 };
    buf[0] = '\0';
    if (sprintf (buf, "%ls", wstring) < 0
        || strcmp (buf, "a") != 0)
      result |= 2;
  }
  /* Test whether precisions in %ls are supported as specified in ISO C 99
     section 7.19.6.1:
       "If a precision is specified, no more than that many bytes are written
        (including shift sequences, if any), and the array shall contain a
        null wide character if, to equal the multibyte character sequence
        length given by the precision, the function would need to access a
        wide character one past the end of the array."
     This test fails on Solaris 10.  */
  {
    static const wchar_t wstring[] = { 'a', 'b', (wchar_t) 0xfdfdfdfd, 0 };
    buf[0] = '\0';
    if (sprintf (buf, "%.2ls", wstring) < 0
        || strcmp (buf, "ab") != 0)
      result |= 8;
  }
  return result;
}]])],
        [gl_cv_func_printf_directive_ls=yes],
        [gl_cv_func_printf_directive_ls=no],
        [
changequote(,)dnl
         case "$host_os" in
                            # Guess yes on OpenBSD >= 6.0.
           openbsd[1-5].*)  gl_cv_func_printf_directive_ls="guessing no";;
           openbsd*)        gl_cv_func_printf_directive_ls="guessing yes";;
           irix*)           gl_cv_func_printf_directive_ls="guessing no";;
           solaris*)        gl_cv_func_printf_directive_ls="guessing no";;
           cygwin*)         gl_cv_func_printf_directive_ls="guessing no";;
           beos* | haiku*)  gl_cv_func_printf_directive_ls="guessing no";;
                            # Guess no on Android.
           linux*-android*) gl_cv_func_printf_directive_ls="guessing no";;
                            # Guess yes on native Windows.
           mingw*)          gl_cv_func_printf_directive_ls="guessing yes";;
           *)               gl_cv_func_printf_directive_ls="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:836: -1- AC_DEFUN([gl_PRINTF_POSITIONS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports POSIX/XSI format strings with positions],
    [gl_cv_func_printf_positions],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
/* The string "%2$d %1$d", with dollar characters protected from the shell's
   dollar expansion (possibly an autoconf bug).  */
static char format[] = { '%', '2', '$', 'd', ' ', '%', '1', '$', 'd', '\0' };
static char buf[100];
int main ()
{
  sprintf (buf, format, 33, 55);
  return (strcmp (buf, "55 33") != 0);
}]])],
        [gl_cv_func_printf_positions=yes],
        [gl_cv_func_printf_positions=no],
        [
changequote(,)dnl
         case "$host_os" in
           netbsd[1-3]* | netbsdelf[1-3]* | netbsdaout[1-3]* | netbsdcoff[1-3]*)
                            gl_cv_func_printf_positions="guessing no";;
           beos*)           gl_cv_func_printf_positions="guessing no";;
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_printf_positions="guessing yes";;
                            # Guess no on native Windows.
           mingw* | pw*)    gl_cv_func_printf_positions="guessing no";;
           *)               gl_cv_func_printf_positions="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:879: -1- AC_DEFUN([gl_PRINTF_FLAG_GROUPING], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the grouping flag],
    [gl_cv_func_printf_flag_grouping],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
int main ()
{
  if (sprintf (buf, "%'d %d", 1234567, 99) < 0
      || buf[strlen (buf) - 1] != '9')
    return 1;
  return 0;
}]])],
        [gl_cv_func_printf_flag_grouping=yes],
        [gl_cv_func_printf_flag_grouping=no],
        [
changequote(,)dnl
         case "$host_os" in
           cygwin*)         gl_cv_func_printf_flag_grouping="guessing no";;
           netbsd*)         gl_cv_func_printf_flag_grouping="guessing no";;
                            # Guess no on Android.
           linux*-android*) gl_cv_func_printf_flag_grouping="guessing no";;
                            # Guess no on native Windows.
           mingw* | pw*)    gl_cv_func_printf_flag_grouping="guessing no";;
           *)               gl_cv_func_printf_flag_grouping="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:921: -1- AC_DEFUN([gl_PRINTF_FLAG_LEFTADJUST], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the left-adjust flag correctly],
    [gl_cv_func_printf_flag_leftadjust],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
int main ()
{
  /* Check that a '-' flag is not annihilated by a negative width.  */
  if (sprintf (buf, "a%-*sc", -3, "b") < 0
      || strcmp (buf, "ab  c") != 0)
    return 1;
  return 0;
}]])],
        [gl_cv_func_printf_flag_leftadjust=yes],
        [gl_cv_func_printf_flag_leftadjust=no],
        [
changequote(,)dnl
         case "$host_os" in
                            # Guess yes on HP-UX 11.
           hpux11*)         gl_cv_func_printf_flag_leftadjust="guessing yes";;
                            # Guess no on HP-UX 10 and older.
           hpux*)           gl_cv_func_printf_flag_leftadjust="guessing no";;
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_printf_flag_leftadjust="guessing yes";;
                            # Guess yes on native Windows.
           mingw*)          gl_cv_func_printf_flag_leftadjust="guessing yes";;
                            # Guess yes otherwise.
           *)               gl_cv_func_printf_flag_leftadjust="guessing yes";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:967: -1- AC_DEFUN([gl_PRINTF_FLAG_ZERO], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports the zero flag correctly],
    [gl_cv_func_printf_flag_zero],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[100];
static double zero = 0.0;
int main ()
{
  if (sprintf (buf, "%010f", 1.0 / zero, 33, 44, 55) < 0
      || (strcmp (buf, "       inf") != 0
          && strcmp (buf, "  infinity") != 0))
    return 1;
  return 0;
}]])],
        [gl_cv_func_printf_flag_zero=yes],
        [gl_cv_func_printf_flag_zero=no],
        [
changequote(,)dnl
         case "$host_os" in
                            # Guess yes on glibc systems.
           *-gnu* | gnu*)   gl_cv_func_printf_flag_zero="guessing yes";;
                            # Guess yes on musl systems.
           *-musl*)         gl_cv_func_printf_flag_zero="guessing yes";;
                            # Guess yes on BeOS.
           beos*)           gl_cv_func_printf_flag_zero="guessing yes";;
                            # Guess no on Android.
           linux*-android*) gl_cv_func_printf_flag_zero="guessing no";;
                            # Guess no on native Windows.
           mingw*)          gl_cv_func_printf_flag_zero="guessing no";;
                            # If we don't know, obey --enable-cross-guesses.
           *)               gl_cv_func_printf_flag_zero="$gl_cross_guess_normal";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:1020: -1- AC_DEFUN([gl_PRINTF_PRECISION], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf supports large precisions],
    [gl_cv_func_printf_precision],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
static char buf[5000];
int main ()
{
  int result = 0;
#ifdef __BEOS__
  /* On BeOS, this would crash and show a dialog box.  Avoid the crash.  */
  return 1;
#endif
  if (sprintf (buf, "%.4000d %d", 1, 33, 44) < 4000 + 3)
    result |= 1;
  if (sprintf (buf, "%.4000f %d", 1.0, 33, 44) < 4000 + 5)
    result |= 2;
  if (sprintf (buf, "%.511f %d", 1.0, 33, 44) < 511 + 5
      || buf[0] != '1')
    result |= 4;
  if (sprintf (buf, "%.999f %d", 1.0, 33, 44) < 999 + 5
      || buf[0] != '1')
    result |= 4;
  return result;
}]])],
        [gl_cv_func_printf_precision=yes],
        [gl_cv_func_printf_precision=no],
        [
changequote(,)dnl
         case "$host_os" in
           # Guess no only on Solaris, native Windows, and BeOS systems.
           solaris*)        gl_cv_func_printf_precision="guessing no" ;;
           mingw* | pw*)    gl_cv_func_printf_precision="guessing no" ;;
           beos*)           gl_cv_func_printf_precision="guessing no" ;;
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_printf_precision="guessing yes" ;;
           *)               gl_cv_func_printf_precision="guessing yes" ;;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:1073: -1- AC_DEFUN([gl_PRINTF_ENOMEM], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([gl_MULTIARCH])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether printf survives out-of-memory conditions],
    [gl_cv_func_printf_enomem],
    [
      gl_cv_func_printf_enomem="guessing no"
      if test "$cross_compiling" = no; then
        if test $APPLE_UNIVERSAL_BUILD = 0; then
          AC_LANG_CONFTEST([AC_LANG_SOURCE([[
]GL_NOCRASH[
#include <stdio.h>
#include <sys/types.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <errno.h>
int main()
{
  struct rlimit limit;
  int ret;
  nocrash_init ();
  /* Some printf implementations allocate temporary space with malloc.  */
  /* On BSD systems, malloc() is limited by RLIMIT_DATA.  */
#ifdef RLIMIT_DATA
  if (getrlimit (RLIMIT_DATA, &limit) < 0)
    return 77;
  if (limit.rlim_max == RLIM_INFINITY || limit.rlim_max > 5000000)
    limit.rlim_max = 5000000;
  limit.rlim_cur = limit.rlim_max;
  if (setrlimit (RLIMIT_DATA, &limit) < 0)
    return 77;
#endif
  /* On Linux systems, malloc() is limited by RLIMIT_AS.  */
#ifdef RLIMIT_AS
  if (getrlimit (RLIMIT_AS, &limit) < 0)
    return 77;
  if (limit.rlim_max == RLIM_INFINITY || limit.rlim_max > 5000000)
    limit.rlim_max = 5000000;
  limit.rlim_cur = limit.rlim_max;
  if (setrlimit (RLIMIT_AS, &limit) < 0)
    return 77;
#endif
  /* Some printf implementations allocate temporary space on the stack.  */
#ifdef RLIMIT_STACK
  if (getrlimit (RLIMIT_STACK, &limit) < 0)
    return 77;
  if (limit.rlim_max == RLIM_INFINITY || limit.rlim_max > 5000000)
    limit.rlim_max = 5000000;
  limit.rlim_cur = limit.rlim_max;
  if (setrlimit (RLIMIT_STACK, &limit) < 0)
    return 77;
#endif
  ret = printf ("%.5000000f", 1.0);
  return !(ret == 5000002 || (ret < 0 && errno == ENOMEM));
}
          ]])])
          if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
            (./conftest 2>&AS_MESSAGE_LOG_FD
             result=$?
             _AS_ECHO_LOG([\$? = $result])
             if test $result != 0 && test $result != 77; then result=1; fi
             exit $result
            ) >/dev/null 2>/dev/null
            case $? in
              0) gl_cv_func_printf_enomem="yes" ;;
              77) gl_cv_func_printf_enomem="guessing no" ;;
              *) gl_cv_func_printf_enomem="no" ;;
            esac
          else
            gl_cv_func_printf_enomem="guessing no"
          fi
          rm -fr conftest*
        else
          dnl A universal build on Apple Mac OS X platforms.
          dnl The result would be 'no' in 32-bit mode and 'yes' in 64-bit mode.
          dnl But we need a configuration result that is valid in both modes.
          gl_cv_func_printf_enomem="guessing no"
        fi
      fi
      if test "$gl_cv_func_printf_enomem" = "guessing no"; then
changequote(,)dnl
        case "$host_os" in
                           # Guess yes on glibc systems.
          *-gnu* | gnu*)   gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on Solaris.
          solaris*)        gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on AIX.
          aix*)            gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on HP-UX/hppa.
          hpux*)           case "$host_cpu" in
                             hppa*) gl_cv_func_printf_enomem="guessing yes";;
                             *)     gl_cv_func_printf_enomem="guessing no";;
                           esac
                           ;;
                           # Guess yes on IRIX.
          irix*)           gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on OSF/1.
          osf*)            gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on BeOS.
          beos*)           gl_cv_func_printf_enomem="guessing yes";;
                           # Guess yes on Haiku.
          haiku*)          gl_cv_func_printf_enomem="guessing yes";;
                           # Guess no on Android.
          linux*-android*) gl_cv_func_printf_enomem="guessing no";;
                           # If we don't know, obey --enable-cross-guesses.
          *)               gl_cv_func_printf_enomem="$gl_cross_guess_normal";;
        esac
changequote([,])dnl
      fi
    ])
])
m4trace:m4/printf.m4:1190: -1- AC_DEFUN([gl_SNPRINTF_PRESENCE], [
  AC_CHECK_FUNCS_ONCE([snprintf])
])
m4trace:m4/printf.m4:1199: -1- AC_DEFUN_ONCE([gl_SNPRINTF_TRUNCATION_C99], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SNPRINTF_PRESENCE])
  AC_CACHE_CHECK([whether snprintf truncates the result as in C99],
    [gl_cv_func_snprintf_truncation_c99],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
#if HAVE_SNPRINTF
# define my_snprintf snprintf
#else
# include <stdarg.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
#endif
static char buf[100];
int main ()
{
  strcpy (buf, "ABCDEF");
  my_snprintf (buf, 3, "%d %d", 4567, 89);
  if (memcmp (buf, "45\0DEF", 6) != 0)
    return 1;
  return 0;
}]])],
        [gl_cv_func_snprintf_truncation_c99=yes],
        [gl_cv_func_snprintf_truncation_c99=no],
        [
changequote(,)dnl
         case "$host_os" in
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_snprintf_truncation_c99="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_snprintf_truncation_c99="guessing yes";;
           midnightbsd*)         gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_snprintf_truncation_c99="guessing no";;
           darwin*)              gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on OpenBSD >= 3.9.
           openbsd[1-2].* | openbsd3.[0-8] | openbsd3.[0-8].*)
                                 gl_cv_func_snprintf_truncation_c99="guessing no";;
           openbsd*)             gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on Solaris >= 2.6.
           solaris2.[0-5] | solaris2.[0-5].*)
                                 gl_cv_func_snprintf_truncation_c99="guessing no";;
           solaris*)             gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on AIX >= 4.
           aix[1-3]*)            gl_cv_func_snprintf_truncation_c99="guessing no";;
           aix*)                 gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on HP-UX >= 11.
           hpux[7-9]* | hpux10*) gl_cv_func_snprintf_truncation_c99="guessing no";;
           hpux*)                gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on IRIX >= 6.5.
           irix6.5)              gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on OSF/1 >= 5.
           osf[3-4]*)            gl_cv_func_snprintf_truncation_c99="guessing no";;
           osf*)                 gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_snprintf_truncation_c99="guessing no";;
           netbsd*)              gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess yes on Android.
           linux*-android*)      gl_cv_func_snprintf_truncation_c99="guessing yes";;
                                 # Guess no on native Windows.
           mingw*)               gl_cv_func_snprintf_truncation_c99="guessing no";;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_snprintf_truncation_c99="$gl_cross_guess_normal";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/printf.m4:1302: -1- AC_DEFUN_ONCE([gl_SNPRINTF_RETVAL_C99], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SNPRINTF_PRESENCE])
  AC_CACHE_CHECK([whether snprintf returns a byte count as in C99],
    [gl_cv_func_snprintf_retval_c99],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
#if HAVE_SNPRINTF
# define my_snprintf snprintf
#else
# include <stdarg.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
#endif
static char buf[100];
int main ()
{
  strcpy (buf, "ABCDEF");
  if (my_snprintf (buf, 3, "%d %d", 4567, 89) != 7)
    return 1;
  if (my_snprintf (buf, 0, "%d %d", 4567, 89) != 7)
    return 2;
  if (my_snprintf (NULL, 0, "%d %d", 4567, 89) != 7)
    return 3;
  return 0;
}]])],
        [gl_cv_func_snprintf_retval_c99=yes],
        [gl_cv_func_snprintf_retval_c99=no],
        [case "$host_os" in
changequote(,)dnl
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_snprintf_retval_c99="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_snprintf_retval_c99="guessing yes";;
           midnightbsd*)         gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_snprintf_retval_c99="guessing no";;
           darwin*)              gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on OpenBSD >= 3.9.
           openbsd[1-2].* | openbsd3.[0-8] | openbsd3.[0-8].*)
                                 gl_cv_func_snprintf_retval_c99="guessing no";;
           openbsd*)             gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on Solaris >= 2.10.
           solaris2.[1-9][0-9]*) gl_cv_func_printf_sizes_c99="guessing yes";;
           solaris*)             gl_cv_func_printf_sizes_c99="guessing no";;
                                 # Guess yes on AIX >= 4.
           aix[1-3]*)            gl_cv_func_snprintf_retval_c99="guessing no";;
           aix*)                 gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_snprintf_retval_c99="guessing no";;
           netbsd*)              gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_snprintf_retval_c99="guessing yes";;
                                 # Guess yes on Android.
           linux*-android*)      gl_cv_func_snprintf_retval_c99="guessing yes";;
changequote([,])dnl
                                 # Guess yes on MSVC, no on mingw.
           mingw*)               AC_EGREP_CPP([Known], [
#ifdef _MSC_VER
 Known
#endif
                                   ],
                                   [gl_cv_func_snprintf_retval_c99="guessing yes"],
                                   [gl_cv_func_snprintf_retval_c99="guessing no"])
                                 ;;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_snprintf_retval_c99="$gl_cross_guess_normal";;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:1394: -1- AC_DEFUN([gl_SNPRINTF_DIRECTIVE_N], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SNPRINTF_PRESENCE])
  AC_CACHE_CHECK([whether snprintf fully supports the 'n' directive],
    [gl_cv_func_snprintf_directive_n],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#include <string.h>
#if HAVE_SNPRINTF
# define my_snprintf snprintf
#else
# include <stdarg.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
#endif
static char fmtstring[10];
static char buf[100];
int main ()
{
  int count = -1;
  /* Copy the format string.  Some systems (glibc with _FORTIFY_SOURCE=2)
     support %n in format strings in read-only memory but not in writable
     memory.  */
  strcpy (fmtstring, "%d %n");
  my_snprintf (buf, 4, fmtstring, 12345, &count, 33, 44, 55);
  if (count != 6)
    return 1;
  return 0;
}]])],
        [gl_cv_func_snprintf_directive_n=yes],
        [gl_cv_func_snprintf_directive_n=no],
        [
         case "$host_os" in
                                 # Guess no on glibc when _FORTIFY_SOURCE >= 2.
           *-gnu* | gnu*)        AC_COMPILE_IFELSE(
                                   [AC_LANG_SOURCE(
                                      [[#if _FORTIFY_SOURCE >= 2
                                         error fail
                                        #endif
                                      ]])],
                                   [gl_cv_func_snprintf_directive_n="guessing yes"],
                                   [gl_cv_func_snprintf_directive_n="guessing no"])
                                 ;;
changequote(,)dnl
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_snprintf_directive_n="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_snprintf_directive_n="guessing yes";;
           midnightbsd*)         gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_snprintf_directive_n="guessing no";;
           darwin*)              gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on Solaris >= 2.6.
           solaris2.[0-5] | solaris2.[0-5].*)
                                 gl_cv_func_snprintf_directive_n="guessing no";;
           solaris*)             gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on AIX >= 4.
           aix[1-3]*)            gl_cv_func_snprintf_directive_n="guessing no";;
           aix*)                 gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on IRIX >= 6.5.
           irix6.5)              gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on OSF/1 >= 5.
           osf[3-4]*)            gl_cv_func_snprintf_directive_n="guessing no";;
           osf*)                 gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_snprintf_directive_n="guessing no";;
           netbsd*)              gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_snprintf_directive_n="guessing yes";;
                                 # Guess no on Android.
           linux*-android*)      gl_cv_func_snprintf_directive_n="guessing no";;
                                 # Guess no on native Windows.
           mingw*)               gl_cv_func_snprintf_directive_n="guessing no";;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_snprintf_directive_n="$gl_cross_guess_normal";;
changequote([,])dnl
         esac
        ])
    ])
])
m4trace:m4/printf.m4:1493: -1- AC_DEFUN([gl_SNPRINTF_SIZE1], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SNPRINTF_PRESENCE])
  AC_CACHE_CHECK([whether snprintf respects a size of 1],
    [gl_cv_func_snprintf_size1],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdio.h>
#if HAVE_SNPRINTF
# define my_snprintf snprintf
#else
# include <stdarg.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
#endif
int main()
{
  static char buf[8] = { 'D', 'E', 'A', 'D', 'B', 'E', 'E', 'F' };
  my_snprintf (buf, 1, "%d", 12345);
  return buf[1] != 'E';
}]])],
        [gl_cv_func_snprintf_size1=yes],
        [gl_cv_func_snprintf_size1=no],
        [case "$host_os" in
                            # Guess yes on Android.
           linux*-android*) gl_cv_func_snprintf_size1="guessing yes" ;;
                            # Guess yes on native Windows.
           mingw*)          gl_cv_func_snprintf_size1="guessing yes" ;;
           *)               gl_cv_func_snprintf_size1="guessing yes" ;;
         esac
        ])
    ])
])
m4trace:m4/printf.m4:1573: -1- AC_DEFUN([gl_VSNPRINTF_ZEROSIZE_C99], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether vsnprintf respects a zero size as in C99],
    [gl_cv_func_vsnprintf_zerosize_c99],
    [
      AC_RUN_IFELSE(
        [AC_LANG_SOURCE([[
#include <stdarg.h>
#include <stdio.h>
static int my_snprintf (char *buf, int size, const char *format, ...)
{
  va_list args;
  int ret;
  va_start (args, format);
  ret = vsnprintf (buf, size, format, args);
  va_end (args);
  return ret;
}
int main()
{
  static char buf[8] = { 'D', 'E', 'A', 'D', 'B', 'E', 'E', 'F' };
  my_snprintf (buf, 0, "%d", 12345);
  return buf[0] != 'D';
}]])],
        [gl_cv_func_vsnprintf_zerosize_c99=yes],
        [gl_cv_func_vsnprintf_zerosize_c99=no],
        [
changequote(,)dnl
         case "$host_os" in
                                 # Guess yes on glibc systems.
           *-gnu* | gnu*)        gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on musl systems.
           *-musl*)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on FreeBSD >= 5.
           freebsd[1-4].*)       gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           freebsd* | kfreebsd*) gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
           midnightbsd*)         gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on Mac OS X >= 10.3.
           darwin[1-6].*)        gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           darwin*)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on Cygwin.
           cygwin*)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on Solaris >= 2.6.
           solaris2.[0-5] | solaris2.[0-5].*)
                                 gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           solaris*)             gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on AIX >= 4.
           aix[1-3]*)            gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           aix*)                 gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on IRIX >= 6.5.
           irix6.5)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on NetBSD >= 3.
           netbsd[1-2]* | netbsdelf[1-2]* | netbsdaout[1-2]* | netbsdcoff[1-2]*)
                                 gl_cv_func_vsnprintf_zerosize_c99="guessing no";;
           netbsd*)              gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on BeOS.
           beos*)                gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on Android.
           linux*-android*)      gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # Guess yes on native Windows.
           mingw* | pw*)         gl_cv_func_vsnprintf_zerosize_c99="guessing yes";;
                                 # If we don't know, obey --enable-cross-guesses.
           *)                    gl_cv_func_vsnprintf_zerosize_c99="$gl_cross_guess_normal";;
         esac
changequote([,])dnl
        ])
    ])
])
m4trace:m4/pthread_rwlock_rdlock.m4:35: -1- AC_DEFUN([gl_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER], [
  AC_REQUIRE([gl_THREADLIB_EARLY])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether pthread_rwlock_rdlock prefers a writer to a reader],
    [gl_cv_pthread_rwlock_rdlock_prefer_writer],
    [save_LIBS="$LIBS"
     LIBS="$LIBS $LIBMULTITHREAD"
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE([[
#include <errno.h>
#include <pthread.h>
#include <stdlib.h>
#include <unistd.h>

#define SUCCEED() exit (0)
#define FAILURE() exit (1)
#define UNEXPECTED(n) (exit (10 + (n)))

/* The main thread creates the waiting writer and the requesting reader threads
   in the default way; this guarantees that they have the same priority.
   We can reuse the main thread as first reader thread.  */

static pthread_rwlock_t lock;
static pthread_t reader1;
static pthread_t writer;
static pthread_t reader2;
static pthread_t timer;
/* Used to pass control from writer to reader2 and from reader2 to timer,
   as in a relay race.
   Passing control from one running thread to another running thread
   is most likely faster than to create the second thread.  */
static pthread_mutex_t baton;

static void *
timer_func (void *ignored)
{
  /* Step 13 (can be before or after step 12):
     The timer thread takes the baton, then waits a moment to make sure
     it can tell whether the second reader thread is blocked at step 12.  */
  if (pthread_mutex_lock (&baton))
    UNEXPECTED (13);
  usleep (100000);
  /* By the time we get here, it's clear that the second reader thread is
     blocked at step 12.  This is the desired behaviour.  */
  SUCCEED ();
}

static void *
reader2_func (void *ignored)
{
  int err;

  /* Step 8 (can be before or after step 7):
     The second reader thread takes the baton, then waits a moment to make sure
     the writer thread has reached step 7.  */
  if (pthread_mutex_lock (&baton))
    UNEXPECTED (8);
  usleep (100000);
  /* Step 9: The second reader thread requests the lock.  */
  err = pthread_rwlock_tryrdlock (&lock);
  if (err == 0)
    FAILURE ();
  else if (err != EBUSY)
    UNEXPECTED (9);
  /* Step 10: Launch a timer, to test whether the next call blocks.  */
  if (pthread_create (&timer, NULL, timer_func, NULL))
    UNEXPECTED (10);
  /* Step 11: Release the baton.  */
  if (pthread_mutex_unlock (&baton))
    UNEXPECTED (11);
  /* Step 12: The second reader thread requests the lock.  */
  err = pthread_rwlock_rdlock (&lock);
  if (err == 0)
    FAILURE ();
  else
    UNEXPECTED (12);
}

static void *
writer_func (void *ignored)
{
  /* Step 4: Take the baton, so that the second reader thread does not go ahead
     too early.  */
  if (pthread_mutex_lock (&baton))
    UNEXPECTED (4);
  /* Step 5: Create the second reader thread.  */
  if (pthread_create (&reader2, NULL, reader2_func, NULL))
    UNEXPECTED (5);
  /* Step 6: Release the baton.  */
  if (pthread_mutex_unlock (&baton))
    UNEXPECTED (6);
  /* Step 7: The writer thread requests the lock.  */
  if (pthread_rwlock_wrlock (&lock))
    UNEXPECTED (7);
  return NULL;
}

int
main ()
{
  reader1 = pthread_self ();

  /* Step 1: The main thread initializes the lock and the baton.  */
  if (pthread_rwlock_init (&lock, NULL))
    UNEXPECTED (1);
  if (pthread_mutex_init (&baton, NULL))
    UNEXPECTED (1);
  /* Step 2: The main thread acquires the lock as a reader.  */
  if (pthread_rwlock_rdlock (&lock))
    UNEXPECTED (2);
  /* Step 3: Create the writer thread.  */
  if (pthread_create (&writer, NULL, writer_func, NULL))
    UNEXPECTED (3);
  /* Job done.  Go to sleep.  */
  for (;;)
    {
      sleep (1);
    }
}
]])],
       [gl_cv_pthread_rwlock_rdlock_prefer_writer=yes],
       [gl_cv_pthread_rwlock_rdlock_prefer_writer=no],
       [case "$host_os" in
                         # Guess no on glibc systems.
          *-gnu* | gnu*) gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing no" ;;
                         # Guess no on musl systems.
          *-musl*)       gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing no" ;;
                         # Guess no on bionic systems.
          *-android*)    gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing no" ;;
                         # Guess yes on native Windows with the mingw-w64 winpthreads library.
                         # Guess no on native Windows with the gnulib windows-rwlock module.
          mingw*)        if test "$gl_use_threads" = yes || test "$gl_use_threads" = posix; then
                           gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing yes"
                         else
                           gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing no"
                         fi
                         ;;
                         # If we don't know, obey --enable-cross-guesses.
          *)             gl_cv_pthread_rwlock_rdlock_prefer_writer="$gl_cross_guess_normal" ;;
         esac
       ])
     LIBS="$save_LIBS"
    ])
  case "$gl_cv_pthread_rwlock_rdlock_prefer_writer" in
    *yes)
      AC_DEFINE([HAVE_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER], [1],
        [Define if the 'pthread_rwlock_rdlock' function prefers a writer to a reader.])
      ;;
  esac
])
m4trace:m4/putenv.m4:12: -1- AC_DEFUN([gl_FUNC_PUTENV], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([for putenv compatible with GNU and SVID],
    [gl_cv_func_svid_putenv],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [AC_INCLUDES_DEFAULT
           GL_MDA_DEFINES],
          [[
            /* Put it in env.  */
            if (putenv ("CONFTEST_putenv=val"))
              return 1;

            /* Try to remove it.  */
            if (putenv ("CONFTEST_putenv"))
              return 2;

            /* Make sure it was deleted.  */
            if (getenv ("CONFTEST_putenv") != 0)
              return 3;

            return 0;
          ]])],
       [gl_cv_func_svid_putenv=yes],
       [gl_cv_func_svid_putenv=no],
       [dnl When crosscompiling, assume putenv is broken.
        case "$host_os" in
                         # Guess yes on glibc systems.
          *-gnu* | gnu*) gl_cv_func_svid_putenv="guessing yes" ;;
                         # Guess yes on musl systems.
          *-musl*)       gl_cv_func_svid_putenv="guessing yes" ;;
                         # Guess no on native Windows.
          mingw*)        gl_cv_func_svid_putenv="guessing no" ;;
                         # If we don't know, obey --enable-cross-guesses.
          *)             gl_cv_func_svid_putenv="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  case "$gl_cv_func_svid_putenv" in
    *yes) ;;
    *)
      REPLACE_PUTENV=1
      ;;
  esac
])
m4trace:m4/putenv.m4:61: -1- AC_DEFUN([gl_PREREQ_PUTENV], [
  AC_CHECK_DECLS([_putenv])
])
m4trace:m4/raise.m4:7: -1- AC_DEFUN([gl_FUNC_RAISE], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS([raise])
  if test $ac_cv_func_raise = no; then
    HAVE_RAISE=0
  else
    m4_ifdef([gl_MSVC_INVAL], [
      AC_REQUIRE([gl_MSVC_INVAL])
      if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
        REPLACE_RAISE=1
      fi
    ])
    m4_ifdef([gl_SIGNALBLOCKING], [
      gl_SIGNALBLOCKING
      if test $HAVE_POSIX_SIGNALBLOCKING = 0; then
        m4_ifdef([gl_SIGNAL_SIGPIPE], [
          gl_SIGNAL_SIGPIPE
          if test $gl_cv_header_signal_h_SIGPIPE != yes; then
            REPLACE_RAISE=1
          fi
        ], [:])
      fi
    ])
  fi
])
m4trace:m4/raise.m4:36: -1- AC_DEFUN([gl_PREREQ_RAISE], [:])
m4trace:m4/rawmemchr.m4:7: -1- AC_DEFUN([gl_FUNC_RAWMEMCHR], [
  dnl Persuade glibc <string.h> to declare rawmemchr().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_FUNCS([rawmemchr])
  if test $ac_cv_func_rawmemchr = no; then
    HAVE_RAWMEMCHR=0
  fi
])
m4trace:m4/rawmemchr.m4:20: -1- AC_DEFUN([gl_PREREQ_RAWMEMCHR], [:])
m4trace:m4/readdir.m4:7: -1- AC_DEFUN([gl_FUNC_READDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])

  AC_CHECK_FUNCS([readdir])
  if test $ac_cv_func_readdir = no; then
    HAVE_READDIR=0
  fi
])
m4trace:m4/readlink.m4:7: -1- AC_DEFUN([gl_FUNC_READLINK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([readlink])
  if test $ac_cv_func_readlink = no; then
    HAVE_READLINK=0
  else
    AC_CACHE_CHECK([whether readlink signature is correct],
      [gl_cv_decl_readlink_works],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
      /* Cause compilation failure if original declaration has wrong type.  */
      ssize_t readlink (const char *, char *, size_t);]])],
         [gl_cv_decl_readlink_works=yes], [gl_cv_decl_readlink_works=no])])
    dnl Solaris 9 ignores trailing slash.
    dnl FreeBSD 7.2 dereferences only one level of links with trailing slash.
    AC_CACHE_CHECK([whether readlink handles trailing slash correctly],
      [gl_cv_func_readlink_trailing_slash],
      [# We have readlink, so assume ln -s works.
       ln -s conftest.no-such conftest.link
       ln -s conftest.link conftest.lnk2
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
]], [[char buf[20];
      return readlink ("conftest.lnk2/", buf, sizeof buf) != -1;]])],
         [gl_cv_func_readlink_trailing_slash=yes],
         [gl_cv_func_readlink_trailing_slash=no],
         [case "$host_os" in
            # Guess yes on Linux or glibc systems.
            linux-* | linux | *-gnu* | gnu*)
              gl_cv_func_readlink_trailing_slash="guessing yes" ;;
            # Guess no on AIX or HP-UX.
            aix* | hpux*)
              gl_cv_func_readlink_trailing_slash="guessing no" ;;
            # If we don't know, obey --enable-cross-guesses.
            *)
              gl_cv_func_readlink_trailing_slash="$gl_cross_guess_normal" ;;
          esac
         ])
      rm -f conftest.link conftest.lnk2])
    case "$gl_cv_func_readlink_trailing_slash" in
      *yes)
        if test "$gl_cv_decl_readlink_works" != yes; then
          REPLACE_READLINK=1
        fi
        ;;
      *)
        AC_DEFINE([READLINK_TRAILING_SLASH_BUG], [1], [Define to 1 if readlink
          fails to recognize a trailing slash.])
        REPLACE_READLINK=1
        ;;
    esac

    AC_CACHE_CHECK([whether readlink truncates results correctly],
      [gl_cv_func_readlink_truncate],
      [# We have readlink, so assume ln -s works.
       ln -s ab conftest.link
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
]], [[char c;
      return readlink ("conftest.link", &c, 1) != 1;]])],
         [gl_cv_func_readlink_truncate=yes],
         [gl_cv_func_readlink_truncate=no],
         [case "$host_os" in
            # Guess yes on Linux or glibc systems.
            linux-* | linux | *-gnu* | gnu*)
              gl_cv_func_readlink_truncate="guessing yes" ;;
            # Guess no on AIX or HP-UX.
            aix* | hpux*)
              gl_cv_func_readlink_truncate="guessing no" ;;
            # If we don't know, obey --enable-cross-guesses.
            *)
              gl_cv_func_readlink_truncate="$gl_cross_guess_normal" ;;
          esac
         ])
      rm -f conftest.link conftest.lnk2])
    case $gl_cv_func_readlink_truncate in
      *yes)
        if test "$gl_cv_decl_readlink_works" != yes; then
          REPLACE_READLINK=1
        fi
        ;;
      *)
        AC_DEFINE([READLINK_TRUNCATE_BUG], [1], [Define to 1 if readlink
          sets errno instead of truncating a too-long link.])
        REPLACE_READLINK=1
        ;;
    esac
  fi
])
m4trace:m4/readlink.m4:104: -1- AC_DEFUN([gl_FUNC_READLINK_SEPARATE], [
  AC_CHECK_FUNCS_ONCE([readlink])
  gl_PREREQ_READLINK
])
m4trace:m4/readlink.m4:111: -1- AC_DEFUN([gl_PREREQ_READLINK], [
  :
])
m4trace:m4/realloc.m4:9: -1- AC_DEFUN([_AC_FUNC_REALLOC_IF], [
  AC_REQUIRE([AC_CANONICAL_HOST])dnl for cross-compiles
  AC_CACHE_CHECK([whether realloc (0, 0) returns nonnull],
    [ac_cv_func_realloc_0_nonnull],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
          ]],
          [[void *p = realloc (0, 0);
            int result = !p;
            free (p);
            return result;]])
       ],
       [ac_cv_func_realloc_0_nonnull=yes],
       [ac_cv_func_realloc_0_nonnull=no],
       [case "$host_os" in
          # Guess yes on platforms where we know the result.
          *-gnu* | freebsd* | netbsd* | openbsd* | bitrig* \
          | gnu* | *-musl* | midnightbsd* \
          | hpux* | solaris* | cygwin* | mingw* | msys* )
            ac_cv_func_realloc_0_nonnull="guessing yes" ;;
          # If we don't know, obey --enable-cross-guesses.
          *) ac_cv_func_realloc_0_nonnull="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  AS_CASE([$ac_cv_func_realloc_0_nonnull], [*yes], [$1], [$2])
])
m4trace:m4/realloc.m4:42: -1- AC_DEFUN([gl_FUNC_REALLOC_GNU], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_REALLOC_POSIX])
  if test $REPLACE_REALLOC = 0; then
    _AC_FUNC_REALLOC_IF([], [REPLACE_REALLOC=1])
  fi
])
m4trace:m4/realloc.m4:56: -1- AC_DEFUN([gl_FUNC_REALLOC_POSIX], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC = 1; then
    REPLACE_REALLOC=1
  fi
])
m4trace:m4/reallocarray.m4:7: -1- AC_DEFUN([gl_FUNC_REALLOCARRAY], [
  dnl Persuade glibc <stdlib.h> to declare reallocarray.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_MALLOC_PTRDIFF])
  AC_CHECK_FUNCS([reallocarray])
  if test "$ac_cv_func_reallocarray" = no; then
    HAVE_REALLOCARRAY=0
  elif test "$gl_cv_malloc_ptrdiff" = no; then
    REPLACE_REALLOCARRAY=1
  fi
])
m4trace:m4/reallocarray.m4:23: -1- AC_DEFUN([gl_PREREQ_REALLOCARRAY], [:])
m4trace:m4/rewinddir.m4:7: -1- AC_DEFUN([gl_FUNC_REWINDDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])

  AC_CHECK_FUNCS([rewinddir])
  if test $ac_cv_func_rewinddir = no; then
    HAVE_REWINDDIR=0
  fi
])
m4trace:m4/rmdir.m4:7: -1- AC_DEFUN([gl_FUNC_RMDIR], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl Detect cygwin 1.5.x bug.
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CACHE_CHECK([whether rmdir works], [gl_cv_func_rmdir_works],
    [mkdir conftest.dir
     touch conftest.file
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
         [[#include <stdio.h>
           #include <errno.h>
           #if HAVE_UNISTD_H
           # include <unistd.h>
           #else /* on Windows with MSVC */
           # include <direct.h>
           #endif
         ]GL_MDA_DEFINES],
         [[int result = 0;
           if (!rmdir ("conftest.file/"))
             result |= 1;
           else if (errno != ENOTDIR)
             result |= 2;
           if (!rmdir ("conftest.dir/./"))
             result |= 4;
           return result;
         ]])],
       [gl_cv_func_rmdir_works=yes], [gl_cv_func_rmdir_works=no],
       [case "$host_os" in
                           # Guess yes on Linux systems.
          linux-* | linux) gl_cv_func_rmdir_works="guessing yes" ;;
                           # Guess yes on glibc systems.
          *-gnu* | gnu*)   gl_cv_func_rmdir_works="guessing yes" ;;
                           # Guess no on native Windows.
          mingw*)          gl_cv_func_rmdir_works="guessing no" ;;
                           # If we don't know, obey --enable-cross-guesses.
          *)               gl_cv_func_rmdir_works="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -rf conftest.dir conftest.file])
  case "$gl_cv_func_rmdir_works" in
    *yes) ;;
    *)
      REPLACE_RMDIR=1
      ;;
  esac
])
m4trace:m4/save-cwd.m4:8: -1- AC_DEFUN([gl_SAVE_CWD], [
  AC_CHECK_FUNCS_ONCE([fchdir])
])
m4trace:m4/select.m4:7: -1- AC_DEFUN([gl_FUNC_SELECT], [
  AC_REQUIRE([gl_SYS_SELECT_H])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SOCKETS])
  if test "$ac_cv_header_winsock2_h" = yes; then
    REPLACE_SELECT=1
  else
    dnl On Interix 3.5, select(0, NULL, NULL, NULL, timeout) fails with error
    dnl EFAULT.
    AC_CHECK_HEADERS_ONCE([sys/select.h])
    AC_CACHE_CHECK([whether select supports a 0 argument],
      [gl_cv_func_select_supports0],
      [
        AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <sys/types.h>
#include <sys/time.h>
#if HAVE_SYS_SELECT_H
#include <sys/select.h>
#endif
int main ()
{
  struct timeval timeout;
  timeout.tv_sec = 0;
  timeout.tv_usec = 5;
  return select (0, (fd_set *)0, (fd_set *)0, (fd_set *)0, &timeout) < 0;
}]])], [gl_cv_func_select_supports0=yes], [gl_cv_func_select_supports0=no],
          [
changequote(,)dnl
           case "$host_os" in
                       # Guess no on Interix.
             interix*) gl_cv_func_select_supports0="guessing no";;
                       # Guess yes otherwise.
             *)        gl_cv_func_select_supports0="guessing yes";;
           esac
changequote([,])dnl
          ])
      ])
    case "$gl_cv_func_select_supports0" in
      *yes) ;;
      *) REPLACE_SELECT=1 ;;
    esac

    dnl On FreeBSD 8.2, select() doesn't always reject bad fds.
    AC_CACHE_CHECK([whether select detects invalid fds],
      [gl_cv_func_select_detects_ebadf],
      [
        AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <sys/time.h>
#if HAVE_SYS_SELECT_H
# include <sys/select.h>
#endif
#include <unistd.h>
#include <errno.h>
]GL_MDA_DEFINES],
[[
  fd_set set;
  dup2(0, 16);
  FD_ZERO(&set);
  FD_SET(16, &set);
  close(16);
  struct timeval timeout;
  timeout.tv_sec = 0;
  timeout.tv_usec = 5;
  return select (17, &set, NULL, NULL, &timeout) != -1 || errno != EBADF;
]])], [gl_cv_func_select_detects_ebadf=yes],
      [gl_cv_func_select_detects_ebadf=no],
          [
           case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_select_detects_ebadf="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_select_detects_ebadf="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_select_detects_ebadf="$gl_cross_guess_normal" ;;
           esac
          ])
      ])
    case $gl_cv_func_select_detects_ebadf in
      *yes) ;;
      *) REPLACE_SELECT=1 ;;
    esac
  fi

  dnl Determine the needed libraries.
  LIB_SELECT="$LIBSOCKET"
  if test $REPLACE_SELECT = 1; then
    case "$host_os" in
      mingw*)
        dnl On the MSVC platform, the function MsgWaitForMultipleObjects
        dnl (used in lib/select.c) requires linking with -luser32. On mingw,
        dnl it is implicit.
        AC_LINK_IFELSE(
          [AC_LANG_SOURCE([[
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
int
main ()
{
  MsgWaitForMultipleObjects (0, NULL, 0, 0, 0);
  return 0;
}]])],
          [],
          [LIB_SELECT="$LIB_SELECT -luser32"])
        ;;
    esac
  fi
  AC_SUBST([LIB_SELECT])
])
m4trace:m4/setenv.m4:7: -1- AC_DEFUN([gl_FUNC_SETENV], [
  AC_REQUIRE([gl_FUNC_SETENV_SEPARATE])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  if test $ac_cv_func_setenv = no; then
    HAVE_SETENV=0
  else
    AC_CACHE_CHECK([whether setenv validates arguments],
      [gl_cv_func_setenv_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
       #include <stdlib.h>
       #include <errno.h>
       #include <string.h>
      ]], [[
       int result = 0;
       {
         if (setenv ("", "", 0) != -1)
           result |= 1;
         else if (errno != EINVAL)
           result |= 2;
       }
       {
         if (setenv ("a", "=", 1) != 0)
           result |= 4;
         else if (strcmp (getenv ("a"), "=") != 0)
           result |= 8;
       }
       return result;
      ]])],
      [gl_cv_func_setenv_works=yes], [gl_cv_func_setenv_works=no],
      [case "$host_os" in
                        # Guess yes on glibc systems.
         *-gnu* | gnu*) gl_cv_func_setenv_works="guessing yes" ;;
                        # Guess yes on musl systems.
         *-musl*)       gl_cv_func_setenv_works="guessing yes" ;;
                        # If we don't know, obey --enable-cross-guesses.
         *)             gl_cv_func_setenv_works="$gl_cross_guess_normal" ;;
       esac
      ])])
    case "$gl_cv_func_setenv_works" in
      *yes) ;;
      *)
        REPLACE_SETENV=1
        ;;
    esac
  fi
])
m4trace:m4/setenv.m4:57: -1- AC_DEFUN([gl_FUNC_SETENV_SEPARATE], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_CHECK_DECLS_ONCE([setenv])
  if test $ac_cv_have_decl_setenv = no; then
    HAVE_DECL_SETENV=0
  fi
  AC_CHECK_FUNCS_ONCE([setenv])
  gl_PREREQ_SETENV
])
m4trace:m4/setenv.m4:68: -1- AC_DEFUN([gl_FUNC_UNSETENV], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_DECLS_ONCE([unsetenv])
  if test $ac_cv_have_decl_unsetenv = no; then
    HAVE_DECL_UNSETENV=0
  fi
  AC_CHECK_FUNCS([unsetenv])
  if test $ac_cv_func_unsetenv = no; then
    HAVE_UNSETENV=0
  else
    HAVE_UNSETENV=1
    dnl Some BSDs return void, failing to do error checking.
    AC_CACHE_CHECK([for unsetenv() return type], [gt_cv_func_unsetenv_ret],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[
#undef _BSD
#define _BSD 1 /* unhide unsetenv declaration in OSF/1 5.1 <stdlib.h> */
#include <stdlib.h>
extern
#ifdef __cplusplus
"C"
#endif
int unsetenv (const char *name);
            ]],
            [[]])],
         [gt_cv_func_unsetenv_ret='int'],
         [gt_cv_func_unsetenv_ret='void'])])
    if test $gt_cv_func_unsetenv_ret = 'void'; then
      AC_DEFINE([VOID_UNSETENV], [1], [Define to 1 if unsetenv returns void
       instead of int.])
      REPLACE_UNSETENV=1
    fi

    dnl Solaris 10 unsetenv does not remove all copies of a name.
    dnl Haiku alpha 2 unsetenv gets confused by assignment to environ.
    dnl OpenBSD 4.7 unsetenv("") does not fail.
    AC_CACHE_CHECK([whether unsetenv obeys POSIX],
      [gl_cv_func_unsetenv_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM([[
            #include <stdlib.h>
            #include <errno.h>
            extern char **environ;
           ]GL_MDA_DEFINES],
           [[
            char entry1[] = "a=1";
            char entry2[] = "b=2";
            char *env[] = { entry1, entry2, NULL };
            if (putenv ((char *) "a=1")) return 1;
            if (putenv (entry2)) return 2;
            entry2[0] = 'a';
            unsetenv ("a");
            if (getenv ("a")) return 3;
            if (!unsetenv ("") || errno != EINVAL) return 4;
            entry2[0] = 'b';
            environ = env;
            if (!getenv ("a")) return 5;
            entry2[0] = 'a';
            unsetenv ("a");
            if (getenv ("a")) return 6;
           ]])],
         [gl_cv_func_unsetenv_works=yes],
         [gl_cv_func_unsetenv_works=no],
         [case "$host_os" in
                    # Guess yes on glibc systems.
            *-gnu*) gl_cv_func_unsetenv_works="guessing yes" ;;
                    # If we don't know, obey --enable-cross-guesses.
            *)      gl_cv_func_unsetenv_works="$gl_cross_guess_normal" ;;
          esac
         ])
      ])
    case "$gl_cv_func_unsetenv_works" in
      *yes) ;;
      *)
        REPLACE_UNSETENV=1
        ;;
    esac
  fi
])
m4trace:m4/setenv.m4:152: -1- AC_DEFUN([gl_PREREQ_SETENV], [
  AC_REQUIRE([AC_FUNC_ALLOCA])
  AC_REQUIRE([gl_ENVIRON])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_HEADERS([search.h])
  AC_CHECK_FUNCS([tsearch])
])
m4trace:m4/setenv.m4:162: -1- AC_DEFUN([gl_PREREQ_UNSETENV], [
  AC_REQUIRE([gl_ENVIRON])
  AC_CHECK_HEADERS_ONCE([unistd.h])
])
m4trace:m4/setlocale.m4:7: -1- AC_DEFUN([gl_FUNC_SETLOCALE], [
  AC_REQUIRE([gl_LOCALE_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_SETLOCALE_NULL])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl Test whether we need to improve on the general working of setlocale.
  NEED_SETLOCALE_IMPROVED=0
  case "$host_os" in
    dnl On native Windows systems, setlocale(category,NULL) does not look at
    dnl the environment variables LC_ALL, category, and LANG.
    mingw*) NEED_SETLOCALE_IMPROVED=1 ;;
    dnl On Cygwin 1.5.x, setlocale always succeeds but setlocale(LC_CTYPE,NULL)
    dnl is then still "C".
    cygwin*)
      case `uname -r` in
        1.5.*) NEED_SETLOCALE_IMPROVED=1 ;;
      esac
      ;;
    dnl On Android 4.3, setlocale(category,"C") always fails.
    *)
      AC_CACHE_CHECK([whether setlocale supports the C locale],
        [gl_cv_func_setlocale_works],
        [AC_RUN_IFELSE(
           [AC_LANG_SOURCE([[
#include <locale.h>
int main ()
{
  return setlocale (LC_ALL, "C") == NULL;
}]])],
           [gl_cv_func_setlocale_works=yes],
           [gl_cv_func_setlocale_works=no],
           [case "$host_os" in
                               # Guess no on Android.
              linux*-android*) gl_cv_func_setlocale_works="guessing no";;
                               # Guess yes otherwise.
              *)               gl_cv_func_setlocale_works="guessing yes";;
            esac
           ])
        ])
      case "$gl_cv_func_setlocale_works" in
        *yes) ;;
        *) NEED_SETLOCALE_IMPROVED=1 ;;
      esac
      ;;
  esac
  AC_DEFINE_UNQUOTED([NEED_SETLOCALE_IMPROVED], [$NEED_SETLOCALE_IMPROVED],
    [Define to 1 to enable general improvements of setlocale.])

  dnl Test whether we need a multithread-safe setlocale(category,NULL).
  NEED_SETLOCALE_MTSAFE=0
  if test $SETLOCALE_NULL_ALL_MTSAFE = 0 || test $SETLOCALE_NULL_ONE_MTSAFE = 0; then
    NEED_SETLOCALE_MTSAFE=1
  fi
  AC_DEFINE_UNQUOTED([NEED_SETLOCALE_MTSAFE], [$NEED_SETLOCALE_MTSAFE],
    [Define to 1 to enable a multithread-safety fix of setlocale.])

  if test $NEED_SETLOCALE_IMPROVED = 1 || test $NEED_SETLOCALE_MTSAFE = 1; then
    REPLACE_SETLOCALE=1
  fi

  if test $NEED_SETLOCALE_MTSAFE = 1; then
    LIB_SETLOCALE="$LIB_SETLOCALE_NULL"
  else
    LIB_SETLOCALE=
  fi
  dnl LIB_SETLOCALE is expected to be '-pthread' or '-lpthread' on AIX with gcc
  dnl or xlc, and empty otherwise.
  AC_SUBST([LIB_SETLOCALE])
])
m4trace:m4/setlocale.m4:79: -1- AC_DEFUN([gl_PREREQ_SETLOCALE], [
  dnl No need to check for CFLocaleCopyPreferredLanguages and
  dnl CFPreferencesCopyAppValue because lib/setlocale.c is not used on Mac OS X.
  dnl (The Mac OS X specific code is only used in libintl.)
  :
])
m4trace:m4/setlocale_null.m4:7: -1- AC_DEFUN([gl_FUNC_SETLOCALE_NULL], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_PTHREADLIB])
  AC_CHECK_HEADERS_ONCE([threads.h])

  AC_CACHE_CHECK([whether setlocale (LC_ALL, NULL) is multithread-safe],
    [gl_cv_func_setlocale_null_all_mtsafe],
    [case "$host_os" in
       # Guess no on musl libc, macOS, FreeBSD, NetBSD, OpenBSD, AIX, Haiku, Cygwin.
       *-musl* | darwin* | freebsd* | midnightbsd* | netbsd* | openbsd* | aix* | haiku* | cygwin*)
         gl_cv_func_setlocale_null_all_mtsafe=no ;;
       # Guess yes on glibc, HP-UX, IRIX, Solaris, native Windows.
       *-gnu* | gnu* | hpux* | irix* | solaris* | mingw*)
         gl_cv_func_setlocale_null_all_mtsafe=yes ;;
       # If we don't know, obey --enable-cross-guesses.
       *)
         gl_cv_func_setlocale_null_all_mtsafe="$gl_cross_guess_normal" ;;
     esac
    ])
  dnl On platforms without multithreading, there is no issue.
  case "$host_os" in
    mingw*) ;;
    *)
      if test $gl_pthread_api = no && test $ac_cv_header_threads_h = no; then
        gl_cv_func_setlocale_null_all_mtsafe="trivially yes"
      fi
      ;;
  esac
  case "$gl_cv_func_setlocale_null_all_mtsafe" in
    *yes) SETLOCALE_NULL_ALL_MTSAFE=1 ;;
    *)    SETLOCALE_NULL_ALL_MTSAFE=0 ;;
  esac
  AC_DEFINE_UNQUOTED([SETLOCALE_NULL_ALL_MTSAFE], [$SETLOCALE_NULL_ALL_MTSAFE],
    [Define to 1 if setlocale (LC_ALL, NULL) is multithread-safe.])

  dnl This is about a single category (not LC_ALL).
  AC_CACHE_CHECK([whether setlocale (category, NULL) is multithread-safe],
    [gl_cv_func_setlocale_null_one_mtsafe],
    [case "$host_os" in
       # Guess no on OpenBSD, AIX.
       openbsd* | aix*)
         gl_cv_func_setlocale_null_one_mtsafe=no ;;
       # Guess yes on glibc, musl libc, macOS, FreeBSD, NetBSD, HP-UX, IRIX, Solaris, Haiku, Cygwin, native Windows.
       *-gnu* | gnu* | *-musl* | darwin* | freebsd* | midnightbsd* | netbsd* | hpux* | irix* | solaris* | haiku* | cygwin* | mingw*)
         gl_cv_func_setlocale_null_one_mtsafe=yes ;;
       # If we don't know, obey --enable-cross-guesses.
       *)
         gl_cv_func_setlocale_null_one_mtsafe="$gl_cross_guess_normal" ;;
     esac
    ])
  dnl On platforms without multithreading, there is no issue.
  case "$host_os" in
    mingw*) ;;
    *)
      if test $gl_pthread_api = no && test $ac_cv_header_threads_h = no; then
        gl_cv_func_setlocale_null_one_mtsafe="trivially yes"
      fi
      ;;
  esac
  case "$gl_cv_func_setlocale_null_one_mtsafe" in
    *yes) SETLOCALE_NULL_ONE_MTSAFE=1 ;;
    *)    SETLOCALE_NULL_ONE_MTSAFE=0 ;;
  esac
  AC_DEFINE_UNQUOTED([SETLOCALE_NULL_ONE_MTSAFE], [$SETLOCALE_NULL_ONE_MTSAFE],
    [Define to 1 if setlocale (category, NULL) is multithread-safe.])

  dnl Determine link dependencies of lib/setlocale_null.c and lib/setlocale-lock.c.
  if test $SETLOCALE_NULL_ALL_MTSAFE = 0 || test $SETLOCALE_NULL_ONE_MTSAFE = 0; then
    case "$host_os" in
      mingw*) LIB_SETLOCALE_NULL= ;;
      *)
        gl_WEAK_SYMBOLS
        case "$gl_cv_have_weak" in
          *yes) LIB_SETLOCALE_NULL= ;;
          *)    LIB_SETLOCALE_NULL="$LIBPTHREAD" ;;
        esac
        ;;
    esac
  else
    LIB_SETLOCALE_NULL=
  fi
  dnl LIB_SETLOCALE_NULL is expected to be '-pthread' or '-lpthread' on AIX
  dnl with gcc or xlc, and empty otherwise.
  AC_SUBST([LIB_SETLOCALE_NULL])
])
m4trace:m4/setlocale_null.m4:95: -1- AC_DEFUN([gl_PREREQ_SETLOCALE_LOCK], [
  gl_VISIBILITY
])
m4trace:m4/sha1.m4:7: -1- AC_DEFUN([gl_SHA1], [
  dnl Prerequisites of lib/sha1.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Determine HAVE_OPENSSL_SHA1 and LIB_CRYPTO
  gl_CRYPTO_CHECK([SHA1])
])
m4trace:m4/sha256.m4:7: -1- AC_DEFUN([gl_SHA256], [
  dnl Prerequisites of lib/sha256.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Determine HAVE_OPENSSL_SHA256 and LIB_CRYPTO
  gl_CRYPTO_CHECK([SHA256])
])
m4trace:m4/sha512.m4:7: -1- AC_DEFUN([gl_SHA512], [
  dnl Prerequisites of lib/sha512.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Determine HAVE_OPENSSL_SHA512 and LIB_CRYPTO
  gl_CRYPTO_CHECK([SHA512])
])
m4trace:m4/sigaction.m4:8: -1- AC_DEFUN([gl_SIGACTION], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([sigaction])
  if test $ac_cv_func_sigaction = yes; then
    AC_CHECK_MEMBERS([struct sigaction.sa_sigaction], , ,
                     [[#include <signal.h>]])
    if test $ac_cv_member_struct_sigaction_sa_sigaction = no; then
      HAVE_STRUCT_SIGACTION_SA_SIGACTION=0
    fi
  else
    HAVE_SIGACTION=0
  fi
])
m4trace:m4/sigaction.m4:24: -1- AC_DEFUN([gl_PREREQ_SIGACTION], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_TYPE_UID_T])
  AC_REQUIRE([gl_PREREQ_SIG_HANDLER_H])
  AC_CHECK_FUNCS_ONCE([sigaltstack siginterrupt])
  AC_CHECK_TYPES([siginfo_t], [], [], [[
#include <signal.h>
  ]])
  if test $ac_cv_type_siginfo_t = no; then
    HAVE_SIGINFO_T=0
  fi
])
m4trace:m4/sigaction.m4:40: -1- AC_DEFUN([gl_PREREQ_SIG_HANDLER_H], [:])
m4trace:m4/signal_h.m4:7: -1- AC_DEFUN_ONCE([gl_SIGNAL_H], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_TYPE_SIGSET_T])
  gl_NEXT_HEADERS([signal.h])

# AIX declares sig_atomic_t to already include volatile, and C89 compilers
# then choke on 'volatile sig_atomic_t'.  C99 requires that it compile.
  AC_CHECK_TYPE([volatile sig_atomic_t], [],
    [HAVE_TYPE_VOLATILE_SIG_ATOMIC_T=0], [[
#include <signal.h>
    ]])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  AC_REQUIRE([AC_TYPE_UID_T])

  dnl Persuade glibc <signal.h> to define sighandler_t.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_TYPE([sighandler_t], [], [HAVE_SIGHANDLER_T=0], [[
#include <signal.h>
    ]])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <signal.h>
    ]], [pthread_sigmask sigaction
    sigaddset sigdelset sigemptyset sigfillset sigismember
    sigpending sigprocmask])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/signal_h.m4:41: -1- AC_DEFUN([gl_CHECK_TYPE_SIGSET_T], [
  AC_CHECK_TYPES([sigset_t],
    [gl_cv_type_sigset_t=yes], [gl_cv_type_sigset_t=no],
    [[
      #include <signal.h>
      /* Mingw defines sigset_t not in <signal.h>, but in <sys/types.h>.  */
      #include <sys/types.h>
    ]])
  if test $gl_cv_type_sigset_t != yes; then
    HAVE_SIGSET_T=0
  fi
])
m4trace:m4/signal_h.m4:59: -1- AC_DEFUN([gl_SIGNAL_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SIGNAL_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/signal_h.m4:71: -1- AC_DEFUN([gl_SIGNAL_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SIGNAL_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SIGMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAISE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNAL_H_SIGPIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGPROCMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGACTION])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SIGNAL_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
])
m4trace:m4/signal_h.m4:84: -1- AC_DEFUN([gl_SIGNAL_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_POSIX_SIGNALBLOCKING=1; AC_SUBST([HAVE_POSIX_SIGNALBLOCKING])
  HAVE_PTHREAD_SIGMASK=1;      AC_SUBST([HAVE_PTHREAD_SIGMASK])
  HAVE_RAISE=1;                AC_SUBST([HAVE_RAISE])
  HAVE_SIGSET_T=1;             AC_SUBST([HAVE_SIGSET_T])
  HAVE_SIGINFO_T=1;            AC_SUBST([HAVE_SIGINFO_T])
  HAVE_SIGACTION=1;            AC_SUBST([HAVE_SIGACTION])
  HAVE_STRUCT_SIGACTION_SA_SIGACTION=1;
                               AC_SUBST([HAVE_STRUCT_SIGACTION_SA_SIGACTION])
  HAVE_TYPE_VOLATILE_SIG_ATOMIC_T=1;
                               AC_SUBST([HAVE_TYPE_VOLATILE_SIG_ATOMIC_T])
  HAVE_SIGHANDLER_T=1;         AC_SUBST([HAVE_SIGHANDLER_T])
  REPLACE_PTHREAD_SIGMASK=0;   AC_SUBST([REPLACE_PTHREAD_SIGMASK])
  REPLACE_RAISE=0;             AC_SUBST([REPLACE_RAISE])
])
m4trace:m4/signalblocking.m4:12: -1- AC_DEFUN([gl_SIGNALBLOCKING], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_TYPE_SIGSET_T])
  HAVE_POSIX_SIGNALBLOCKING=0
  if test "$gl_cv_type_sigset_t" = yes; then
    AC_CHECK_FUNC([sigprocmask], [HAVE_POSIX_SIGNALBLOCKING=1])
  fi
])
m4trace:m4/signalblocking.m4:23: -1- AC_DEFUN([gl_PREREQ_SIGPROCMASK], [:])
m4trace:m4/size_max.m4:11: -1- AC_DEFUN([gl_SIZE_MAX], [
  AC_CHECK_HEADERS([stdint.h])
  dnl First test whether the system already has SIZE_MAX.
  AC_CACHE_CHECK([for SIZE_MAX], [gl_cv_size_max], [
    gl_cv_size_max=no
    AC_EGREP_CPP([Found it], [
#include <limits.h>
#if HAVE_STDINT_H
#include <stdint.h>
#endif
#ifdef SIZE_MAX
Found it
#endif
], [gl_cv_size_max=yes])
    if test $gl_cv_size_max != yes; then
      dnl Define it ourselves. Here we assume that the type 'size_t' is not wider
      dnl than the type 'unsigned long'. Try hard to find a definition that can
      dnl be used in a preprocessor #if, i.e. doesn't contain a cast.
      AC_COMPUTE_INT([size_t_bits_minus_1], [sizeof (size_t) * CHAR_BIT - 1],
        [#include <stddef.h>
#include <limits.h>], [size_t_bits_minus_1=])
      AC_COMPUTE_INT([fits_in_uint], [sizeof (size_t) <= sizeof (unsigned int)],
        [#include <stddef.h>], [fits_in_uint=])
      if test -n "$size_t_bits_minus_1" && test -n "$fits_in_uint"; then
        if test $fits_in_uint = 1; then
          dnl Even though SIZE_MAX fits in an unsigned int, it must be of type
          dnl 'unsigned long' if the type 'size_t' is the same as 'unsigned long'.
          AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM(
               [[#include <stddef.h>
                 extern size_t foo;
                 extern unsigned long foo;
               ]],
               [[]])],
            [fits_in_uint=0])
        fi
        dnl We cannot use 'expr' to simplify this expression, because 'expr'
        dnl works only with 'long' integers in the host environment, while we
        dnl might be cross-compiling from a 32-bit platform to a 64-bit platform.
        if test $fits_in_uint = 1; then
          gl_cv_size_max="(((1U << $size_t_bits_minus_1) - 1) * 2 + 1)"
        else
          gl_cv_size_max="(((1UL << $size_t_bits_minus_1) - 1) * 2 + 1)"
        fi
      else
        dnl Shouldn't happen, but who knows...
        gl_cv_size_max='((size_t)~(size_t)0)'
      fi
    fi
  ])
  if test "$gl_cv_size_max" != yes; then
    AC_DEFINE_UNQUOTED([SIZE_MAX], [$gl_cv_size_max],
      [Define as the maximum value of type 'size_t', if the system doesn't define it.])
  fi
  dnl Don't redefine SIZE_MAX in config.h if config.h is re-included after
  dnl <stdint.h>. Remember that the #undef in AH_VERBATIM gets replaced with
  dnl #define by AC_DEFINE_UNQUOTED.
  AH_VERBATIM([SIZE_MAX],
[/* Define as the maximum value of type 'size_t', if the system doesn't define
   it. */
#ifndef SIZE_MAX
# undef SIZE_MAX
#endif])
])
m4trace:m4/snprintf.m4:11: -1- AC_DEFUN([gl_FUNC_SNPRINTF], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  gl_cv_func_snprintf_usable=no
  AC_CHECK_FUNCS([snprintf])
  if test $ac_cv_func_snprintf = yes; then
    gl_SNPRINTF_SIZE1
    case "$gl_cv_func_snprintf_size1" in
      *yes)
        gl_SNPRINTF_RETVAL_C99
        case "$gl_cv_func_snprintf_retval_c99" in
          *yes)
            gl_PRINTF_POSITIONS
            case "$gl_cv_func_printf_positions" in
              *yes)
                gl_cv_func_snprintf_usable=yes
                ;;
            esac
            ;;
        esac
        ;;
    esac
  fi
  if test $gl_cv_func_snprintf_usable = no; then
    gl_REPLACE_SNPRINTF
  fi
  AC_CHECK_DECLS_ONCE([snprintf])
  if test $ac_cv_have_decl_snprintf = no; then
    HAVE_DECL_SNPRINTF=0
  fi
])
m4trace:m4/snprintf.m4:43: -1- AC_DEFUN([gl_REPLACE_SNPRINTF], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AC_LIBOBJ([snprintf])
  if test $ac_cv_func_snprintf = yes; then
    REPLACE_SNPRINTF=1
  else
    AC_CHECK_DECLS_ONCE([snprintf])
    if test $ac_cv_have_decl_snprintf = yes; then
      dnl If the function is declared but does not appear to exist, it may be
      dnl defined as an inline function. In order to avoid a conflict, we have
      dnl to define rpl_snprintf, not snprintf.
      REPLACE_SNPRINTF=1
    fi
  fi
  gl_PREREQ_SNPRINTF
])
m4trace:m4/snprintf.m4:62: -1- AC_DEFUN([gl_PREREQ_SNPRINTF], [:])
m4trace:m4/socketlib.m4:11: -1- AC_DEFUN([gl_SOCKETLIB], [
  gl_PREREQ_SYS_H_WINSOCK2 dnl for HAVE_WINSOCK2_H
  LIBSOCKET=
  if test $HAVE_WINSOCK2_H = 1; then
    dnl Native Windows API (not Cygwin).
    dnl If the function WSAStartup exists (declared in <winsock2.h> and
    dnl defined through -lws2_32), we need to call it.
    AC_CACHE_CHECK([for WSAStartup],
      [gl_cv_func_wsastartup], [
       gl_save_LIBS="$LIBS"
       LIBS="$LIBS -lws2_32"
       AC_LINK_IFELSE(
         [AC_LANG_PROGRAM([[
#ifdef HAVE_WINSOCK2_H
# include <winsock2.h>
#endif]], [[
            WORD wVersionRequested = MAKEWORD(1, 1);
            WSADATA wsaData;
            int err = WSAStartup(wVersionRequested, &wsaData);
            WSACleanup ();
            ]])
         ],
         [gl_cv_func_wsastartup=yes],
         [gl_cv_func_wsastartup=no])
       LIBS="$gl_save_LIBS"
      ])
    if test "$gl_cv_func_wsastartup" = "yes"; then
      AC_DEFINE([WINDOWS_SOCKETS], [1], [Define if WSAStartup is needed.])
      LIBSOCKET='-lws2_32'
    fi
  else
    dnl Unix API.
    dnl Solaris has most socket functions in libsocket.
    dnl Haiku has most socket functions in libnetwork.
    dnl BeOS has most socket functions in libnet.
    dnl On HP-UX, do NOT link with libxnet, because in 64-bit mode this would
    dnl break code (e.g. in libraries) that invokes accept(), getpeername(),
    dnl getsockname(), getsockopt(), or recvfrom() with a 32-bit addrlen. See
    dnl "man xopen_networking" for details.
    AC_CACHE_CHECK([for library containing setsockopt], [gl_cv_lib_socket], [
      gl_cv_lib_socket=
      AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
        [],
        [gl_save_LIBS="$LIBS"
         LIBS="$gl_save_LIBS -lsocket"
         AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
           [gl_cv_lib_socket="-lsocket"])
         if test -z "$gl_cv_lib_socket"; then
           LIBS="$gl_save_LIBS -lnetwork"
           AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
             [gl_cv_lib_socket="-lnetwork"])
           if test -z "$gl_cv_lib_socket"; then
             LIBS="$gl_save_LIBS -lnet"
             AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
               [gl_cv_lib_socket="-lnet"])
           fi
         fi
         LIBS="$gl_save_LIBS"
        ])
      if test -z "$gl_cv_lib_socket"; then
        gl_cv_lib_socket="none needed"
      fi
    ])
    if test "$gl_cv_lib_socket" != "none needed"; then
      LIBSOCKET="$gl_cv_lib_socket"
    fi
  fi
  AC_SUBST([LIBSOCKET])
])
m4trace:m4/sockets.m4:7: -1- AC_DEFUN([gl_SOCKETS], [
  AC_REQUIRE([AC_C_INLINE])
  AC_REQUIRE([gl_SOCKETLIB])
  gl_PREREQ_SOCKETS
])
m4trace:m4/sockets.m4:15: -1- AC_DEFUN([gl_PREREQ_SOCKETS], [
  :
])
m4trace:m4/socklen.m4:15: -1- AC_DEFUN([gl_TYPE_SOCKLEN_T], [AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])dnl
   AC_CHECK_TYPE([socklen_t], ,
     [AC_CACHE_CHECK([for socklen_t equivalent],
        [gl_cv_socklen_t_equiv],
        [# Systems have either "struct sockaddr *" or
         # "void *" as the second argument to getpeername
         gl_cv_socklen_t_equiv=
         for arg2 in "struct sockaddr" void; do
           for t in int size_t "unsigned int" "long int" "unsigned long int"; do
             AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
                 [[#include <sys/types.h>
                   #include <sys/socket.h>

                   int getpeername (int, $arg2 *, $t *);]],
                 [[$t len;
                  getpeername (0, 0, &len);]])],
               [gl_cv_socklen_t_equiv="$t"])
             test "$gl_cv_socklen_t_equiv" != "" && break
           done
           test "$gl_cv_socklen_t_equiv" != "" && break
         done
         if test "$gl_cv_socklen_t_equiv" = ""; then
           AC_MSG_ERROR([Cannot find a type to use in place of socklen_t])
         fi
        ])
      AC_DEFINE_UNQUOTED([socklen_t], [$gl_cv_socklen_t_equiv],
        [type to use in place of socklen_t if not defined])],
     [gl_SOCKET_HEADERS])])
m4trace:m4/socklen.m4:51: -1- AC_DEFUN([gl_SOCKET_HEADERS], [
/* <sys/types.h> is not needed according to POSIX, but the
   <sys/socket.h> in i386-unknown-freebsd4.10 and
   powerpc-apple-darwin5.5 required it. */
#include <sys/types.h>
#if HAVE_SYS_SOCKET_H
# include <sys/socket.h>
#elif HAVE_WS2TCPIP_H
# include <ws2tcpip.h>
#endif
])
m4trace:m4/socklen.m4:67: -1- AC_DEFUN([gl_CHECK_SOCKET_HEADERS], [AC_CHECK_HEADERS_ONCE([sys/socket.h])
   if test $ac_cv_header_sys_socket_h = no; then
     dnl We cannot use AC_CHECK_HEADERS_ONCE here, because that would make
     dnl the check for those headers unconditional; yet cygwin reports
     dnl that the headers are present but cannot be compiled (since on
     dnl cygwin, all socket information should come from sys/socket.h).
     AC_CHECK_HEADERS([ws2tcpip.h])
   fi
  ])
m4trace:m4/ssize_t.m4:10: -1- AC_DEFUN([gt_TYPE_SSIZE_T], [
  AC_CACHE_CHECK([for ssize_t], [gt_cv_ssize_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>]],
          [[int x = sizeof (ssize_t *) + sizeof (ssize_t);
            return !x;]])],
       [gt_cv_ssize_t=yes], [gt_cv_ssize_t=no])])
  if test $gt_cv_ssize_t = no; then
    AC_DEFINE([ssize_t], [int],
              [Define as a signed type of the same size as size_t.])
  fi
])
m4trace:m4/stat-time.m4:20: -1- AC_DEFUN([gl_STAT_TIME], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([sys/time.h])

  AC_CHECK_MEMBERS([struct stat.st_atim.tv_nsec],
    [AC_CACHE_CHECK([whether struct stat.st_atim is of type struct timespec],
       [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec],
       [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
          [[
            #include <sys/types.h>
            #include <sys/stat.h>
            #if HAVE_SYS_TIME_H
            # include <sys/time.h>
            #endif
            #include <time.h>
            struct timespec ts;
            struct stat st;
          ]],
          [[
            st.st_atim = ts;
          ]])],
          [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=yes],
          [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=no])])
     if test $ac_cv_typeof_struct_stat_st_atim_is_struct_timespec = yes; then
       AC_DEFINE([TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC], [1],
         [Define to 1 if the type of the st_atim member of a struct stat is
          struct timespec.])
     fi],
    [AC_CHECK_MEMBERS([struct stat.st_atimespec.tv_nsec], [],
       [AC_CHECK_MEMBERS([struct stat.st_atimensec], [],
          [AC_CHECK_MEMBERS([struct stat.st_atim.st__tim.tv_nsec], [], [],
             [#include <sys/types.h>
              #include <sys/stat.h>])],
          [#include <sys/types.h>
           #include <sys/stat.h>])],
       [#include <sys/types.h>
        #include <sys/stat.h>])],
    [#include <sys/types.h>
     #include <sys/stat.h>])
])
m4trace:m4/stat-time.m4:70: -1- AC_DEFUN([gl_STAT_BIRTHTIME], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  AC_CHECK_MEMBERS([struct stat.st_birthtimespec.tv_nsec], [],
    [AC_CHECK_MEMBERS([struct stat.st_birthtimensec], [],
      [AC_CHECK_MEMBERS([struct stat.st_birthtim.tv_nsec], [], [],
         [#include <sys/types.h>
          #include <sys/stat.h>])],
       [#include <sys/types.h>
        #include <sys/stat.h>])],
    [#include <sys/types.h>
     #include <sys/stat.h>])
])
m4trace:m4/stat.m4:9: -1- AC_DEFUN([gl_FUNC_STAT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([lstat])
  case "$host_os" in
    mingw*)
      dnl On this platform, the original stat() returns st_atime, st_mtime,
      dnl st_ctime values that are affected by the time zone.
      REPLACE_STAT=1
      ;;
    *)
      dnl AIX 7.1, Solaris 9, mingw64 mistakenly succeed on stat("file/").
      dnl (For mingw, this is due to a broken stat() override in libmingwex.a.)
      dnl FreeBSD 7.2 mistakenly succeeds on stat("link-to-file/").
      AC_CACHE_CHECK([whether stat handles trailing slashes on files],
        [gl_cv_func_stat_file_slash],
        [touch conftest.tmp
         # Assume that if we have lstat, we can also check symlinks.
         if test $ac_cv_func_lstat = yes; then
           ln -s conftest.tmp conftest.lnk
         fi
         AC_RUN_IFELSE(
           [AC_LANG_PROGRAM(
             [[#include <sys/stat.h>
]], [[int result = 0;
               struct stat st;
               if (!stat ("conftest.tmp/", &st))
                 result |= 1;
#if HAVE_LSTAT
               if (!stat ("conftest.lnk/", &st))
                 result |= 2;
#endif
               return result;
             ]])],
           [gl_cv_func_stat_file_slash=yes], [gl_cv_func_stat_file_slash=no],
           [case "$host_os" in
                               # Guess yes on Linux systems.
              linux-* | linux) gl_cv_func_stat_file_slash="guessing yes" ;;
                               # Guess yes on glibc systems.
              *-gnu* | gnu*)   gl_cv_func_stat_file_slash="guessing yes" ;;
                               # If we don't know, obey --enable-cross-guesses.
              *)               gl_cv_func_stat_file_slash="$gl_cross_guess_normal" ;;
            esac
           ])
         rm -f conftest.tmp conftest.lnk])
      case $gl_cv_func_stat_file_slash in
        *no)
          REPLACE_STAT=1
          AC_DEFINE([REPLACE_FUNC_STAT_FILE], [1], [Define to 1 if stat needs
            help when passed a file name with a trailing slash]);;
      esac
      case $host_os in
        dnl Solaris stat can return a negative tv_nsec.
        solaris*)
          REPLACE_FSTAT=1 ;;
      esac
      ;;
  esac
])
m4trace:m4/stat.m4:71: -1- AC_DEFUN([gl_PREREQ_STAT], [
  AC_REQUIRE([gl_SYS_STAT_H])
  AC_REQUIRE([gl_PREREQ_STAT_W32])
  :
])
m4trace:m4/stat.m4:78: -1- AC_DEFUN([gl_PREREQ_STAT_W32], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_CHECK_HEADERS([sdkddkver.h])
      ;;
  esac
])
m4trace:m4/stdalign.m4:10: -1- AC_DEFUN([gl_STDALIGN_H], [
  AC_CACHE_CHECK([for working stdalign.h],
    [gl_cv_header_working_stdalign_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdint.h>
            #include <stdalign.h>
            #include <stddef.h>

            /* Test that alignof yields a result consistent with offsetof.
               This catches GCC bug 52023
               <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=52023>.  */
            #ifdef __cplusplus
               template <class t> struct alignof_helper { char a; t b; };
            # define ao(type) offsetof (alignof_helper<type>, b)
            #else
            # define ao(type) offsetof (struct { char a; type b; }, b)
            #endif
            char test_double[ao (double) % _Alignof (double) == 0 ? 1 : -1];
            char test_long[ao (long int) % _Alignof (long int) == 0 ? 1 : -1];
            char test_alignof[alignof (double) == _Alignof (double) ? 1 : -1];

            /* Test _Alignas only on platforms where gnulib can help.  */
            #if \
                ((defined __cplusplus && 201103 <= __cplusplus) \
                 || (__TINYC__ && defined __attribute__) \
                 || (defined __APPLE__ && defined __MACH__ \
                     ? 4 < __GNUC__ + (1 <= __GNUC_MINOR__) \
                     : __GNUC__) \
                 || (__ia64 && (61200 <= __HP_cc || 61200 <= __HP_aCC)) \
                 || __ICC || 0x590 <= __SUNPRO_C || 0x0600 <= __xlC__ \
                 || 1300 <= _MSC_VER)
              struct alignas_test { char c; char alignas (8) alignas_8; };
              char test_alignas[offsetof (struct alignas_test, alignas_8) == 8
                                ? 1 : -1];
            #endif
          ]])],
       [gl_cv_header_working_stdalign_h=yes],
       [gl_cv_header_working_stdalign_h=no])])

  if test $gl_cv_header_working_stdalign_h = yes; then
    STDALIGN_H=''
  else
    STDALIGN_H='stdalign.h'
  fi

  AC_SUBST([STDALIGN_H])
  AM_CONDITIONAL([GL_GENERATE_STDALIGN_H], [test -n "$STDALIGN_H"])
])
m4trace:m4/stdbool.m4:12: -1- AC_DEFUN([AM_STDBOOL_H], [
  AC_REQUIRE([AC_CHECK_HEADER_STDBOOL])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl On some platforms, <stdbool.h> does not exist or does not conform to C99.
  dnl On Solaris 10 with CC=cc CXX=CC, <stdbool.h> exists but is not usable
  dnl in C++ mode (and no <cstdbool> exists). In this case, we use our
  dnl replacement, also in C mode (for binary compatibility between C and C++).
  if test "$ac_cv_header_stdbool_h" = yes; then
    case "$host_os" in
      solaris*)
        if test -z "$GCC"; then
          STDBOOL_H='stdbool.h'
        else
          STDBOOL_H=''
        fi
        ;;
      *)
        STDBOOL_H=''
        ;;
    esac
  else
    STDBOOL_H='stdbool.h'
  fi
  AC_SUBST([STDBOOL_H])
  AM_CONDITIONAL([GL_GENERATE_STDBOOL_H], [test -n "$STDBOOL_H"])

  if test "$ac_cv_type__Bool" = yes; then
    HAVE__BOOL=1
  else
    HAVE__BOOL=0
  fi
  AC_SUBST([HAVE__BOOL])
])
m4trace:m4/stdbool.m4:49: -1- AC_DEFUN([gl_STDBOOL_H], [AM_STDBOOL_H])
m4trace:m4/stdbool.m4:53: -1- AC_DEFUN([AC_CHECK_HEADER_STDBOOL], [AC_CACHE_CHECK([for stdbool.h that conforms to C99],
     [ac_cv_header_stdbool_h],
     [AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM(
           [[
             #include <stdbool.h>

             #ifdef __cplusplus
              typedef bool Bool;
             #else
              typedef _Bool Bool;
              #ifndef bool
               "error: bool is not defined"
              #endif
              #ifndef false
               "error: false is not defined"
              #endif
              #if false
               "error: false is not 0"
              #endif
              #ifndef true
               "error: true is not defined"
              #endif
              #if true != 1
               "error: true is not 1"
              #endif
             #endif

             #ifndef __bool_true_false_are_defined
              "error: __bool_true_false_are_defined is not defined"
             #endif

             struct s { Bool s: 1; Bool t; bool u: 1; bool v; } s;

             char a[true == 1 ? 1 : -1];
             char b[false == 0 ? 1 : -1];
             char c[__bool_true_false_are_defined == 1 ? 1 : -1];
             char d[(bool) 0.5 == true ? 1 : -1];
             /* See body of main program for 'e'.  */
             char f[(Bool) 0.0 == false ? 1 : -1];
             char g[true];
             char h[sizeof (Bool)];
             char i[sizeof s.t];
             enum { j = false, k = true, l = false * true, m = true * 256 };
             /* The following fails for
                HP aC++/ANSI C B3910B A.05.55 [Dec 04 2003]. */
             Bool n[m];
             char o[sizeof n == m * sizeof n[0] ? 1 : -1];
             char p[-1 - (Bool) 0 < 0 && -1 - (bool) 0 < 0 ? 1 : -1];
             /* Catch a bug in an HP-UX C compiler.  See
                https://gcc.gnu.org/ml/gcc-patches/2003-12/msg02303.html
                https://lists.gnu.org/r/bug-coreutils/2005-11/msg00161.html
              */
             Bool q = true;
             Bool *pq = &q;
             bool *qq = &q;
           ]],
           [[
             bool e = &s;
             *pq |= q; *pq |= ! q;
             *qq |= q; *qq |= ! q;
             /* Refer to every declared value, to avoid compiler optimizations.  */
             return (!a + !b + !c + !d + !e + !f + !g + !h + !i + !!j + !k + !!l
                     + !m + !n + !o + !p + !q + !pq + !qq);
           ]])],
        [ac_cv_header_stdbool_h=yes],
        [ac_cv_header_stdbool_h=no])])
   AC_CHECK_TYPES([_Bool])
])
m4trace:m4/stddef_h.m4:9: -1- AC_DEFUN_ONCE([gl_STDDEF_H], [
  AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
  AC_REQUIRE([gt_TYPE_WCHAR_T])

  dnl Persuade OpenBSD <stddef.h> to declare max_align_t.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  STDDEF_H=

  dnl Test whether the type max_align_t exists and whether its alignment
  dnl "is as great as is supported by the implementation in all contexts".
  AC_CACHE_CHECK([for good max_align_t],
    [gl_cv_type_max_align_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stddef.h>
            unsigned int s = sizeof (max_align_t);
            #if defined __GNUC__ || defined __clang__ || defined __IBM__ALIGNOF__
            int check1[2 * (__alignof__ (double) <= __alignof__ (max_align_t)) - 1];
            int check2[2 * (__alignof__ (long double) <= __alignof__ (max_align_t)) - 1];
            #endif
            typedef struct { char a; max_align_t b; } max_helper;
            typedef struct { char a; long b; } long_helper;
            typedef struct { char a; double b; } double_helper;
            typedef struct { char a; long double b; } long_double_helper;
            int check3[2 * (offsetof (long_helper, b) <= offsetof (max_helper, b)) - 1];
            int check4[2 * (offsetof (double_helper, b) <= offsetof (max_helper, b)) - 1];
            int check5[2 * (offsetof (long_double_helper, b) <= offsetof (max_helper, b)) - 1];
          ]])],
       [gl_cv_type_max_align_t=yes],
       [gl_cv_type_max_align_t=no])
    ])
  if test $gl_cv_type_max_align_t = no; then
    HAVE_MAX_ALIGN_T=0
    STDDEF_H=stddef.h
  fi

  if test $gt_cv_c_wchar_t = no; then
    HAVE_WCHAR_T=0
    STDDEF_H=stddef.h
  fi

  AC_CACHE_CHECK([whether NULL can be used in arbitrary expressions],
    [gl_cv_decl_null_works],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stddef.h>
      int test[2 * (sizeof NULL == sizeof (void *)) -1];
]])],
      [gl_cv_decl_null_works=yes],
      [gl_cv_decl_null_works=no])])
  if test $gl_cv_decl_null_works = no; then
    REPLACE_NULL=1
    STDDEF_H=stddef.h
  fi

  AC_SUBST([STDDEF_H])
  AM_CONDITIONAL([GL_GENERATE_STDDEF_H], [test -n "$STDDEF_H"])
  if test -n "$STDDEF_H"; then
    gl_NEXT_HEADERS([stddef.h])
  fi
])
m4trace:m4/stddef_h.m4:75: -1- AC_DEFUN([gl_STDDEF_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STDDEF_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/stddef_h.m4:85: -1- AC_DEFUN([gl_STDDEF_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STDDEF_H_MODULE_INDICATOR_DEFAULTS], [
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STDDEF_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
])
m4trace:m4/stddef_h.m4:93: -1- AC_DEFUN([gl_STDDEF_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  REPLACE_NULL=0;                AC_SUBST([REPLACE_NULL])
  HAVE_MAX_ALIGN_T=1;            AC_SUBST([HAVE_MAX_ALIGN_T])
  HAVE_WCHAR_T=1;                AC_SUBST([HAVE_WCHAR_T])
])
m4trace:m4/stdint.m4:12: -1- AC_DEFUN_ONCE([gl_STDINT_H], [
  AC_PREREQ([2.59])dnl
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_REQUIRE([gl_LIMITS_H])
  AC_REQUIRE([gt_TYPE_WINT_T])

  dnl For backward compatibility. Some packages may still be testing these
  dnl macros.
  AC_DEFINE([HAVE_LONG_LONG_INT], [1],
    [Define to 1 if the system has the type 'long long int'.])
  AC_DEFINE([HAVE_UNSIGNED_LONG_LONG_INT], [1],
    [Define to 1 if the system has the type 'unsigned long long int'.])

  dnl Check for <wchar.h>, in the same way as gl_WCHAR_H does.
  AC_CHECK_HEADERS_ONCE([wchar.h])
  if test $ac_cv_header_wchar_h = yes; then
    HAVE_WCHAR_H=1
  else
    HAVE_WCHAR_H=0
  fi
  AC_SUBST([HAVE_WCHAR_H])

  dnl Check for <inttypes.h>.
  AC_CHECK_HEADERS_ONCE([inttypes.h])
  if test $ac_cv_header_inttypes_h = yes; then
    HAVE_INTTYPES_H=1
  else
    HAVE_INTTYPES_H=0
  fi
  AC_SUBST([HAVE_INTTYPES_H])

  dnl Check for <sys/types.h>.
  AC_CHECK_HEADERS_ONCE([sys/types.h])
  if test $ac_cv_header_sys_types_h = yes; then
    HAVE_SYS_TYPES_H=1
  else
    HAVE_SYS_TYPES_H=0
  fi
  AC_SUBST([HAVE_SYS_TYPES_H])

  gl_CHECK_NEXT_HEADERS([stdint.h])
  if test $ac_cv_header_stdint_h = yes; then
    HAVE_STDINT_H=1
  else
    HAVE_STDINT_H=0
  fi
  AC_SUBST([HAVE_STDINT_H])

  dnl Now see whether we need a substitute <stdint.h>.
  if test $ac_cv_header_stdint_h = yes; then
    AC_CACHE_CHECK([whether stdint.h conforms to C99],
      [gl_cv_header_working_stdint_h],
      [gl_cv_header_working_stdint_h=no
       AC_COMPILE_IFELSE([
         AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#define __STDC_CONSTANT_MACROS 1
#define __STDC_LIMIT_MACROS 1
#include <stdint.h>
/* Dragonfly defines WCHAR_MIN, WCHAR_MAX only in <wchar.h>.  */
#if !(defined WCHAR_MIN && defined WCHAR_MAX)
#error "WCHAR_MIN, WCHAR_MAX not defined in <stdint.h>"
#endif
]
gl_STDINT_INCLUDES
[
#ifdef INT8_MAX
int8_t a1 = INT8_MAX;
int8_t a1min = INT8_MIN;
#endif
#ifdef INT16_MAX
int16_t a2 = INT16_MAX;
int16_t a2min = INT16_MIN;
#endif
#ifdef INT32_MAX
int32_t a3 = INT32_MAX;
int32_t a3min = INT32_MIN;
#endif
#ifdef INT64_MAX
int64_t a4 = INT64_MAX;
int64_t a4min = INT64_MIN;
#endif
#ifdef UINT8_MAX
uint8_t b1 = UINT8_MAX;
#else
typedef int b1[(unsigned char) -1 != 255 ? 1 : -1];
#endif
#ifdef UINT16_MAX
uint16_t b2 = UINT16_MAX;
#endif
#ifdef UINT32_MAX
uint32_t b3 = UINT32_MAX;
#endif
#ifdef UINT64_MAX
uint64_t b4 = UINT64_MAX;
#endif
int_least8_t c1 = INT8_C (0x7f);
int_least8_t c1max = INT_LEAST8_MAX;
int_least8_t c1min = INT_LEAST8_MIN;
int_least16_t c2 = INT16_C (0x7fff);
int_least16_t c2max = INT_LEAST16_MAX;
int_least16_t c2min = INT_LEAST16_MIN;
int_least32_t c3 = INT32_C (0x7fffffff);
int_least32_t c3max = INT_LEAST32_MAX;
int_least32_t c3min = INT_LEAST32_MIN;
int_least64_t c4 = INT64_C (0x7fffffffffffffff);
int_least64_t c4max = INT_LEAST64_MAX;
int_least64_t c4min = INT_LEAST64_MIN;
uint_least8_t d1 = UINT8_C (0xff);
uint_least8_t d1max = UINT_LEAST8_MAX;
uint_least16_t d2 = UINT16_C (0xffff);
uint_least16_t d2max = UINT_LEAST16_MAX;
uint_least32_t d3 = UINT32_C (0xffffffff);
uint_least32_t d3max = UINT_LEAST32_MAX;
uint_least64_t d4 = UINT64_C (0xffffffffffffffff);
uint_least64_t d4max = UINT_LEAST64_MAX;
int_fast8_t e1 = INT_FAST8_MAX;
int_fast8_t e1min = INT_FAST8_MIN;
int_fast16_t e2 = INT_FAST16_MAX;
int_fast16_t e2min = INT_FAST16_MIN;
int_fast32_t e3 = INT_FAST32_MAX;
int_fast32_t e3min = INT_FAST32_MIN;
int_fast64_t e4 = INT_FAST64_MAX;
int_fast64_t e4min = INT_FAST64_MIN;
uint_fast8_t f1 = UINT_FAST8_MAX;
uint_fast16_t f2 = UINT_FAST16_MAX;
uint_fast32_t f3 = UINT_FAST32_MAX;
uint_fast64_t f4 = UINT_FAST64_MAX;
#ifdef INTPTR_MAX
intptr_t g = INTPTR_MAX;
intptr_t gmin = INTPTR_MIN;
#endif
#ifdef UINTPTR_MAX
uintptr_t h = UINTPTR_MAX;
#endif
intmax_t i = INTMAX_MAX;
uintmax_t j = UINTMAX_MAX;

/* Check that SIZE_MAX has the correct type, if possible.  */
#if 201112 <= __STDC_VERSION__
int k = _Generic (SIZE_MAX, size_t: 0);
#elif (2 <= __GNUC__ || 4 <= __clang_major__ || defined __IBM__TYPEOF__ \
       || (0x5110 <= __SUNPRO_C && !__STDC__))
extern size_t k;
extern __typeof__ (SIZE_MAX) k;
#endif

#include <limits.h> /* for CHAR_BIT */
#define TYPE_MINIMUM(t) \
  ((t) ((t) 0 < (t) -1 ? (t) 0 : ~ TYPE_MAXIMUM (t)))
#define TYPE_MAXIMUM(t) \
  ((t) ((t) 0 < (t) -1 \
        ? (t) -1 \
        : ((((t) 1 << (sizeof (t) * CHAR_BIT - 2)) - 1) * 2 + 1)))
struct s {
  int check_PTRDIFF:
      PTRDIFF_MIN == TYPE_MINIMUM (ptrdiff_t)
      && PTRDIFF_MAX == TYPE_MAXIMUM (ptrdiff_t)
      ? 1 : -1;
  /* Detect bug in FreeBSD 6.0/ia64 and FreeBSD 13.0/arm64.  */
  int check_SIG_ATOMIC:
      SIG_ATOMIC_MIN == TYPE_MINIMUM (sig_atomic_t)
      && SIG_ATOMIC_MAX == TYPE_MAXIMUM (sig_atomic_t)
      ? 1 : -1;
  int check_SIZE: SIZE_MAX == TYPE_MAXIMUM (size_t) ? 1 : -1;
  int check_WCHAR:
      WCHAR_MIN == TYPE_MINIMUM (wchar_t)
      && WCHAR_MAX == TYPE_MAXIMUM (wchar_t)
      ? 1 : -1;
  /* Detect bug in mingw.  */
  int check_WINT:
      WINT_MIN == TYPE_MINIMUM (wint_t)
      && WINT_MAX == TYPE_MAXIMUM (wint_t)
      ? 1 : -1;

  /* Detect bugs in glibc 2.4 and Solaris 10 stdint.h, among others.  */
  int check_UINT8_C:
        (-1 < UINT8_C (0)) == (-1 < (uint_least8_t) 0) ? 1 : -1;
  int check_UINT16_C:
        (-1 < UINT16_C (0)) == (-1 < (uint_least16_t) 0) ? 1 : -1;

  /* Detect bugs in OpenBSD 3.9 stdint.h.  */
#ifdef UINT8_MAX
  int check_uint8: (uint8_t) -1 == UINT8_MAX ? 1 : -1;
#endif
#ifdef UINT16_MAX
  int check_uint16: (uint16_t) -1 == UINT16_MAX ? 1 : -1;
#endif
#ifdef UINT32_MAX
  int check_uint32: (uint32_t) -1 == UINT32_MAX ? 1 : -1;
#endif
#ifdef UINT64_MAX
  int check_uint64: (uint64_t) -1 == UINT64_MAX ? 1 : -1;
#endif
  int check_uint_least8: (uint_least8_t) -1 == UINT_LEAST8_MAX ? 1 : -1;
  int check_uint_least16: (uint_least16_t) -1 == UINT_LEAST16_MAX ? 1 : -1;
  int check_uint_least32: (uint_least32_t) -1 == UINT_LEAST32_MAX ? 1 : -1;
  int check_uint_least64: (uint_least64_t) -1 == UINT_LEAST64_MAX ? 1 : -1;
  int check_uint_fast8: (uint_fast8_t) -1 == UINT_FAST8_MAX ? 1 : -1;
  int check_uint_fast16: (uint_fast16_t) -1 == UINT_FAST16_MAX ? 1 : -1;
  int check_uint_fast32: (uint_fast32_t) -1 == UINT_FAST32_MAX ? 1 : -1;
  int check_uint_fast64: (uint_fast64_t) -1 == UINT_FAST64_MAX ? 1 : -1;
  int check_uintptr: (uintptr_t) -1 == UINTPTR_MAX ? 1 : -1;
  int check_uintmax: (uintmax_t) -1 == UINTMAX_MAX ? 1 : -1;
  int check_size: (size_t) -1 == SIZE_MAX ? 1 : -1;
};
         ]])],
         [dnl Determine whether the various *_MIN, *_MAX macros are usable
          dnl in preprocessor expression. We could do it by compiling a test
          dnl program for each of these macros. It is faster to run a program
          dnl that inspects the macro expansion.
          dnl This detects a bug on HP-UX 11.23/ia64.
          AC_RUN_IFELSE([
            AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#define __STDC_CONSTANT_MACROS 1
#define __STDC_LIMIT_MACROS 1
#include <stdint.h>
]
gl_STDINT_INCLUDES
[
#include <stdio.h>
#include <string.h>
#define MVAL(macro) MVAL1(macro)
#define MVAL1(expression) #expression
static const char *macro_values[] =
  {
#ifdef INT8_MAX
    MVAL (INT8_MAX),
#endif
#ifdef INT16_MAX
    MVAL (INT16_MAX),
#endif
#ifdef INT32_MAX
    MVAL (INT32_MAX),
#endif
#ifdef INT64_MAX
    MVAL (INT64_MAX),
#endif
#ifdef UINT8_MAX
    MVAL (UINT8_MAX),
#endif
#ifdef UINT16_MAX
    MVAL (UINT16_MAX),
#endif
#ifdef UINT32_MAX
    MVAL (UINT32_MAX),
#endif
#ifdef UINT64_MAX
    MVAL (UINT64_MAX),
#endif
    NULL
  };
]], [[
  const char **mv;
  for (mv = macro_values; *mv != NULL; mv++)
    {
      const char *value = *mv;
      /* Test whether it looks like a cast expression.  */
      if (strncmp (value, "((unsigned int)"/*)*/, 15) == 0
          || strncmp (value, "((unsigned short)"/*)*/, 17) == 0
          || strncmp (value, "((unsigned char)"/*)*/, 16) == 0
          || strncmp (value, "((int)"/*)*/, 6) == 0
          || strncmp (value, "((signed short)"/*)*/, 15) == 0
          || strncmp (value, "((signed char)"/*)*/, 14) == 0)
        return mv - macro_values + 1;
    }
  return 0;
]])],
              [gl_cv_header_working_stdint_h=yes],
              [],
              [case "$host_os" in
                         # Guess yes on native Windows.
                 mingw*) gl_cv_header_working_stdint_h="guessing yes" ;;
                         # In general, assume it works.
                 *)      gl_cv_header_working_stdint_h="guessing yes" ;;
               esac
              ])
         ])
      ])
  fi

  HAVE_C99_STDINT_H=0
  HAVE_SYS_BITYPES_H=0
  HAVE_SYS_INTTYPES_H=0
  STDINT_H=stdint.h
  case "$gl_cv_header_working_stdint_h" in
    *yes)
      HAVE_C99_STDINT_H=1
      dnl Now see whether the system <stdint.h> works without
      dnl __STDC_CONSTANT_MACROS/__STDC_LIMIT_MACROS defined.
      dnl If not, there would be problems when stdint.h is included from C++.
      AC_CACHE_CHECK([whether stdint.h works without ISO C predefines],
        [gl_cv_header_stdint_without_STDC_macros],
        [gl_cv_header_stdint_without_STDC_macros=no
         AC_COMPILE_IFELSE([
           AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#include <stdint.h>
]
gl_STDINT_INCLUDES
[
intmax_t im = INTMAX_MAX;
int32_t i32 = INT32_C (0x7fffffff);
           ]])],
           [gl_cv_header_stdint_without_STDC_macros=yes])
        ])

      if test $gl_cv_header_stdint_without_STDC_macros = no; then
        AC_DEFINE([__STDC_CONSTANT_MACROS], [1],
          [Define to 1 if the system <stdint.h> predates C++11.])
        AC_DEFINE([__STDC_LIMIT_MACROS], [1],
          [Define to 1 if the system <stdint.h> predates C++11.])
      fi
      AC_CACHE_CHECK([whether stdint.h has UINTMAX_WIDTH etc.],
        [gl_cv_header_stdint_width],
        [gl_cv_header_stdint_width=no
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([[
              /* Work if build is not clean.  */
              #define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1
              #ifndef __STDC_WANT_IEC_60559_BFP_EXT__
               #define __STDC_WANT_IEC_60559_BFP_EXT__ 1
              #endif
              #include <stdint.h>
              ]gl_STDINT_INCLUDES[
              int iw = UINTMAX_WIDTH;
              ]])],
           [gl_cv_header_stdint_width=yes])])
      if test "$gl_cv_header_stdint_width" = yes; then
        STDINT_H=
      fi
      ;;
    *)
      dnl Check for <sys/inttypes.h>, and for
      dnl <sys/bitypes.h> (used in Linux libc4 >= 4.6.7 and libc5).
      AC_CHECK_HEADERS([sys/inttypes.h sys/bitypes.h])
      if test $ac_cv_header_sys_inttypes_h = yes; then
        HAVE_SYS_INTTYPES_H=1
      fi
      if test $ac_cv_header_sys_bitypes_h = yes; then
        HAVE_SYS_BITYPES_H=1
      fi
      gl_STDINT_TYPE_PROPERTIES
      ;;
  esac

  dnl The substitute stdint.h needs the substitute limit.h's _GL_INTEGER_WIDTH.
  gl_REPLACE_LIMITS_H

  AC_SUBST([HAVE_C99_STDINT_H])
  AC_SUBST([HAVE_SYS_BITYPES_H])
  AC_SUBST([HAVE_SYS_INTTYPES_H])
  AC_SUBST([STDINT_H])
  AM_CONDITIONAL([GL_GENERATE_STDINT_H], [test -n "$STDINT_H"])
])
m4trace:m4/stdint.m4:373: -1- AC_DEFUN([gl_STDINT_BITSIZEOF], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE([BITSIZEOF_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]),
       [Define to the number of bits in type ']gltype['.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([for bit size of $gltype], [gl_cv_bitsizeof_${gltype}],
      [AC_COMPUTE_INT([result], [sizeof ($gltype) * CHAR_BIT],
         [$2
#include <limits.h>], [result=unknown])
       eval gl_cv_bitsizeof_${gltype}=\$result
      ])
    eval result=\$gl_cv_bitsizeof_${gltype}
    if test $result = unknown; then
      dnl Use a nonempty default, because some compilers, such as IRIX 5 cc,
      dnl do a syntax check even on unused #if conditions and give an error
      dnl on valid C code like this:
      dnl   #if 0
      dnl   # if  > 32
      dnl   # endif
      dnl   #endif
      result=0
    fi
    GLTYPE=`echo "$gltype" | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    AC_DEFINE_UNQUOTED([BITSIZEOF_${GLTYPE}], [$result])
    eval BITSIZEOF_${GLTYPE}=\$result
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST([BITSIZEOF_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]))])
])
m4trace:m4/stdint.m4:411: -1- AC_DEFUN([gl_CHECK_TYPES_SIGNED], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE([HAVE_SIGNED_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]),
       [Define to 1 if ']gltype[' is a signed integer type.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([whether $gltype is signed], [gl_cv_type_${gltype}_signed],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([$2[
            int verify[2 * (($gltype) -1 < ($gltype) 0) - 1];]])],
         result=yes, result=no)
       eval gl_cv_type_${gltype}_signed=\$result
      ])
    eval result=\$gl_cv_type_${gltype}_signed
    GLTYPE=`echo $gltype | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    if test "$result" = yes; then
      AC_DEFINE_UNQUOTED([HAVE_SIGNED_${GLTYPE}], [1])
      eval HAVE_SIGNED_${GLTYPE}=1
    else
      eval HAVE_SIGNED_${GLTYPE}=0
    fi
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST([HAVE_SIGNED_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]))])
])
m4trace:m4/stdint.m4:444: -1- AC_DEFUN([gl_INTEGER_TYPE_SUFFIX], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE(m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_])[_SUFFIX],
       [Define to l, ll, u, ul, ull, etc., as suitable for
        constants of type ']gltype['.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([for $gltype integer literal suffix],
      [gl_cv_type_${gltype}_suffix],
      [eval gl_cv_type_${gltype}_suffix=no
       eval result=\$gl_cv_type_${gltype}_signed
       if test "$result" = yes; then
         glsufu=
       else
         glsufu=u
       fi
       for glsuf in "$glsufu" ${glsufu}l ${glsufu}ll ${glsufu}i64; do
         case $glsuf in
           '')  gltype1='int';;
           l)   gltype1='long int';;
           ll)  gltype1='long long int';;
           i64) gltype1='__int64';;
           u)   gltype1='unsigned int';;
           ul)  gltype1='unsigned long int';;
           ull) gltype1='unsigned long long int';;
           ui64)gltype1='unsigned __int64';;
         esac
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([$2[
              extern $gltype foo;
              extern $gltype1 foo;]])],
           [eval gl_cv_type_${gltype}_suffix=\$glsuf])
         eval result=\$gl_cv_type_${gltype}_suffix
         test "$result" != no && break
       done])
    GLTYPE=`echo $gltype | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    eval result=\$gl_cv_type_${gltype}_suffix
    test "$result" = no && result=
    eval ${GLTYPE}_SUFFIX=\$result
    AC_DEFINE_UNQUOTED([${GLTYPE}_SUFFIX], [$result])
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST(m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_])[_SUFFIX])])
])
m4trace:m4/stdint.m4:494: -1- AC_DEFUN([gl_STDINT_INCLUDES], [[
  #include <stddef.h>
  #include <signal.h>
  #if HAVE_WCHAR_H
  # include <wchar.h>
  #endif
]])
m4trace:m4/stdint.m4:506: -1- AC_DEFUN([gl_STDINT_TYPE_PROPERTIES], [
  AC_REQUIRE([gl_MULTIARCH])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_STDINT_BITSIZEOF([ptrdiff_t size_t],
      [gl_STDINT_INCLUDES])
  fi
  gl_STDINT_BITSIZEOF([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])
  gl_CHECK_TYPES_SIGNED([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])
  gl_cv_type_ptrdiff_t_signed=yes
  gl_cv_type_size_t_signed=no
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTEGER_TYPE_SUFFIX([ptrdiff_t size_t],
      [gl_STDINT_INCLUDES])
  fi
  gl_INTEGER_TYPE_SUFFIX([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])

  dnl If wint_t is smaller than 'int', it cannot satisfy the ISO C 99
  dnl requirement that wint_t is "unchanged by default argument promotions".
  dnl In this case gnulib's <wchar.h> and <wctype.h> override wint_t.
  dnl Set the variable BITSIZEOF_WINT_T accordingly.
  if test $GNULIBHEADERS_OVERRIDE_WINT_T = 1; then
    BITSIZEOF_WINT_T=32
  fi
])
m4trace:m4/stdint_h.m4:12: -1- AC_DEFUN([gl_AC_HEADER_STDINT_H], [
  AC_CACHE_CHECK([for stdint.h], [gl_cv_header_stdint_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>
            #include <stdint.h>]],
          [[uintmax_t i = (uintmax_t) -1; return !i;]])],
       [gl_cv_header_stdint_h=yes],
       [gl_cv_header_stdint_h=no])])
  if test $gl_cv_header_stdint_h = yes; then
    AC_DEFINE_UNQUOTED([HAVE_STDINT_H_WITH_UINTMAX], [1],
      [Define if <stdint.h> exists, doesn't clash with <sys/types.h>,
       and declares uintmax_t. ])
  fi
])
m4trace:m4/stdio_h.m4:7: -1- AC_DEFUN_ONCE([gl_STDIO_H], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  AH_VERBATIM([MINGW_ANSI_STDIO],
[/* Use GNU style printf and scanf.  */
#ifndef __USE_MINGW_ANSI_STDIO
# undef __USE_MINGW_ANSI_STDIO
#endif
])
  AC_DEFINE([__USE_MINGW_ANSI_STDIO])
  gl_NEXT_HEADERS([stdio.h])

  dnl Determine whether __USE_MINGW_ANSI_STDIO makes printf and
  dnl inttypes.h behave like gnu instead of system; we must give our
  dnl printf wrapper the right attribute to match.
  AC_CACHE_CHECK([which flavor of printf attribute matches inttypes macros],
    [gl_cv_func_printf_attribute_flavor],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
       #define __STDC_FORMAT_MACROS 1
       #include <stdio.h>
       #include <inttypes.h>
       /* For non-mingw systems, compilation will trivially succeed.
          For mingw, compilation will succeed for older mingw (system
          printf, "I64d") and fail for newer mingw (gnu printf, "lld"). */
       #if (defined _WIN32 && ! defined __CYGWIN__) && \
         (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 4))
       extern char PRIdMAX_probe[sizeof PRIdMAX == sizeof "I64d" ? 1 : -1];
       #endif
      ]])], [gl_cv_func_printf_attribute_flavor=system],
      [gl_cv_func_printf_attribute_flavor=gnu])])
  if test "$gl_cv_func_printf_attribute_flavor" = gnu; then
    AC_DEFINE([GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU], [1],
      [Define to 1 if printf and friends should be labeled with
       attribute "__gnu_printf__" instead of "__printf__"])
  fi

  dnl This ifdef is necessary to avoid an error "missing file lib/stdio-read.c"
  dnl "expected source file, required through AC_LIBSOURCES, not found". It is
  dnl also an optimization, to avoid performing a configure check whose result
  dnl is not used. But it does not make the test of GNULIB_STDIO_H_NONBLOCKING
  dnl or GNULIB_NONBLOCKING redundant.
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_STDIO_READ_FUNCS=1
      AC_LIBOBJ([stdio-read])
    fi
  ])

  dnl This ifdef is necessary to avoid an error "missing file lib/stdio-write.c"
  dnl "expected source file, required through AC_LIBSOURCES, not found". It is
  dnl also an optimization, to avoid performing a configure check whose result
  dnl is not used. But it does not make the test of GNULIB_STDIO_H_SIGPIPE or
  dnl GNULIB_SIGPIPE redundant.
  m4_ifdef([gl_SIGNAL_SIGPIPE], [
    gl_SIGNAL_SIGPIPE
    if test $gl_cv_header_signal_h_SIGPIPE != yes; then
      REPLACE_STDIO_WRITE_FUNCS=1
      AC_LIBOBJ([stdio-write])
    fi
  ])
  dnl This ifdef is necessary to avoid an error "missing file lib/stdio-write.c"
  dnl "expected source file, required through AC_LIBSOURCES, not found". It is
  dnl also an optimization, to avoid performing a configure check whose result
  dnl is not used. But it does not make the test of GNULIB_STDIO_H_NONBLOCKING
  dnl or GNULIB_NONBLOCKING redundant.
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_STDIO_WRITE_FUNCS=1
      AC_LIBOBJ([stdio-write])
    fi
  ])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by both C89 and C11.
  gl_WARN_ON_USE_PREPARE([[#include <stdio.h>
    ]], [dprintf fpurge fseeko ftello getdelim getline gets pclose popen
    renameat snprintf tmpfile vdprintf vsnprintf])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS_ONCE([fcloseall])
  if test $ac_cv_have_decl_fcloseall = no; then
    HAVE_DECL_FCLOSEALL=0
  fi
])
m4trace:m4/stdio_h.m4:100: -1- AC_DEFUN([gl_STDIO_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STDIO_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/stdio_h.m4:112: -1- AC_DEFUN([gl_STDIO_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STDIO_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFLUSH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPURGE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREAD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEKO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELLO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FWRITE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCHAR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDELIM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLINE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PCLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PERROR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTCHAR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMOVE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAMEAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SNPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_NONBLOCKING])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_SIGPIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TMPFILE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VASPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFSCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VDPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSNPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSPRINTF_POSIX])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCLOSEALL], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FDOPEN], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FILENO], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETW], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTW], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TEMPNAM], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STDIO_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
])
m4trace:m4/stdio_h.m4:180: -1- AC_DEFUN([gl_STDIO_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_FCLOSEALL=1;         AC_SUBST([HAVE_DECL_FCLOSEALL])
  HAVE_DECL_FPURGE=1;            AC_SUBST([HAVE_DECL_FPURGE])
  HAVE_DECL_FSEEKO=1;            AC_SUBST([HAVE_DECL_FSEEKO])
  HAVE_DECL_FTELLO=1;            AC_SUBST([HAVE_DECL_FTELLO])
  HAVE_DECL_GETDELIM=1;          AC_SUBST([HAVE_DECL_GETDELIM])
  HAVE_DECL_GETLINE=1;           AC_SUBST([HAVE_DECL_GETLINE])
  HAVE_DECL_OBSTACK_PRINTF=1;    AC_SUBST([HAVE_DECL_OBSTACK_PRINTF])
  HAVE_DECL_SNPRINTF=1;          AC_SUBST([HAVE_DECL_SNPRINTF])
  HAVE_DECL_VSNPRINTF=1;         AC_SUBST([HAVE_DECL_VSNPRINTF])
  HAVE_DPRINTF=1;                AC_SUBST([HAVE_DPRINTF])
  HAVE_FSEEKO=1;                 AC_SUBST([HAVE_FSEEKO])
  HAVE_FTELLO=1;                 AC_SUBST([HAVE_FTELLO])
  HAVE_PCLOSE=1;                 AC_SUBST([HAVE_PCLOSE])
  HAVE_POPEN=1;                  AC_SUBST([HAVE_POPEN])
  HAVE_RENAMEAT=1;               AC_SUBST([HAVE_RENAMEAT])
  HAVE_VASPRINTF=1;              AC_SUBST([HAVE_VASPRINTF])
  HAVE_VDPRINTF=1;               AC_SUBST([HAVE_VDPRINTF])
  REPLACE_DPRINTF=0;             AC_SUBST([REPLACE_DPRINTF])
  REPLACE_FCLOSE=0;              AC_SUBST([REPLACE_FCLOSE])
  REPLACE_FDOPEN=0;              AC_SUBST([REPLACE_FDOPEN])
  REPLACE_FFLUSH=0;              AC_SUBST([REPLACE_FFLUSH])
  REPLACE_FOPEN=0;               AC_SUBST([REPLACE_FOPEN])
  REPLACE_FPRINTF=0;             AC_SUBST([REPLACE_FPRINTF])
  REPLACE_FPURGE=0;              AC_SUBST([REPLACE_FPURGE])
  REPLACE_FREOPEN=0;             AC_SUBST([REPLACE_FREOPEN])
  REPLACE_FSEEK=0;               AC_SUBST([REPLACE_FSEEK])
  REPLACE_FSEEKO=0;              AC_SUBST([REPLACE_FSEEKO])
  REPLACE_FTELL=0;               AC_SUBST([REPLACE_FTELL])
  REPLACE_FTELLO=0;              AC_SUBST([REPLACE_FTELLO])
  REPLACE_GETDELIM=0;            AC_SUBST([REPLACE_GETDELIM])
  REPLACE_GETLINE=0;             AC_SUBST([REPLACE_GETLINE])
  REPLACE_OBSTACK_PRINTF=0;      AC_SUBST([REPLACE_OBSTACK_PRINTF])
  REPLACE_PERROR=0;              AC_SUBST([REPLACE_PERROR])
  REPLACE_POPEN=0;               AC_SUBST([REPLACE_POPEN])
  REPLACE_PRINTF=0;              AC_SUBST([REPLACE_PRINTF])
  REPLACE_REMOVE=0;              AC_SUBST([REPLACE_REMOVE])
  REPLACE_RENAME=0;              AC_SUBST([REPLACE_RENAME])
  REPLACE_RENAMEAT=0;            AC_SUBST([REPLACE_RENAMEAT])
  REPLACE_SNPRINTF=0;            AC_SUBST([REPLACE_SNPRINTF])
  REPLACE_SPRINTF=0;             AC_SUBST([REPLACE_SPRINTF])
  REPLACE_STDIO_READ_FUNCS=0;    AC_SUBST([REPLACE_STDIO_READ_FUNCS])
  REPLACE_STDIO_WRITE_FUNCS=0;   AC_SUBST([REPLACE_STDIO_WRITE_FUNCS])
  REPLACE_TMPFILE=0;             AC_SUBST([REPLACE_TMPFILE])
  REPLACE_VASPRINTF=0;           AC_SUBST([REPLACE_VASPRINTF])
  REPLACE_VDPRINTF=0;            AC_SUBST([REPLACE_VDPRINTF])
  REPLACE_VFPRINTF=0;            AC_SUBST([REPLACE_VFPRINTF])
  REPLACE_VPRINTF=0;             AC_SUBST([REPLACE_VPRINTF])
  REPLACE_VSNPRINTF=0;           AC_SUBST([REPLACE_VSNPRINTF])
  REPLACE_VSPRINTF=0;            AC_SUBST([REPLACE_VSPRINTF])
])
m4trace:m4/stdlib_h.m4:7: -1- AC_DEFUN_ONCE([gl_STDLIB_H], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  gl_NEXT_HEADERS([stdlib.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <stdlib.h>
#if HAVE_SYS_LOADAVG_H
/* OpenIndiana has a bug: <sys/time.h> must be included before
   <sys/loadavg.h>.  */
# include <sys/time.h>
# include <sys/loadavg.h>
#endif
#if HAVE_RANDOM_H
# include <random.h>
#endif
    ]], [_Exit aligned_alloc atoll canonicalize_file_name free
    getloadavg getsubopt grantpt
    initstate initstate_r mbtowc mkdtemp mkostemp mkostemps mkstemp mkstemps
    posix_memalign posix_openpt ptsname ptsname_r qsort_r
    random random_r reallocarray realpath rpmatch secure_getenv setenv
    setstate setstate_r srandom srandom_r
    strtod strtol strtold strtoll strtoul strtoull unlockpt unsetenv])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS_ONCE([ecvt])
  if test $ac_cv_have_decl_ecvt = no; then
    HAVE_DECL_ECVT=0
  fi
  AC_CHECK_DECLS_ONCE([fcvt])
  if test $ac_cv_have_decl_fcvt = no; then
    HAVE_DECL_FCVT=0
  fi
  AC_CHECK_DECLS_ONCE([gcvt])
  if test $ac_cv_have_decl_gcvt = no; then
    HAVE_DECL_GCVT=0
  fi
])
m4trace:m4/stdlib_h.m4:53: -1- AC_DEFUN([gl_STDLIB_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STDLIB_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/stdlib_h.m4:65: -1- AC_DEFUN([gl_STDLIB_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STDLIB_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB__EXIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALIGNED_ALLOC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATOLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CALLOC_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CANONICALIZE_FILE_NAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREE_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOADAVG])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSUBOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GRANTPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MALLOC_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBTOWC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDTEMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMPS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMPS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_MEMALIGN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_OPENPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_QSORT_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOCARRAY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOC_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALPATH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RPMATCH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SECURE_GETENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOULL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYSTEM_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLOCKPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNSETENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOMB])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ECVT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCVT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GCVT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKTEMP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTENV], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STDLIB_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
])
m4trace:m4/stdlib_h.m4:119: -1- AC_DEFUN([gl_STDLIB_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE__EXIT=1;              AC_SUBST([HAVE__EXIT])
  HAVE_ALIGNED_ALLOC=1;      AC_SUBST([HAVE_ALIGNED_ALLOC])
  HAVE_ATOLL=1;              AC_SUBST([HAVE_ATOLL])
  HAVE_CANONICALIZE_FILE_NAME=1;  AC_SUBST([HAVE_CANONICALIZE_FILE_NAME])
  HAVE_DECL_ECVT=1;          AC_SUBST([HAVE_DECL_ECVT])
  HAVE_DECL_FCVT=1;          AC_SUBST([HAVE_DECL_FCVT])
  HAVE_DECL_GCVT=1;          AC_SUBST([HAVE_DECL_GCVT])
  HAVE_DECL_GETLOADAVG=1;    AC_SUBST([HAVE_DECL_GETLOADAVG])
  HAVE_GETSUBOPT=1;          AC_SUBST([HAVE_GETSUBOPT])
  HAVE_GRANTPT=1;            AC_SUBST([HAVE_GRANTPT])
  HAVE_INITSTATE=1;          AC_SUBST([HAVE_INITSTATE])
  HAVE_DECL_INITSTATE=1;     AC_SUBST([HAVE_DECL_INITSTATE])
  HAVE_MBTOWC=1;             AC_SUBST([HAVE_MBTOWC])
  HAVE_MKDTEMP=1;            AC_SUBST([HAVE_MKDTEMP])
  HAVE_MKOSTEMP=1;           AC_SUBST([HAVE_MKOSTEMP])
  HAVE_MKOSTEMPS=1;          AC_SUBST([HAVE_MKOSTEMPS])
  HAVE_MKSTEMP=1;            AC_SUBST([HAVE_MKSTEMP])
  HAVE_MKSTEMPS=1;           AC_SUBST([HAVE_MKSTEMPS])
  HAVE_POSIX_MEMALIGN=1;     AC_SUBST([HAVE_POSIX_MEMALIGN])
  HAVE_POSIX_OPENPT=1;       AC_SUBST([HAVE_POSIX_OPENPT])
  HAVE_PTSNAME=1;            AC_SUBST([HAVE_PTSNAME])
  HAVE_PTSNAME_R=1;          AC_SUBST([HAVE_PTSNAME_R])
  HAVE_QSORT_R=1;            AC_SUBST([HAVE_QSORT_R])
  HAVE_RANDOM=1;             AC_SUBST([HAVE_RANDOM])
  HAVE_RANDOM_H=1;           AC_SUBST([HAVE_RANDOM_H])
  HAVE_RANDOM_R=1;           AC_SUBST([HAVE_RANDOM_R])
  HAVE_REALLOCARRAY=1;       AC_SUBST([HAVE_REALLOCARRAY])
  HAVE_REALPATH=1;           AC_SUBST([HAVE_REALPATH])
  HAVE_RPMATCH=1;            AC_SUBST([HAVE_RPMATCH])
  HAVE_SECURE_GETENV=1;      AC_SUBST([HAVE_SECURE_GETENV])
  HAVE_SETENV=1;             AC_SUBST([HAVE_SETENV])
  HAVE_DECL_SETENV=1;        AC_SUBST([HAVE_DECL_SETENV])
  HAVE_SETSTATE=1;           AC_SUBST([HAVE_SETSTATE])
  HAVE_DECL_SETSTATE=1;      AC_SUBST([HAVE_DECL_SETSTATE])
  HAVE_STRTOD=1;             AC_SUBST([HAVE_STRTOD])
  HAVE_STRTOL=1;             AC_SUBST([HAVE_STRTOL])
  HAVE_STRTOLD=1;            AC_SUBST([HAVE_STRTOLD])
  HAVE_STRTOLL=1;            AC_SUBST([HAVE_STRTOLL])
  HAVE_STRTOUL=1;            AC_SUBST([HAVE_STRTOUL])
  HAVE_STRTOULL=1;           AC_SUBST([HAVE_STRTOULL])
  HAVE_STRUCT_RANDOM_DATA=1; AC_SUBST([HAVE_STRUCT_RANDOM_DATA])
  HAVE_SYS_LOADAVG_H=0;      AC_SUBST([HAVE_SYS_LOADAVG_H])
  HAVE_UNLOCKPT=1;           AC_SUBST([HAVE_UNLOCKPT])
  HAVE_DECL_UNSETENV=1;      AC_SUBST([HAVE_DECL_UNSETENV])
  REPLACE_ALIGNED_ALLOC=0;   AC_SUBST([REPLACE_ALIGNED_ALLOC])
  REPLACE_CALLOC=0;          AC_SUBST([REPLACE_CALLOC])
  REPLACE_CANONICALIZE_FILE_NAME=0;  AC_SUBST([REPLACE_CANONICALIZE_FILE_NAME])
  REPLACE_FREE=0;            AC_SUBST([REPLACE_FREE])
  REPLACE_INITSTATE=0;       AC_SUBST([REPLACE_INITSTATE])
  REPLACE_MALLOC=0;          AC_SUBST([REPLACE_MALLOC])
  REPLACE_MBTOWC=0;          AC_SUBST([REPLACE_MBTOWC])
  REPLACE_MKSTEMP=0;         AC_SUBST([REPLACE_MKSTEMP])
  REPLACE_POSIX_MEMALIGN=0;  AC_SUBST([REPLACE_POSIX_MEMALIGN])
  REPLACE_PTSNAME=0;         AC_SUBST([REPLACE_PTSNAME])
  REPLACE_PTSNAME_R=0;       AC_SUBST([REPLACE_PTSNAME_R])
  REPLACE_PUTENV=0;          AC_SUBST([REPLACE_PUTENV])
  REPLACE_QSORT_R=0;         AC_SUBST([REPLACE_QSORT_R])
  REPLACE_RANDOM=0;          AC_SUBST([REPLACE_RANDOM])
  REPLACE_RANDOM_R=0;        AC_SUBST([REPLACE_RANDOM_R])
  REPLACE_REALLOC=0;         AC_SUBST([REPLACE_REALLOC])
  REPLACE_REALLOCARRAY=0;    AC_SUBST([REPLACE_REALLOCARRAY])
  REPLACE_REALPATH=0;        AC_SUBST([REPLACE_REALPATH])
  REPLACE_SETENV=0;          AC_SUBST([REPLACE_SETENV])
  REPLACE_SETSTATE=0;        AC_SUBST([REPLACE_SETSTATE])
  REPLACE_STRTOD=0;          AC_SUBST([REPLACE_STRTOD])
  REPLACE_STRTOL=0;          AC_SUBST([REPLACE_STRTOL])
  REPLACE_STRTOLD=0;         AC_SUBST([REPLACE_STRTOLD])
  REPLACE_STRTOLL=0;         AC_SUBST([REPLACE_STRTOLL])
  REPLACE_STRTOUL=0;         AC_SUBST([REPLACE_STRTOUL])
  REPLACE_STRTOULL=0;        AC_SUBST([REPLACE_STRTOULL])
  REPLACE_UNSETENV=0;        AC_SUBST([REPLACE_UNSETENV])
  REPLACE_WCTOMB=0;          AC_SUBST([REPLACE_WCTOMB])
])
m4trace:m4/stpcpy.m4:7: -1- AC_DEFUN([gl_FUNC_STPCPY], [
  dnl Persuade glibc <string.h> to declare stpcpy().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl The stpcpy() declaration in lib/string.in.h uses 'restrict'.
  AC_REQUIRE([AC_C_RESTRICT])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_FUNCS([stpcpy])
  if test $ac_cv_func_stpcpy = no; then
    HAVE_STPCPY=0
  fi
])
m4trace:m4/stpcpy.m4:23: -1- AC_DEFUN([gl_PREREQ_STPCPY], [
  :
])
m4trace:m4/strcase.m4:7: -1- AC_DEFUN([gl_STRCASE], [
  gl_FUNC_STRCASECMP
  gl_FUNC_STRNCASECMP
])
m4trace:m4/strcase.m4:13: -1- AC_DEFUN([gl_FUNC_STRCASECMP], [
  AC_REQUIRE([gl_STRINGS_H_DEFAULTS])
  AC_CHECK_FUNCS([strcasecmp])
  if test $ac_cv_func_strcasecmp = no; then
    HAVE_STRCASECMP=0
  fi
])
m4trace:m4/strcase.m4:22: -1- AC_DEFUN([gl_FUNC_STRNCASECMP], [
  AC_REQUIRE([gl_STRINGS_H_DEFAULTS])
  AC_CHECK_FUNCS([strncasecmp])
  if test $ac_cv_func_strncasecmp = yes; then
    HAVE_STRNCASECMP=1
  else
    HAVE_STRNCASECMP=0
  fi
  AC_CHECK_DECLS([strncasecmp])
  if test $ac_cv_have_decl_strncasecmp = no; then
    HAVE_DECL_STRNCASECMP=0
  fi
])
m4trace:m4/strcase.m4:38: -1- AC_DEFUN([gl_PREREQ_STRCASECMP], [
  :
])
m4trace:m4/strcase.m4:43: -1- AC_DEFUN([gl_PREREQ_STRNCASECMP], [
  :
])
m4trace:m4/strdup.m4:9: -1- AC_DEFUN([gl_FUNC_STRDUP], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_DECLS_ONCE([strdup])
  if test $ac_cv_have_decl_strdup = no; then
    HAVE_DECL_STRDUP=0
  fi
])
m4trace:m4/strdup.m4:18: -1- AC_DEFUN([gl_FUNC_STRDUP_POSIX], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_MALLOC_POSIX])
  if test $gl_cv_func_malloc_posix != yes; then
    REPLACE_STRDUP=1
  fi
  AC_CHECK_DECLS_ONCE([strdup])
  if test $ac_cv_have_decl_strdup = no; then
    HAVE_DECL_STRDUP=0
  fi
])
m4trace:m4/strdup.m4:32: -1- AC_DEFUN([gl_PREREQ_STRDUP], [:])
m4trace:m4/strerror.m4:7: -1- AC_DEFUN([gl_FUNC_STRERROR], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_REQUIRE([gl_HEADER_ERRNO_H])
  AC_REQUIRE([gl_FUNC_STRERROR_0])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  m4_ifdef([gl_FUNC_STRERROR_R_WORKS], [
    AC_REQUIRE([gl_FUNC_STRERROR_R_WORKS])
  ])
  if test "$ERRNO_H:$REPLACE_STRERROR_0" = :0; then
    AC_CACHE_CHECK([for working strerror function],
     [gl_cv_func_working_strerror],
     [AC_RUN_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <string.h>
           ]],
           [[if (!*strerror (-2)) return 1;]])],
        [gl_cv_func_working_strerror=yes],
        [gl_cv_func_working_strerror=no],
        [case "$host_os" in
                          # Guess yes on glibc systems.
           *-gnu* | gnu*) gl_cv_func_working_strerror="guessing yes" ;;
                          # Guess yes on musl systems.
           *-musl*)       gl_cv_func_working_strerror="guessing yes" ;;
                          # If we don't know, obey --enable-cross-guesses.
           *)             gl_cv_func_working_strerror="$gl_cross_guess_normal" ;;
         esac
        ])
    ])
    case "$gl_cv_func_working_strerror" in
      *yes) ;;
      *)
        dnl The system's strerror() fails to return a string for out-of-range
        dnl integers. Replace it.
        REPLACE_STRERROR=1
        ;;
    esac
    m4_ifdef([gl_FUNC_STRERROR_R_WORKS], [
      dnl If the system's strerror_r or __xpg_strerror_r clobbers strerror's
      dnl buffer, we must replace strerror.
      case "$gl_cv_func_strerror_r_works" in
        *no) REPLACE_STRERROR=1 ;;
      esac
    ])
  else
    dnl The system's strerror() cannot know about the new errno values we add
    dnl to <errno.h>, or any fix for strerror(0). Replace it.
    REPLACE_STRERROR=1
  fi
])
m4trace:m4/strerror.m4:60: -1- AC_DEFUN([gl_FUNC_STRERROR_0], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  REPLACE_STRERROR_0=0
  AC_CACHE_CHECK([whether strerror(0) succeeds],
   [gl_cv_func_strerror_0_works],
   [AC_RUN_IFELSE(
      [AC_LANG_PROGRAM(
         [[#include <string.h>
           #include <errno.h>
         ]],
         [[int result = 0;
           char *str;
           errno = 0;
           str = strerror (0);
           if (!*str) result |= 1;
           if (errno) result |= 2;
           if (strstr (str, "nknown") || strstr (str, "ndefined"))
             result |= 4;
           return result;]])],
      [gl_cv_func_strerror_0_works=yes],
      [gl_cv_func_strerror_0_works=no],
      [case "$host_os" in
                        # Guess yes on glibc systems.
         *-gnu* | gnu*) gl_cv_func_strerror_0_works="guessing yes" ;;
                        # Guess yes on musl systems.
         *-musl*)       gl_cv_func_strerror_0_works="guessing yes" ;;
                        # Guess yes on native Windows.
         mingw*)        gl_cv_func_strerror_0_works="guessing yes" ;;
                        # If we don't know, obey --enable-cross-guesses.
         *)             gl_cv_func_strerror_0_works="$gl_cross_guess_normal" ;;
       esac
      ])
  ])
  case "$gl_cv_func_strerror_0_works" in
    *yes) ;;
    *)
      REPLACE_STRERROR_0=1
      AC_DEFINE([REPLACE_STRERROR_0], [1], [Define to 1 if strerror(0)
        does not return a message implying success.])
      ;;
  esac
])
m4trace:m4/string_h.m4:12: -1- AC_DEFUN_ONCE([gl_STRING_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  gl_NEXT_HEADERS([string.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <string.h>
    ]],
    [ffsl ffsll memmem mempcpy memrchr rawmemchr stpcpy stpncpy strchrnul
     strdup strncat strndup strnlen strpbrk strsep strcasestr strtok_r
     strerror_r strerrorname_np sigabbrev_np sigdescr_np strsignal strverscmp])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/string_h.m4:35: -1- AC_DEFUN([gl_STRING_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STRING_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/string_h.m4:47: -1- AC_DEFUN([gl_STRING_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STRING_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPLICIT_BZERO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMMEM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMRCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAWMEMCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPNCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCHRNUL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRDUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNCAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNDUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPBRK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCASESTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOK_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASESTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPBRK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSTOK_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERRORNAME_NP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGABBREV_NP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGDESCR_NP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSIGNAL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRVERSCMP])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MEMCCPY], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_STRDUP], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STRING_H_MODULE_INDICATOR_DEFAULTS])
  dnl Make sure the shell variable for GNULIB_FREE_POSIX is initialized.
  gl_STDLIB_H_REQUIRE_DEFAULTS
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
])
m4trace:m4/string_h.m4:101: -1- AC_DEFUN([gl_STRING_H_DEFAULTS], [
  HAVE_MBSLEN=0;             AC_SUBST([HAVE_MBSLEN])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_EXPLICIT_BZERO=1;        AC_SUBST([HAVE_EXPLICIT_BZERO])
  HAVE_FFSL=1;                  AC_SUBST([HAVE_FFSL])
  HAVE_FFSLL=1;                 AC_SUBST([HAVE_FFSLL])
  HAVE_DECL_MEMMEM=1;           AC_SUBST([HAVE_DECL_MEMMEM])
  HAVE_MEMPCPY=1;               AC_SUBST([HAVE_MEMPCPY])
  HAVE_DECL_MEMRCHR=1;          AC_SUBST([HAVE_DECL_MEMRCHR])
  HAVE_RAWMEMCHR=1;             AC_SUBST([HAVE_RAWMEMCHR])
  HAVE_STPCPY=1;                AC_SUBST([HAVE_STPCPY])
  HAVE_STPNCPY=1;               AC_SUBST([HAVE_STPNCPY])
  HAVE_STRCHRNUL=1;             AC_SUBST([HAVE_STRCHRNUL])
  HAVE_DECL_STRDUP=1;           AC_SUBST([HAVE_DECL_STRDUP])
  HAVE_DECL_STRNDUP=1;          AC_SUBST([HAVE_DECL_STRNDUP])
  HAVE_DECL_STRNLEN=1;          AC_SUBST([HAVE_DECL_STRNLEN])
  HAVE_STRPBRK=1;               AC_SUBST([HAVE_STRPBRK])
  HAVE_STRSEP=1;                AC_SUBST([HAVE_STRSEP])
  HAVE_STRCASESTR=1;            AC_SUBST([HAVE_STRCASESTR])
  HAVE_DECL_STRTOK_R=1;         AC_SUBST([HAVE_DECL_STRTOK_R])
  HAVE_DECL_STRERROR_R=1;       AC_SUBST([HAVE_DECL_STRERROR_R])
  HAVE_STRERRORNAME_NP=1;       AC_SUBST([HAVE_STRERRORNAME_NP])
  HAVE_SIGABBREV_NP=1;          AC_SUBST([HAVE_SIGABBREV_NP])
  HAVE_SIGDESCR_NP=1;           AC_SUBST([HAVE_SIGDESCR_NP])
  HAVE_DECL_STRSIGNAL=1;        AC_SUBST([HAVE_DECL_STRSIGNAL])
  HAVE_STRVERSCMP=1;            AC_SUBST([HAVE_STRVERSCMP])
  REPLACE_FFSLL=0;              AC_SUBST([REPLACE_FFSLL])
  REPLACE_MEMCHR=0;             AC_SUBST([REPLACE_MEMCHR])
  REPLACE_MEMMEM=0;             AC_SUBST([REPLACE_MEMMEM])
  REPLACE_STPNCPY=0;            AC_SUBST([REPLACE_STPNCPY])
  REPLACE_STRCHRNUL=0;          AC_SUBST([REPLACE_STRCHRNUL])
  REPLACE_STRDUP=0;             AC_SUBST([REPLACE_STRDUP])
  REPLACE_STRNCAT=0;            AC_SUBST([REPLACE_STRNCAT])
  REPLACE_STRNDUP=0;            AC_SUBST([REPLACE_STRNDUP])
  REPLACE_STRNLEN=0;            AC_SUBST([REPLACE_STRNLEN])
  REPLACE_STRSTR=0;             AC_SUBST([REPLACE_STRSTR])
  REPLACE_STRCASESTR=0;         AC_SUBST([REPLACE_STRCASESTR])
  REPLACE_STRTOK_R=0;           AC_SUBST([REPLACE_STRTOK_R])
  REPLACE_STRERROR=0;           AC_SUBST([REPLACE_STRERROR])
  REPLACE_STRERROR_R=0;         AC_SUBST([REPLACE_STRERROR_R])
  REPLACE_STRERRORNAME_NP=0;    AC_SUBST([REPLACE_STRERRORNAME_NP])
  REPLACE_STRSIGNAL=0;          AC_SUBST([REPLACE_STRSIGNAL])
  UNDEFINE_STRTOK_R=0;          AC_SUBST([UNDEFINE_STRTOK_R])
])
m4trace:m4/strings_h.m4:9: -1- AC_DEFUN_ONCE([gl_STRINGS_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_STRINGS_H_DEFAULTS])

  gl_CHECK_NEXT_HEADERS([strings.h])
  if test $ac_cv_header_strings_h = yes; then
    HAVE_STRINGS_H=1
  else
    HAVE_STRINGS_H=0
  fi
  AC_SUBST([HAVE_STRINGS_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
    /* Minix 3.1.8 has a bug: <sys/types.h> must be included before
       <strings.h>.  */
    #include <sys/types.h>
    #include <strings.h>
    ]], [ffs strcasecmp strncasecmp])
])
m4trace:m4/strings_h.m4:37: -1- AC_DEFUN([gl_STRINGS_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STRINGS_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/strings_h.m4:47: -1- AC_DEFUN([gl_STRINGS_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STRINGS_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFS])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STRINGS_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STRINGS_H_DEFAULTS])
])
m4trace:m4/strings_h.m4:56: -1- AC_DEFUN([gl_STRINGS_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_FFS=1;              AC_SUBST([HAVE_FFS])
  HAVE_STRCASECMP=1;       AC_SUBST([HAVE_STRCASECMP])
  HAVE_DECL_STRNCASECMP=1; AC_SUBST([HAVE_DECL_STRNCASECMP])
])
m4trace:m4/strnlen.m4:8: -1- AC_DEFUN([gl_FUNC_STRNLEN], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])

  dnl Persuade glibc <string.h> to declare strnlen().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_DECLS_ONCE([strnlen])
  if test $ac_cv_have_decl_strnlen = no; then
    HAVE_DECL_STRNLEN=0
  else
    m4_pushdef([AC_LIBOBJ], [:])
    dnl Note: AC_FUNC_STRNLEN does AC_LIBOBJ([strnlen]).
    AC_FUNC_STRNLEN
    m4_popdef([AC_LIBOBJ])
    if test $ac_cv_func_strnlen_working = no; then
      REPLACE_STRNLEN=1
    fi
  fi
])
m4trace:m4/strnlen.m4:30: -1- AC_DEFUN([gl_PREREQ_STRNLEN], [:])
m4trace:m4/strptime.m4:7: -1- AC_DEFUN([gl_FUNC_STRPTIME], [
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CHECK_FUNCS_ONCE([strptime])
  if test $ac_cv_func_strptime != yes; then
    HAVE_STRPTIME=0
  fi
])
m4trace:m4/strptime.m4:18: -1- AC_DEFUN([gl_PREREQ_STRPTIME], [
  AC_REQUIRE([gl_TM_GMTOFF])
  :
])
m4trace:m4/strsignal.m4:7: -1- AC_DEFUN([gl_FUNC_STRSIGNAL], [
  dnl Persuade glibc <string.h> to declare strsignal().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_DECLS_ONCE([strsignal])
  if test $ac_cv_have_decl_strsignal = no; then
    HAVE_DECL_STRSIGNAL=0
  fi

  AC_CHECK_FUNCS([strsignal])
  if test $ac_cv_func_strsignal = yes; then
    HAVE_STRSIGNAL=1
    dnl Check if strsignal behaves reasonably for out-of-range signal numbers.
    dnl On Solaris it returns NULL; on AIX 5.1 it returns (char *) -1.
    AC_CACHE_CHECK([whether strsignal always returns a string],
      [gl_cv_func_working_strsignal],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <string.h>
#include <unistd.h> /* NetBSD 5.0 declares it in wrong header. */
            ]],
            [[int result = 0;
              char *s = strsignal (-1);
              if (s == (char *) 0)
                result |= 1;
              if (s == (char *) -1)
                result |= 2;
              return result;
            ]])],
         [gl_cv_func_working_strsignal=yes],
         [gl_cv_func_working_strsignal=no],
         [case "$host_os" in
            solaris* | aix*) gl_cv_func_working_strsignal=no;;
            *)               gl_cv_func_working_strsignal="guessing yes";;
          esac])])
    if test "$gl_cv_func_working_strsignal" = no; then
      REPLACE_STRSIGNAL=1
    fi
  else
    HAVE_STRSIGNAL=0
  fi
])
m4trace:m4/strsignal.m4:55: -1- AC_DEFUN([gl_PREREQ_STRSIGNAL], [
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_DECLS([sys_siglist], [], [], [[#include <signal.h>]])
  AC_CHECK_DECLS([_sys_siglist], [], [], [[#include <signal.h>]])
])
m4trace:m4/symlink.m4:11: -1- AC_DEFUN([gl_FUNC_SYMLINK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([symlink])
  dnl The best we can do on mingw is provide a dummy that always fails, so
  dnl that compilation can proceed with fewer ifdefs.  On FreeBSD 7.2, AIX 7.1,
  dnl and Solaris 9, we want to fix a bug with trailing slash handling.
  if test $ac_cv_func_symlink = no; then
    HAVE_SYMLINK=0
  else
    AC_CACHE_CHECK([whether symlink handles trailing slash correctly],
      [gl_cv_func_symlink_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
           ]],
           [[int result = 0;
             if (!symlink ("a", "conftest.link/"))
               result |= 1;
             if (symlink ("conftest.f", "conftest.lnk2"))
               result |= 2;
             else if (!symlink ("a", "conftest.lnk2/"))
               result |= 4;
             return result;
           ]])],
         [gl_cv_func_symlink_works=yes], [gl_cv_func_symlink_works=no],
         [case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_symlink_works="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_symlink_works="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_symlink_works="$gl_cross_guess_normal" ;;
          esac
         ])
      rm -f conftest.f conftest.link conftest.lnk2])
    case "$gl_cv_func_symlink_works" in
      *yes) ;;
      *)
        REPLACE_SYMLINK=1
        ;;
    esac
  fi
])
m4trace:m4/sys_random_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_RANDOM_H], [
  AC_REQUIRE([gl_SYS_RANDOM_H_DEFAULTS])
  dnl <sys/random.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/random.h])
  if test $ac_cv_header_sys_random_h = yes; then
    HAVE_SYS_RANDOM_H=1
  else
    HAVE_SYS_RANDOM_H=0
  fi
  AC_SUBST([HAVE_SYS_RANDOM_H])

  m4_ifdef([gl_UNISTD_H_DEFAULTS], [AC_REQUIRE([gl_UNISTD_H_DEFAULTS])])
  if test $ac_cv_header_sys_random_h = yes; then
    UNISTD_H_HAVE_SYS_RANDOM_H=1
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_RANDOM_H
/* Additional includes are needed before <sys/random.h> on uClibc
   and Mac OS X.  */
# include <sys/types.h>
# include <stdlib.h>
# include <sys/random.h>
#endif
    ]],
    [getrandom])
])
m4trace:m4/sys_random_h.m4:42: -1- AC_DEFUN([gl_SYS_RANDOM_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_RANDOM_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_random_h.m4:54: -1- AC_DEFUN([gl_SYS_RANDOM_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_RANDOM_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETRANDOM])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_RANDOM_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_RANDOM_H_DEFAULTS])
])
m4trace:m4/sys_random_h.m4:63: -1- AC_DEFUN([gl_SYS_RANDOM_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_GETRANDOM=1;       AC_SUBST([HAVE_GETRANDOM])
  REPLACE_GETRANDOM=0;    AC_SUBST([REPLACE_GETRANDOM])
])
m4trace:m4/sys_resource_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_RESOURCE_H], [
  AC_REQUIRE([gl_SYS_RESOURCE_H_DEFAULTS])
  dnl <sys/resource.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/resource.h])
  if test $ac_cv_header_sys_resource_h = yes; then
    HAVE_SYS_RESOURCE_H=1
  else
    HAVE_SYS_RESOURCE_H=0
  fi
  AC_SUBST([HAVE_SYS_RESOURCE_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_RESOURCE_H
/* At least FreeBSD 5.0 needs extra headers before <sys/resource.h>
   will compile.  */
# include <sys/types.h>
# include <sys/time.h>
# include <sys/resource.h>
#endif
    ]],
    [getrusage])
])
m4trace:m4/sys_resource_h.m4:37: -1- AC_DEFUN([gl_SYS_RESOURCE_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_RESOURCE_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_resource_h.m4:49: -1- AC_DEFUN([gl_SYS_RESOURCE_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_RESOURCE_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETRUSAGE])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_RESOURCE_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_RESOURCE_H_DEFAULTS])
])
m4trace:m4/sys_resource_h.m4:58: -1- AC_DEFUN([gl_SYS_RESOURCE_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_GETRUSAGE=1;       AC_SUBST([HAVE_GETRUSAGE])
])
m4trace:m4/sys_select_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_SELECT_H], [
  AC_REQUIRE([gl_SYS_SELECT_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CACHE_CHECK([whether <sys/select.h> is self-contained],
    [gl_cv_header_sys_select_h_selfcontained],
    [
      dnl Test against two bugs:
      dnl 1. On many platforms, <sys/select.h> assumes prior inclusion of
      dnl    <sys/types.h>.
      dnl 2. On OSF/1 4.0, <sys/select.h> provides only a forward declaration
      dnl    of 'struct timeval', and no definition of this type.
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/select.h>]],
                                         [[struct timeval b;]])],
        [gl_cv_header_sys_select_h_selfcontained=yes],
        [gl_cv_header_sys_select_h_selfcontained=no])
      dnl Test against another bug:
      dnl 3. On Solaris 10, <sys/select.h> provides an FD_ZERO implementation
      dnl    that relies on memset(), but without including <string.h>.
      if test $gl_cv_header_sys_select_h_selfcontained = yes; then
        AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM([[#include <sys/select.h>]],
                           [[int memset; int bzero;]])
          ],
          [AC_LINK_IFELSE(
             [AC_LANG_PROGRAM([[#include <sys/select.h>]], [[
                  #undef memset
                  #define memset nonexistent_memset
                  extern
                  #ifdef __cplusplus
                  "C"
                  #endif
                  void *memset (void *, int, unsigned long);
                  #undef bzero
                  #define bzero nonexistent_bzero
                  extern
                  #ifdef __cplusplus
                  "C"
                  #endif
                  void bzero (void *, unsigned long);
                  fd_set fds;
                  FD_ZERO (&fds);
                ]])
             ],
             [],
             [gl_cv_header_sys_select_h_selfcontained=no])
          ])
      fi
    ])
  dnl <sys/select.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/select.h])
  if test $ac_cv_header_sys_select_h = yes; then
    HAVE_SYS_SELECT_H=1
  else
    HAVE_SYS_SELECT_H=0
  fi
  AC_SUBST([HAVE_SYS_SELECT_H])
  gl_PREREQ_SYS_H_WINSOCK2

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#if !(defined __GLIBC__ && !defined __UCLIBC__) && HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <sys/select.h>
    ]], [pselect select])
])
m4trace:m4/sys_select_h.m4:82: -1- AC_DEFUN([gl_SYS_SELECT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_SELECT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_select_h.m4:94: -1- AC_DEFUN([gl_SYS_SELECT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_SELECT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PSELECT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SELECT])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_SELECT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_SELECT_H_DEFAULTS])
])
m4trace:m4/sys_select_h.m4:104: -1- AC_DEFUN([gl_SYS_SELECT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_PSELECT=1; AC_SUBST([HAVE_PSELECT])
  REPLACE_PSELECT=0; AC_SUBST([REPLACE_PSELECT])
  REPLACE_SELECT=0; AC_SUBST([REPLACE_SELECT])
])
m4trace:m4/sys_socket_h.m4:9: -1- AC_DEFUN_ONCE([gl_SYS_SOCKET_H], [
  AC_REQUIRE([gl_SYS_SOCKET_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl On OSF/1, the functions recv(), send(), recvfrom(), sendto() have
  dnl old-style declarations (with return type 'int' instead of 'ssize_t')
  dnl unless _POSIX_PII_SOCKET is defined.
  case "$host_os" in
    osf*)
      AC_DEFINE([_POSIX_PII_SOCKET], [1],
        [Define to 1 in order to get the POSIX compatible declarations
         of socket functions.])
      ;;
  esac

  AC_CACHE_CHECK([whether <sys/socket.h> is self-contained],
    [gl_cv_header_sys_socket_h_selfcontained],
    [
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]], [[]])],
        [gl_cv_header_sys_socket_h_selfcontained=yes],
        [gl_cv_header_sys_socket_h_selfcontained=no])
    ])
  if test $gl_cv_header_sys_socket_h_selfcontained = yes; then
    dnl If the shutdown function exists, <sys/socket.h> should define
    dnl SHUT_RD, SHUT_WR, SHUT_RDWR.
    AC_CHECK_FUNCS([shutdown])
    if test $ac_cv_func_shutdown = yes; then
      AC_CACHE_CHECK([whether <sys/socket.h> defines the SHUT_* macros],
        [gl_cv_header_sys_socket_h_shut],
        [
          AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM([[#include <sys/socket.h>]],
               [[int a[] = { SHUT_RD, SHUT_WR, SHUT_RDWR };]])],
            [gl_cv_header_sys_socket_h_shut=yes],
            [gl_cv_header_sys_socket_h_shut=no])
        ])
      if test $gl_cv_header_sys_socket_h_shut = no; then
        SYS_SOCKET_H='sys/socket.h'
      fi
    fi
  fi
  # We need to check for ws2tcpip.h now.
  gl_PREREQ_SYS_H_SOCKET
  AC_CHECK_TYPES([struct sockaddr_storage, sa_family_t],,,[
  /* sys/types.h is not needed according to POSIX, but the
     sys/socket.h in i386-unknown-freebsd4.10 and
     powerpc-apple-darwin5.5 required it. */
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif
])
  if test $ac_cv_type_struct_sockaddr_storage = no; then
    HAVE_STRUCT_SOCKADDR_STORAGE=0
  fi
  if test $ac_cv_type_sa_family_t = no; then
    HAVE_SA_FAMILY_T=0
  fi
  if test $ac_cv_type_struct_sockaddr_storage != no; then
    AC_CHECK_MEMBERS([struct sockaddr_storage.ss_family],
      [],
      [HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY=0],
      [#include <sys/types.h>
       #ifdef HAVE_SYS_SOCKET_H
       #include <sys/socket.h>
       #endif
       #ifdef HAVE_WS2TCPIP_H
       #include <ws2tcpip.h>
       #endif
      ])
  fi
  if test $HAVE_STRUCT_SOCKADDR_STORAGE = 0 || test $HAVE_SA_FAMILY_T = 0 \
     || test $HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY = 0; then
    SYS_SOCKET_H='sys/socket.h'
  fi
  gl_PREREQ_SYS_H_WINSOCK2

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#include <sys/socket.h>
    ]], [socket connect accept bind getpeername getsockname getsockopt
    listen recv send recvfrom sendto setsockopt shutdown accept4])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/sys_socket_h.m4:102: -1- AC_DEFUN([gl_PREREQ_SYS_H_SOCKET], [
  dnl Check prerequisites of the <sys/socket.h> replacement.
  AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])
  gl_CHECK_NEXT_HEADERS([sys/socket.h])
  if test $ac_cv_header_sys_socket_h = yes; then
    HAVE_SYS_SOCKET_H=1
  else
    HAVE_SYS_SOCKET_H=0
  fi
  AC_SUBST([HAVE_SYS_SOCKET_H])
  gl_PREREQ_SYS_H_WS2TCPIP
])
m4trace:m4/sys_socket_h.m4:119: -1- AC_DEFUN([gl_PREREQ_SYS_H_WINSOCK2], [
  m4_ifdef([gl_UNISTD_H_DEFAULTS], [AC_REQUIRE([gl_UNISTD_H_DEFAULTS])])
  m4_ifdef([gl_SYS_IOCTL_H_DEFAULTS], [AC_REQUIRE([gl_SYS_IOCTL_H_DEFAULTS])])
  AC_CHECK_HEADERS_ONCE([sys/socket.h])
  if test $ac_cv_header_sys_socket_h != yes; then
    dnl We cannot use AC_CHECK_HEADERS_ONCE here, because that would make
    dnl the check for those headers unconditional; yet cygwin reports
    dnl that the headers are present but cannot be compiled (since on
    dnl cygwin, all socket information should come from sys/socket.h).
    AC_CHECK_HEADERS([winsock2.h])
  fi
  if test "$ac_cv_header_winsock2_h" = yes; then
    HAVE_WINSOCK2_H=1
    UNISTD_H_HAVE_WINSOCK2_H=1
    SYS_IOCTL_H_HAVE_WINSOCK2_H=1
  else
    HAVE_WINSOCK2_H=0
  fi
  AC_SUBST([HAVE_WINSOCK2_H])
])
m4trace:m4/sys_socket_h.m4:144: -1- AC_DEFUN([gl_PREREQ_SYS_H_WS2TCPIP], [
  AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])
  if test $ac_cv_header_sys_socket_h = yes; then
    HAVE_WS2TCPIP_H=0
  else
    if test $ac_cv_header_ws2tcpip_h = yes; then
      HAVE_WS2TCPIP_H=1
    else
      HAVE_WS2TCPIP_H=0
    fi
  fi
  AC_SUBST([HAVE_WS2TCPIP_H])
])
m4trace:m4/sys_socket_h.m4:163: -1- AC_DEFUN([gl_SYS_SOCKET_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_socket_h.m4:175: -1- AC_DEFUN([gl_SYS_SOCKET_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_SOCKET_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SOCKET])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CONNECT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BIND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPEERNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LISTEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SEND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECVFROM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SENDTO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETSOCKOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SHUTDOWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT4])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_SOCKET_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_SOCKET_H_DEFAULTS])
])
m4trace:m4/sys_socket_h.m4:198: -1- AC_DEFUN([gl_SYS_SOCKET_H_DEFAULTS], [
  HAVE_STRUCT_SOCKADDR_STORAGE=1; AC_SUBST([HAVE_STRUCT_SOCKADDR_STORAGE])
  HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY=1;
                        AC_SUBST([HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY])
  HAVE_SA_FAMILY_T=1;   AC_SUBST([HAVE_SA_FAMILY_T])
  HAVE_ACCEPT4=1;       AC_SUBST([HAVE_ACCEPT4])
])
m4trace:m4/sys_stat_h.m4:10: -1- AC_DEFUN_ONCE([gl_SYS_STAT_H], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])

  dnl Check for broken stat macros.
  AC_REQUIRE([AC_HEADER_STAT])

  gl_CHECK_NEXT_HEADERS([sys/stat.h])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Whether to enable precise timestamps in 'struct stat'.
  m4_ifdef([gl_WINDOWS_STAT_TIMESPEC], [
    AC_REQUIRE([gl_WINDOWS_STAT_TIMESPEC])
  ], [
    WINDOWS_STAT_TIMESPEC=0
  ])
  AC_SUBST([WINDOWS_STAT_TIMESPEC])

  dnl Whether to ensure that struct stat.st_size is 64-bit wide.
  m4_ifdef([gl_LARGEFILE], [
    AC_REQUIRE([gl_LARGEFILE])
  ], [
    WINDOWS_64_BIT_ST_SIZE=0
  ])
  AC_SUBST([WINDOWS_64_BIT_ST_SIZE])

  dnl Define types that are supposed to be defined in <sys/types.h> or
  dnl <sys/stat.h>.
  AC_CHECK_TYPE([nlink_t], [],
    [AC_DEFINE([nlink_t], [int],
       [Define to the type of st_nlink in struct stat, or a supertype.])],
    [#include <sys/types.h>
     #include <sys/stat.h>])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <sys/stat.h>
    ]], [fchmodat fstat fstatat futimens getumask lchmod lstat
    mkdirat mkfifo mkfifoat mknod mknodat stat utimensat])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/sys_stat_h.m4:59: -1- AC_DEFUN([gl_SYS_STAT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_STAT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_stat_h.m4:71: -1- AC_DEFUN([gl_SYS_STAT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_STAT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_UNISTD_H_REQUIRE_DEFAULTS dnl for REPLACE_FCHDIR
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHMODAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTATAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FUTIMENS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHMOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSTAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIRAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFOAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNODAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UTIMENSAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OVERRIDES_STRUCT_STAT])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHMOD], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKDIR], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UMASK], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_STAT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
])
m4trace:m4/sys_stat_h.m4:100: -1- AC_DEFUN([gl_SYS_STAT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_FCHMODAT=1;      AC_SUBST([HAVE_FCHMODAT])
  HAVE_FSTATAT=1;       AC_SUBST([HAVE_FSTATAT])
  HAVE_FUTIMENS=1;      AC_SUBST([HAVE_FUTIMENS])
  HAVE_GETUMASK=1;      AC_SUBST([HAVE_GETUMASK])
  HAVE_LCHMOD=1;        AC_SUBST([HAVE_LCHMOD])
  HAVE_LSTAT=1;         AC_SUBST([HAVE_LSTAT])
  HAVE_MKDIRAT=1;       AC_SUBST([HAVE_MKDIRAT])
  HAVE_MKFIFO=1;        AC_SUBST([HAVE_MKFIFO])
  HAVE_MKFIFOAT=1;      AC_SUBST([HAVE_MKFIFOAT])
  HAVE_MKNOD=1;         AC_SUBST([HAVE_MKNOD])
  HAVE_MKNODAT=1;       AC_SUBST([HAVE_MKNODAT])
  HAVE_UTIMENSAT=1;     AC_SUBST([HAVE_UTIMENSAT])
  REPLACE_FCHMODAT=0;   AC_SUBST([REPLACE_FCHMODAT])
  REPLACE_FSTAT=0;      AC_SUBST([REPLACE_FSTAT])
  REPLACE_FSTATAT=0;    AC_SUBST([REPLACE_FSTATAT])
  REPLACE_FUTIMENS=0;   AC_SUBST([REPLACE_FUTIMENS])
  REPLACE_LSTAT=0;      AC_SUBST([REPLACE_LSTAT])
  REPLACE_MKDIR=0;      AC_SUBST([REPLACE_MKDIR])
  REPLACE_MKFIFO=0;     AC_SUBST([REPLACE_MKFIFO])
  REPLACE_MKFIFOAT=0;   AC_SUBST([REPLACE_MKFIFOAT])
  REPLACE_MKNOD=0;      AC_SUBST([REPLACE_MKNOD])
  REPLACE_MKNODAT=0;    AC_SUBST([REPLACE_MKNODAT])
  REPLACE_STAT=0;       AC_SUBST([REPLACE_STAT])
  REPLACE_UTIMENSAT=0;  AC_SUBST([REPLACE_UTIMENSAT])
])
m4trace:m4/sys_time_h.m4:11: -1- AC_DEFUN_ONCE([gl_SYS_TIME_H], [
  dnl Use AC_REQUIRE here, so that the REPLACE_GETTIMEOFDAY=0 statement
  dnl below is expanded once only, before all REPLACE_GETTIMEOFDAY=1
  dnl statements that occur in other macros.
  AC_REQUIRE([gl_SYS_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  gl_CHECK_NEXT_HEADERS([sys/time.h])

  if test $ac_cv_header_sys_time_h != yes; then
    HAVE_SYS_TIME_H=0
  fi

  dnl On native Windows with MSVC, 'struct timeval' is defined in <winsock2.h>
  dnl only. So include that header in the list.
  gl_PREREQ_SYS_H_WINSOCK2
  AC_CACHE_CHECK([for struct timeval], [gl_cv_sys_struct_timeval],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#if HAVE_SYS_TIME_H
             #include <sys/time.h>
            #endif
            #include <time.h>
            #if HAVE_WINSOCK2_H
            # include <winsock2.h>
            #endif
          ]],
          [[static struct timeval x; x.tv_sec = x.tv_usec;]])],
       [gl_cv_sys_struct_timeval=yes],
       [gl_cv_sys_struct_timeval=no])
    ])
  if test $gl_cv_sys_struct_timeval != yes; then
    HAVE_STRUCT_TIMEVAL=0
  else
    dnl On native Windows with a 64-bit 'time_t', 'struct timeval' is defined
    dnl (in <sys/time.h> and <winsock2.h> for mingw64, in <winsock2.h> only
    dnl for MSVC) with a tv_sec field of type 'long' (32-bit!), which is
    dnl smaller than the 'time_t' type mandated by POSIX.
    dnl On OpenBSD 5.1 amd64, tv_sec is 64 bits and time_t 32 bits, but
    dnl that is good enough.
    AC_CACHE_CHECK([for wide-enough struct timeval.tv_sec member],
      [gl_cv_sys_struct_timeval_tv_sec],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#if HAVE_SYS_TIME_H
               #include <sys/time.h>
              #endif
              #include <time.h>
              #if HAVE_WINSOCK2_H
              # include <winsock2.h>
              #endif
            ]],
            [[static struct timeval x;
              typedef int verify_tv_sec_type[
                sizeof (time_t) <= sizeof x.tv_sec ? 1 : -1
              ];
            ]])],
         [gl_cv_sys_struct_timeval_tv_sec=yes],
         [gl_cv_sys_struct_timeval_tv_sec=no])
      ])
    if test $gl_cv_sys_struct_timeval_tv_sec != yes; then
      REPLACE_STRUCT_TIMEVAL=1
    fi
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <time.h>
    ]], [gettimeofday])
])
m4trace:m4/sys_time_h.m4:91: -1- AC_DEFUN([gl_SYS_TIME_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_TIME_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_time_h.m4:103: -1- AC_DEFUN([gl_SYS_TIME_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_TIME_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETTIMEOFDAY])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_TIME_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_TIME_H_DEFAULTS])
])
m4trace:m4/sys_time_h.m4:112: -1- AC_DEFUN([gl_SYS_TIME_H_DEFAULTS], [
  dnl Assume POSIX behavior unless another module says otherwise.
  HAVE_GETTIMEOFDAY=1;       AC_SUBST([HAVE_GETTIMEOFDAY])
  HAVE_STRUCT_TIMEVAL=1;     AC_SUBST([HAVE_STRUCT_TIMEVAL])
  HAVE_SYS_TIME_H=1;         AC_SUBST([HAVE_SYS_TIME_H])
  REPLACE_GETTIMEOFDAY=0;    AC_SUBST([REPLACE_GETTIMEOFDAY])
  REPLACE_STRUCT_TIMEVAL=0;  AC_SUBST([REPLACE_STRUCT_TIMEVAL])
])
m4trace:m4/sys_times_h.m4:11: -1- AC_DEFUN_ONCE([gl_SYS_TIMES_H], [
  AC_REQUIRE([gl_SYS_TIMES_H_DEFAULTS])

  dnl <sys/times.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/times.h])
  if test $ac_cv_header_sys_times_h = yes; then
    HAVE_SYS_TIMES_H=1
    AC_CHECK_TYPES([struct tms], [], [HAVE_STRUCT_TMS=0], [[
#include <sys/times.h>
      ]])
  else
    HAVE_SYS_TIMES_H=0
    HAVE_STRUCT_TMS=0
  fi
  AC_SUBST([HAVE_SYS_TIMES_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
/* Some systems have incomplete headers.  */
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <time.h>
#endif
#include <sys/times.h>
    ]], [times])
])
m4trace:m4/sys_times_h.m4:43: -1- AC_DEFUN([gl_SYS_TIMES_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_TIMES_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/sys_times_h.m4:53: -1- AC_DEFUN([gl_SYS_TIMES_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_TIMES_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMES])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_TIMES_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_TIMES_H_DEFAULTS])
])
m4trace:m4/sys_times_h.m4:62: -1- AC_DEFUN([gl_SYS_TIMES_H_DEFAULTS], [
  HAVE_STRUCT_TMS=1;  AC_SUBST([HAVE_STRUCT_TMS])
  HAVE_TIMES=1;       AC_SUBST([HAVE_TIMES])
])
m4trace:m4/sys_types_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_TYPES_H], [
  AC_REQUIRE([gl_SYS_TYPES_H_DEFAULTS])

  dnl Use sane struct stat types in OpenVMS 8.2 and later.
  AC_DEFINE([_USE_STD_STAT], 1, [For standard stat data types on VMS.])

  gl_NEXT_HEADERS([sys/types.h])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Whether to override the 'off_t' type.
  AC_REQUIRE([gl_TYPE_OFF_T])

  dnl Whether to override the 'dev_t' and 'ino_t' types.
  m4_ifdef([gl_WINDOWS_STAT_INODES], [
    AC_REQUIRE([gl_WINDOWS_STAT_INODES])
  ], [
    WINDOWS_STAT_INODES=0
  ])
  AC_SUBST([WINDOWS_STAT_INODES])
])
m4trace:m4/sys_types_h.m4:37: -1- AC_DEFUN([gl_SYS_TYPES_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_TYPE_H_MODULE_INDICATOR_DEFAULTS], [
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_TYPE_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_TYPES_H_DEFAULTS])
])
m4trace:m4/sys_types_h.m4:45: -1- AC_DEFUN([gl_SYS_TYPES_H_DEFAULTS], [
])
m4trace:m4/sys_uio_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_UIO_H], [
  AC_REQUIRE([gl_SYS_UIO_H_DEFAULTS])
  dnl <sys/uio.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/uio.h])
  if test $ac_cv_header_sys_uio_h = yes; then
    HAVE_SYS_UIO_H=1
  else
    HAVE_SYS_UIO_H=0
  fi
  AC_SUBST([HAVE_SYS_UIO_H])
])
m4trace:m4/sys_uio_h.m4:24: -1- AC_DEFUN([gl_SYS_UIO_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_UIO_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_uio_h.m4:36: -1- AC_DEFUN([gl_SYS_UIO_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_UIO_H_MODULE_INDICATOR_DEFAULTS], [
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_UIO_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_UIO_H_DEFAULTS])
])
m4trace:m4/sys_uio_h.m4:44: -1- AC_DEFUN([gl_SYS_UIO_H_DEFAULTS], [
])
m4trace:m4/sys_utsname_h.m4:9: -1- AC_DEFUN_ONCE([gl_SYS_UTSNAME_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_SYS_UTSNAME_H_DEFAULTS])

  dnl <sys/utsname.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/utsname.h])
  if test $ac_cv_header_sys_utsname_h != yes; then
    HAVE_SYS_UTSNAME_H=0
    HAVE_STRUCT_UTSNAME=0
  else
    HAVE_SYS_UTSNAME_H=1
    AC_CHECK_TYPES([struct utsname], [], [HAVE_STRUCT_UTSNAME=0], [[
/* Minix 3.1.8 has a bug: <stddef.h> must be included before
   <sys/utsname.h>.  */
#include <stddef.h>
#include <sys/utsname.h>
      ]])
  fi
  AC_SUBST([HAVE_SYS_UTSNAME_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
    /* Minix 3.1.8 has a bug: <stddef.h> must be included before
       <sys/utsname.h>.  */
    #include <stddef.h>
    #include <sys/utsname.h>
    ]], [uname])
])
m4trace:m4/sys_utsname_h.m4:45: -1- AC_DEFUN([gl_SYS_UTSNAME_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_UTSNAME_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/sys_utsname_h.m4:55: -1- AC_DEFUN([gl_SYS_UTSNAME_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_UTSNAME_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNAME])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_UTSNAME_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_UTSNAME_H_DEFAULTS])
])
m4trace:m4/sys_utsname_h.m4:64: -1- AC_DEFUN([gl_SYS_UTSNAME_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_UNAME=1;           AC_SUBST([HAVE_UNAME])
  HAVE_STRUCT_UTSNAME=1;  AC_SUBST([HAVE_STRUCT_UTSNAME])
])
m4trace:m4/sys_wait_h.m4:7: -1- AC_DEFUN_ONCE([gl_SYS_WAIT_H], [
  AC_REQUIRE([gl_SYS_WAIT_H_DEFAULTS])

  dnl <sys/wait.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/wait.h])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <sys/wait.h>]],
    [waitpid])
])
m4trace:m4/sys_wait_h.m4:27: -1- AC_DEFUN([gl_SYS_WAIT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_WAIT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_wait_h.m4:39: -1- AC_DEFUN([gl_SYS_WAIT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_WAIT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WAITPID])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_WAIT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_WAIT_H_DEFAULTS])
])
m4trace:m4/sys_wait_h.m4:48: -1- AC_DEFUN([gl_SYS_WAIT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
])
m4trace:m4/tempname.m4:10: -1- AC_DEFUN([gl_FUNC_GEN_TEMPNAME], [
  gl_PREREQ_TEMPNAME
])
m4trace:m4/tempname.m4:16: -1- AC_DEFUN([gl_PREREQ_TEMPNAME], [
  :
])
m4trace:m4/threadlib.m4:54: -1- AC_DEFUN([gl_ANYTHREADLIB_EARLY], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  if test -z "$gl_anythreadlib_early_done"; then
    case "$host_os" in
      osf*)
        # On OSF/1, the compiler needs the flag -D_REENTRANT so that it
        # groks <pthread.h>. cc also understands the flag -pthread, but
        # we don't use it because 1. gcc-2.95 doesn't understand -pthread,
        # 2. putting a flag into CPPFLAGS that has an effect on the linker
        # causes the AC_LINK_IFELSE test below to succeed unexpectedly,
        # leading to wrong values of LIBTHREAD and LTLIBTHREAD.
        CPPFLAGS="$CPPFLAGS -D_REENTRANT"
        ;;
    esac
    # Some systems optimize for single-threaded programs by default, and
    # need special flags to disable these optimizations. For example, the
    # definition of 'errno' in <errno.h>.
    case "$host_os" in
      aix* | freebsd*) CPPFLAGS="$CPPFLAGS -D_THREAD_SAFE" ;;
      solaris*) CPPFLAGS="$CPPFLAGS -D_REENTRANT" ;;
    esac
    gl_anythreadlib_early_done=done
  fi
])
m4trace:m4/threadlib.m4:82: -1- AC_DEFUN([gl_WEAK_SYMBOLS], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether imported symbols can be declared weak],
    [gl_cv_have_weak],
    [case "$host_os" in
       cygwin*)
         dnl On Cygwin 3.2.0 with gcc 10.2, the test below would succeed, but
         dnl programs that use pthread_in_use() with weak symbol references
         dnl crash miserably at runtime.
         gl_cv_have_weak="guessing no"
         ;;
       *)
         gl_cv_have_weak=no
         dnl First, test whether the compiler accepts it syntactically.
         AC_LINK_IFELSE(
           [AC_LANG_PROGRAM(
              [[extern void xyzzy ();
#pragma weak xyzzy]],
              [[xyzzy();]])],
           [gl_cv_have_weak=maybe])
         if test $gl_cv_have_weak = maybe; then
           dnl Second, test whether it actually works. On Cygwin 1.7.2, with
           dnl gcc 4.3, symbols declared weak always evaluate to the address 0.
           AC_RUN_IFELSE(
             [AC_LANG_SOURCE([[
#include <stdio.h>
#pragma weak fputs
int main ()
{
  return (fputs == NULL);
}]])],
             [gl_cv_have_weak=yes],
             [gl_cv_have_weak=no],
             [dnl When cross-compiling, assume that only ELF platforms support
              dnl weak symbols.
              AC_EGREP_CPP([Extensible Linking Format],
                [#ifdef __ELF__
                 Extensible Linking Format
                 #endif
                ],
                [gl_cv_have_weak="guessing yes"],
                [gl_cv_have_weak="guessing no"])
             ])
         fi
         ;;
     esac
     dnl But when linking statically, weak symbols don't work.
     case " $LDFLAGS " in
       *" -static "*) gl_cv_have_weak=no ;;
     esac
     dnl Test for a bug in FreeBSD 11: A link error occurs when using a weak
     dnl symbol and linking against a shared library that has a dependency on
     dnl the shared library that defines the symbol.
     case "$gl_cv_have_weak" in
       *yes)
         case "$host_os" in
           freebsd* | dragonfly* | midnightbsd*)
             : > conftest1.c
             $CC $CPPFLAGS $CFLAGS $LDFLAGS -fPIC -shared -o libempty.so conftest1.c -lpthread >&AS_MESSAGE_LOG_FD 2>&1
             cat <<EOF > conftest2.c
#include <pthread.h>
#pragma weak pthread_mutexattr_gettype
int main ()
{
  return (pthread_mutexattr_gettype != NULL);
}
EOF
             $CC $CPPFLAGS $CFLAGS $LDFLAGS -o conftest conftest2.c libempty.so >&AS_MESSAGE_LOG_FD 2>&1 \
               || gl_cv_have_weak=no
             rm -f conftest1.c libempty.so conftest2.c conftest
             ;;
         esac
         ;;
     esac
    ])
  case "$gl_cv_have_weak" in
    *yes)
      AC_DEFINE([HAVE_WEAK_SYMBOLS], [1],
        [Define to 1 if the compiler and linker support weak declarations of symbols.])
      ;;
  esac
])
m4trace:m4/threadlib.m4:186: -1- AC_DEFUN([gl_PTHREADLIB_BODY], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  if test -z "$gl_pthreadlib_body_done"; then
    gl_pthread_api=no
    LIBPTHREAD=
    LIBPMULTITHREAD=
    # On OSF/1, the compiler needs the flag -pthread or -D_REENTRANT so that
    # it groks <pthread.h>. It's added above, in gl_ANYTHREADLIB_EARLY.
    AC_CHECK_HEADER([pthread.h],
      [gl_have_pthread_h=yes], [gl_have_pthread_h=no])
    if test "$gl_have_pthread_h" = yes; then
      # Other possible tests:
      #   -lpthreads (FSU threads, PCthreads)
      #   -lgthreads
      # Test whether both pthread_mutex_lock and pthread_mutexattr_init exist
      # in libc. IRIX 6.5 has the first one in both libc and libpthread, but
      # the second one only in libpthread, and lock.c needs it.
      #
      # If -pthread works, prefer it to -lpthread, since Ubuntu 14.04
      # needs -pthread for some reason.  See:
      # https://lists.gnu.org/r/bug-gnulib/2014-09/msg00023.html
      save_LIBS=$LIBS
      for gl_pthread in '' '-pthread'; do
        LIBS="$LIBS $gl_pthread"
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <pthread.h>
               pthread_mutex_t m;
               pthread_mutexattr_t ma;
             ]],
             [[pthread_mutex_lock (&m);
               pthread_mutexattr_init (&ma);]])],
          [gl_pthread_api=yes
           LIBPTHREAD=$gl_pthread
           LIBPMULTITHREAD=$gl_pthread])
        LIBS=$save_LIBS
        test $gl_pthread_api = yes && break
      done
      echo "$as_me:__oline__: gl_pthread_api=$gl_pthread_api" >&AS_MESSAGE_LOG_FD
      echo "$as_me:__oline__: LIBPTHREAD=$LIBPTHREAD" >&AS_MESSAGE_LOG_FD

      gl_pthread_in_glibc=no
      # On Linux with glibc >= 2.34, libc contains the fully functional
      # pthread functions.
      case "$host_os" in
        linux*)
          AC_EGREP_CPP([Lucky user],
            [#include <features.h>
             #ifdef __GNU_LIBRARY__
              #if (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 34) || (__GLIBC__ > 2)
               Lucky user
              #endif
             #endif
            ],
            [gl_pthread_in_glibc=yes],
            [])
          ;;
      esac
      echo "$as_me:__oline__: gl_pthread_in_glibc=$gl_pthread_in_glibc" >&AS_MESSAGE_LOG_FD

      # Test for libpthread by looking for pthread_kill. (Not pthread_self,
      # since it is defined as a macro on OSF/1.)
      if test $gl_pthread_api = yes && test -z "$LIBPTHREAD"; then
        # The program links fine without libpthread. But it may actually
        # need to link with libpthread in order to create multiple threads.
        AC_CHECK_LIB([pthread], [pthread_kill],
          [if test $gl_pthread_in_glibc = yes; then
             LIBPMULTITHREAD=
           else
             LIBPMULTITHREAD=-lpthread
             # On Solaris and HP-UX, most pthread functions exist also in libc.
             # Therefore pthread_in_use() needs to actually try to create a
             # thread: pthread_create from libc will fail, whereas
             # pthread_create will actually create a thread.
             # On Solaris 10 or newer, this test is no longer needed, because
             # libc contains the fully functional pthread functions.
             case "$host_os" in
               solaris | solaris2.[1-9] | solaris2.[1-9].* | hpux*)
                 AC_DEFINE([PTHREAD_IN_USE_DETECTION_HARD], [1],
                   [Define if the pthread_in_use() detection is hard.])
             esac
           fi
          ])
      elif test $gl_pthread_api != yes; then
        # Some library is needed. Try libpthread and libc_r.
        AC_CHECK_LIB([pthread], [pthread_kill],
          [gl_pthread_api=yes
           LIBPTHREAD=-lpthread
           LIBPMULTITHREAD=-lpthread])
        if test $gl_pthread_api != yes; then
          # For FreeBSD 4.
          AC_CHECK_LIB([c_r], [pthread_kill],
            [gl_pthread_api=yes
             LIBPTHREAD=-lc_r
             LIBPMULTITHREAD=-lc_r])
        fi
      fi
      echo "$as_me:__oline__: LIBPMULTITHREAD=$LIBPMULTITHREAD" >&AS_MESSAGE_LOG_FD
    fi
    AC_MSG_CHECKING([whether POSIX threads API is available])
    AC_MSG_RESULT([$gl_pthread_api])
    AC_SUBST([LIBPTHREAD])
    AC_SUBST([LIBPMULTITHREAD])
    if test $gl_pthread_api = yes; then
      AC_DEFINE([HAVE_PTHREAD_API], [1],
        [Define if you have the <pthread.h> header and the POSIX threads API.])
    fi

    dnl On some systems, sched_yield is in librt, rather than in libpthread.
    AC_LINK_IFELSE(
      [AC_LANG_PROGRAM(
         [[#include <sched.h>]],
         [[sched_yield ();]])],
      [LIB_SCHED_YIELD=
      ],
      [dnl Solaris 7...10 has sched_yield in librt, not in libpthread or libc.
       AC_CHECK_LIB([rt], [sched_yield], [LIB_SCHED_YIELD=-lrt],
         [dnl Solaris 2.5.1, 2.6 has sched_yield in libposix4, not librt.
          AC_CHECK_LIB([posix4], [sched_yield], [LIB_SCHED_YIELD=-lposix4])])
      ])
    AC_SUBST([LIB_SCHED_YIELD])

    gl_pthreadlib_body_done=done
  fi
])
m4trace:m4/threadlib.m4:313: -1- AC_DEFUN([gl_PTHREADLIB], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  gl_PTHREADLIB_BODY
])
m4trace:m4/threadlib.m4:333: -1- AC_DEFUN([gl_STDTHREADLIB_BODY], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  AC_REQUIRE([AC_CANONICAL_HOST])
  if test -z "$gl_stdthreadlib_body_done"; then
    AC_CHECK_HEADERS_ONCE([threads.h])

    case "$host_os" in
      mingw*)
        LIBSTDTHREAD=
        ;;
      *)
        gl_PTHREADLIB_BODY
        if test $ac_cv_header_threads_h = yes; then
          dnl glibc >= 2.29 has thrd_create in libpthread.
          dnl FreeBSD >= 10 has thrd_create in libstdthreads; this library depends
          dnl on libpthread (for the symbol 'pthread_mutexattr_gettype').
          dnl glibc >= 2.34, AIX >= 7.1, and Solaris >= 11.4 have thrd_create in
          dnl libc.
          AC_CHECK_FUNCS([thrd_create])
          if test $ac_cv_func_thrd_create = yes; then
            LIBSTDTHREAD=
          else
            AC_CHECK_LIB([stdthreads], [thrd_create], [
              LIBSTDTHREAD='-lstdthreads -lpthread'
            ], [
              dnl Guess that thrd_create is in libpthread.
              LIBSTDTHREAD="$LIBPMULTITHREAD"
            ])
          fi
        else
          dnl Libraries needed by thrd.c, mtx.c, cnd.c, tss.c.
          LIBSTDTHREAD="$LIBPMULTITHREAD $LIB_SCHED_YIELD"
        fi
        ;;
    esac
    AC_SUBST([LIBSTDTHREAD])

    AC_MSG_CHECKING([whether ISO C threads API is available])
    AC_MSG_RESULT([$ac_cv_header_threads_h])
    gl_stdthreadlib_body_done=done
  fi
])
m4trace:m4/threadlib.m4:377: -1- AC_DEFUN([gl_STDTHREADLIB], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  gl_STDTHREADLIB_BODY
])
m4trace:m4/threadlib.m4:414: -1- AC_DEFUN([gl_THREADLIB_EARLY], [
  AC_REQUIRE([gl_THREADLIB_EARLY_BODY])
])
m4trace:m4/threadlib.m4:421: -1- AC_DEFUN([gl_THREADLIB_EARLY_BODY], [
  dnl Ordering constraints: This macro modifies CPPFLAGS in a way that
  dnl influences the result of the autoconf tests that test for *_unlocked
  dnl declarations, on AIX 5 at least. Therefore it must come early.
  AC_BEFORE([$0], [gl_FUNC_GLIBC_UNLOCKED_IO])dnl
  AC_BEFORE([$0], [gl_ARGP])dnl

  AC_REQUIRE([AC_CANONICAL_HOST])
  dnl _GNU_SOURCE is needed for pthread_rwlock_t on glibc systems.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  dnl Check for multithreading.
  m4_ifdef([gl_THREADLIB_DEFAULT_NO],
    [m4_divert_text([DEFAULTS], [gl_use_threads_default=no])],
    [m4_divert_text([DEFAULTS], [gl_use_threads_default=])])
  m4_divert_text([DEFAULTS], [gl_use_winpthreads_default=])
  AC_ARG_ENABLE([threads],
AS_HELP_STRING([--enable-threads={isoc|posix|isoc+posix|windows}], [specify multithreading API])m4_ifdef([gl_THREADLIB_DEFAULT_NO], [], [
AS_HELP_STRING([--disable-threads], [build without multithread safety])]),
    [gl_use_threads=$enableval],
    [if test -n "$gl_use_threads_default"; then
       gl_use_threads="$gl_use_threads_default"
     else
changequote(,)dnl
       case "$host_os" in
         dnl Disable multithreading by default on OSF/1, because it interferes
         dnl with fork()/exec(): When msgexec is linked with -lpthread, its
         dnl child process gets an endless segmentation fault inside execvp().
         osf*) gl_use_threads=no ;;
         dnl Disable multithreading by default on Cygwin 1.5.x, because it has
         dnl bugs that lead to endless loops or crashes. See
         dnl <https://cygwin.com/ml/cygwin/2009-08/msg00283.html>.
         cygwin*)
               case `uname -r` in
                 1.[0-5].*) gl_use_threads=no ;;
                 *)         gl_use_threads=yes ;;
               esac
               ;;
         dnl Obey gl_AVOID_WINPTHREAD on mingw.
         mingw*)
               case "$gl_use_winpthreads_default" in
                 yes) gl_use_threads=posix ;;
                 no)  gl_use_threads=windows ;;
                 *)   gl_use_threads=yes ;;
               esac
               ;;
         *)    gl_use_threads=yes ;;
       esac
changequote([,])dnl
     fi
    ])
  if test "$gl_use_threads" = yes \
     || test "$gl_use_threads" = isoc \
     || test "$gl_use_threads" = posix \
     || test "$gl_use_threads" = isoc+posix; then
    # For using <threads.h> or <pthread.h>:
    gl_ANYTHREADLIB_EARLY
  fi
])
m4trace:m4/threadlib.m4:483: -1- AC_DEFUN([gl_THREADLIB_BODY], [
  AC_REQUIRE([gl_THREADLIB_EARLY_BODY])
  gl_threads_api=none
  LIBTHREAD=
  LTLIBTHREAD=
  LIBMULTITHREAD=
  LTLIBMULTITHREAD=
  if test "$gl_use_threads" != no; then
    dnl Check whether the compiler and linker support weak declarations.
    gl_WEAK_SYMBOLS
    if case "$gl_cv_have_weak" in *yes) true;; *) false;; esac; then
      dnl If we use weak symbols to implement pthread_in_use / pth_in_use /
      dnl thread_in_use, we also need to test whether the ISO C 11 thrd_create
      dnl facility is in use.
      AC_CHECK_HEADERS_ONCE([threads.h])
      :
    fi
    if test "$gl_use_threads" = isoc || test "$gl_use_threads" = isoc+posix; then
      AC_CHECK_HEADERS_ONCE([threads.h])
      gl_have_isoc_threads="$ac_cv_header_threads_h"
    fi
    if test "$gl_use_threads" = yes \
       || test "$gl_use_threads" = posix \
       || test "$gl_use_threads" = isoc+posix; then
      gl_PTHREADLIB_BODY
      LIBTHREAD=$LIBPTHREAD LTLIBTHREAD=$LIBPTHREAD
      LIBMULTITHREAD=$LIBPMULTITHREAD LTLIBMULTITHREAD=$LIBPMULTITHREAD
      if test $gl_pthread_api = yes; then
        if test "$gl_use_threads" = isoc+posix && test "$gl_have_isoc_threads" = yes; then
          gl_threads_api='isoc+posix'
          AC_DEFINE([USE_ISOC_AND_POSIX_THREADS], [1],
            [Define if the combination of the ISO C and POSIX multithreading APIs can be used.])
          LIBTHREAD= LTLIBTHREAD=
        else
          gl_threads_api=posix
          AC_DEFINE([USE_POSIX_THREADS], [1],
            [Define if the POSIX multithreading library can be used.])
          if test -z "$LIBMULTITHREAD" && test -z "$LTLIBMULTITHREAD"; then
            AC_DEFINE([USE_POSIX_THREADS_FROM_LIBC], [1],
              [Define if references to the POSIX multithreading library are satisfied by libc.])
          else
            if case "$gl_cv_have_weak" in *yes) true;; *) false;; esac; then
              AC_DEFINE([USE_POSIX_THREADS_WEAK], [1],
                [Define if references to the POSIX multithreading library should be made weak.])
              LIBTHREAD= LTLIBTHREAD=
            else
              case "$host_os" in
                freebsd* | dragonfly* | midnightbsd*)
                  if test "x$LIBTHREAD" != "x$LIBMULTITHREAD"; then
                    dnl If weak symbols can't tell whether pthread_create(), pthread_key_create()
                    dnl etc. will succeed, we need a runtime test.
                    AC_DEFINE([PTHREAD_IN_USE_DETECTION_HARD], [1],
                      [Define if the pthread_in_use() detection is hard.])
                  fi
                  ;;
              esac
            fi
          fi
        fi
      fi
    fi
    if test $gl_threads_api = none; then
      if test "$gl_use_threads" = isoc && test "$gl_have_isoc_threads" = yes; then
        gl_STDTHREADLIB_BODY
        LIBTHREAD=$LIBSTDTHREAD LTLIBTHREAD=$LIBSTDTHREAD
        LIBMULTITHREAD=$LIBSTDTHREAD LTLIBMULTITHREAD=$LIBSTDTHREAD
        gl_threads_api=isoc
        AC_DEFINE([USE_ISOC_THREADS], [1],
          [Define if the ISO C multithreading library can be used.])
      fi
    fi
    if test $gl_threads_api = none; then
      case "$gl_use_threads" in
        yes | windows | win32) # The 'win32' is for backward compatibility.
          if { case "$host_os" in
                 mingw*) true;;
                 *) false;;
               esac
             }; then
            gl_threads_api=windows
            AC_DEFINE([USE_WINDOWS_THREADS], [1],
              [Define if the native Windows multithreading API can be used.])
          fi
          ;;
      esac
    fi
  fi
  AC_MSG_CHECKING([for multithread API to use])
  AC_MSG_RESULT([$gl_threads_api])
  AC_SUBST([LIBTHREAD])
  AC_SUBST([LTLIBTHREAD])
  AC_SUBST([LIBMULTITHREAD])
  AC_SUBST([LTLIBMULTITHREAD])
])
m4trace:m4/threadlib.m4:579: -1- AC_DEFUN([gl_THREADLIB], [
  AC_REQUIRE([gl_THREADLIB_EARLY])
  AC_REQUIRE([gl_THREADLIB_BODY])
])
m4trace:m4/threadlib.m4:592: -1- AC_DEFUN([gl_DISABLE_THREADS], [
  m4_divert_text([INIT_PREPARE], [gl_use_threads_default=no])
])
m4trace:m4/threadlib.m4:604: -1- AC_DEFUN([gl_AVOID_WINPTHREAD], [
  m4_divert_text([INIT_PREPARE], [gl_use_winpthreads_default=no])
])
m4trace:m4/time_h.m4:13: -1- AC_DEFUN_ONCE([gl_TIME_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_TIME_H_DEFAULTS])

  gl_NEXT_HEADERS([time.h])
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_TIMESPEC])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CACHE_CHECK([for TIME_UTC in <time.h>],
    [gl_cv_time_h_has_TIME_UTC],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <time.h>
          ]],
          [[static int x = TIME_UTC; x++;]])],
       [gl_cv_time_h_has_TIME_UTC=yes],
       [gl_cv_time_h_has_TIME_UTC=no])])
  if test $gl_cv_time_h_has_TIME_UTC = yes; then
    TIME_H_DEFINES_TIME_UTC=1
  else
    TIME_H_DEFINES_TIME_UTC=0
  fi
  AC_SUBST([TIME_H_DEFINES_TIME_UTC])
])
m4trace:m4/time_h.m4:44: -1- AC_DEFUN([gl_CHECK_TYPE_STRUCT_TIMESPEC], [
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  AC_CACHE_CHECK([for struct timespec in <time.h>],
    [gl_cv_sys_struct_timespec_in_time_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <time.h>
          ]],
          [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
       [gl_cv_sys_struct_timespec_in_time_h=yes],
       [gl_cv_sys_struct_timespec_in_time_h=no])])

  TIME_H_DEFINES_STRUCT_TIMESPEC=0
  SYS_TIME_H_DEFINES_STRUCT_TIMESPEC=0
  PTHREAD_H_DEFINES_STRUCT_TIMESPEC=0
  UNISTD_H_DEFINES_STRUCT_TIMESPEC=0
  if test $gl_cv_sys_struct_timespec_in_time_h = yes; then
    TIME_H_DEFINES_STRUCT_TIMESPEC=1
  else
    AC_CACHE_CHECK([for struct timespec in <sys/time.h>],
      [gl_cv_sys_struct_timespec_in_sys_time_h],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/time.h>
            ]],
            [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
         [gl_cv_sys_struct_timespec_in_sys_time_h=yes],
         [gl_cv_sys_struct_timespec_in_sys_time_h=no])])
    if test $gl_cv_sys_struct_timespec_in_sys_time_h = yes; then
      SYS_TIME_H_DEFINES_STRUCT_TIMESPEC=1
    else
      AC_CACHE_CHECK([for struct timespec in <pthread.h>],
        [gl_cv_sys_struct_timespec_in_pthread_h],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <pthread.h>
              ]],
              [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
           [gl_cv_sys_struct_timespec_in_pthread_h=yes],
           [gl_cv_sys_struct_timespec_in_pthread_h=no])])
      if test $gl_cv_sys_struct_timespec_in_pthread_h = yes; then
        PTHREAD_H_DEFINES_STRUCT_TIMESPEC=1
      else
        AC_CACHE_CHECK([for struct timespec in <unistd.h>],
          [gl_cv_sys_struct_timespec_in_unistd_h],
          [AC_COMPILE_IFELSE(
             [AC_LANG_PROGRAM(
                [[#include <unistd.h>
                ]],
                [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
             [gl_cv_sys_struct_timespec_in_unistd_h=yes],
             [gl_cv_sys_struct_timespec_in_unistd_h=no])])
        if test $gl_cv_sys_struct_timespec_in_unistd_h = yes; then
          UNISTD_H_DEFINES_STRUCT_TIMESPEC=1
        fi
      fi
    fi
  fi
  AC_SUBST([TIME_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([SYS_TIME_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([PTHREAD_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([UNISTD_H_DEFINES_STRUCT_TIMESPEC])
])
m4trace:m4/time_h.m4:113: -1- AC_DEFUN([gl_TIME_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_TIME_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/time_h.m4:125: -1- AC_DEFUN([gl_TIME_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_TIME_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NANOSLEEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRFTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMEGM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMESPEC_GET])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_RZ])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TZSET])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TZSET], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_TIME_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
])
m4trace:m4/time_h.m4:146: -1- AC_DEFUN([gl_TIME_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_LOCALTIME_R=1;               AC_SUBST([HAVE_DECL_LOCALTIME_R])
  HAVE_NANOSLEEP=1;                      AC_SUBST([HAVE_NANOSLEEP])
  HAVE_STRPTIME=1;                       AC_SUBST([HAVE_STRPTIME])
  HAVE_TIMEGM=1;                         AC_SUBST([HAVE_TIMEGM])
  HAVE_TIMESPEC_GET=1;                   AC_SUBST([HAVE_TIMESPEC_GET])
  dnl Even GNU libc does not have timezone_t yet.
  HAVE_TIMEZONE_T=0;                     AC_SUBST([HAVE_TIMEZONE_T])
  dnl If another module says to replace or to not replace, do that.
  dnl Otherwise, replace only if someone compiles with -DGNULIB_PORTCHECK;
  dnl this lets maintainers check for portability.
  REPLACE_CTIME=GNULIB_PORTCHECK;        AC_SUBST([REPLACE_CTIME])
  REPLACE_LOCALTIME_R=GNULIB_PORTCHECK;  AC_SUBST([REPLACE_LOCALTIME_R])
  REPLACE_MKTIME=GNULIB_PORTCHECK;       AC_SUBST([REPLACE_MKTIME])
  REPLACE_NANOSLEEP=GNULIB_PORTCHECK;    AC_SUBST([REPLACE_NANOSLEEP])
  REPLACE_STRFTIME=GNULIB_PORTCHECK;     AC_SUBST([REPLACE_STRFTIME])
  REPLACE_TIMEGM=GNULIB_PORTCHECK;       AC_SUBST([REPLACE_TIMEGM])
  REPLACE_TZSET=GNULIB_PORTCHECK;        AC_SUBST([REPLACE_TZSET])

  dnl Hack so that the time module doesn't depend on the sys_time module.
  dnl First, default GNULIB_GETTIMEOFDAY to 0 if sys_time is absent.
  : ${GNULIB_GETTIMEOFDAY=0};            AC_SUBST([GNULIB_GETTIMEOFDAY])
  dnl Second, it's OK to not use GNULIB_PORTCHECK for REPLACE_GMTIME
  dnl and REPLACE_LOCALTIME, as portability to Solaris 2.6 and earlier
  dnl is no longer a big deal.
  REPLACE_GMTIME=0;                      AC_SUBST([REPLACE_GMTIME])
  REPLACE_LOCALTIME=0;                   AC_SUBST([REPLACE_LOCALTIME])
])
m4trace:m4/time_r.m4:10: -1- AC_DEFUN([gl_TIME_R], [
  dnl Persuade glibc and Solaris <time.h> to declare localtime_r.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])

  dnl Some systems don't declare localtime_r() and gmtime_r() if _REENTRANT is
  dnl not defined.
  AC_CHECK_DECLS([localtime_r], [], [],
    [[/* mingw's <time.h> provides the functions asctime_r, ctime_r,
         gmtime_r, localtime_r only if <unistd.h> or <pthread.h> has
         been included before.  */
      #if defined __MINGW32__
      # include <unistd.h>
      #endif
      #include <time.h>
    ]])
  if test $ac_cv_have_decl_localtime_r = no; then
    HAVE_DECL_LOCALTIME_R=0
  fi

  AC_CHECK_FUNCS_ONCE([localtime_r])
  if test $ac_cv_func_localtime_r = yes; then
    HAVE_LOCALTIME_R=1
    AC_CACHE_CHECK([whether localtime_r is compatible with its POSIX signature],
      [gl_cv_time_r_posix],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[/* mingw's <time.h> provides the functions asctime_r, ctime_r,
                 gmtime_r, localtime_r only if <unistd.h> or <pthread.h> has
                 been included before.  */
              #if defined __MINGW32__
              # include <unistd.h>
              #endif
              #include <time.h>
            ]],
            [[/* We don't need to append 'restrict's to the argument types,
                 even though the POSIX signature has the 'restrict's,
                 since C99 says they can't affect type compatibility.  */
              struct tm * (*ptr) (time_t const *, struct tm *) = localtime_r;
              if (ptr) return 0;
              /* Check the return type is a pointer.
                 On HP-UX 10 it is 'int'.  */
              *localtime_r (0, 0);]])
         ],
         [gl_cv_time_r_posix=yes],
         [gl_cv_time_r_posix=no])
      ])
    if test $gl_cv_time_r_posix = yes; then
      REPLACE_LOCALTIME_R=0
    else
      REPLACE_LOCALTIME_R=1
    fi
  else
    HAVE_LOCALTIME_R=0
    dnl On mingw, localtime_r() is defined as an inline function; use through a
    dnl direct function call works but the use as a function pointer leads to a
    dnl link error.
    AC_CACHE_CHECK([whether localtime_r exists as an inline function],
      [gl_cv_func_localtime_r_inline],
      [AC_LINK_IFELSE(
         [AC_LANG_PROGRAM(
            [[/* mingw's <time.h> provides the functions asctime_r, ctime_r,
                 gmtime_r, localtime_r only if <unistd.h> or <pthread.h> has
                 been included before.  */
              #if defined __MINGW32__
              # include <unistd.h>
              #endif
              #include <time.h>
            ]],
            [[time_t a;
              struct tm r;
              localtime_r (&a, &r);
            ]])
         ],
         [gl_cv_func_localtime_r_inline=yes],
         [gl_cv_func_localtime_r_inline=no])
      ])
    if test $gl_cv_func_localtime_r_inline = yes; then
      REPLACE_LOCALTIME_R=1
    fi
  fi
])
m4trace:m4/time_r.m4:97: -1- AC_DEFUN([gl_PREREQ_TIME_R], [
  :
])
m4trace:m4/time_rz.m4:10: -1- AC_DEFUN([gl_TIME_RZ], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_STRUCT_TIMEZONE])

  # On Mac OS X 10.6, localtime loops forever with some time_t values.
  # See Bug#27706, Bug#27736, and
  # https://lists.gnu.org/r/bug-gnulib/2017-07/msg00142.html
  AC_CACHE_CHECK([whether localtime works even near extrema],
    [gl_cv_func_localtime_works],
    [gl_cv_func_localtime_works=yes
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
            #include <string.h>
            #include <unistd.h>
            #include <time.h>
          ]], [[
            time_t t = -67768038400666600;
            struct tm *tm;
            char *tz = getenv ("TZ");
            if (! (tz && strcmp (tz, "QQQ0") == 0))
              return 0;
            alarm (2);
            tm = localtime (&t);
            /* Use TM and *TM to suppress over-optimization.  */
            return tm && tm->tm_isdst;
          ]])],
       [(TZ=QQQ0 ./conftest$EXEEXT) >/dev/null 2>&1 ||
           gl_cv_func_localtime_works=no],
       [],
       [gl_cv_func_localtime_works="guessing yes"])])
  if test "$gl_cv_func_localtime_works" = no; then
      AC_DEFINE([HAVE_LOCALTIME_INFLOOP_BUG], 1,
        [Define if localtime-like functions can loop forever on
         extreme arguments.])
  fi

  AC_CHECK_TYPES([timezone_t], [], [], [[#include <time.h>]])
  if test "$ac_cv_type_timezone_t" = yes; then
    HAVE_TIMEZONE_T=1
  fi
])
m4trace:m4/timegm.m4:7: -1- AC_DEFUN([gl_FUNC_TIMEGM], [
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MKTIME_WORKS])
  REPLACE_TIMEGM=0
  AC_CHECK_FUNCS_ONCE([timegm])
  if test $ac_cv_func_timegm = yes; then
    if test "$gl_cv_func_working_mktime" != yes; then
      # Assume that timegm is buggy if mktime is.
      REPLACE_TIMEGM=1
    fi
  else
    HAVE_TIMEGM=0
  fi
])
m4trace:m4/timegm.m4:24: -1- AC_DEFUN([gl_PREREQ_TIMEGM], [
  :
])
m4trace:m4/tls.m4:9: -1- AC_DEFUN([gl_TLS], [
  AC_REQUIRE([gl_THREADLIB])
])
m4trace:m4/tm_gmtoff.m4:7: -1- AC_DEFUN([gl_TM_GMTOFF], [
 AC_CHECK_MEMBER([struct tm.tm_gmtoff],
                 [AC_DEFINE([HAVE_TM_GMTOFF], [1],
                            [Define if struct tm has the tm_gmtoff member.])],
                 ,
                 [#include <time.h>])
])
m4trace:m4/tzset.m4:10: -1- AC_DEFUN([gl_FUNC_TZSET], [
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  REPLACE_TZSET=0
  case "$host_os" in
    mingw*) REPLACE_TZSET=1 ;;
  esac
])
m4trace:m4/uname.m4:7: -1- AC_DEFUN([gl_FUNC_UNAME], [
  AC_REQUIRE([gl_SYS_UTSNAME_H_DEFAULTS])
  AC_CHECK_FUNCS([uname])
  if test $ac_cv_func_uname = no; then
    HAVE_UNAME=0
  fi
])
m4trace:m4/uname.m4:17: -1- AC_DEFUN([gl_PREREQ_UNAME], [
  :
])
m4trace:m4/ungetc.m4:7: -1- AC_DEFUN_ONCE([gl_FUNC_UNGETC_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CACHE_CHECK([whether ungetc works on arbitrary bytes],
    [gl_cv_func_ungetc_works],
    [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <stdio.h>
      ]], [[FILE *f;
            if (!(f = fopen ("conftest.tmp", "w+")))
              return 1;
            if (fputs ("abc", f) < 0)
              { fclose (f); return 2; }
            rewind (f);
            if (fgetc (f) != 'a')
              { fclose (f); return 3; }
            if (fgetc (f) != 'b')
              { fclose (f); return 4; }
            if (ungetc ('d', f) != 'd')
              { fclose (f); return 5; }
            if (ftell (f) != 1)
              { fclose (f); return 6; }
            if (fgetc (f) != 'd')
              { fclose (f); return 7; }
            if (ftell (f) != 2)
              { fclose (f); return 8; }
            if (fseek (f, 0, SEEK_CUR) != 0)
              { fclose (f); return 9; }
            if (ftell (f) != 2)
              { fclose (f); return 10; }
            if (fgetc (f) != 'c')
              { fclose (f); return 11; }
            fclose (f);
            remove ("conftest.tmp");
          ]])],
        [gl_cv_func_ungetc_works=yes], [gl_cv_func_ungetc_works=no],
        [case "$host_os" in
                          # Guess yes on glibc systems.
           *-gnu* | gnu*) gl_cv_func_ungetc_works="guessing yes" ;;
                          # Guess yes on musl systems.
           *-musl*)       gl_cv_func_ungetc_works="guessing yes" ;;
                          # Guess yes on bionic systems.
           *-android*)    gl_cv_func_ungetc_works="guessing yes" ;;
                          # Guess yes on native Windows.
           mingw*)        gl_cv_func_ungetc_works="guessing yes" ;;
                          # If we don't know, obey --enable-cross-guesses.
           *)             gl_cv_func_ungetc_works="$gl_cross_guess_normal" ;;
         esac
        ])
    ])
  gl_ftello_broken_after_ungetc=no
  case "$gl_cv_func_ungetc_works" in
    *yes) ;;
    *)
      dnl On macOS >= 10.15, where the above program fails with exit code 6,
      dnl we fix it through an ftello override.
      case "$host_os" in
        darwin*) gl_ftello_broken_after_ungetc=yes ;;
        *)
          AC_DEFINE([FUNC_UNGETC_BROKEN], [1],
            [Define to 1 if ungetc is broken when used on arbitrary bytes.])
          ;;
      esac
      ;;
  esac
])
m4trace:m4/unistd-safer.m4:7: -1- AC_DEFUN([gl_UNISTD_SAFER], [
  AC_CHECK_FUNCS_ONCE([pipe])
])
m4trace:m4/unistd_h.m4:9: -1- AC_DEFUN_ONCE([gl_UNISTD_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  gl_CHECK_NEXT_HEADERS([unistd.h])
  if test $ac_cv_header_unistd_h = yes; then
    HAVE_UNISTD_H=1
  else
    HAVE_UNISTD_H=0
  fi
  AC_SUBST([HAVE_UNISTD_H])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Determine WINDOWS_64_BIT_OFF_T.
  AC_REQUIRE([gl_TYPE_OFF_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
/* Some systems declare various items in the wrong headers.  */
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <fcntl.h>
# include <stdio.h>
# include <stdlib.h>
# if defined _WIN32 && ! defined __CYGWIN__
#  include <io.h>
# endif
#endif
    ]], [access chdir chown copy_file_range dup dup2 dup3 environ euidaccess
    execl execle execlp execv execve execvp execvpe
    faccessat fchdir
    fchownat fdatasync fsync ftruncate getcwd getdomainname getdtablesize
    getentropy getgroups gethostname getlogin getlogin_r getpagesize getpass
    getusershell setusershell endusershell
    group_member isatty lchown link linkat lseek pipe pipe2 pread pwrite
    readlink readlinkat rmdir sethostname sleep symlink symlinkat
    truncate ttyname_r unlink unlinkat usleep])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS_ONCE([execvpe])
  if test $ac_cv_have_decl_execvpe = no; then
    HAVE_DECL_EXECVPE=0
  fi
])
m4trace:m4/unistd_h.m4:66: -1- AC_DEFUN([gl_UNISTD_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_UNISTD_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/unistd_h.m4:78: -1- AC_DEFUN([gl_UNISTD_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_UNISTD_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCESS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHOWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPY_FILE_RANGE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP3])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ENVIRON])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EUIDACCESS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FACCESSAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHOWNAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDATASYNC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSYNC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTRUNCATE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCWD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDOMAINNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDTABLESIZE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETENTROPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETGROUPS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETHOSTNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETOPT_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPAGESIZE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPASS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUSERSHELL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GROUP_MEMBER])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISATTY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHOWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSEEK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PREAD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PWRITE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READ])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RMDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETHOSTNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SLEEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCATE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TTYNAME_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_NONBLOCKING])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_SIGPIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_USLEEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WRITE])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ACCESS], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHDIR], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CLOSE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP2], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECL], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECV], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVPE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETCWD], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETPID], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ISATTY], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_LSEEK], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_READ], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_RMDIR], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_SWAB], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UNLINK], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WRITE], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_UNISTD_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
])
m4trace:m4/unistd_h.m4:170: -1- AC_DEFUN([gl_UNISTD_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_CHOWN=1;           AC_SUBST([HAVE_CHOWN])
  HAVE_COPY_FILE_RANGE=1; AC_SUBST([HAVE_COPY_FILE_RANGE])
  HAVE_DUP3=1;            AC_SUBST([HAVE_DUP3])
  HAVE_EUIDACCESS=1;      AC_SUBST([HAVE_EUIDACCESS])
  HAVE_EXECVPE=1;         AC_SUBST([HAVE_EXECVPE])
  HAVE_FACCESSAT=1;       AC_SUBST([HAVE_FACCESSAT])
  HAVE_FCHDIR=1;          AC_SUBST([HAVE_FCHDIR])
  HAVE_FCHOWNAT=1;        AC_SUBST([HAVE_FCHOWNAT])
  HAVE_FDATASYNC=1;       AC_SUBST([HAVE_FDATASYNC])
  HAVE_FSYNC=1;           AC_SUBST([HAVE_FSYNC])
  HAVE_FTRUNCATE=1;       AC_SUBST([HAVE_FTRUNCATE])
  HAVE_GETDTABLESIZE=1;   AC_SUBST([HAVE_GETDTABLESIZE])
  HAVE_GETENTROPY=1;      AC_SUBST([HAVE_GETENTROPY])
  HAVE_GETGROUPS=1;       AC_SUBST([HAVE_GETGROUPS])
  HAVE_GETHOSTNAME=1;     AC_SUBST([HAVE_GETHOSTNAME])
  HAVE_GETLOGIN=1;        AC_SUBST([HAVE_GETLOGIN])
  HAVE_GETPAGESIZE=1;     AC_SUBST([HAVE_GETPAGESIZE])
  HAVE_GETPASS=1;         AC_SUBST([HAVE_GETPASS])
  HAVE_GROUP_MEMBER=1;    AC_SUBST([HAVE_GROUP_MEMBER])
  HAVE_LCHOWN=1;          AC_SUBST([HAVE_LCHOWN])
  HAVE_LINK=1;            AC_SUBST([HAVE_LINK])
  HAVE_LINKAT=1;          AC_SUBST([HAVE_LINKAT])
  HAVE_PIPE=1;            AC_SUBST([HAVE_PIPE])
  HAVE_PIPE2=1;           AC_SUBST([HAVE_PIPE2])
  HAVE_PREAD=1;           AC_SUBST([HAVE_PREAD])
  HAVE_PWRITE=1;          AC_SUBST([HAVE_PWRITE])
  HAVE_READLINK=1;        AC_SUBST([HAVE_READLINK])
  HAVE_READLINKAT=1;      AC_SUBST([HAVE_READLINKAT])
  HAVE_SETHOSTNAME=1;     AC_SUBST([HAVE_SETHOSTNAME])
  HAVE_SLEEP=1;           AC_SUBST([HAVE_SLEEP])
  HAVE_SYMLINK=1;         AC_SUBST([HAVE_SYMLINK])
  HAVE_SYMLINKAT=1;       AC_SUBST([HAVE_SYMLINKAT])
  HAVE_UNLINKAT=1;        AC_SUBST([HAVE_UNLINKAT])
  HAVE_USLEEP=1;          AC_SUBST([HAVE_USLEEP])
  HAVE_DECL_ENVIRON=1;    AC_SUBST([HAVE_DECL_ENVIRON])
  HAVE_DECL_EXECVPE=1;    AC_SUBST([HAVE_DECL_EXECVPE])
  HAVE_DECL_FCHDIR=1;     AC_SUBST([HAVE_DECL_FCHDIR])
  HAVE_DECL_FDATASYNC=1;  AC_SUBST([HAVE_DECL_FDATASYNC])
  HAVE_DECL_GETDOMAINNAME=1; AC_SUBST([HAVE_DECL_GETDOMAINNAME])
  HAVE_DECL_GETLOGIN=1;   AC_SUBST([HAVE_DECL_GETLOGIN])
  HAVE_DECL_GETLOGIN_R=1; AC_SUBST([HAVE_DECL_GETLOGIN_R])
  HAVE_DECL_GETPAGESIZE=1; AC_SUBST([HAVE_DECL_GETPAGESIZE])
  HAVE_DECL_GETUSERSHELL=1; AC_SUBST([HAVE_DECL_GETUSERSHELL])
  HAVE_DECL_SETHOSTNAME=1; AC_SUBST([HAVE_DECL_SETHOSTNAME])
  HAVE_DECL_TRUNCATE=1;   AC_SUBST([HAVE_DECL_TRUNCATE])
  HAVE_DECL_TTYNAME_R=1;  AC_SUBST([HAVE_DECL_TTYNAME_R])
  HAVE_OS_H=0;            AC_SUBST([HAVE_OS_H])
  HAVE_SYS_PARAM_H=0;     AC_SUBST([HAVE_SYS_PARAM_H])
  REPLACE_ACCESS=0;       AC_SUBST([REPLACE_ACCESS])
  REPLACE_CHOWN=0;        AC_SUBST([REPLACE_CHOWN])
  REPLACE_CLOSE=0;        AC_SUBST([REPLACE_CLOSE])
  REPLACE_DUP=0;          AC_SUBST([REPLACE_DUP])
  REPLACE_DUP2=0;         AC_SUBST([REPLACE_DUP2])
  REPLACE_EXECL=0;        AC_SUBST([REPLACE_EXECL])
  REPLACE_EXECLE=0;       AC_SUBST([REPLACE_EXECLE])
  REPLACE_EXECLP=0;       AC_SUBST([REPLACE_EXECLP])
  REPLACE_EXECV=0;        AC_SUBST([REPLACE_EXECV])
  REPLACE_EXECVE=0;       AC_SUBST([REPLACE_EXECVE])
  REPLACE_EXECVP=0;       AC_SUBST([REPLACE_EXECVP])
  REPLACE_EXECVPE=0;      AC_SUBST([REPLACE_EXECVPE])
  REPLACE_FACCESSAT=0;    AC_SUBST([REPLACE_FACCESSAT])
  REPLACE_FCHOWNAT=0;     AC_SUBST([REPLACE_FCHOWNAT])
  REPLACE_FTRUNCATE=0;    AC_SUBST([REPLACE_FTRUNCATE])
  REPLACE_GETCWD=0;       AC_SUBST([REPLACE_GETCWD])
  REPLACE_GETDOMAINNAME=0; AC_SUBST([REPLACE_GETDOMAINNAME])
  REPLACE_GETDTABLESIZE=0; AC_SUBST([REPLACE_GETDTABLESIZE])
  REPLACE_GETLOGIN_R=0;   AC_SUBST([REPLACE_GETLOGIN_R])
  REPLACE_GETGROUPS=0;    AC_SUBST([REPLACE_GETGROUPS])
  REPLACE_GETPAGESIZE=0;  AC_SUBST([REPLACE_GETPAGESIZE])
  REPLACE_GETPASS=0;      AC_SUBST([REPLACE_GETPASS])
  REPLACE_ISATTY=0;       AC_SUBST([REPLACE_ISATTY])
  REPLACE_LCHOWN=0;       AC_SUBST([REPLACE_LCHOWN])
  REPLACE_LINK=0;         AC_SUBST([REPLACE_LINK])
  REPLACE_LINKAT=0;       AC_SUBST([REPLACE_LINKAT])
  REPLACE_LSEEK=0;        AC_SUBST([REPLACE_LSEEK])
  REPLACE_PREAD=0;        AC_SUBST([REPLACE_PREAD])
  REPLACE_PWRITE=0;       AC_SUBST([REPLACE_PWRITE])
  REPLACE_READ=0;         AC_SUBST([REPLACE_READ])
  REPLACE_READLINK=0;     AC_SUBST([REPLACE_READLINK])
  REPLACE_READLINKAT=0;   AC_SUBST([REPLACE_READLINKAT])
  REPLACE_RMDIR=0;        AC_SUBST([REPLACE_RMDIR])
  REPLACE_SLEEP=0;        AC_SUBST([REPLACE_SLEEP])
  REPLACE_SYMLINK=0;      AC_SUBST([REPLACE_SYMLINK])
  REPLACE_SYMLINKAT=0;    AC_SUBST([REPLACE_SYMLINKAT])
  REPLACE_TRUNCATE=0;     AC_SUBST([REPLACE_TRUNCATE])
  REPLACE_TTYNAME_R=0;    AC_SUBST([REPLACE_TTYNAME_R])
  REPLACE_UNLINK=0;       AC_SUBST([REPLACE_UNLINK])
  REPLACE_UNLINKAT=0;     AC_SUBST([REPLACE_UNLINKAT])
  REPLACE_USLEEP=0;       AC_SUBST([REPLACE_USLEEP])
  REPLACE_WRITE=0;        AC_SUBST([REPLACE_WRITE])
  UNISTD_H_HAVE_SYS_RANDOM_H=0; AC_SUBST([UNISTD_H_HAVE_SYS_RANDOM_H])
  UNISTD_H_HAVE_WINSOCK2_H=0; AC_SUBST([UNISTD_H_HAVE_WINSOCK2_H])
  UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS=0;
                           AC_SUBST([UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS])
])
m4trace:m4/unlink.m4:7: -1- AC_DEFUN([gl_FUNC_UNLINK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_HEADERS_ONCE([unistd.h])

  dnl Detect FreeBSD 7.2, AIX 7.1, Solaris 9 bug.
  AC_CACHE_CHECK([whether unlink honors trailing slashes],
    [gl_cv_func_unlink_honors_slashes],
    [touch conftest.file
     # Assume that if we have lstat, we can also check symlinks.
     if test $ac_cv_func_lstat = yes; then
       ln -s conftest.file conftest.lnk
     fi
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
         [[#if HAVE_UNISTD_H
           # include <unistd.h>
           #else /* on Windows with MSVC */
           # include <io.h>
           #endif
           #include <errno.h>
         ]GL_MDA_DEFINES],
         [[int result = 0;
           if (!unlink ("conftest.file/"))
             result |= 1;
           else if (errno != ENOTDIR)
             result |= 2;
#if HAVE_LSTAT
           if (!unlink ("conftest.lnk/"))
             result |= 4;
           else if (errno != ENOTDIR)
             result |= 8;
#endif
           return result;
         ]])],
      [gl_cv_func_unlink_honors_slashes=yes],
      [gl_cv_func_unlink_honors_slashes=no],
      [case "$host_os" in
                          # Guess yes on Linux systems.
         linux-* | linux) gl_cv_func_unlink_honors_slashes="guessing yes" ;;
                          # Guess yes on glibc systems.
         *-gnu*)          gl_cv_func_unlink_honors_slashes="guessing yes" ;;
                          # Guess no on native Windows.
         mingw*)          gl_cv_func_unlink_honors_slashes="guessing no" ;;
                          # If we don't know, obey --enable-cross-guesses.
         *)               gl_cv_func_unlink_honors_slashes="$gl_cross_guess_normal" ;;
       esac
      ])
     rm -f conftest.file conftest.lnk])
  case "$gl_cv_func_unlink_honors_slashes" in
    *no)
      REPLACE_UNLINK=1
      ;;
  esac

  dnl Detect Mac OS X 10.5.6 bug: On read-write HFS mounts, unlink("..") or
  dnl unlink("../..") succeeds without doing anything.
  AC_CACHE_CHECK([whether unlink of a parent directory fails as it should],
    [gl_cv_func_unlink_parent_fails],
    [case "$host_os" in
       darwin*)
         dnl Try to unlink a subdirectory of /tmp, because /tmp is usually on a
         dnl HFS mount on Mac OS X. Use a subdirectory, owned by the current
         dnl user, because otherwise unlink() may fail due to permissions
         dnl reasons, and because when running as root we don't want to risk
         dnl destroying the entire /tmp.
         if {
              # Use the mktemp program if available. If not available, hide the error
              # message.
              tmp=`(umask 077 && mktemp -d /tmp/gtXXXXXX) 2>/dev/null` &&
              test -n "$tmp" && test -d "$tmp"
            } ||
            {
              # Use a simple mkdir command. It is guaranteed to fail if the directory
              # already exists.  $RANDOM is bash specific and expands to empty in shells
              # other than bash, ksh and zsh.  Its use does not increase security;
              # rather, it minimizes the probability of failure in a very cluttered /tmp
              # directory.
              tmp=/tmp/gt$$-$RANDOM
              (umask 077 && mkdir "$tmp")
            }; then
           mkdir "$tmp/subdir"
           GL_SUBDIR_FOR_UNLINK="$tmp/subdir"
           export GL_SUBDIR_FOR_UNLINK
           AC_RUN_IFELSE(
             [AC_LANG_SOURCE([[
                #include <stdlib.h>
                #if HAVE_UNISTD_H
                # include <unistd.h>
                #else /* on Windows with MSVC */
                # include <direct.h>
                # include <io.h>
                #endif
                ]GL_MDA_DEFINES[
                int main ()
                {
                  int result = 0;
                  if (chdir (getenv ("GL_SUBDIR_FOR_UNLINK")) != 0)
                    result |= 1;
                  else if (unlink ("..") == 0)
                    result |= 2;
                  return result;
                }
              ]])],
             [gl_cv_func_unlink_parent_fails=yes],
             [gl_cv_func_unlink_parent_fails=no],
             [# If we don't know, obey --enable-cross-guesses.
              gl_cv_func_unlink_parent_fails="$gl_cross_guess_normal"
             ])
           unset GL_SUBDIR_FOR_UNLINK
           rm -rf "$tmp"
         else
           gl_cv_func_unlink_parent_fails="guessing no"
         fi
         ;;
       *)
         gl_cv_func_unlink_parent_fails="guessing yes"
         ;;
     esac
    ])
  case "$gl_cv_func_unlink_parent_fails" in
    *no)
      REPLACE_UNLINK=1
      AC_DEFINE([UNLINK_PARENT_BUG], [1],
        [Define to 1 if unlink() on a parent directory may succeed])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:7: -1- AC_DEFUN([gl_FUNC_VASNPRINTF], [
  AC_CHECK_FUNCS_ONCE([vasnprintf])
  if test $ac_cv_func_vasnprintf = no; then
    gl_REPLACE_VASNPRINTF
  fi
])
m4trace:m4/vasnprintf.m4:15: -1- AC_DEFUN([gl_REPLACE_VASNPRINTF], [
  AC_CHECK_FUNCS_ONCE([vasnprintf])
  AC_LIBOBJ([vasnprintf])
  AC_LIBOBJ([printf-args])
  AC_LIBOBJ([printf-parse])
  AC_LIBOBJ([asnprintf])
  if test $ac_cv_func_vasnprintf = yes; then
    AC_DEFINE([REPLACE_VASNPRINTF], [1],
      [Define if vasnprintf exists but is overridden by gnulib.])
  fi
  gl_PREREQ_PRINTF_ARGS
  gl_PREREQ_PRINTF_PARSE
  gl_PREREQ_VASNPRINTF
  gl_PREREQ_ASNPRINTF
])
m4trace:m4/vasnprintf.m4:33: -1- AC_DEFUN([gl_PREREQ_PRINTF_ARGS], [
  AC_REQUIRE([gt_TYPE_WCHAR_T])
  AC_REQUIRE([gt_TYPE_WINT_T])
])
m4trace:m4/vasnprintf.m4:40: -1- AC_DEFUN([gl_PREREQ_PRINTF_PARSE], [
  AC_REQUIRE([gl_FEATURES_H])
  AC_REQUIRE([gt_TYPE_WCHAR_T])
  AC_REQUIRE([gt_TYPE_WINT_T])
  AC_REQUIRE([AC_TYPE_SIZE_T])
  AC_CHECK_TYPE([ptrdiff_t], ,
    [AC_DEFINE([ptrdiff_t], [long],
       [Define as the type of the result of subtracting two pointers, if the system doesn't define it.])
    ])
  AC_REQUIRE([gt_AC_TYPE_INTMAX_T])
])
m4trace:m4/vasnprintf.m4:54: -1- AC_DEFUN_ONCE([gl_PREREQ_VASNPRINTF], [
  AC_REQUIRE([AC_FUNC_ALLOCA])
  AC_REQUIRE([gt_TYPE_WCHAR_T])
  AC_REQUIRE([gt_TYPE_WINT_T])
  AC_CHECK_FUNCS([snprintf strnlen wcslen wcsnlen mbrtowc wcrtomb])
  dnl Use the _snprintf function only if it is declared (because on NetBSD it
  dnl is defined as a weak alias of snprintf; we prefer to use the latter).
  AC_CHECK_DECLS([_snprintf], , , [[#include <stdio.h>]])
  dnl Knowing DBL_EXPBIT0_WORD and DBL_EXPBIT0_BIT enables an optimization
  dnl in the code for NEED_PRINTF_LONG_DOUBLE || NEED_PRINTF_DOUBLE.
  AC_REQUIRE([gl_DOUBLE_EXPONENT_LOCATION])
  dnl We can avoid a lot of code by assuming that snprintf's return value
  dnl conforms to ISO C99. So check that.
  AC_REQUIRE([gl_SNPRINTF_RETVAL_C99])
  case "$gl_cv_func_snprintf_retval_c99" in
    *yes)
      AC_DEFINE([HAVE_SNPRINTF_RETVAL_C99], [1],
        [Define if the return value of the snprintf function is the number of
         of bytes (excluding the terminating NUL) that would have been produced
         if the buffer had been large enough.])
      ;;
  esac
  dnl Additionally, the use of %n can be eliminated by assuming that snprintf
  dnl always produces NUL-terminated strings (no truncation).
  AC_REQUIRE([gl_SNPRINTF_TRUNCATION_C99])
  case "$gl_cv_func_snprintf_truncation_c99" in
    *yes)
      AC_DEFINE([HAVE_SNPRINTF_TRUNCATION_C99], [1],
        [Define if the string produced by the snprintf function is always NUL
         terminated.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:91: -1- AC_DEFUN_ONCE([gl_PREREQ_VASNPRINTF_LONG_DOUBLE], [
  AC_REQUIRE([gl_PRINTF_LONG_DOUBLE])
  case "$gl_cv_func_printf_long_double" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_LONG_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'long double' arguments.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:107: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE], [
  AC_REQUIRE([gl_PRINTF_INFINITE])
  case "$gl_cv_func_printf_infinite" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_INFINITE_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         infinite 'double' arguments.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:123: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE], [
  AC_REQUIRE([gl_PRINTF_INFINITE_LONG_DOUBLE])
  dnl There is no need to set NEED_PRINTF_INFINITE_LONG_DOUBLE if
  dnl NEED_PRINTF_LONG_DOUBLE is already set.
  AC_REQUIRE([gl_PREREQ_VASNPRINTF_LONG_DOUBLE])
  case "$gl_cv_func_printf_long_double" in
    *yes)
      case "$gl_cv_func_printf_infinite_long_double" in
        *yes)
          ;;
        *)
          AC_DEFINE([NEED_PRINTF_INFINITE_LONG_DOUBLE], [1],
            [Define if the vasnprintf implementation needs special code for
             infinite 'long double' arguments.])
          ;;
      esac
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:145: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_DIRECTIVE_A], [
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_A])
  case "$gl_cv_func_printf_directive_a" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_DIRECTIVE_A], [1],
        [Define if the vasnprintf implementation needs special code for
         the 'a' and 'A' directives.])
      AC_CHECK_FUNCS([nl_langinfo])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:161: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_DIRECTIVE_F], [
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_F])
  case "$gl_cv_func_printf_directive_f" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_DIRECTIVE_F], [1],
        [Define if the vasnprintf implementation needs special code for
         the 'F' directive.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:176: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_DIRECTIVE_LS], [
  AC_REQUIRE([gl_PRINTF_DIRECTIVE_LS])
  case "$gl_cv_func_printf_directive_ls" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_DIRECTIVE_LS], [1],
        [Define if the vasnprintf implementation needs special code for
         the 'ls' directive.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:191: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_FLAG_GROUPING], [
  AC_REQUIRE([gl_PRINTF_FLAG_GROUPING])
  case "$gl_cv_func_printf_flag_grouping" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_FLAG_GROUPING], [1],
        [Define if the vasnprintf implementation needs special code for the
         ' flag.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:206: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST], [
  AC_REQUIRE([gl_PRINTF_FLAG_LEFTADJUST])
  case "$gl_cv_func_printf_flag_leftadjust" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_FLAG_LEFTADJUST], [1],
        [Define if the vasnprintf implementation needs special code for the
         '-' flag.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:221: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_FLAG_ZERO], [
  AC_REQUIRE([gl_PRINTF_FLAG_ZERO])
  case "$gl_cv_func_printf_flag_zero" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_FLAG_ZERO], [1],
        [Define if the vasnprintf implementation needs special code for the
         0 flag.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:236: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_PRECISION], [
  AC_REQUIRE([gl_PRINTF_PRECISION])
  case "$gl_cv_func_printf_precision" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_UNBOUNDED_PRECISION], [1],
        [Define if the vasnprintf implementation needs special code for
         supporting large precisions without arbitrary bounds.])
      AC_DEFINE([NEED_PRINTF_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'double' arguments.])
      AC_DEFINE([NEED_PRINTF_LONG_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'long double' arguments.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:258: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_ENOMEM], [
  AC_REQUIRE([gl_PRINTF_ENOMEM])
  case "$gl_cv_func_printf_enomem" in
    *yes)
      ;;
    *)
      AC_DEFINE([NEED_PRINTF_ENOMEM], [1],
        [Define if the vasnprintf implementation needs special code for
         surviving out-of-memory conditions.])
      AC_DEFINE([NEED_PRINTF_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'double' arguments.])
      AC_DEFINE([NEED_PRINTF_LONG_DOUBLE], [1],
        [Define if the vasnprintf implementation needs special code for
         'long double' arguments.])
      ;;
  esac
])
m4trace:m4/vasnprintf.m4:279: -1- AC_DEFUN([gl_PREREQ_VASNPRINTF_WITH_EXTRAS], [
  AC_REQUIRE([gl_PREREQ_VASNPRINTF])
  gl_PREREQ_VASNPRINTF_LONG_DOUBLE
  gl_PREREQ_VASNPRINTF_INFINITE_DOUBLE
  gl_PREREQ_VASNPRINTF_INFINITE_LONG_DOUBLE
  gl_PREREQ_VASNPRINTF_DIRECTIVE_A
  gl_PREREQ_VASNPRINTF_DIRECTIVE_F
  gl_PREREQ_VASNPRINTF_DIRECTIVE_LS
  gl_PREREQ_VASNPRINTF_FLAG_GROUPING
  gl_PREREQ_VASNPRINTF_FLAG_LEFTADJUST
  gl_PREREQ_VASNPRINTF_FLAG_ZERO
  gl_PREREQ_VASNPRINTF_PRECISION
  gl_PREREQ_VASNPRINTF_ENOMEM
])
m4trace:m4/vasnprintf.m4:296: -1- AC_DEFUN([gl_PREREQ_ASNPRINTF], [
])
m4trace:m4/vasprintf.m4:8: -1- AC_DEFUN([gl_FUNC_VASPRINTF], [
  AC_CHECK_FUNCS([vasprintf])
  if test $ac_cv_func_vasprintf = no; then
    gl_REPLACE_VASPRINTF
  fi
])
m4trace:m4/vasprintf.m4:16: -1- AC_DEFUN([gl_REPLACE_VASPRINTF], [
  AC_LIBOBJ([vasprintf])
  AC_LIBOBJ([asprintf])
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  if test $ac_cv_func_vasprintf = yes; then
    REPLACE_VASPRINTF=1
  else
    HAVE_VASPRINTF=0
  fi
  gl_PREREQ_VASPRINTF_H
  gl_PREREQ_VASPRINTF
  gl_PREREQ_ASPRINTF
])
m4trace:m4/vasprintf.m4:32: -1- AC_DEFUN([gl_PREREQ_VASPRINTF_H], [
  dnl Persuade glibc <stdio.h> to declare asprintf() and vasprintf().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
])
m4trace:m4/vasprintf.m4:39: -1- AC_DEFUN([gl_PREREQ_VASPRINTF], [
])
m4trace:m4/vasprintf.m4:44: -1- AC_DEFUN([gl_PREREQ_ASPRINTF], [
])
m4trace:m4/visibility.m4:23: -1- AC_DEFUN([gl_VISIBILITY], [
  AC_REQUIRE([AC_PROG_CC])
  CFLAG_VISIBILITY=
  HAVE_VISIBILITY=0
  if test -n "$GCC"; then
    dnl First, check whether -Werror can be added to the command line, or
    dnl whether it leads to an error because of some other option that the
    dnl user has put into $CC $CFLAGS $CPPFLAGS.
    AC_CACHE_CHECK([whether the -Werror option is usable],
      [gl_cv_cc_vis_werror],
      [gl_save_CFLAGS="$CFLAGS"
       CFLAGS="$CFLAGS -Werror"
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[]], [[]])],
         [gl_cv_cc_vis_werror=yes],
         [gl_cv_cc_vis_werror=no])
       CFLAGS="$gl_save_CFLAGS"
      ])
    dnl Now check whether visibility declarations are supported.
    AC_CACHE_CHECK([for simple visibility declarations],
      [gl_cv_cc_visibility],
      [gl_save_CFLAGS="$CFLAGS"
       CFLAGS="$CFLAGS -fvisibility=hidden"
       dnl We use the option -Werror and a function dummyfunc, because on some
       dnl platforms (Cygwin 1.7) the use of -fvisibility triggers a warning
       dnl "visibility attribute not supported in this configuration; ignored"
       dnl at the first function definition in every compilation unit, and we
       dnl don't want to use the option in this case.
       if test $gl_cv_cc_vis_werror = yes; then
         CFLAGS="$CFLAGS -Werror"
       fi
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[extern __attribute__((__visibility__("hidden"))) int hiddenvar;
              extern __attribute__((__visibility__("default"))) int exportedvar;
              extern __attribute__((__visibility__("hidden"))) int hiddenfunc (void);
              extern __attribute__((__visibility__("default"))) int exportedfunc (void);
              void dummyfunc (void);
              int hiddenvar;
              int exportedvar;
              int hiddenfunc (void) { return 51; }
              int exportedfunc (void) { return 1225736919; }
              void dummyfunc (void) {}
            ]],
            [[]])],
         [gl_cv_cc_visibility=yes],
         [gl_cv_cc_visibility=no])
       CFLAGS="$gl_save_CFLAGS"
      ])
    if test $gl_cv_cc_visibility = yes; then
      CFLAG_VISIBILITY="-fvisibility=hidden"
      HAVE_VISIBILITY=1
    fi
  fi
  AC_SUBST([CFLAG_VISIBILITY])
  AC_SUBST([HAVE_VISIBILITY])
  AC_DEFINE_UNQUOTED([HAVE_VISIBILITY], [$HAVE_VISIBILITY],
    [Define to 1 or 0, depending whether the compiler supports simple visibility declarations.])
])
m4trace:m4/waitpid.m4:7: -1- AC_DEFUN([gl_FUNC_WAITPID], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  HAVE_WAITPID=1
  case $host_os in
    mingw*) HAVE_WAITPID=0 ;;
  esac
])
m4trace:m4/warn-on-use.m4:26: -1- AC_DEFUN([gl_WARN_ON_USE_PREPARE], [
  m4_ifdef([gl_POSIXCHECK],
    [m4_foreach_w([gl_decl], [$2],
       [AH_TEMPLATE([HAVE_RAW_DECL_]AS_TR_CPP(m4_defn([gl_decl])),
         [Define to 1 if ]m4_defn([gl_decl])[ is declared even after
          undefining macros.])])dnl
     for gl_func in m4_flatten([$2]); do
       AS_VAR_PUSHDEF([gl_Symbol], [gl_cv_have_raw_decl_$gl_func])dnl
       AC_CACHE_CHECK([whether $gl_func is declared without a macro],
         [gl_Symbol],
         [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([$1],
[[#undef $gl_func
  (void) $gl_func;]])],
           [AS_VAR_SET([gl_Symbol], [yes])], [AS_VAR_SET([gl_Symbol], [no])])])
       AS_VAR_IF([gl_Symbol], [yes],
         [AC_DEFINE_UNQUOTED(AS_TR_CPP([HAVE_RAW_DECL_$gl_func]), [1])
          dnl shortcut - if the raw declaration exists, then set a cache
          dnl variable to allow skipping any later AC_CHECK_DECL efforts
          eval ac_cv_have_decl_$gl_func=yes])
       AS_VAR_POPDEF([gl_Symbol])dnl
     done
    ])
])
m4trace:m4/wchar_h.m4:12: -1- AC_DEFUN_ONCE([gl_WCHAR_H], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  AC_REQUIRE([gl_WCHAR_H_INLINE_OK])
  dnl Prepare for creating substitute <wchar.h>.
  dnl Check for <wchar.h> (missing in Linux uClibc when built without wide
  dnl character support).
  dnl <wchar.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([wchar.h])
  if test $ac_cv_header_wchar_h = yes; then
    HAVE_WCHAR_H=1
  else
    HAVE_WCHAR_H=0
  fi
  AC_SUBST([HAVE_WCHAR_H])

  AC_REQUIRE([gl_FEATURES_H])

  AC_REQUIRE([gt_TYPE_WINT_T])
  if test $gt_cv_c_wint_t = yes; then
    HAVE_WINT_T=1
  else
    HAVE_WINT_T=0
  fi
  AC_SUBST([HAVE_WINT_T])

  AC_REQUIRE([gl_TYPE_WINT_T_PREREQ])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
      #include <wchar.h>
    ]],
    [btowc wctob mbsinit mbrtowc mbrlen mbsrtowcs mbsnrtowcs wcrtomb
     wcsrtombs wcsnrtombs wcwidth
     wmemchr wmemcmp wmemcpy wmemmove wmempcpy wmemset
     wcslen wcsnlen wcscpy wcpcpy wcsncpy wcpncpy wcscat wcsncat wcscmp
     wcsncmp wcscasecmp wcsncasecmp wcscoll wcsxfrm wcsdup wcschr wcsrchr
     wcscspn wcsspn wcspbrk wcsstr wcstok wcswidth wcsftime
    ])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS([wcsdup], [], [], [[
      #include <wchar.h>
    ]])
  if test $ac_cv_have_decl_wcsdup = no; then
    HAVE_DECL_WCSDUP=0
  fi
])
m4trace:m4/wchar_h.m4:64: -1- AC_DEFUN([gl_WCHAR_H_INLINE_OK], [
  dnl Test whether <wchar.h> suffers due to the transition from '__inline' to
  dnl 'gnu_inline'. See <https://sourceware.org/bugzilla/show_bug.cgi?id=4022>
  dnl and <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=42440>. In summary,
  dnl glibc version 2.5 or older, together with gcc version 4.3 or newer and
  dnl the option -std=c99 or -std=gnu99, leads to a broken <wchar.h>.
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether <wchar.h> uses 'inline' correctly],
    [gl_cv_header_wchar_h_correct_inline],
    [gl_cv_header_wchar_h_correct_inline=yes
     case "$host_os" in
       *-gnu* | gnu*)
         AC_LANG_CONFTEST([
           AC_LANG_SOURCE([[
             #define wcstod renamed_wcstod
             #include <wchar.h>
             extern int zero (void);
             int main () { return zero(); }
           ]])])
         dnl Do not rename the object file from conftest.$ac_objext to
         dnl conftest1.$ac_objext, as this will cause the link to fail on
         dnl z/OS when using the XPLINK object format (due to duplicate
         dnl CSECT names). Instead, temporarily redefine $ac_compile so
         dnl that the object file has the latter name from the start.
         save_ac_compile="$ac_compile"
         ac_compile=`echo "$save_ac_compile" | sed s/conftest/conftest1/`
         if echo '#include "conftest.c"' >conftest1.c \
            && AC_TRY_EVAL([ac_compile]); then
           AC_LANG_CONFTEST([
             AC_LANG_SOURCE([[
               #define wcstod renamed_wcstod
               #include <wchar.h>
               int zero (void) { return 0; }
             ]])])
           dnl See note above about renaming object files.
           ac_compile=`echo "$save_ac_compile" | sed s/conftest/conftest2/`
           if echo '#include "conftest.c"' >conftest2.c \
              && AC_TRY_EVAL([ac_compile]); then
             if $CC -o conftest$ac_exeext $CFLAGS $LDFLAGS conftest1.$ac_objext conftest2.$ac_objext $LIBS >&AS_MESSAGE_LOG_FD 2>&1; then
               :
             else
               gl_cv_header_wchar_h_correct_inline=no
             fi
           fi
         fi
         ac_compile="$save_ac_compile"
         rm -f conftest[12].c conftest[12].$ac_objext conftest$ac_exeext
         ;;
     esac
    ])
  if test $gl_cv_header_wchar_h_correct_inline = no; then
    AC_MSG_ERROR([<wchar.h> cannot be used with this compiler ($CC $CFLAGS $CPPFLAGS).
This is a known interoperability problem of glibc <= 2.5 with gcc >= 4.3 in
C99 mode. You have four options:
  - Add the flag -fgnu89-inline to CC and reconfigure, or
  - Fix your include files, using parts of
    <https://sourceware.org/git/?p=glibc.git;a=commitdiff;h=b037a293a48718af30d706c2e18c929d0e69a621>, or
  - Use a gcc version older than 4.3, or
  - Don't use the flags -std=c99 or -std=gnu99.
Configuration aborted.])
  fi
])
m4trace:m4/wchar_h.m4:132: -1- AC_DEFUN([gl_WCHAR_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_WCHAR_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/wchar_h.m4:144: -1- AC_DEFUN([gl_WCHAR_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_WCHAR_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BTOWC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSINIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRTOWC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRTOWCS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNRTOWCS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCRTOMB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRTOMBS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNRTOMBS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCWIDTH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMMOVE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMSET])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPNCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCOLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSXFRM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSDUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSPBRK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSTOK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSWIDTH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSFTIME])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WCSDUP], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_WCHAR_H_MODULE_INDICATOR_DEFAULTS])
  dnl Make sure the shell variable for GNULIB_FREE_POSIX is initialized.
  gl_STDLIB_H_REQUIRE_DEFAULTS
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
])
m4trace:m4/wchar_h.m4:197: -1- AC_DEFUN([gl_WCHAR_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_BTOWC=1;         AC_SUBST([HAVE_BTOWC])
  HAVE_MBSINIT=1;       AC_SUBST([HAVE_MBSINIT])
  HAVE_MBRTOWC=1;       AC_SUBST([HAVE_MBRTOWC])
  HAVE_MBRLEN=1;        AC_SUBST([HAVE_MBRLEN])
  HAVE_MBSRTOWCS=1;     AC_SUBST([HAVE_MBSRTOWCS])
  HAVE_MBSNRTOWCS=1;    AC_SUBST([HAVE_MBSNRTOWCS])
  HAVE_WCRTOMB=1;       AC_SUBST([HAVE_WCRTOMB])
  HAVE_WCSRTOMBS=1;     AC_SUBST([HAVE_WCSRTOMBS])
  HAVE_WCSNRTOMBS=1;    AC_SUBST([HAVE_WCSNRTOMBS])
  HAVE_WMEMCHR=1;       AC_SUBST([HAVE_WMEMCHR])
  HAVE_WMEMCMP=1;       AC_SUBST([HAVE_WMEMCMP])
  HAVE_WMEMCPY=1;       AC_SUBST([HAVE_WMEMCPY])
  HAVE_WMEMMOVE=1;      AC_SUBST([HAVE_WMEMMOVE])
  HAVE_WMEMPCPY=1;      AC_SUBST([HAVE_WMEMPCPY])
  HAVE_WMEMSET=1;       AC_SUBST([HAVE_WMEMSET])
  HAVE_WCSLEN=1;        AC_SUBST([HAVE_WCSLEN])
  HAVE_WCSNLEN=1;       AC_SUBST([HAVE_WCSNLEN])
  HAVE_WCSCPY=1;        AC_SUBST([HAVE_WCSCPY])
  HAVE_WCPCPY=1;        AC_SUBST([HAVE_WCPCPY])
  HAVE_WCSNCPY=1;       AC_SUBST([HAVE_WCSNCPY])
  HAVE_WCPNCPY=1;       AC_SUBST([HAVE_WCPNCPY])
  HAVE_WCSCAT=1;        AC_SUBST([HAVE_WCSCAT])
  HAVE_WCSNCAT=1;       AC_SUBST([HAVE_WCSNCAT])
  HAVE_WCSCMP=1;        AC_SUBST([HAVE_WCSCMP])
  HAVE_WCSNCMP=1;       AC_SUBST([HAVE_WCSNCMP])
  HAVE_WCSCASECMP=1;    AC_SUBST([HAVE_WCSCASECMP])
  HAVE_WCSNCASECMP=1;   AC_SUBST([HAVE_WCSNCASECMP])
  HAVE_WCSCOLL=1;       AC_SUBST([HAVE_WCSCOLL])
  HAVE_WCSXFRM=1;       AC_SUBST([HAVE_WCSXFRM])
  HAVE_WCSDUP=1;        AC_SUBST([HAVE_WCSDUP])
  HAVE_WCSCHR=1;        AC_SUBST([HAVE_WCSCHR])
  HAVE_WCSRCHR=1;       AC_SUBST([HAVE_WCSRCHR])
  HAVE_WCSCSPN=1;       AC_SUBST([HAVE_WCSCSPN])
  HAVE_WCSSPN=1;        AC_SUBST([HAVE_WCSSPN])
  HAVE_WCSPBRK=1;       AC_SUBST([HAVE_WCSPBRK])
  HAVE_WCSSTR=1;        AC_SUBST([HAVE_WCSSTR])
  HAVE_WCSTOK=1;        AC_SUBST([HAVE_WCSTOK])
  HAVE_WCSWIDTH=1;      AC_SUBST([HAVE_WCSWIDTH])
  HAVE_WCSFTIME=1;      AC_SUBST([HAVE_WCSFTIME])
  HAVE_DECL_WCTOB=1;    AC_SUBST([HAVE_DECL_WCTOB])
  HAVE_DECL_WCSDUP=1;   AC_SUBST([HAVE_DECL_WCSDUP])
  HAVE_DECL_WCWIDTH=1;  AC_SUBST([HAVE_DECL_WCWIDTH])
  REPLACE_MBSTATE_T=0;  AC_SUBST([REPLACE_MBSTATE_T])
  REPLACE_BTOWC=0;      AC_SUBST([REPLACE_BTOWC])
  REPLACE_WCTOB=0;      AC_SUBST([REPLACE_WCTOB])
  REPLACE_MBSINIT=0;    AC_SUBST([REPLACE_MBSINIT])
  REPLACE_MBRTOWC=0;    AC_SUBST([REPLACE_MBRTOWC])
  REPLACE_MBRLEN=0;     AC_SUBST([REPLACE_MBRLEN])
  REPLACE_MBSRTOWCS=0;  AC_SUBST([REPLACE_MBSRTOWCS])
  REPLACE_MBSNRTOWCS=0; AC_SUBST([REPLACE_MBSNRTOWCS])
  REPLACE_WCRTOMB=0;    AC_SUBST([REPLACE_WCRTOMB])
  REPLACE_WCSRTOMBS=0;  AC_SUBST([REPLACE_WCSRTOMBS])
  REPLACE_WCSNRTOMBS=0; AC_SUBST([REPLACE_WCSNRTOMBS])
  REPLACE_WCWIDTH=0;    AC_SUBST([REPLACE_WCWIDTH])
  REPLACE_WCSWIDTH=0;   AC_SUBST([REPLACE_WCSWIDTH])
  REPLACE_WCSFTIME=0;   AC_SUBST([REPLACE_WCSFTIME])
  REPLACE_WCSTOK=0;     AC_SUBST([REPLACE_WCSTOK])
])
m4trace:m4/wchar_t.m4:11: -1- AC_DEFUN([gt_TYPE_WCHAR_T], [
  AC_CACHE_CHECK([for wchar_t], [gt_cv_c_wchar_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stddef.h>
            wchar_t foo = (wchar_t)'\0';]],
          [[]])],
       [gt_cv_c_wchar_t=yes],
       [gt_cv_c_wchar_t=no])])
  if test $gt_cv_c_wchar_t = yes; then
    AC_DEFINE([HAVE_WCHAR_T], [1], [Define if you have the 'wchar_t' type.])
  fi
])
m4trace:m4/wctype_h.m4:12: -1- AC_DEFUN_ONCE([gl_WCTYPE_H], [
  AC_REQUIRE([gl_WCTYPE_H_DEFAULTS])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([iswcntrl])
  if test $ac_cv_func_iswcntrl = yes; then
    HAVE_ISWCNTRL=1
  else
    HAVE_ISWCNTRL=0
  fi
  AC_SUBST([HAVE_ISWCNTRL])

  AC_REQUIRE([gt_TYPE_WINT_T])
  if test $gt_cv_c_wint_t = yes; then
    HAVE_WINT_T=1
  else
    HAVE_WINT_T=0
  fi
  AC_SUBST([HAVE_WINT_T])

  AC_REQUIRE([gl_TYPE_WINT_T_PREREQ])

  gl_CHECK_NEXT_HEADERS([wctype.h])
  if test $ac_cv_header_wctype_h = yes; then
    if test $ac_cv_func_iswcntrl = yes; then
      dnl Linux libc5 has an iswprint function that returns 0 for all arguments.
      dnl The other functions are likely broken in the same way.
      AC_CACHE_CHECK([whether iswcntrl works], [gl_cv_func_iswcntrl_works],
        [
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
               #include <wchar.h>
               #include <wctype.h>
               int main () { return iswprint ('x') == 0; }
            ]])],
            [gl_cv_func_iswcntrl_works=yes], [gl_cv_func_iswcntrl_works=no],
            [dnl Guess no on Linux libc5, yes otherwise.
             AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdlib.h>
                          #if __GNU_LIBRARY__ == 1
                          Linux libc5 i18n is broken.
                          #endif]], [[]])],
              [gl_cv_func_iswcntrl_works="guessing yes"],
              [gl_cv_func_iswcntrl_works="guessing no"])
            ])
        ])
    fi
    HAVE_WCTYPE_H=1
  else
    HAVE_WCTYPE_H=0
  fi
  AC_SUBST([HAVE_WCTYPE_H])

  if test $GNULIBHEADERS_OVERRIDE_WINT_T = 1; then
    REPLACE_ISWCNTRL=1
  else
    case "$gl_cv_func_iswcntrl_works" in
      *yes) REPLACE_ISWCNTRL=0 ;;
      *)    REPLACE_ISWCNTRL=1 ;;
    esac
  fi
  AC_SUBST([REPLACE_ISWCNTRL])

  if test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; then
    dnl Redefine all of iswcntrl, ..., iswxdigit in <wctype.h>.
    :
  fi

  if test $REPLACE_ISWCNTRL = 1; then
    REPLACE_TOWLOWER=1
  else
    AC_CHECK_FUNCS([towlower])
    if test $ac_cv_func_towlower = yes; then
      REPLACE_TOWLOWER=0
    else
      AC_CHECK_DECLS([towlower],,,
        [[#include <wchar.h>
          #if HAVE_WCTYPE_H
          # include <wctype.h>
          #endif
        ]])
      if test $ac_cv_have_decl_towlower = yes; then
        dnl On Minix 3.1.8, the system's <wctype.h> declares towlower() and
        dnl towupper() although it does not have the functions. Avoid a
        dnl collision with gnulib's replacement.
        REPLACE_TOWLOWER=1
      else
        REPLACE_TOWLOWER=0
      fi
    fi
  fi
  AC_SUBST([REPLACE_TOWLOWER])

  if test $HAVE_ISWCNTRL = 0 || test $REPLACE_TOWLOWER = 1; then
    dnl Redefine towlower, towupper in <wctype.h>.
    :
  fi

  dnl We assume that the wctype() and iswctype() functions exist if and only
  dnl if the type wctype_t is defined in <wchar.h> or in <wctype.h> if that
  dnl exists.
  dnl HP-UX 11.00 declares all these in <wchar.h> and lacks <wctype.h>.
  AC_CACHE_CHECK([for wctype_t], [gl_cv_type_wctype_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <wchar.h>
            #if HAVE_WCTYPE_H
            # include <wctype.h>
            #endif
            wctype_t a;
          ]],
          [[]])],
       [gl_cv_type_wctype_t=yes],
       [gl_cv_type_wctype_t=no])
    ])
  if test $gl_cv_type_wctype_t = no; then
    HAVE_WCTYPE_T=0
  fi

  dnl We assume that the wctrans() and towctrans() functions exist if and only
  dnl if the type wctrans_t is defined in <wctype.h>.
  AC_CACHE_CHECK([for wctrans_t], [gl_cv_type_wctrans_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <wchar.h>
            #include <wctype.h>
            wctrans_t a;
          ]],
          [[]])],
       [gl_cv_type_wctrans_t=yes],
       [gl_cv_type_wctrans_t=no])
    ])
  if test $gl_cv_type_wctrans_t = no; then
    HAVE_WCTRANS_T=0
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <wchar.h>
#endif
#include <wctype.h>
    ]],
    [wctype iswctype wctrans towctrans
    ])
])
m4trace:m4/wctype_h.m4:164: -1- AC_DEFUN([gl_WCTYPE_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_WCTYPE_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/wctype_h.m4:176: -1- AC_DEFUN([gl_WCTYPE_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_WCTYPE_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWBLANK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWDIGIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWXDIGIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTYPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWCTYPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTRANS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TOWCTRANS])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_WCTYPE_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_WCTYPE_H_DEFAULTS])
])
m4trace:m4/wctype_h.m4:191: -1- AC_DEFUN([gl_WCTYPE_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_ISWBLANK=1;      AC_SUBST([HAVE_ISWBLANK])
  HAVE_WCTYPE_T=1;      AC_SUBST([HAVE_WCTYPE_T])
  HAVE_WCTRANS_T=1;     AC_SUBST([HAVE_WCTRANS_T])
  REPLACE_ISWBLANK=0;   AC_SUBST([REPLACE_ISWBLANK])
  REPLACE_ISWDIGIT=0;   AC_SUBST([REPLACE_ISWDIGIT])
  REPLACE_ISWXDIGIT=0;  AC_SUBST([REPLACE_ISWXDIGIT])
])
m4trace:m4/wint_t.m4:12: -1- AC_DEFUN([gt_TYPE_WINT_T], [
  AC_CACHE_CHECK([for wint_t], [gt_cv_c_wint_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <wchar.h>
            wint_t foo = (wchar_t)'\0';]],
          [[]])],
       [gt_cv_c_wint_t=yes],
       [gt_cv_c_wint_t=no])])
  if test $gt_cv_c_wint_t = yes; then
    AC_DEFINE([HAVE_WINT_T], [1], [Define if you have the 'wint_t' type.])

    dnl Determine whether gnulib's <wchar.h> or <wctype.h> would, if present,
    dnl override 'wint_t'.
    AC_CACHE_CHECK([whether wint_t is large enough],
      [gl_cv_type_wint_t_large_enough],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <wchar.h>
              int verify[sizeof (wint_t) < sizeof (int) ? -1 : 1];
            ]])],
         [gl_cv_type_wint_t_large_enough=yes],
         [gl_cv_type_wint_t_large_enough=no])])
    if test $gl_cv_type_wint_t_large_enough = no; then
      GNULIBHEADERS_OVERRIDE_WINT_T=1
    else
      GNULIBHEADERS_OVERRIDE_WINT_T=0
    fi
  else
    GNULIBHEADERS_OVERRIDE_WINT_T=0
  fi
  AC_SUBST([GNULIBHEADERS_OVERRIDE_WINT_T])
])
m4trace:m4/wint_t.m4:48: -1- AC_DEFUN([gl_TYPE_WINT_T_PREREQ], [
  AC_CHECK_HEADERS_ONCE([crtdefs.h])
  if test $ac_cv_header_crtdefs_h = yes; then
    HAVE_CRTDEFS_H=1
  else
    HAVE_CRTDEFS_H=0
  fi
  AC_SUBST([HAVE_CRTDEFS_H])
])
m4trace:m4/wmemchr.m4:7: -1- AC_DEFUN([gl_FUNC_WMEMCHR], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  dnl We cannot use AC_CHECK_FUNCS here, because the MSVC 9 header files
  dnl provide this function as an inline function definition.
  AC_CACHE_CHECK([for wmemchr], [gl_cv_func_wmemchr],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <wchar.h>
          ]],
          [[return ! wmemchr ((const wchar_t *) 0, (wchar_t) ' ', 0);]])
       ],
       [gl_cv_func_wmemchr=yes],
       [gl_cv_func_wmemchr=no])
    ])
  if test $gl_cv_func_wmemchr = no; then
    HAVE_WMEMCHR=0
  fi
])
m4trace:m4/wmempcpy.m4:7: -1- AC_DEFUN([gl_FUNC_WMEMPCPY], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])

  dnl Persuade glibc <wchar.h> to declare wmempcpy().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl The wmempcpy() declaration in lib/wchar.in.h uses 'restrict'.
  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_FUNCS_ONCE([wmempcpy])
  if test $ac_cv_func_wmempcpy = no; then
    HAVE_WMEMPCPY=0
  fi
])
m4trace:m4/xalloc.m4:7: -1- AC_DEFUN([gl_XALLOC], [:])
m4trace:m4/xsize.m4:7: -1- AC_DEFUN([gl_XSIZE], [
  dnl Prerequisites of lib/xsize.h.
  AC_REQUIRE([gl_SIZE_MAX])
  AC_CHECK_HEADERS([stdint.h])
])
m4trace:m4/year2038.m4:10: -1- AC_DEFUN([gl_YEAR2038_EARLY], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      AC_DEFINE([__MINGW_USE_VC2005_COMPAT], [1],
        [For 64-bit time_t on 32-bit mingw.])
      ;;
  esac
])
m4trace:m4/year2038.m4:23: -1- AC_DEFUN([gl_YEAR2038_TEST_INCLUDES], [[
  #include <time.h>
  /* Check that time_t can represent 2**32 - 1 correctly.  */
  #define LARGE_TIME_T \\
    ((time_t) (((time_t) 1 << 30) - 1 + 3 * ((time_t) 1 << 30)))
  int verify_time_t_range[(LARGE_TIME_T / 65537 == 65535
                           && LARGE_TIME_T % 65537 == 0)
                          ? 1 : -1];
]])
m4trace:m4/year2038.m4:36: -1- AC_DEFUN([gl_YEAR2038_BODY], [
 AC_ARG_ENABLE([year2038],
   [  --disable-year2038      omit support for timestamps past the year 2038])
 AS_IF([test "$enable_year2038" != no],
 [
  dnl On many systems, time_t is already a 64-bit type.
  dnl On those systems where time_t is still 32-bit, it requires kernel
  dnl and libc support to make it 64-bit. For glibc 2.34 and later on Linux,
  dnl defining _TIME_BITS=64 and _FILE_OFFSET_BITS=64 is needed on x86 and ARM.
  dnl
  dnl On native Windows, the system include files define types __time32_t
  dnl and __time64_t. By default, time_t is an alias of
  dnl   - __time32_t on 32-bit mingw,
  dnl   - __time64_t on 64-bit mingw and on MSVC (since MSVC 8).
  dnl But when compiling with -D__MINGW_USE_VC2005_COMPAT, time_t is an
  dnl alias of __time64_t.
  dnl And when compiling with -D_USE_32BIT_TIME_T, time_t is an alias of
  dnl __time32_t.
  AC_CACHE_CHECK([for time_t past the year 2038], [gl_cv_type_time_t_y2038],
    [AC_COMPILE_IFELSE(
       [AC_LANG_SOURCE([gl_YEAR2038_TEST_INCLUDES])],
       [gl_cv_type_time_t_y2038=yes], [gl_cv_type_time_t_y2038=no])
    ])
  if test "$gl_cv_type_time_t_y2038" = no; then
    AC_CACHE_CHECK([for 64-bit time_t with _TIME_BITS=64],
      [gl_cv_type_time_t_bits_macro],
      [AC_COMPILE_IFELSE(
         [AC_LANG_SOURCE([[#define _TIME_BITS 64
                           #define _FILE_OFFSET_BITS 64
                           ]gl_YEAR2038_TEST_INCLUDES])],
         [gl_cv_type_time_t_bits_macro=yes],
         [gl_cv_type_time_t_bits_macro=no])
      ])
    if test "$gl_cv_type_time_t_bits_macro" = yes; then
      AC_DEFINE([_TIME_BITS], [64],
        [Number of bits in a timestamp, on hosts where this is settable.])
      dnl AC_SYS_LARGFILE also defines this; it's OK if we do too.
      AC_DEFINE([_FILE_OFFSET_BITS], [64],
        [Number of bits in a file offset, on hosts where this is settable.])
      gl_cv_type_time_t_y2038=yes
    fi
  fi
  if test $gl_cv_type_time_t_y2038 = no; then
    AC_COMPILE_IFELSE(
      [AC_LANG_SOURCE(
         [[#ifdef _USE_32BIT_TIME_T
             int ok;
           #else
             error fail
           #endif
         ]])],
      [AC_MSG_FAILURE(
         [The 'time_t' type stops working after January 2038.
          Remove _USE_32BIT_TIME_T from the compiler flags.])],
      [# If not cross-compiling and $1 says we should check,
       # and 'touch' works with a large timestamp, then evidently wider time_t
       # is desired and supported, so fail and ask the builder to fix the
       # problem.  Otherwise, just warn the builder.
       m4_ifval([$1],
         [if test $cross_compiling = no \
             && TZ=UTC0 touch -t 210602070628.15 conftest.time 2>/dev/null; then
            case `TZ=UTC0 LC_ALL=C ls -l conftest.time 2>/dev/null` in
              *'Feb  7  2106'* | *'Feb  7 17:10'*)
                AC_MSG_FAILURE(
                  [The 'time_t' type stops working after January 2038,
                   and your system appears to support a wider 'time_t'.
                   Try configuring with 'CC="${CC} -m64"'.
                   To build with a 32-bit time_t anyway (not recommended),
                   configure with '--disable-year2038'.]);;
            esac
            rm -f conftest.time
          fi])
       if test "$gl_warned_about_y2038" != yes; then
         AC_MSG_WARN(
           [The 'time_t' type stops working after January 2038,
            and this package needs a wider 'time_t' type
            if there is any way to access timestamps after that.
            Configure with 'CC="${CC} -m64"' perhaps?])
         gl_warned_about_y2038=yes
       fi
      ])
  fi])
])
m4trace:m4/year2038.m4:121: -1- AC_DEFUN([gl_YEAR2038], [
  gl_YEAR2038_BODY([require-year2038-safe])
])
m4trace:m4/zzgnulib.m4:23: -1- AC_DEFUN([gl_ZZGNULIB])
m4trace:configure.ac:30: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:30: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:30: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:30: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:30: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:30: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:30: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:30: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:68: -1- m4_pattern_allow([^OCTAVE_MAJOR_VERSION$])
m4trace:configure.ac:69: -1- m4_pattern_allow([^OCTAVE_MINOR_VERSION$])
m4trace:configure.ac:70: -1- m4_pattern_allow([^OCTAVE_PATCH_VERSION$])
m4trace:configure.ac:71: -1- m4_pattern_allow([^OCTAVE_VERSION$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^OCTAVE_COPYRIGHT$])
m4trace:configure.ac:73: -1- m4_pattern_allow([^OCTAVE_RELEASE_DATE$])
m4trace:configure.ac:74: -1- m4_pattern_allow([^OCTAVE_API_VERSION$])
m4trace:configure.ac:82: -1- AC_CONFIG_MACRO_DIR([m4])
m4trace:configure.ac:82: -1- AC_CONFIG_MACRO_DIR_TRACE([m4])
m4trace:configure.ac:85: -1- AM_INIT_AUTOMAKE([1.14 -Wno-portability -Wno-override tar-ustar subdir-objects dist-lzip dist-xz])
m4trace:configure.ac:85: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:85: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:85: -1- AM_AUTOMAKE_VERSION([1.16.5])
m4trace:configure.ac:85: -1- _AM_AUTOCONF_VERSION([2.71])
m4trace:configure.ac:85: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:85: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:85: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:85: -1- _AM_SET_OPTIONS([1.14 -Wno-portability -Wno-override tar-ustar subdir-objects dist-lzip dist-xz])
m4trace:configure.ac:85: -1- _AM_SET_OPTION([1.14])
m4trace:configure.ac:85: -2- _AM_MANGLE_OPTION([1.14])
m4trace:configure.ac:85: -1- _AM_SET_OPTION([-Wno-portability])
m4trace:configure.ac:85: -2- _AM_MANGLE_OPTION([-Wno-portability])
m4trace:configure.ac:85: -1- _AM_SET_OPTION([-Wno-override])
m4trace:configure.ac:85: -2- _AM_MANGLE_OPTION([-Wno-override])
m4trace:configure.ac:85: -1- _AM_SET_OPTION([tar-ustar])
m4trace:configure.ac:85: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:85: -1- _AM_SET_OPTION([subdir-objects])
m4trace:configure.ac:85: -2- _AM_MANGLE_OPTION([subdir-objects])
m4trace:configure.ac:85: -1- _AM_SET_OPTION([dist-lzip])
m4trace:configure.ac:85: -2- _AM_MANGLE_OPTION([dist-lzip])
m4trace:configure.ac:85: -1- _AM_SET_OPTION([dist-xz])
m4trace:configure.ac:85: -2- _AM_MANGLE_OPTION([dist-xz])
m4trace:configure.ac:85: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:85: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])
m4trace:configure.ac:85: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:85: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:85: -1- AM_SANITY_CHECK
m4trace:configure.ac:85: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:85: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:85: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:85: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:85: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:85: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:85: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:85: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:85: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:85: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:85: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:85: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:85: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:85: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:85: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:85: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:85: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:85: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:85: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:85: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:85: -1- _AM_PROG_TAR([ustar])
m4trace:configure.ac:85: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:85: -1- AM_RUN_LOG([$_am_tar --version])
m4trace:configure.ac:85: -1- AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
m4trace:configure.ac:85: -1- AM_RUN_LOG([$am__untar <conftest.tar])
m4trace:configure.ac:85: -1- AM_RUN_LOG([cat conftest.dir/file])
m4trace:configure.ac:85: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:85: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
m4trace:configure.ac:85: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:85: -1- m4_pattern_allow([^CTAGS$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^ETAGS$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^CSCOPE$])
m4trace:configure.ac:85: -1- AM_SILENT_RULES
m4trace:configure.ac:85: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:85: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:85: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:85: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:85: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:85: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:85: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:85: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:85: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:88: -1- AM_SILENT_RULES([yes])
m4trace:configure.ac:88: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:88: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:88: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:88: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:88: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:88: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:90: -1- OCTAVE_CANONICAL_HOST
m4trace:configure.ac:90: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^canonical_host_type$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^OCTAVE_SOURCE$])
m4trace:configure.ac:94: -1- AC_USE_SYSTEM_EXTENSIONS
m4trace:configure.ac:94: -1- AC_CHECK_INCLUDES_DEFAULT
m4trace:configure.ac:94: -1- AC_DEFUN([_AC_Header_stdio_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdio.h ]AS_TR_SH([stdio.h]) AS_TR_CPP([HAVE_stdio.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:94: -1- AC_PROG_CC
m4trace:configure.ac:94: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:94: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:94: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:94: -1- gl_COMPILER_CLANG
m4trace:configure.ac:94: -1- gl_COMPILER_PREPARE_CHECK_DECL
m4trace:configure.ac:94: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:94: -1- AM_SET_DEPDIR
m4trace:configure.ac:94: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:94: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:94: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:94: -1- AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:94: -1- AM_DEP_TRACK
m4trace:configure.ac:94: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:94: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:94: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:94: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:94: -1- AC_DEFUN([_AC_Header_stdlib_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdlib.h ]AS_TR_SH([stdlib.h]) AS_TR_CPP([HAVE_stdlib.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:94: -1- AC_DEFUN([_AC_Header_string_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" string.h ]AS_TR_SH([string.h]) AS_TR_CPP([HAVE_string.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:94: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:94: -1- AC_DEFUN([_AC_Header_stdint_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdint.h ]AS_TR_SH([stdint.h]) AS_TR_CPP([HAVE_stdint.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:94: -1- AC_DEFUN([_AC_Header_strings_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" strings.h ]AS_TR_SH([strings.h]) AS_TR_CPP([HAVE_strings.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:94: -1- AC_DEFUN([_AC_Header_sys_stat_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/stat.h ]AS_TR_SH([sys/stat.h]) AS_TR_CPP([HAVE_sys/stat.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:94: -1- AC_DEFUN([_AC_Header_sys_types_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/types.h ]AS_TR_SH([sys/types.h]) AS_TR_CPP([HAVE_sys/types.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:94: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:94: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:94: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" wchar.h ]AS_TR_SH([wchar.h]) AS_TR_CPP([HAVE_wchar.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:94: -1- AC_DEFUN([_AC_Header_minix_config_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" minix/config.h ]AS_TR_SH([minix/config.h]) AS_TR_CPP([HAVE_minix/config.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:94: -1- m4_pattern_allow([^_ALL_SOURCE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^_DARWIN_C_SOURCE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^_GNU_SOURCE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^_HPUX_ALT_XOPEN_SOCKET_API$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^_NETBSD_SOURCE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^_OPENBSD_SOURCE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^_POSIX_PTHREAD_SEMANTICS$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_ATTRIBS_EXT__$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_BFP_EXT__$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_DFP_EXT__$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_FUNCS_EXT__$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_TYPES_EXT__$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^__STDC_WANT_LIB_EXT2__$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^__STDC_WANT_MATH_SPEC_FUNCS__$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^_TANDEM_SOURCE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^_MINIX$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^_POSIX_SOURCE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^_POSIX_1_SOURCE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^__EXTENSIONS__$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^_XOPEN_SOURCE$])
m4trace:configure.ac:99: -1- m4_pattern_allow([^config_opts$])
m4trace:configure.ac:105: -1- OCTAVE_SET_DEFAULT([octlibdir], ['${libdir}/octave/${version}'])
m4trace:configure.ac:105: -1- m4_pattern_allow([^octlibdir$])
m4trace:configure.ac:114: -1- OCTAVE_SET_DEFAULT([archlibdir], ['${bindir}'])
m4trace:configure.ac:114: -1- m4_pattern_allow([^archlibdir$])
m4trace:configure.ac:116: -1- OCTAVE_SET_DEFAULT([archlibdir], ['${libexecdir}/octave/${version}/exec/${canonical_host_type}'])
m4trace:configure.ac:116: -1- m4_pattern_allow([^archlibdir$])
m4trace:configure.ac:122: -1- OCTAVE_SET_DEFAULT([localarchlibdir], ['${libexecdir}/octave/site/exec/${canonical_host_type}'])
m4trace:configure.ac:122: -1- m4_pattern_allow([^localarchlibdir$])
m4trace:configure.ac:125: -1- OCTAVE_SET_DEFAULT([localapiarchlibdir], ['${libexecdir}/octave/${api_version}/site/exec/${canonical_host_type}'])
m4trace:configure.ac:125: -1- m4_pattern_allow([^localapiarchlibdir$])
m4trace:configure.ac:128: -1- OCTAVE_SET_DEFAULT([localverarchlibdir], ['${libexecdir}/octave/${version}/site/exec/${canonical_host_type}'])
m4trace:configure.ac:128: -1- m4_pattern_allow([^localverarchlibdir$])
m4trace:configure.ac:134: -1- OCTAVE_SET_DEFAULT([octfiledir], ['${libdir}/octave/${version}/oct/${canonical_host_type}'])
m4trace:configure.ac:134: -1- m4_pattern_allow([^octfiledir$])
m4trace:configure.ac:141: -1- OCTAVE_SET_DEFAULT([localoctfiledir], ['${libdir}/octave/site/oct/${canonical_host_type}'])
m4trace:configure.ac:141: -1- m4_pattern_allow([^localoctfiledir$])
m4trace:configure.ac:144: -1- OCTAVE_SET_DEFAULT([localapioctfiledir], ['${libdir}/octave/site/oct/${api_version}/${canonical_host_type}'])
m4trace:configure.ac:144: -1- m4_pattern_allow([^localapioctfiledir$])
m4trace:configure.ac:147: -1- OCTAVE_SET_DEFAULT([localveroctfiledir], ['${libdir}/octave/${version}/site/oct/${canonical_host_type}'])
m4trace:configure.ac:147: -1- m4_pattern_allow([^localveroctfiledir$])
m4trace:configure.ac:151: -1- OCTAVE_SET_DEFAULT([octincludedir], ['${includedir}/octave-${version}/octave'])
m4trace:configure.ac:151: -1- m4_pattern_allow([^octincludedir$])
m4trace:configure.ac:156: -1- OCTAVE_SET_DEFAULT([fcnfiledir], ['${datadir}/octave/${version}/m'])
m4trace:configure.ac:156: -1- m4_pattern_allow([^fcnfiledir$])
m4trace:configure.ac:161: -1- OCTAVE_SET_DEFAULT([localfcnfiledir], ['${datadir}/octave/site/m'])
m4trace:configure.ac:161: -1- m4_pattern_allow([^localfcnfiledir$])
m4trace:configure.ac:163: -1- OCTAVE_SET_DEFAULT([localapifcnfiledir], ['${datadir}/octave/site/${api_version}/m'])
m4trace:configure.ac:163: -1- m4_pattern_allow([^localapifcnfiledir$])
m4trace:configure.ac:166: -1- OCTAVE_SET_DEFAULT([localverfcnfiledir], ['${datadir}/octave/${version}/site/m'])
m4trace:configure.ac:166: -1- m4_pattern_allow([^localverfcnfiledir$])
m4trace:configure.ac:169: -1- OCTAVE_SET_DEFAULT([octetcdir], ['${datadir}/octave/${version}/etc'])
m4trace:configure.ac:169: -1- m4_pattern_allow([^octetcdir$])
m4trace:configure.ac:172: -1- OCTAVE_SET_DEFAULT([octlocaledir], ['${datadir}/octave/${version}/locale'])
m4trace:configure.ac:172: -1- m4_pattern_allow([^octlocaledir$])
m4trace:configure.ac:175: -1- OCTAVE_SET_DEFAULT([doc_cache_file], ['${octetcdir}/doc-cache'])
m4trace:configure.ac:175: -1- m4_pattern_allow([^doc_cache_file$])
m4trace:configure.ac:178: -1- OCTAVE_SET_DEFAULT([octtestsdir], ['${octetcdir}/tests'])
m4trace:configure.ac:178: -1- m4_pattern_allow([^octtestsdir$])
m4trace:configure.ac:181: -1- OCTAVE_SET_DEFAULT([texi_macros_file], ['${octetcdir}/macros.texi'])
m4trace:configure.ac:181: -1- m4_pattern_allow([^texi_macros_file$])
m4trace:configure.ac:184: -1- OCTAVE_SET_DEFAULT([imagedir], ['${datadir}/octave/${version}/imagelib'])
m4trace:configure.ac:184: -1- m4_pattern_allow([^imagedir$])
m4trace:configure.ac:187: -1- OCTAVE_SET_DEFAULT([octdatadir], ['${datadir}/octave/${version}/data'])
m4trace:configure.ac:187: -1- m4_pattern_allow([^octdatadir$])
m4trace:configure.ac:190: -1- OCTAVE_SET_DEFAULT([octdocdir], ['${datadir}/octave/${version}/doc'])
m4trace:configure.ac:190: -1- m4_pattern_allow([^octdocdir$])
m4trace:configure.ac:193: -1- OCTAVE_SET_DEFAULT([octfontsdir], ['${datadir}/octave/${version}/fonts'])
m4trace:configure.ac:193: -1- m4_pattern_allow([^octfontsdir$])
m4trace:configure.ac:196: -1- OCTAVE_SET_DEFAULT([startupfiledir], ['${fcnfiledir}/startup'])
m4trace:configure.ac:196: -1- m4_pattern_allow([^startupfiledir$])
m4trace:configure.ac:197: -1- OCTAVE_SET_DEFAULT([localstartupfiledir], ['${localfcnfiledir}/startup'])
m4trace:configure.ac:197: -1- m4_pattern_allow([^localstartupfiledir$])
m4trace:configure.ac:200: -1- OCTAVE_SET_DEFAULT([man1dir], ['${mandir}/man1'])
m4trace:configure.ac:200: -1- m4_pattern_allow([^man1dir$])
m4trace:configure.ac:201: -1- OCTAVE_SET_DEFAULT([man1ext], ['.1'])
m4trace:configure.ac:201: -1- m4_pattern_allow([^man1ext$])
m4trace:configure.ac:202: -1- OCTAVE_SET_DEFAULT([infofile], ['${infodir}/octave.info'])
m4trace:configure.ac:202: -1- m4_pattern_allow([^infofile$])
m4trace:configure.ac:208: -1- PKG_PROG_PKG_CONFIG
m4trace:configure.ac:208: -1- m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4trace:configure.ac:208: -1- m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4trace:configure.ac:208: -1- m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
m4trace:configure.ac:208: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:208: -1- m4_pattern_allow([^PKG_CONFIG_PATH$])
m4trace:configure.ac:208: -1- m4_pattern_allow([^PKG_CONFIG_LIBDIR$])
m4trace:configure.ac:208: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:210: -1- PKG_INSTALLDIR
m4trace:configure.ac:210: -1- m4_pattern_allow([^pkgconfigdir$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^liboctave_pkgconfigdir$])
m4trace:configure.ac:212: -1- m4_pattern_allow([^libinterp_pkgconfigdir$])
m4trace:configure.ac:215: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:216: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:217: -1- OCTAVE_PROG_FIND
m4trace:configure.ac:217: -1- m4_pattern_allow([^FIND$])
m4trace:configure.ac:218: -1- OCTAVE_PROG_SED
m4trace:configure.ac:218: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:219: -1- OCTAVE_PROG_PERL
m4trace:configure.ac:219: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:219: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:222: -1- OCTAVE_PROG_GPERF
m4trace:configure.ac:222: -1- m4_pattern_allow([^GPERF$])
m4trace:configure.ac:222: -1- OCTAVE_CONFIGURE_WARNING([warn_gperf])
m4trace:configure.ac:222: -1- m4_pattern_allow([^GPERF$])
m4trace:configure.ac:224: -1- OCTAVE_PROG_FLEX
m4trace:configure.ac:224: -1- m4_pattern_allow([^LEX$])
m4trace:configure.ac:224: -1- m4_pattern_allow([^LEX_OUTPUT_ROOT$])
m4trace:configure.ac:224: -1- m4_pattern_allow([^LEXLIB$])
m4trace:configure.ac:224: -1- m4_pattern_allow([^YYTEXT_POINTER$])
m4trace:configure.ac:224: -1- OCTAVE_CONFIGURE_WARNING([warn_flex])
m4trace:configure.ac:224: -1- m4_pattern_allow([^LFLAGS$])
m4trace:configure.ac:225: -1- m4_pattern_allow([^LEX_OUTPUT_ROOT$])
m4trace:configure.ac:227: -1- OCTAVE_PROG_BISON
m4trace:configure.ac:227: -1- gl_PROG_BISON([BISON], [3.0])
m4trace:configure.ac:227: -1- m4_pattern_allow([^BISON$])
m4trace:configure.ac:227: -1- m4_pattern_allow([^BISON$])
m4trace:configure.ac:227: -1- OCTAVE_CONFIGURE_WARNING([warn_bison_api_prefix_decl_style])
m4trace:configure.ac:227: -1- OCTAVE_CONFIGURE_WARNING([warn_bison])
m4trace:configure.ac:227: -1- m4_pattern_allow([^OCTAVE_PARSER_CPPFLAGS$])
m4trace:configure.ac:227: -1- m4_pattern_allow([^OCTAVE_TEX_PARSER_CPPFLAGS$])
m4trace:configure.ac:229: -1- OCTAVE_PROG_MAKEINFO
m4trace:configure.ac:229: -1- m4_pattern_allow([^MKINFO$])
m4trace:configure.ac:229: -1- OCTAVE_CONFIGURE_WARNING([warn_makeinfo])
m4trace:configure.ac:229: -1- OCTAVE_CONFIGURE_WARNING([warn_makeinfo])
m4trace:configure.ac:230: -1- OCTAVE_PROG_TEXI2DVI
m4trace:configure.ac:230: -1- m4_pattern_allow([^TEXI2DVI$])
m4trace:configure.ac:230: -1- OCTAVE_CONFIGURE_WARNING([warn_texi2dvi])
m4trace:configure.ac:230: -1- m4_pattern_allow([^TEXI2DVI$])
m4trace:configure.ac:231: -1- OCTAVE_PROG_TEXI2PDF
m4trace:configure.ac:231: -1- m4_pattern_allow([^TEXI2PDF$])
m4trace:configure.ac:231: -1- OCTAVE_CONFIGURE_WARNING([warn_texi2pdf])
m4trace:configure.ac:231: -1- m4_pattern_allow([^TEXI2PDF$])
m4trace:configure.ac:233: -1- OCTAVE_PROG_TAR_REPRODUCIBLE
m4trace:configure.ac:233: -1- m4_pattern_allow([^REPRODUCIBLE_TAR_FLAGS$])
m4trace:configure.ac:236: -1- m4_pattern_allow([^LN_S$])
m4trace:configure.ac:241: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:244: -1- OCTAVE_PROG_GHOSTSCRIPT
m4trace:configure.ac:244: -1- m4_pattern_allow([^GHOSTSCRIPT$])
m4trace:configure.ac:244: -1- OCTAVE_CONFIGURE_WARNING([warn_ghostscript])
m4trace:configure.ac:244: -1- m4_pattern_allow([^GHOSTSCRIPT$])
m4trace:configure.ac:245: -1- OCTAVE_PROG_GNUPLOT
m4trace:configure.ac:245: -1- m4_pattern_allow([^GNUPLOT$])
m4trace:configure.ac:245: -1- OCTAVE_CONFIGURE_WARNING([warn_gnuplot])
m4trace:configure.ac:245: -1- m4_pattern_allow([^GNUPLOT$])
m4trace:configure.ac:246: -1- OCTAVE_PROG_PAGER
m4trace:configure.ac:246: -1- m4_pattern_allow([^DEFAULT_PAGER$])
m4trace:configure.ac:246: -1- m4_pattern_allow([^DEFAULT_PAGER$])
m4trace:configure.ac:246: -1- OCTAVE_CONFIGURE_WARNING([warn_less])
m4trace:configure.ac:247: -1- OCTAVE_PROG_PYTHON
m4trace:configure.ac:247: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:247: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:250: -1- OCTAVE_PROG_ICOTOOL
m4trace:configure.ac:250: -1- m4_pattern_allow([^ICOTOOL$])
m4trace:configure.ac:250: -1- OCTAVE_CONFIGURE_WARNING([warn_icotool])
m4trace:configure.ac:250: -1- m4_pattern_allow([^ICOTOOL$])
m4trace:configure.ac:251: -1- OCTAVE_PROG_RSVG_CONVERT
m4trace:configure.ac:251: -1- m4_pattern_allow([^RSVG_CONVERT$])
m4trace:configure.ac:251: -1- OCTAVE_CONFIGURE_WARNING([warn_rsvg_convert])
m4trace:configure.ac:251: -1- m4_pattern_allow([^RSVG_CONVERT$])
m4trace:configure.ac:252: -1- AM_CONDITIONAL([AMCOND_HAVE_ICON_TOOLS], [test -n "$ICOTOOL" && test -n "$RSVG_CONVERT"])
m4trace:configure.ac:252: -1- m4_pattern_allow([^AMCOND_HAVE_ICON_TOOLS_TRUE$])
m4trace:configure.ac:252: -1- m4_pattern_allow([^AMCOND_HAVE_ICON_TOOLS_FALSE$])
m4trace:configure.ac:252: -1- _AM_SUBST_NOTMAKE([AMCOND_HAVE_ICON_TOOLS_TRUE])
m4trace:configure.ac:252: -1- _AM_SUBST_NOTMAKE([AMCOND_HAVE_ICON_TOOLS_FALSE])
m4trace:configure.ac:275: -1- m4_pattern_allow([^sepchar$])
m4trace:configure.ac:276: -1- m4_pattern_allow([^SEPCHAR$])
m4trace:configure.ac:278: -1- m4_pattern_allow([^SEPCHAR_STR$])
m4trace:configure.ac:299: -1- m4_pattern_allow([^SHELL_PATH$])
m4trace:configure.ac:304: -1- AC_PROG_CXX
m4trace:configure.ac:304: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:304: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:304: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:304: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:304: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:304: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:304: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:304: -1- _AM_DEPENDENCIES([CXX])
m4trace:configure.ac:304: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:configure.ac:304: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:304: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:configure.ac:304: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:configure.ac:304: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:configure.ac:304: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:configure.ac:305: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:305: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:305: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:322: -1- AX_CXX_COMPILE_STDCXX([17], [], [])
m4trace:configure.ac:322: -1- m4_pattern_allow([^HAVE_CXX17$])
m4trace:configure.ac:322: -1- m4_pattern_allow([^HAVE_CXX17$])
m4trace:configure.ac:329: -1- AX_CXX_COMPILE_STDCXX([11], [], [mandatory])
m4trace:configure.ac:329: -1- m4_pattern_allow([^HAVE_CXX11$])
m4trace:configure.ac:329: -1- m4_pattern_allow([^HAVE_CXX11$])
m4trace:configure.ac:333: -1- OCTAVE_CHECK_STD_PMR_POLYMORPHIC_ALLOCATOR
m4trace:configure.ac:333: -1- m4_pattern_allow([^OCTAVE_HAVE_STD_PMR_POLYMORPHIC_ALLOCATOR$])
m4trace:configure.ac:338: -1- AC_PROG_CC
m4trace:configure.ac:338: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:338: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:338: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:338: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:338: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:338: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:338: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:338: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:338: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:338: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:338: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:338: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:338: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:338: -1- gl_COMPILER_CLANG
m4trace:configure.ac:338: -1- gl_COMPILER_PREPARE_CHECK_DECL
m4trace:configure.ac:338: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:338: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:338: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:338: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:338: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:338: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:338: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:339: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:339: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:339: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:340: -1- AC_PROG_EGREP
m4trace:configure.ac:340: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:372: -1- gl_EARLY
m4trace:configure.ac:372: -1- m4_pattern_forbid([^gl_[A-Z]])
m4trace:configure.ac:372: -1- m4_pattern_allow([^gl_ES$])
m4trace:configure.ac:372: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:372: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:372: -1- gl_USE_SYSTEM_EXTENSIONS
m4trace:configure.ac:372: -1- m4_pattern_allow([^_ISOC11_SOURCE$])
m4trace:configure.ac:372: -1- gl_PROG_AR_RANLIB
m4trace:configure.ac:372: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:372: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:372: -1- m4_pattern_allow([^ARFLAGS$])
m4trace:configure.ac:372: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:372: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:372: -1- AM_PROG_CC_C_O
m4trace:configure.ac:372: -1- gl_FP_IEEE
m4trace:configure.ac:372: -1- gl_SET_LARGEFILE_SOURCE
m4trace:configure.ac:372: -1- m4_pattern_allow([^_LARGEFILE_SOURCE$])
m4trace:configure.ac:372: -1- m4_pattern_allow([^HAVE_FSEEKO$])
m4trace:configure.ac:372: -1- m4_pattern_allow([^_LARGEFILE_SOURCE$])
m4trace:configure.ac:372: -1- AC_SYS_LARGEFILE
m4trace:configure.ac:372: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:372: -1- m4_pattern_allow([^_LARGE_FILES$])
m4trace:configure.ac:372: -1- gl_YEAR2038_BODY([])
m4trace:configure.ac:372: -1- gl_YEAR2038_TEST_INCLUDES
m4trace:configure.ac:372: -1- gl_YEAR2038_TEST_INCLUDES
m4trace:configure.ac:372: -1- m4_pattern_allow([^_TIME_BITS$])
m4trace:configure.ac:372: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:372: -1- gl_YEAR2038_EARLY
m4trace:configure.ac:372: -1- m4_pattern_allow([^__MINGW_USE_VC2005_COMPAT$])
m4trace:configure.ac:372: -1- gl_THREADLIB_EARLY
m4trace:configure.ac:372: -1- gl_THREADLIB_EARLY_BODY
m4trace:configure.ac:372: -1- gl_ANYTHREADLIB_EARLY
m4trace:configure.ac:383: -1- AX_COMPARE_VERSION([$octave_cv_gxx_version], [lt], [4.1], [warn_gxx_version="g++ version $octave_cv_gxx_version is likely to cause problems"
     OCTAVE_CONFIGURE_WARNING([warn_gxx_version])])
m4trace:configure.ac:383: -1- OCTAVE_CONFIGURE_WARNING([warn_gxx_version])
m4trace:configure.ac:389: -1- m4_pattern_allow([^GXX_VERSION$])
m4trace:configure.ac:392: -1- OCTAVE_CHECK_BROKEN_STL_ALGO_H
m4trace:configure.ac:392: -1- OCTAVE_CONFIGURE_WARNING([warn_stl_algo_h])
m4trace:configure.ac:392: -1- OCTAVE_CONFIGURE_WARNING([warn_stl_algo_h])
m4trace:configure.ac:392: -1- OCTAVE_CONFIGURE_WARNING([warn_stl_algo_h])
m4trace:configure.ac:393: -1- AM_CONDITIONAL([AMCOND_HAVE_BROKEN_STL_ALGO_H], [test $octave_cv_broken_stl_algo_h = yes])
m4trace:configure.ac:393: -1- m4_pattern_allow([^AMCOND_HAVE_BROKEN_STL_ALGO_H_TRUE$])
m4trace:configure.ac:393: -1- m4_pattern_allow([^AMCOND_HAVE_BROKEN_STL_ALGO_H_FALSE$])
m4trace:configure.ac:393: -1- _AM_SUBST_NOTMAKE([AMCOND_HAVE_BROKEN_STL_ALGO_H_TRUE])
m4trace:configure.ac:393: -1- _AM_SUBST_NOTMAKE([AMCOND_HAVE_BROKEN_STL_ALGO_H_FALSE])
m4trace:configure.ac:398: -1- OCTAVE_CONFIGURE_WARNING([warn_stl_algo_h])
m4trace:configure.ac:411: -1- AX_COMPARE_VERSION([$octave_cv_gcc_version], [lt], [3], [warn_gcc_version="gcc version $octave_cv_gcc_version is likely to cause problems"
     OCTAVE_CONFIGURE_WARNING([warn_gcc_version])])
m4trace:configure.ac:411: -1- OCTAVE_CONFIGURE_WARNING([warn_gcc_version])
m4trace:configure.ac:417: -1- m4_pattern_allow([^GCC_VERSION$])
m4trace:configure.ac:424: -1- m4_pattern_allow([^__NO_MATH_INLINES$])
m4trace:configure.ac:451: -1- m4_pattern_allow([^INCLUDE_DEPS$])
m4trace:configure.ac:452: -1- m4_pattern_allow([^DEPEND_FLAGS$])
m4trace:configure.ac:453: -1- m4_pattern_allow([^DEPEND_EXTRA_SED_PATTERN$])
m4trace:configure.ac:460: -1- m4_pattern_allow([^HAVE_LIBM$])
m4trace:configure.ac:465: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:465: -1- m4_pattern_allow([^FFLAGS$])
m4trace:configure.ac:465: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:465: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:465: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:465: -1- m4_pattern_allow([^ac_ct_F77$])
m4trace:configure.ac:468: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:468: -1- m4_pattern_allow([^FFLAGS$])
m4trace:configure.ac:468: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:468: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:468: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:468: -1- m4_pattern_allow([^ac_ct_F77$])
m4trace:configure.ac:482: -1- m4_pattern_allow([^FLIBS$])
m4trace:configure.ac:483: -1- m4_pattern_allow([^F77_DUMMY_MAIN$])
m4trace:configure.ac:483: -1- m4_pattern_allow([^FC_DUMMY_MAIN_EQ_F77$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC$])
m4trace:configure.ac:484: -1- m4_pattern_allow([^F77_FUNC_$])
m4trace:configure.ac:487: -1- OCTAVE_CHECK_FORTRAN_SYMBOL_AND_CALLING_CONVENTIONS
m4trace:configure.ac:487: -1- OCTAVE_F77_FLAG([-mieee-fp])
m4trace:configure.ac:487: -1- OCTAVE_F77_FLAG([-mieee])
m4trace:configure.ac:487: -1- OCTAVE_F77_FLAG([-ieee])
m4trace:configure.ac:487: -1- OCTAVE_F77_FLAG([-fpe1])
m4trace:configure.ac:487: -1- m4_pattern_allow([^F77_USES_GFORTRAN_CALLING_CONVENTION$])
m4trace:configure.ac:487: -1- m4_pattern_allow([^F77_USES_CRAY_CALLING_CONVENTION$])
m4trace:configure.ac:487: -1- m4_pattern_allow([^F77_USES_VISUAL_FORTRAN_CALLING_CONVENTION$])
m4trace:configure.ac:487: -1- m4_pattern_allow([^F77_USES_F2C_CALLING_CONVENTION$])
m4trace:configure.ac:487: -1- m4_pattern_allow([^F77_TOLOWER$])
m4trace:configure.ac:487: -1- m4_pattern_allow([^F77_APPEND_UNDERSCORE$])
m4trace:configure.ac:487: -1- m4_pattern_allow([^F77_APPEND_EXTRA_UNDERSCORE$])
m4trace:configure.ac:490: -1- OCTAVE_DEFINE_MKOCTFILE_DYNAMIC_LINK_OPTIONS
m4trace:configure.ac:490: -1- m4_pattern_allow([^FPICFLAG$])
m4trace:configure.ac:490: -1- m4_pattern_allow([^CPICFLAG$])
m4trace:configure.ac:490: -1- m4_pattern_allow([^CXXPICFLAG$])
m4trace:configure.ac:490: -1- m4_pattern_allow([^SH_LDFLAGS$])
m4trace:configure.ac:490: -1- m4_pattern_allow([^DL_LDFLAGS$])
m4trace:configure.ac:490: -1- m4_pattern_allow([^MKOCTFILE_DL_LDFLAGS$])
m4trace:configure.ac:490: -1- m4_pattern_allow([^NO_OCT_FILE_STRIP$])
m4trace:configure.ac:490: -1- m4_pattern_allow([^TEMPLATE_AR$])
m4trace:configure.ac:490: -1- m4_pattern_allow([^TEMPLATE_ARFLAGS$])
m4trace:configure.ac:490: -1- m4_pattern_allow([^library_path_var$])
m4trace:configure.ac:490: -1- m4_pattern_allow([^ldpreloadsep$])
m4trace:configure.ac:490: -1- AM_SUBST_NOTMAKE([ldpreloadsep])
m4trace:configure.ac:490: -1- _AM_SUBST_NOTMAKE([ldpreloadsep])
m4trace:configure.ac:494: -1- m4_pattern_allow([^SIZEOF_INT$])
m4trace:configure.ac:495: -1- m4_pattern_allow([^OCTAVE_SIZEOF_INT$])
m4trace:configure.ac:498: -1- m4_pattern_allow([^SIZEOF_VOID_P$])
m4trace:configure.ac:519: -1- OCTAVE_CONFIGURE_WARNING([warn_64_bit])
m4trace:configure.ac:527: -1- m4_pattern_allow([^ENABLE_64$])
m4trace:configure.ac:530: -1- m4_pattern_allow([^OCTAVE_ENABLE_64$])
m4trace:configure.ac:536: -1- m4_pattern_allow([^OCTAVE_SIZEOF_IDX_TYPE$])
m4trace:configure.ac:539: -1- m4_pattern_allow([^OCTAVE_IDX_TYPE$])
m4trace:configure.ac:540: -1- m4_pattern_allow([^OCTAVE_IDX_TYPE$])
m4trace:configure.ac:545: -1- AX_PTHREAD
m4trace:configure.ac:545: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:545: -1- m4_pattern_allow([^ax_pthread_config$])
m4trace:configure.ac:545: -1- m4_pattern_allow([^PTHREAD_CREATE_JOINABLE$])
m4trace:configure.ac:545: -1- m4_pattern_allow([^HAVE_PTHREAD_PRIO_INHERIT$])
m4trace:configure.ac:545: -1- m4_pattern_allow([^PTHREAD_CC$])
m4trace:configure.ac:545: -1- m4_pattern_allow([^PTHREAD_CXX$])
m4trace:configure.ac:545: -1- m4_pattern_allow([^PTHREAD_LIBS$])
m4trace:configure.ac:545: -1- m4_pattern_allow([^PTHREAD_CFLAGS$])
m4trace:configure.ac:545: -1- m4_pattern_allow([^PTHREAD_CC$])
m4trace:configure.ac:545: -1- m4_pattern_allow([^PTHREAD_CXX$])
m4trace:configure.ac:545: -1- m4_pattern_allow([^HAVE_PTHREAD$])
m4trace:configure.ac:557: -1- OCTAVE_CHECK_BROKEN_PTHREAD_STACKSIZE
m4trace:configure.ac:557: -1- m4_pattern_allow([^HAVE_BROKEN_PTHREAD_STACKSIZE$])
m4trace:configure.ac:558: -1- AM_CONDITIONAL([OCTAVE_CHECK_BROKEN_PTHREAD_STACKSIZE], [test $octave_cv_broken_pthread_stacksize = yes])
m4trace:configure.ac:558: -1- m4_pattern_allow([^OCTAVE_CHECK_BROKEN_PTHREAD_STACKSIZE_TRUE$])
m4trace:configure.ac:558: -1- m4_pattern_allow([^OCTAVE_CHECK_BROKEN_PTHREAD_STACKSIZE_FALSE$])
m4trace:configure.ac:558: -1- _AM_SUBST_NOTMAKE([OCTAVE_CHECK_BROKEN_PTHREAD_STACKSIZE_TRUE])
m4trace:configure.ac:558: -1- _AM_SUBST_NOTMAKE([OCTAVE_CHECK_BROKEN_PTHREAD_STACKSIZE_FALSE])
m4trace:configure.ac:573: -1- AX_OPENMP([XTRA_CFLAGS="$XTRA_CFLAGS $OPENMP_CFLAGS"; ENABLE_OPENMP=yes], [])
m4trace:configure.ac:576: -1- AX_OPENMP([XTRA_CXXFLAGS="$XTRA_CXXFLAGS $OPENMP_CXXFLAGS"; ENABLE_OPENMP=yes], [])
m4trace:configure.ac:588: -1- m4_pattern_allow([^HAVE_OMP_H$])
m4trace:configure.ac:589: -1- m4_pattern_allow([^HAVE_OMP_GET_NUM_THREADS$])
m4trace:configure.ac:590: -1- m4_pattern_allow([^OCTAVE_ENABLE_OPENMP$])
m4trace:configure.ac:604: -1- m4_pattern_allow([^LD_STATIC_FLAG$])
m4trace:configure.ac:607: -1- OCTAVE_PROG_AR
m4trace:configure.ac:607: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:607: -1- m4_pattern_allow([^ARFLAGS$])
m4trace:configure.ac:615: -1- LT_INIT([disable-static dlopen win32-dll])
m4trace:configure.ac:615: -1- m4_pattern_forbid([^_?LT_[A-Z_]+$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])
m4trace:configure.ac:615: -1- LTOPTIONS_VERSION
m4trace:configure.ac:615: -1- LTSUGAR_VERSION
m4trace:configure.ac:615: -1- LTVERSION_VERSION
m4trace:configure.ac:615: -1- LTOBSOLETE_VERSION
m4trace:configure.ac:615: -1- _LT_PROG_LTMAIN
m4trace:configure.ac:615: -1- m4_pattern_allow([^AS$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^LIBTOOL$])
m4trace:configure.ac:615: -1- _LT_PREPARE_SED_QUOTE_VARS
m4trace:configure.ac:615: -1- _LT_PROG_ECHO_BACKSLASH
m4trace:configure.ac:615: -1- LT_PATH_LD
m4trace:configure.ac:615: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^FGREP$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:615: -1- LT_PATH_NM
m4trace:configure.ac:615: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^ac_ct_DUMPBIN$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^NM$])
m4trace:configure.ac:615: -1- LT_CMD_MAX_LEN
m4trace:configure.ac:615: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^ac_ct_AR$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:615: -1- _LT_WITH_SYSROOT
m4trace:configure.ac:615: -1- m4_pattern_allow([LT_OBJDIR])
m4trace:configure.ac:615: -1- m4_pattern_allow([^LT_OBJDIR$])
m4trace:configure.ac:615: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:615: -1- _LT_PATH_TOOL_PREFIX([${ac_tool_prefix}file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:615: -1- _LT_PATH_TOOL_PREFIX([file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:615: -1- LT_SUPPORTED_TAG([CC])
m4trace:configure.ac:615: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:615: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:615: -1- _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions], [lt_cv_prog_compiler_rtti_exceptions], [-fno-rtti -fno-exceptions], [], [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, )="$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, ) -fno-rtti -fno-exceptions"])
m4trace:configure.ac:615: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, ) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, )], [$_LT_TAGVAR(lt_prog_compiler_pic, )@&t@m4_if([],[],[ -DPIC],[m4_if([],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, ) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, )=" $_LT_TAGVAR(lt_prog_compiler_pic, )" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, )=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, )=no])
m4trace:configure.ac:615: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, )=])
m4trace:configure.ac:615: -1- m4_pattern_allow([^MANIFEST_TOOL$])
m4trace:configure.ac:615: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:615: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:615: -1- _LT_REQUIRED_DARWIN_CHECKS
m4trace:configure.ac:615: -1- m4_pattern_allow([^DSYMUTIL$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^NMEDIT$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^LIPO$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^OTOOL$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^OTOOL64$])
m4trace:configure.ac:615: -1- _LT_LINKER_OPTION([if $CC understands -b], [lt_cv_prog_compiler__b], [-b], [_LT_TAGVAR(archive_cmds, )='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'], [_LT_TAGVAR(archive_cmds, )='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])
m4trace:configure.ac:615: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:615: -1- LT_SYS_DLOPEN_SELF
m4trace:configure.ac:615: -1- m4_pattern_allow([^HAVE_DLFCN_H$])
m4trace:configure.ac:615: -1- LT_LANG([CXX])
m4trace:configure.ac:615: -1- LT_SUPPORTED_TAG([CXX])
m4trace:configure.ac:615: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:615: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:615: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:615: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:615: -1- LT_PATH_LD
m4trace:configure.ac:615: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:615: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:615: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:615: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, CXX) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, CXX)], [$_LT_TAGVAR(lt_prog_compiler_pic, CXX)@&t@m4_if([CXX],[],[ -DPIC],[m4_if([CXX],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, CXX) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, CXX)=" $_LT_TAGVAR(lt_prog_compiler_pic, CXX)" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, CXX)=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, CXX)=no])
m4trace:configure.ac:615: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works_CXX], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, CXX)=])
m4trace:configure.ac:615: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:615: -1- LT_LANG([F77])
m4trace:configure.ac:615: -1- LT_SUPPORTED_TAG([F77])
m4trace:configure.ac:615: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:615: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:615: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:615: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, F77) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, F77)], [$_LT_TAGVAR(lt_prog_compiler_pic, F77)@&t@m4_if([F77],[],[ -DPIC],[m4_if([F77],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, F77) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, F77)=" $_LT_TAGVAR(lt_prog_compiler_pic, F77)" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, F77)=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, F77)=no])
m4trace:configure.ac:615: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works_F77], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, F77)=])
m4trace:configure.ac:615: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:615: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:615: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:622: -1- m4_pattern_allow([^SHARED_LIBS$])
m4trace:configure.ac:629: -1- m4_pattern_allow([^STATIC_LIBS$])
m4trace:configure.ac:638: -1- m4_pattern_allow([^XTRA_EXTERNAL_SH_LDFLAGS$])
m4trace:configure.ac:663: -1- m4_pattern_allow([^NO_UNDEFINED_LDFLAG$])
m4trace:configure.ac:675: -1- AM_CONDITIONAL([AMCOND_LINK_ALL_DEPS], [test $link_all_deps = yes])
m4trace:configure.ac:675: -1- m4_pattern_allow([^AMCOND_LINK_ALL_DEPS_TRUE$])
m4trace:configure.ac:675: -1- m4_pattern_allow([^AMCOND_LINK_ALL_DEPS_FALSE$])
m4trace:configure.ac:675: -1- _AM_SUBST_NOTMAKE([AMCOND_LINK_ALL_DEPS_TRUE])
m4trace:configure.ac:675: -1- _AM_SUBST_NOTMAKE([AMCOND_LINK_ALL_DEPS_FALSE])
m4trace:configure.ac:683: -1- OCTAVE_BLAS
m4trace:configure.ac:683: -1- AX_BLAS
m4trace:configure.ac:683: -1- m4_pattern_allow([^BLAS_LIBS$])
m4trace:configure.ac:683: -2- m4_pattern_allow([^HAVE_BLAS$])
m4trace:configure.ac:683: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2981: AC_RUN_IFELSE is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
m4/octave_blas.m4:28: OCTAVE_BLAS is expanded from...
configure.ac:683: the top level])
m4trace:configure.ac:684: -1- AX_LAPACK
m4trace:configure.ac:684: -1- m4_pattern_allow([^LAPACK_LIBS$])
m4trace:configure.ac:684: -2- m4_pattern_allow([^HAVE_LAPACK$])
m4trace:configure.ac:694: -1- OCTAVE_BLAS
m4trace:configure.ac:694: -1- AX_BLAS
m4trace:configure.ac:694: -1- m4_pattern_allow([^BLAS_LIBS$])
m4trace:configure.ac:694: -2- m4_pattern_allow([^HAVE_BLAS$])
m4trace:configure.ac:694: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2981: AC_RUN_IFELSE is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
m4/octave_blas.m4:28: OCTAVE_BLAS is expanded from...
configure.ac:694: the top level])
m4trace:configure.ac:695: -1- AX_LAPACK
m4trace:configure.ac:695: -1- m4_pattern_allow([^LAPACK_LIBS$])
m4trace:configure.ac:695: -2- m4_pattern_allow([^HAVE_LAPACK$])
m4trace:configure.ac:713: -1- OCTAVE_BLAS
m4trace:configure.ac:713: -1- AX_BLAS
m4trace:configure.ac:713: -1- m4_pattern_allow([^BLAS_LIBS$])
m4trace:configure.ac:713: -2- m4_pattern_allow([^HAVE_BLAS$])
m4trace:configure.ac:713: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2981: AC_RUN_IFELSE is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
m4/octave_blas.m4:28: OCTAVE_BLAS is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2823: _AC_COMPILE_IFELSE is expanded from...
./lib/autoconf/general.m4:2839: AC_COMPILE_IFELSE is expanded from...
configure.ac:713: the top level])
m4trace:configure.ac:713: -1- AX_LAPACK
m4trace:configure.ac:713: -1- m4_pattern_allow([^LAPACK_LIBS$])
m4trace:configure.ac:713: -2- m4_pattern_allow([^HAVE_LAPACK$])
m4trace:configure.ac:740: -1- m4_pattern_allow([^USE_BLASWRAP$])
m4trace:configure.ac:763: -1- OCTAVE_CHECK_SIZEOF_FORTRAN_INTEGER
m4trace:configure.ac:790: -1- OCTAVE_CHECK_SIZEOF_FORTRAN_INTEGER
m4trace:configure.ac:799: -1- m4_pattern_allow([^F77_INTEGER_8_FLAG$])
m4trace:configure.ac:809: -1- m4_pattern_allow([^OCTAVE_F77_INT_TYPE$])
m4trace:configure.ac:810: -1- m4_pattern_allow([^OCTAVE_F77_INT_TYPE$])
m4trace:configure.ac:812: -1- m4_pattern_allow([^OCTAVE_SIZEOF_F77_INT_TYPE$])
m4trace:configure.ac:816: -1- OCTAVE_F77_FLAG([-ffloat-store], [
  AC_MSG_RESULT([setting F77_FLOAT_STORE_FLAG to -ffloat-store])
  F77_FLOAT_STORE_FLAG=-ffloat-store
  AC_SUBST(F77_FLOAT_STORE_FLAG)
])
m4trace:configure.ac:816: -1- m4_pattern_allow([^F77_FLOAT_STORE_FLAG$])
m4trace:configure.ac:823: -1- OCTAVE_F77_FLAG([-std=legacy])
m4trace:configure.ac:833: -1- AM_CONDITIONAL([AMCOND_BUILD_EXTERNAL_LIBXERBLA], [test -n "$BUILD_EXTERNAL_LIBXERBLA"])
m4trace:configure.ac:833: -1- m4_pattern_allow([^AMCOND_BUILD_EXTERNAL_LIBXERBLA_TRUE$])
m4trace:configure.ac:833: -1- m4_pattern_allow([^AMCOND_BUILD_EXTERNAL_LIBXERBLA_FALSE$])
m4trace:configure.ac:833: -1- _AM_SUBST_NOTMAKE([AMCOND_BUILD_EXTERNAL_LIBXERBLA_TRUE])
m4trace:configure.ac:833: -1- _AM_SUBST_NOTMAKE([AMCOND_BUILD_EXTERNAL_LIBXERBLA_FALSE])
m4trace:configure.ac:852: -1- m4_pattern_allow([^HAVE_DLOPEN_API$])
m4trace:configure.ac:854: -1- OCTAVE_CXX_FLAG([-rdynamic], [RDYNAMIC_FLAG=-rdynamic])
m4trace:configure.ac:859: -1- m4_pattern_allow([^HAVE_LOADLIBRARY_API$])
m4trace:configure.ac:877: -1- m4_pattern_allow([^RDYNAMIC_FLAG$])
m4trace:configure.ac:878: -1- m4_pattern_allow([^LIBOCTINTERP$])
m4trace:configure.ac:879: -1- m4_pattern_allow([^LIBOCTAVE$])
m4trace:configure.ac:901: -1- m4_pattern_allow([^CROSS_TOOL_PREFIX$])
m4trace:configure.ac:902: -1- m4_pattern_allow([^MKOCTFILE_AR$])
m4trace:configure.ac:903: -1- m4_pattern_allow([^MKOCTFILE_CC$])
m4trace:configure.ac:904: -1- m4_pattern_allow([^MKOCTFILE_CXX$])
m4trace:configure.ac:905: -1- m4_pattern_allow([^MKOCTFILE_F77$])
m4trace:configure.ac:906: -1- m4_pattern_allow([^MKOCTFILE_RANLIB$])
m4trace:configure.ac:926: -1- m4_pattern_allow([^OCTAVE_ENABLE_FLOAT_TRUNCATE$])
m4trace:configure.ac:941: -1- OCTAVE_CC_FLAG([-mieee-fp], [
        ieee_fp_flag=-mieee-fp
        XTRA_CFLAGS="$XTRA_CFLAGS -mieee-fp"
        AC_MSG_NOTICE([adding -mieee-fp to XTRA_CFLAGS])])
m4trace:configure.ac:947: -1- OCTAVE_CXX_FLAG([-mieee-fp], [
        ieee_fp_flag=-mieee-fp
        XTRA_CXXFLAGS="$XTRA_CXXFLAGS -mieee-fp"
        AC_MSG_NOTICE([adding -mieee-fp to XTRA_CXXFLAGS])])
m4trace:configure.ac:955: -1- OCTAVE_CC_FLAG([-mieee], [
        ieee_fp_flag=-mieee
        XTRA_CFLAGS="$XTRA_CFLAGS -mieee"
        AC_MSG_NOTICE([adding -mieee to XTRA_CFLAGS])])
m4trace:configure.ac:960: -1- OCTAVE_CC_FLAG([-ieee], [
        ieee_fp_flag=-ieee
        XTRA_CFLAGS="$XTRA_CFLAGS -ieee"
        AC_MSG_NOTICE([adding -ieee to XTRA_CFLAGS])])
m4trace:configure.ac:966: -1- OCTAVE_CXX_FLAG([-mieee], [
        ieee_fp_flag=-mieee
        XTRA_CXXFLAGS="$XTRA_CXXFLAGS -mieee"
        AC_MSG_NOTICE([adding -mieee to XTRA_CXXFLAGS])])
m4trace:configure.ac:971: -1- OCTAVE_CXX_FLAG([-ieee], [
        ieee_fp_flag=-ieee
        XTRA_CXXFLAGS="$XTRA_CXXFLAGS -ieee"
        AC_MSG_NOTICE([adding -ieee to XTRA_CXXFLAGS])])
m4trace:configure.ac:978: -1- OCTAVE_CC_FLAG([-mminimal-toc], [
      XTRA_CFLAGS="$XTRA_CFLAGS -mminimal-toc"])
m4trace:configure.ac:981: -1- OCTAVE_CXX_FLAG([-mminimal-toc], [
      XTRA_CXXFLAGS="$XTRA_CXXFLAGS -mminimal-toc"])
m4trace:configure.ac:986: -1- m4_pattern_allow([^XTRA_CFLAGS$])
m4trace:configure.ac:987: -1- m4_pattern_allow([^XTRA_CXXFLAGS$])
m4trace:configure.ac:1011: -1- m4_pattern_allow([^BUILD_CC$])
m4trace:configure.ac:1013: -1- m4_pattern_allow([^BUILD_CFLAGS$])
m4trace:configure.ac:1015: -1- m4_pattern_allow([^BUILD_CXX$])
m4trace:configure.ac:1017: -1- m4_pattern_allow([^BUILD_CXXFLAGS$])
m4trace:configure.ac:1019: -1- m4_pattern_allow([^BUILD_LDFLAGS$])
m4trace:configure.ac:1021: -1- m4_pattern_allow([^BUILD_EXEEXT$])
m4trace:configure.ac:1038: -1- AM_CONDITIONAL([AMCOND_CROSS_TOOLS], [test $cross_tools = yes])
m4trace:configure.ac:1038: -1- m4_pattern_allow([^AMCOND_CROSS_TOOLS_TRUE$])
m4trace:configure.ac:1038: -1- m4_pattern_allow([^AMCOND_CROSS_TOOLS_FALSE$])
m4trace:configure.ac:1038: -1- _AM_SUBST_NOTMAKE([AMCOND_CROSS_TOOLS_TRUE])
m4trace:configure.ac:1038: -1- _AM_SUBST_NOTMAKE([AMCOND_CROSS_TOOLS_FALSE])
m4trace:configure.ac:1044: -1- OCTAVE_CXX_DYNAMIC_AUTO_ARRAYS
m4trace:configure.ac:1044: -1- m4_pattern_allow([^HAVE_DYNAMIC_AUTO_ARRAYS$])
m4trace:configure.ac:1047: -1- OCTAVE_IEEE754_DATA_FORMAT
m4trace:configure.ac:1047: -1- m4_pattern_allow([^HAVE_IEEE754_DATA_FORMAT$])
m4trace:configure.ac:1050: -1- OCTAVE_CXX_BITWISE_OP_TEMPLATES
m4trace:configure.ac:1050: -1- m4_pattern_allow([^HAVE_CXX_BITWISE_OP_TEMPLATES$])
m4trace:configure.ac:1053: -1- OCTAVE_CXX_COMPLEX_SETTERS
m4trace:configure.ac:1053: -1- m4_pattern_allow([^HAVE_CXX_COMPLEX_SETTERS$])
m4trace:configure.ac:1056: -1- OCTAVE_CXX_COMPLEX_REFERENCE_ACCESSORS
m4trace:configure.ac:1056: -1- m4_pattern_allow([^HAVE_CXX_COMPLEX_REFERENCE_ACCESSORS$])
m4trace:configure.ac:1059: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:1059: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:1059: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:1059: -1- m4_pattern_allow([^ALLOCA$])
m4trace:configure.ac:1059: -1- m4_pattern_allow([^C_ALLOCA$])
m4trace:configure.ac:1059: -1- m4_pattern_allow([^STACK_DIRECTION$])
m4trace:configure.ac:1062: -1- AM_PROG_CC_C_O
m4trace:configure.ac:1069: -1- m4_pattern_allow([^_WIN32_WINNT$])
m4trace:configure.ac:1088: -1- gl_INIT
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_COND_LIBTOOL], [true])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_COND_LIBTOOL_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_COND_LIBTOOL_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_FALSE])
m4trace:configure.ac:1088: -1- gl_COMMON
m4trace:configure.ac:1088: -1- gl_00GNULIB
m4trace:configure.ac:1088: -1- gl_COMMON_BODY
m4trace:configure.ac:1088: -1- gl_ZZGNULIB
m4trace:configure.ac:1088: -1- gl_FUNC_ACCESS
m4trace:configure.ac:1088: -1- gl_UNISTD_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_CHOWN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_COPY_FILE_RANGE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DUP3$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_EUIDACCESS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_EXECVPE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FACCESSAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FCHDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FCHOWNAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FDATASYNC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FSYNC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FTRUNCATE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETDTABLESIZE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETENTROPY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETGROUPS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETHOSTNAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETLOGIN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETPAGESIZE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETPASS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GROUP_MEMBER$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LCHOWN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LINK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LINKAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PIPE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PIPE2$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PWRITE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_READLINK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_READLINKAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SETHOSTNAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SLEEP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYMLINK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYMLINKAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_UNLINKAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_USLEEP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_ENVIRON$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_EXECVPE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FCHDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FDATASYNC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GETDOMAINNAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GETPAGESIZE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GETUSERSHELL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_SETHOSTNAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_TRUNCATE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_TTYNAME_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_OS_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_PARAM_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ACCESS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_CHOWN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_CLOSE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_DUP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_DUP2$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXECL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXECLE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXECLP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXECV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXECVE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXECVP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXECVPE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FACCESSAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FCHOWNAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FTRUNCATE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GETCWD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GETDOMAINNAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GETDTABLESIZE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GETLOGIN_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GETGROUPS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GETPAGESIZE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GETPASS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ISATTY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LCHOWN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LINK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LINKAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LSEEK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_PREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_PWRITE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_READ$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_READLINK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_READLINKAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_RMDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SLEEP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SYMLINK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SYMLINKAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_TRUNCATE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_TTYNAME_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_UNLINK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_UNLINKAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_USLEEP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_WRITE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^UNISTD_H_HAVE_SYS_RANDOM_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^UNISTD_H_HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([access.c])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([access])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCESS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ACCESS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHDIR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CHDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHOWN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CHOWN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CLOSE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPY_FILE_RANGE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_COPY_FILE_RANGE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_DUP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP2])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_DUP2$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP3])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_DUP3$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ENVIRON])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ENVIRON$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EUIDACCESS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EUIDACCESS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXECL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXECLE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXECLP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECV])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXECV$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXECVE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXECVP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVPE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXECVPE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FACCESSAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FACCESSAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHDIR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FCHDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHOWNAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FCHOWNAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDATASYNC])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FDATASYNC$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSYNC])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FSYNC$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTRUNCATE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FTRUNCATE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCWD])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETCWD$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDOMAINNAME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETDOMAINNAME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDTABLESIZE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETDTABLESIZE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETENTROPY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETENTROPY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETGROUPS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETGROUPS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETHOSTNAME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETHOSTNAME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETLOGIN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN_R])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETLOGIN_R$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETOPT_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETOPT_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPAGESIZE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETPAGESIZE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPASS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETPASS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUSERSHELL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETUSERSHELL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GROUP_MEMBER])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GROUP_MEMBER$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISATTY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ISATTY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHOWN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LCHOWN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LINK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINKAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LINKAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSEEK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LSEEK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PIPE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE2])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PIPE2$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PREAD])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PREAD$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PWRITE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PWRITE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READ])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_READ$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_READLINK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINKAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_READLINKAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RMDIR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RMDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETHOSTNAME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SETHOSTNAME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SLEEP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SLEEP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SYMLINK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINKAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SYMLINKAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCATE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TRUNCATE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TTYNAME_R])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TTYNAME_R$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_GETOPT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_NONBLOCKING])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_NONBLOCKING$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_SIGPIPE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_SIGPIPE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_UNLINK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINKAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_UNLINKAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_USLEEP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_USLEEP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WRITE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WRITE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ACCESS], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_ACCESS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHDIR], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_CHDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CLOSE], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_CLOSE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_DUP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP2], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_DUP2$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECL], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLE], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECLE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLP], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECLP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECV], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECV$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVE], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECVE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVP], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECVP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVPE], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECVPE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETCWD], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_GETCWD$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETPID], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_GETPID$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ISATTY], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_ISATTY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_LSEEK], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_LSEEK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_READ], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_READ$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_RMDIR], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_RMDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_SWAB], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_SWAB$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UNLINK], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_UNLINK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WRITE], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_WRITE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([access])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[access]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([access])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_ACCESS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LTALLOCA$])
m4trace:configure.ac:1088: -1- gl_FUNC_ALLOCA
m4trace:configure.ac:1088: -1- gl_PREREQ_ALLOCA
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^ALLOCA_H$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_ALLOCA_H], [test -n "$ALLOCA_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_FALSE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:1088: -1- gl_FUNC_BASE64
m4trace:configure.ac:1088: -1- gl_PREREQ_BASE64
m4trace:configure.ac:1088: -1- AC_C_RESTRICT
m4trace:configure.ac:1088: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:1088: -1- gl_FUNC_BTOWC
m4trace:configure.ac:1088: -1- gl_WCHAR_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_BTOWC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MBSINIT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MBRTOWC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MBRLEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MBSRTOWCS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MBSNRTOWCS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCRTOMB$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSRTOMBS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSNRTOMBS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WMEMCHR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WMEMCMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WMEMCPY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WMEMMOVE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WMEMPCPY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WMEMSET$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSLEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSNLEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSCPY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCPCPY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSNCPY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCPNCPY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSCAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSNCAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSCMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSNCMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSCASECMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSNCASECMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSCOLL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSXFRM$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSDUP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSCHR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSRCHR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSCSPN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSSPN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSPBRK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSSTR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSTOK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSWIDTH$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSFTIME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_WCTOB$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_WCSDUP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_WCWIDTH$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MBSTATE_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_BTOWC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_WCTOB$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MBSINIT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MBRTOWC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MBRLEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MBSRTOWCS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MBSNRTOWCS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_WCRTOMB$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_WCSRTOMBS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_WCSNRTOMBS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_WCWIDTH$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_WCSWIDTH$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_WCSFTIME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_WCSTOK$])
m4trace:configure.ac:1088: -1- gl_WCHAR_H_INLINE_OK
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_btowc], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" btowc ]AS_TR_CPP([HAVE_btowc])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gt_LOCALE_FR
m4trace:configure.ac:1088: -1- AM_LANGINFO_CODESET
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LANGINFO_CODESET$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LOCALE_FR$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([btowc.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_BTOWC
m4trace:configure.ac:1088: -1- gl_WCHAR_MODULE_INDICATOR([btowc])
m4trace:configure.ac:1088: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BTOWC])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_BTOWC$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOB])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCTOB$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSINIT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSINIT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRTOWC])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBRTOWC$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRLEN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBRLEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRTOWCS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSRTOWCS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNRTOWCS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSNRTOWCS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCRTOMB])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCRTOMB$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRTOMBS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSRTOMBS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNRTOMBS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSNRTOMBS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCWIDTH])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCWIDTH$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCHR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WMEMCHR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCMP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WMEMCMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCPY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WMEMCPY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMMOVE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WMEMMOVE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMPCPY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WMEMPCPY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMSET])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WMEMSET$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSLEN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSLEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNLEN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSNLEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCPY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSCPY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPCPY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCPCPY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCPY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSNCPY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPNCPY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCPNCPY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSCAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSNCAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCMP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSCMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCMP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSNCMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCASECMP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSCASECMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCASECMP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSNCASECMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCOLL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSCOLL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSXFRM])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSXFRM$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSDUP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSDUP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCHR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSCHR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRCHR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSRCHR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCSPN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSCSPN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSPN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSSPN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSPBRK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSPBRK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSTR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSSTR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSTOK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSTOK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSWIDTH])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSWIDTH$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSFTIME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCSFTIME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WCSDUP], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_WCSDUP$])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB__EXIT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB__EXIT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALIGNED_ALLOC])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ALIGNED_ALLOC$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATOLL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ATOLL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CALLOC_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CALLOC_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CANONICALIZE_FILE_NAME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREE_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FREE_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOADAVG])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETLOADAVG$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSUBOPT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETSUBOPT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GRANTPT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GRANTPT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MALLOC_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MALLOC_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBTOWC])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBTOWC$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDTEMP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MKDTEMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MKOSTEMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMPS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MKOSTEMPS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MKSTEMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMPS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MKSTEMPS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_MEMALIGN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_POSIX_MEMALIGN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_OPENPT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_POSIX_OPENPT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PTSNAME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME_R])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PTSNAME_R$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTENV])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PUTENV$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_QSORT_R])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_QSORT_R$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RANDOM$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM_R])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RANDOM_R$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOCARRAY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_REALLOCARRAY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOC_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_REALLOC_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALPATH])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_REALPATH$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RPMATCH])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RPMATCH$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SECURE_GETENV])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SECURE_GETENV$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETENV])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SETENV$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOD])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRTOD$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRTOL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLD])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRTOLD$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRTOLL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRTOUL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOULL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRTOULL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYSTEM_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SYSTEM_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLOCKPT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_UNLOCKPT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNSETENV])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_UNSETENV$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOMB])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCTOMB$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ECVT], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_ECVT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCVT], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_FCVT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GCVT], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_GCVT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKTEMP], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_MKTEMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTENV], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_PUTENV$])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE__EXIT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ALIGNED_ALLOC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ATOLL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_ECVT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FCVT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GCVT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GETLOADAVG$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETSUBOPT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GRANTPT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_INITSTATE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_INITSTATE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MBTOWC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MKDTEMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MKOSTEMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MKOSTEMPS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MKSTEMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MKSTEMPS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_POSIX_MEMALIGN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_POSIX_OPENPT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PTSNAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PTSNAME_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_QSORT_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_RANDOM$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_RANDOM_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_RANDOM_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_REALLOCARRAY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_REALPATH$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_RPMATCH$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SECURE_GETENV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SETENV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_SETENV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SETSTATE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_SETSTATE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRTOD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRTOL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRTOLD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRTOLL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRTOUL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRTOULL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_RANDOM_DATA$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_LOADAVG_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_UNLOCKPT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_UNSETENV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ALIGNED_ALLOC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_CALLOC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FREE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_INITSTATE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MALLOC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MBTOWC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MKSTEMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_POSIX_MEMALIGN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_PTSNAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_PTSNAME_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_PUTENV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_QSORT_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_RANDOM$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_RANDOM_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_REALLOC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_REALLOCARRAY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_REALPATH$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SETENV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SETSTATE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRTOD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRTOL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRTOLD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRTOLL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRTOUL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRTOULL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_UNSETENV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_WCTOMB$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([btowc])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[btowc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([btowc])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_BTOWC$])
m4trace:configure.ac:1088: -1- gl___BUILTIN_EXPECT
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE___BUILTIN_EXPECT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE___BUILTIN_EXPECT$])
m4trace:configure.ac:1088: -1- gl_BYTESWAP
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_BYTESWAP_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^BYTESWAP_H$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_BYTESWAP_H], [test -n "$BYTESWAP_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_BYTESWAP_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_BYTESWAP_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_BYTESWAP_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_BYTESWAP_H_FALSE])
m4trace:configure.ac:1088: -1- gl_FUNC_CALLOC_GNU
m4trace:configure.ac:1088: -1- gl_FUNC_CALLOC_POSIX
m4trace:configure.ac:1088: -1- gl_FUNC_MALLOC_POSIX
m4trace:configure.ac:1088: -1- gl_FUNC_MALLOC_PTRDIFF
m4trace:configure.ac:1088: -1- gl_CHECK_MALLOC_PTRDIFF
m4trace:configure.ac:1088: -1- gl_CHECK_MALLOC_POSIX
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MALLOC_POSIX$])
m4trace:configure.ac:1088: -1- _AC_FUNC_CALLOC_IF([], [REPLACE_CALLOC=1])
m4trace:configure.ac:1088: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2981: AC_RUN_IFELSE is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
m4/calloc.m4:18: _AC_FUNC_CALLOC_IF is expanded from...
m4/calloc.m4:57: gl_FUNC_CALLOC_GNU is expanded from...
m4/gnulib-comp.m4:365: gl_INIT is expanded from...
configure.ac:1088: the top level])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([calloc.c])
m4trace:configure.ac:1088: -1- gl_FUNC_CALLOC_POSIX
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([calloc.c])
m4trace:configure.ac:1088: -1- gl_STDLIB_MODULE_INDICATOR([calloc-posix])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([calloc-posix])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[calloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([calloc-posix])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_CALLOC_POSIX$])
m4trace:configure.ac:1088: -1- gl_FUNC_CANONICALIZE_FILENAME_MODE
m4trace:configure.ac:1088: -1- gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LSTAT_FOLLOWS_SLASHED_SYMLINK$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_canonicalize_file_name], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" canonicalize_file_name ]AS_TR_CPP([HAVE_canonicalize_file_name])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_faccessat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" faccessat ]AS_TR_CPP([HAVE_faccessat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_DOUBLE_SLASH_ROOT
m4trace:configure.ac:1088: -1- m4_pattern_allow([^DOUBLE_SLASH_IS_DISTINCT_ROOT$])
m4trace:configure.ac:1088: -1- gl_FUNC_REALPATH_WORKS
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_realpath], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" realpath ]AS_TR_CPP([HAVE_realpath])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_NOCRASH
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FUNC_REALPATH_WORKS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FUNC_REALPATH_NEARLY_WORKS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([canonicalize])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_CANONICALIZE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([canonicalize])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_CANONICALIZE$])
m4trace:configure.ac:1088: -1- gl_STDLIB_MODULE_INDICATOR([canonicalize_file_name])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([canonicalize_file_name])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[canonicalize_file_name]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([canonicalize_file_name])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_readlinkat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" readlinkat ]AS_TR_CPP([HAVE_readlinkat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([chdir])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([chdir])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[chdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([chdir])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_CHDIR$])
m4trace:configure.ac:1088: -1- gl_FUNC_CHDIR_LONG
m4trace:configure.ac:1088: -1- gl_PATHMAX_SNIPPET_PREREQ
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/param.h ]AS_TR_SH([sys/param.h]) AS_TR_CPP([HAVE_sys/param.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -2- gl_PATHMAX_SNIPPET
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([chdir-long.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_CHDIR_LONG
m4trace:configure.ac:1088: -1- gl_CLOCK_TIME
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_CLOCK_GETTIME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_CLOCK_GETTIME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_CLOCK_SETTIME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([cloexec])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_CLOEXEC$])
m4trace:configure.ac:1088: -1- gl_FUNC_CLOSE
m4trace:configure.ac:1088: -1- gl_MSVC_INVAL
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func__set_invalid_parameter_handler], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" _set_invalid_parameter_handler ]AS_TR_CPP([HAVE__set_invalid_parameter_handler])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MSVC_INVALID_PARAMETER_HANDLER$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MSVC_INVALID_PARAMETER_HANDLER$])
m4trace:configure.ac:1088: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- gl_TEST_FCHDIR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([close.c])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([close])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([close])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[close]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([close])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_CLOSE$])
m4trace:configure.ac:1088: -1- gl_FUNC_CLOSEDIR
m4trace:configure.ac:1088: -1- gl_DIRENT_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_OPENDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_READDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_REWINDDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_CLOSEDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_DIRFD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FDOPENDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FDOPENDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SCANDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ALPHASORT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_OPENDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_CLOSEDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_DIRFD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FDOPENDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_CLOSEDIR$])
m4trace:configure.ac:1088: -1- gl_TEST_FCHDIR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([closedir.c])
m4trace:configure.ac:1088: -1- gl_DIRENT_MODULE_INDICATOR([closedir])
m4trace:configure.ac:1088: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENDIR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_OPENDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READDIR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_READDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REWINDDIR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_REWINDDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSEDIR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CLOSEDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DIRFD])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_DIRFD$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPENDIR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FDOPENDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANDIR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SCANDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALPHASORT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ALPHASORT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([closedir])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[closedir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([closedir])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_CLOSEDIR$])
m4trace:configure.ac:1088: -1- gl_MD4
m4trace:configure.ac:1088: -1- gl_BIGENDIAN
m4trace:configure.ac:1088: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:1088: -1- gl_MD5
m4trace:configure.ac:1088: -1- gl_CRYPTO_CHECK([MD5])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_CRYPTO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_OPENSSL_MD5_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_OPENSSL_MD5$])
m4trace:configure.ac:1088: -1- gl_SHA1
m4trace:configure.ac:1088: -1- gl_CRYPTO_CHECK([SHA1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_CRYPTO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_OPENSSL_SHA_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_OPENSSL_SHA1$])
m4trace:configure.ac:1088: -1- gl_SHA256
m4trace:configure.ac:1088: -1- gl_CRYPTO_CHECK([SHA256])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_CRYPTO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_OPENSSL_SHA_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_OPENSSL_SHA256$])
m4trace:configure.ac:1088: -1- gl_SHA512
m4trace:configure.ac:1088: -1- gl_CRYPTO_CHECK([SHA512])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_CRYPTO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_OPENSSL_SHA_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_OPENSSL_SHA512$])
m4trace:configure.ac:1088: -1- gl_CTYPE_H
m4trace:configure.ac:1088: -1- gl_CTYPE_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ISBLANK$])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS([ctype.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([ctype.h], [assume])
m4trace:configure.ac:1088: -1- gl_INCLUDE_NEXT
m4trace:configure.ac:1088: -1- m4_pattern_allow([^INCLUDE_NEXT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^INCLUDE_NEXT_AS_FIRST_DIRECTIVE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^PRAGMA_SYSTEM_HEADER$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^PRAGMA_COLUMNS$])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([ctype.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_CTYPE_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_CTYPE_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <ctype.h>
    ]], [isblank])
m4trace:configure.ac:1088: -1- gl_CTYPE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISBLANK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ISBLANK$])
m4trace:configure.ac:1088: -1- gl_CHECK_TYPE_STRUCT_DIRENT_D_INO
m4trace:configure.ac:1088: -1- m4_pattern_allow([^D_INO_IN_DIRENT$])
m4trace:configure.ac:1088: -1- gl_CHECK_TYPE_STRUCT_DIRENT_D_TYPE
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_DIRENT_D_TYPE$])
m4trace:configure.ac:1088: -1- gl_DIRENT_H
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([dirent.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([dirent.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_dirent_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" dirent.h ]AS_TR_SH([dirent.h]) AS_TR_CPP([HAVE_dirent.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([dirent.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_DIRENT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_DIRENT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DIRENT_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <dirent.h>
    ]], [alphasort closedir dirfd fdopendir opendir readdir rewinddir scandir])
m4trace:configure.ac:1088: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_FUNC_DIRFD
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DIRFD$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_DIRFD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_DIRFD$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([dirfd.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_DIRFD
m4trace:configure.ac:1088: -1- m4_pattern_allow([^DIR_FD_MEMBER_NAME$])
m4trace:configure.ac:1088: -1- gl_DIRENT_MODULE_INDICATOR([dirfd])
m4trace:configure.ac:1088: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([dirfd])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[dirfd]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([dirfd])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_DIRFD$])
m4trace:configure.ac:1088: -1- gl_DOUBLE_SLASH_ROOT
m4trace:configure.ac:1088: -1- m4_pattern_allow([^DOUBLE_SLASH_IS_DISTINCT_ROOT$])
m4trace:configure.ac:1088: -1- gl_FUNC_DUP
m4trace:configure.ac:1088: -1- gl_TEST_FCHDIR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- _GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([dup.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_DUP
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([dup])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([dup])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[dup]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([dup])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_DUP$])
m4trace:configure.ac:1088: -1- gl_FUNC_DUP2
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SETDTABLESIZE$])
m4trace:configure.ac:1088: -1- gl_TEST_FCHDIR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([dup2.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_DUP2
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([dup2])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([dup2])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[dup2]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([dup2])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_DUP2$])
m4trace:configure.ac:1088: -1- gl_ENVIRON
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gt_CHECK_VAR_DECL([#if HAVE_UNISTD_H
     #include <unistd.h>
     #endif
     /* mingw, BeOS, Haiku declare environ in <stdlib.h>, not in <unistd.h>.  */
     #include <stdlib.h>
    ], [environ])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ENVIRON_DECL$])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([environ])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([environ])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[environ]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([environ])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_ENVIRON$])
m4trace:configure.ac:1088: -1- gl_HEADER_ERRNO_H
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS([errno.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([errno.h], [assume])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([errno.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_ERRNO_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_ERRNO_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^ERRNO_H$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_ERRNO_H], [test -n "$ERRNO_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_ERRNO_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_ERRNO_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ERRNO_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ERRNO_H_FALSE])
m4trace:configure.ac:1088: -1- gl_REPLACE_ERRNO_VALUE([EMULTIHOP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^EMULTIHOP_HIDDEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^EMULTIHOP_VALUE$])
m4trace:configure.ac:1088: -1- gl_REPLACE_ERRNO_VALUE([ENOLINK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^ENOLINK_HIDDEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^ENOLINK_VALUE$])
m4trace:configure.ac:1088: -1- gl_REPLACE_ERRNO_VALUE([EOVERFLOW])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^EOVERFLOW_HIDDEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^EOVERFLOW_VALUE$])
m4trace:configure.ac:1088: -1- gl_ERROR
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([error.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_ERROR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_strerror_r], [_AC_CHECK_DECLS([strerror_r])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRERROR_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^STRERROR_R_CHAR_P$])
m4trace:configure.ac:1088: -1- gl_EXTERN_INLINE
m4trace:configure.ac:1088: -1- gl_FUNC_FCHDIR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_fchdir], [_AC_CHECK_DECLS([fchdir])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FCHDIR$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([fchdir.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_FCHDIR
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FCHDIR$])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_OPEN_DIRECTORY$])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([fchdir])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fchdir])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fchdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fchdir])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FCHDIR$])
m4trace:configure.ac:1088: -1- gl_FUNC_FCNTL
m4trace:configure.ac:1088: -1- gl_FCNTL_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FCNTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_OPENAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_CREAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FCNTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_OPEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_OPENAT$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fcntl ]AS_TR_CPP([HAVE_fcntl])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fcntl ]AS_TR_CPP([HAVE_fcntl])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fcntl ]AS_TR_CPP([HAVE_fcntl])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FCNTL_DUPFD_BUGGY$])
m4trace:configure.ac:1088: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fcntl ]AS_TR_CPP([HAVE_fcntl])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_TEST_FCHDIR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fcntl ]AS_TR_CPP([HAVE_fcntl])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([fcntl.c])
m4trace:configure.ac:1088: -1- gl_FCNTL_MODULE_INDICATOR([fcntl])
m4trace:configure.ac:1088: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CREAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CREAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCNTL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FCNTL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NONBLOCKING])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_NONBLOCKING$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPEN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_OPEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_OPENAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CREAT], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_CREAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_OPEN], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_OPEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fcntl])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fcntl]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fcntl])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FCNTL$])
m4trace:configure.ac:1088: -1- gl_FCNTL_H
m4trace:configure.ac:1088: -1- gl_FCNTL_O_FLAGS
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_symlink], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" symlink ]AS_TR_CPP([HAVE_symlink])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WORKING_O_NOATIME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WORKING_O_NOFOLLOW$])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS([fcntl.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([fcntl.h], [assume])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([fcntl.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_FCNTL_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_FCNTL_H$])
m4trace:configure.ac:1088: -1- AC_TYPE_PID_T
m4trace:configure.ac:1088: -1- m4_pattern_allow([^pid_t$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^mode_t$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <fcntl.h>
    ]], [fcntl openat])
m4trace:configure.ac:1088: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([fd-safer-flag])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_FD_SAFER_FLAG$])
m4trace:configure.ac:1088: -1- gl_FUNC_FDOPENDIR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FDOPENDIR$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fdopendir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fdopendir ]AS_TR_CPP([HAVE_fdopendir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([fdopendir.c])
m4trace:configure.ac:1088: -1- gl_DIRENT_MODULE_INDICATOR([fdopendir])
m4trace:configure.ac:1088: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fdopendir])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fdopendir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fdopendir])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FDOPENDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([fdopendir])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_FDOPENDIR$])
m4trace:configure.ac:1088: -1- gl_FILEMODE
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_strmode], [_AC_CHECK_DECLS([strmode])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRMODE$])
m4trace:configure.ac:1088: -1- gl_FILE_NAME_CONCAT_LGPL
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mempcpy], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mempcpy ]AS_TR_CPP([HAVE_mempcpy])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_FINDPROG_IN
m4trace:configure.ac:1088: -1- gl_FUNC_EACCESS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^eaccess$])
m4trace:configure.ac:1088: -1- AC_C_FLEXIBLE_ARRAY_MEMBER
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FLEXIBLE_ARRAY_MEMBER$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FLEXIBLE_ARRAY_MEMBER$])
m4trace:configure.ac:1088: -1- gl_FLOAT_H
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS([float.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([float.h], [assume])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([float.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_FLOAT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_FLOAT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FLOAT_H$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_FLOAT_H], [test -n "$FLOAT_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_FLOAT_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_FLOAT_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FLOAT_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FLOAT_H_FALSE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ITOLD$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([float.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([itold.c])
m4trace:configure.ac:1088: -1- gl_FUNC_FNMATCH_POSIX
m4trace:configure.ac:1088: -1- gl_FNMATCH_H
m4trace:configure.ac:1088: -1- gl_FNMATCH_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FNMATCH$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FNMATCH$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_fnmatch_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" fnmatch.h ]AS_TR_SH([fnmatch.h]) AS_TR_CPP([HAVE_fnmatch.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([fnmatch.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([fnmatch.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_fnmatch_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" fnmatch.h ]AS_TR_SH([fnmatch.h]) AS_TR_CPP([HAVE_fnmatch.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([fnmatch.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_FNMATCH_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_FNMATCH_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FNMATCH_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FNMATCH_H$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_FNMATCH_H], [test -n "$FNMATCH_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_FNMATCH_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_FNMATCH_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FNMATCH_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FNMATCH_H_FALSE])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <fnmatch.h>
    ]], [fnmatch])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fnmatch], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fnmatch ]AS_TR_CPP([HAVE_fnmatch])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_REPLACE_FNMATCH_H
m4trace:configure.ac:1088: -1- gl_FNMATCH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FNMATCH])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FNMATCH$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_FNMATCH_H], [test -n "$FNMATCH_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_FNMATCH_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_FNMATCH_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FNMATCH_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FNMATCH_H_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([fnmatch.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_FNMATCH
m4trace:configure.ac:1088: -1- AC_TYPE_MBSTATE_T
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MBSTATE_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^mbstate_t$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mbsrtowcs], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mbsrtowcs ]AS_TR_CPP([HAVE_mbsrtowcs])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_FNMATCH_MODULE_INDICATOR([fnmatch])
m4trace:configure.ac:1088: -1- gl_FNMATCH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fnmatch])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fnmatch]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fnmatch])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FNMATCH$])
m4trace:configure.ac:1088: -1- gl_FNMATCH_H
m4trace:configure.ac:1088: -1- gl_FNMATCH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_FUNC_FREE
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FREE_POSIX$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([free.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_FREE
m4trace:configure.ac:1088: -1- gl_STDLIB_MODULE_INDICATOR([free-posix])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([free-posix])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[free-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([free-posix])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FREE_POSIX$])
m4trace:configure.ac:1088: -1- gl_FUNC_FREXP
m4trace:configure.ac:1088: -1- gl_MATH_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ACOSF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ACOSL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ASINF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ASINL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ATANF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ATANL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ATAN2F$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_CBRT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_CBRTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_CBRTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_COPYSIGN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_COPYSIGNL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_COSF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_COSL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_COSHF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_EXPF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_EXPL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_EXPM1$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_EXPM1F$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FABSF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FABSL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FMA$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FMAF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FMAL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FMODF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FMODL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FREXPF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_HYPOTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_HYPOTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ILOGB$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ILOGBF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ILOGBL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ISNANF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ISNAND$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ISNANL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LDEXPF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LOGF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LOGL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LOG10F$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LOG10L$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LOG1P$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LOG1PF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LOG1PL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LOGBF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LOGBL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MODFF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MODFL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_POWF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_REMAINDER$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_REMAINDERF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_RINT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_RINTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SINF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SINL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SINHF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SQRTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SQRTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TANF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TANL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TANHF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_ACOSL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_ASINL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_ATANL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_CBRTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_CBRTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_CEILF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_CEILL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_COPYSIGNF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_COSL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_EXPL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_EXP2$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_EXP2F$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_EXP2L$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_EXPM1L$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FLOORF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FLOORL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FREXPL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_LDEXPL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_LOGL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_LOG10L$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_LOG2$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_LOG2F$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_LOG2L$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_LOGB$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_REMAINDER$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_REMAINDERL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_RINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_ROUND$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_ROUNDF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_ROUNDL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_SINL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_SQRTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_TANL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_TRUNC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_TRUNCF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_TRUNCL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ACOSF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ASINF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ATANF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ATAN2F$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_CBRTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_CBRTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_CEIL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_CEILF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_CEILL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_COSF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_COSHF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXPF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXPL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXPM1$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXPM1F$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXPM1L$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXP2$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_EXP2L$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FABSL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FLOOR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FLOORF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FLOORL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FMA$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FMAF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FMAL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FMOD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FMODF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FMODL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FREXPF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FREXP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FREXPL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_HUGE_VAL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_HYPOT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_HYPOTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_HYPOTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ILOGB$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ILOGBF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ILOGBL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ISFINITE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ISINF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ISNAN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LDEXPL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOG$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOGF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOGL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOG10$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOG10F$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOG10L$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOG1P$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOG1PF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOG1PL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOG2$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOG2F$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOG2L$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOGB$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOGBF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOGBL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MODF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MODFF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MODFL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_NAN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_REMAINDER$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_REMAINDERF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_REMAINDERL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_RINTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ROUND$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ROUNDF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ROUNDL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SIGNBIT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SIGNBIT_USING_BUILTINS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SINF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SINHF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SQRTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SQRTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_TANF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_TANHF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_TRUNC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_TRUNCF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_TRUNCL$])
m4trace:configure.ac:1088: -1- gl_CHECK_FREXP_NO_LIBM
m4trace:configure.ac:1088: -1- gl_FUNC_FREXP_WORKS
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_ALARM$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FREXP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FREXP_LIBM$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([frexp.c])
m4trace:configure.ac:1088: -1- gl_MATH_MODULE_INDICATOR([frexp])
m4trace:configure.ac:1088: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACOSF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ACOSF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACOSL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ACOSL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ASINF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ASINF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ASINL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ASINL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATANF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ATANF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATANL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ATANL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATAN2F])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ATAN2F$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CBRT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CBRTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CBRTL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CBRTL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEIL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CEIL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEILF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CEILF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CEILL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CEILL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_COPYSIGN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGNF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_COPYSIGNF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPYSIGNL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_COPYSIGNL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_COSF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_COSL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COSHF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_COSHF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXPF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXPL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXP2$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2F])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXP2F$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXP2L])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXP2L$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXPM1$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1F])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXPM1F$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPM1L])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXPM1L$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FABSF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FABSF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FABSL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FABSL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOOR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FLOOR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOORF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FLOORF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FLOORL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FLOORL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMA])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FMA$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMAF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FMAF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMAL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FMAL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMOD])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FMOD$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMODF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FMODF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FMODL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FMODL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXPF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FREXPF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FREXP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREXPL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FREXPL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_HYPOT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_HYPOTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_HYPOTL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_HYPOTL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGB])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ILOGB$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGBF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ILOGBF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ILOGBL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ILOGBL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISFINITE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ISFINITE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISINF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ISINF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNAN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ISNAN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNANF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ISNANF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNAND])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ISNAND$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISNANL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ISNANL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LDEXPF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LDEXPF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LDEXPL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LDEXPL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOG$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOGF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOGL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOG10$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10F])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOG10F$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG10L])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOG10L$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1P])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOG1P$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1PF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOG1PF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG1PL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOG1PL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOG2$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2F])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOG2F$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOG2L])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOG2L$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGB])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOGB$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGBF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOGBF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOGBL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOGBL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MODF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODFF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MODFF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MODFL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MODFL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POWF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_POWF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDER])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_REMAINDER$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDERF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_REMAINDERF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMAINDERL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_REMAINDERL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RINT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RINTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RINTL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RINTL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUND])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ROUND$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUNDF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ROUNDF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ROUNDL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ROUNDL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNBIT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SIGNBIT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SINF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SINL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SINHF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SINHF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SQRTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SQRTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SQRTL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SQRTL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TANF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TANL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TANHF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TANHF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNC])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TRUNC$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TRUNCF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TRUNCL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_J0], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_J0$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_J1], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_J1$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_JN], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_JN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_Y0], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_Y0$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_Y1], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_Y1$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_YN], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_YN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([frexp])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[frexp]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([frexp])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FREXP$])
m4trace:configure.ac:1088: -1- gl_FUNC_FREXPF
m4trace:configure.ac:1088: -1- gl_MATHFUNC([frexpf], [float], [(float, int *)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FREXPF_LIBM$])
m4trace:configure.ac:1088: -1- gl_FUNC_FREXPF_WORKS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FREXPF_LIBM$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([frexpf.c])
m4trace:configure.ac:1088: -1- gl_MATH_MODULE_INDICATOR([frexpf])
m4trace:configure.ac:1088: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([frexpf])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[frexpf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([frexpf])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FREXPF$])
m4trace:configure.ac:1088: -1- gl_FUNC_FSEEK
m4trace:configure.ac:1088: -1- gl_STDIO_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FCLOSEALL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FPURGE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FSEEKO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FTELLO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GETDELIM$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GETLINE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_OBSTACK_PRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_SNPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_VSNPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FSEEKO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FTELLO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PCLOSE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_POPEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_RENAMEAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_VASPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_VDPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_DPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FCLOSE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FDOPEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FFLUSH$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FOPEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FPURGE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FREOPEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FSEEK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FSEEKO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FTELL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FTELLO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GETDELIM$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GETLINE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_OBSTACK_PRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_PERROR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_POPEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_PRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_REMOVE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_RENAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_RENAMEAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SNPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STDIO_READ_FUNCS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STDIO_WRITE_FUNCS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_TMPFILE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_VASPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_VDPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_VFPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_VPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_VSNPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_VSPRINTF$])
m4trace:configure.ac:1088: -1- gl_FUNC_FSEEKO
m4trace:configure.ac:1088: -1- gl_STDIN_LARGE_OFFSET
m4trace:configure.ac:1088: -1- gl_SYS_TYPES_H
m4trace:configure.ac:1088: -1- gl_SYS_TYPES_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^_USE_STD_STAT$])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS([sys/types.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([sys/types.h], [assume])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([sys/types.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_SYS_TYPES_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H$])
m4trace:configure.ac:1088: -1- gl_TYPE_OFF_T
m4trace:configure.ac:1088: -1- gl_LARGEFILE
m4trace:configure.ac:1088: -1- m4_pattern_allow([^WINDOWS_64_BIT_OFF_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^WINDOWS_STAT_INODES$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_fseeko], [_AC_CHECK_DECLS([fseeko])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FSEEKO$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([fseek.c])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([fseek])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DPRINTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_DPRINTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCLOSE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FCLOSE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPEN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FDOPEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFLUSH])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FFLUSH$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETC])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FGETC$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FGETS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FOPEN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FOPEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FPRINTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FPRINTF_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPURGE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FPURGE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTC])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FPUTC$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FPUTS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREAD])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FREAD$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREOPEN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FREOPEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSCANF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FSCANF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FSEEK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEKO])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FSEEKO$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FTELL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELLO])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FTELLO$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FWRITE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FWRITE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETC])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETC$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCHAR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETCHAR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDELIM])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETDELIM$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLINE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETLINE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_OBSTACK_PRINTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_OBSTACK_PRINTF_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PCLOSE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PCLOSE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PERROR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PERROR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POPEN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_POPEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PRINTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PRINTF_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTC])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PUTC$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTCHAR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PUTCHAR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PUTS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMOVE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_REMOVE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RENAME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAMEAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RENAMEAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SCANF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SNPRINTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SNPRINTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SPRINTF_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SPRINTF_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_NONBLOCKING])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STDIO_H_NONBLOCKING$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_SIGPIPE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STDIO_H_SIGPIPE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TMPFILE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TMPFILE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VASPRINTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_VASPRINTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFSCANF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_VFSCANF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSCANF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_VSCANF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VDPRINTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_VDPRINTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_VFPRINTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_VFPRINTF_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_VPRINTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_VPRINTF_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSNPRINTF])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_VSNPRINTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSPRINTF_POSIX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_VSPRINTF_POSIX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCLOSEALL], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_FCLOSEALL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FDOPEN], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_FDOPEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FILENO], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_FILENO$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETW], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_GETW$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTW], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_PUTW$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TEMPNAM], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_TEMPNAM$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fseek])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fseek]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fseek])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FSEEK$])
m4trace:configure.ac:1088: -1- gl_FUNC_FSEEKO
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_fseeko], [_AC_CHECK_DECLS([fseeko])])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([fseeko.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_FSEEKO
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE__FSEEKI64$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL__FSEEKI64$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([fseeko])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fseeko])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fseeko]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fseeko])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FSEEKO$])
m4trace:configure.ac:1088: -1- gl_FUNC_FSTAT
m4trace:configure.ac:1088: -1- gl_SYS_STAT_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FCHMODAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FSTATAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FUTIMENS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETUMASK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LCHMOD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LSTAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MKDIRAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MKFIFO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MKFIFOAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MKNOD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MKNODAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_UTIMENSAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FCHMODAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FSTAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FSTATAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FUTIMENS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LSTAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MKDIR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MKFIFO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MKFIFOAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MKNOD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MKNODAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_UTIMENSAT$])
m4trace:configure.ac:1088: -1- gl_TEST_FCHDIR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([fstat.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([stat-w32.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_FSTAT
m4trace:configure.ac:1088: -1- gl_SYS_STAT_H
m4trace:configure.ac:1088: -1- m4_pattern_allow([^STAT_MACROS_BROKEN$])
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([sys/stat.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([sys/stat.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_stat_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/stat.h ]AS_TR_SH([sys/stat.h]) AS_TR_CPP([HAVE_sys/stat.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([sys/stat.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_SYS_STAT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^WINDOWS_STAT_TIMESPEC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^WINDOWS_64_BIT_ST_SIZE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^nlink_t$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <sys/stat.h>
    ]], [fchmodat fstat fstatat futimens getumask lchmod lstat
    mkdirat mkfifo mkfifoat mknod mknodat stat utimensat])
m4trace:configure.ac:1088: -1- gl_PREREQ_STAT_W32
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SDKDDKVER_H$])
m4trace:configure.ac:1088: -1- gl_SYS_STAT_MODULE_INDICATOR([fstat])
m4trace:configure.ac:1088: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHMODAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FCHMODAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FSTAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTATAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FSTATAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FUTIMENS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FUTIMENS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUMASK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETUMASK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHMOD])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LCHMOD$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSTAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LSTAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MKDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIRAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MKDIRAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFO])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MKFIFO$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFOAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MKFIFOAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNOD])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MKNOD$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNODAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MKNODAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UTIMENSAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_UTIMENSAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OVERRIDES_STRUCT_STAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_OVERRIDES_STRUCT_STAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHMOD], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_CHMOD$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKDIR], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_MKDIR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UMASK], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_UMASK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fstat])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fstat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fstat])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FSTAT$])
m4trace:configure.ac:1088: -1- gl_FUNC_FSTATAT
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fstatat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fstatat ]AS_TR_CPP([HAVE_fstatat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WORKING_FSTATAT_ZERO_FLAG$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([fstatat.c])
m4trace:configure.ac:1088: -1- gl_SYS_STAT_MODULE_INDICATOR([fstatat])
m4trace:configure.ac:1088: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fstatat])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fstatat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fstatat])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FSTATAT$])
m4trace:configure.ac:1088: -1- gl_FUNC_FTELL
m4trace:configure.ac:1088: -1- gl_FUNC_FTELLO
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_ftello], [_AC_CHECK_DECLS([ftello])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FTELLO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FTELLO_BROKEN_AFTER_SWITCHING_FROM_READ_TO_WRITE$])
m4trace:configure.ac:1088: -1- gl_FUNC_UNGETC_WORKS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FUNC_UNGETC_BROKEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FTELLO_BROKEN_AFTER_UNGETC$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([ftell.c])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([ftell])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([ftell])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[ftell]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([ftell])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FTELL$])
m4trace:configure.ac:1088: -1- gl_FUNC_FTELLO
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_ftello], [_AC_CHECK_DECLS([ftello])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FTELLO_BROKEN_AFTER_SWITCHING_FROM_READ_TO_WRITE$])
m4trace:configure.ac:1088: -1- gl_FUNC_UNGETC_WORKS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FTELLO_BROKEN_AFTER_UNGETC$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([ftello.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_FTELLO
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE__FTELLI64$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([ftello])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([ftello])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[ftello]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([ftello])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FTELLO$])
m4trace:configure.ac:1088: -1- gl_FUNC_FTRUNCATE
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_ftruncate], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" ftruncate ]AS_TR_CPP([HAVE_ftruncate])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([ftruncate.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_FTRUNCATE
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE__CHSIZE$])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([ftruncate])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([ftruncate])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[ftruncate]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([ftruncate])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FTRUNCATE$])
m4trace:configure.ac:1088: -1- gl_FUNC_GETCWD
m4trace:configure.ac:1088: -1- gl_FUNC_GETCWD_NULL
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- gl_FUNC_GETCWD_SIGNATURE
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- gl_FUNC_GETCWD_PATH_MAX
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_getcwd], [_AC_CHECK_DECLS([getcwd])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GETCWD$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_PATHMAX_SNIPPET
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- gl_FUNC_GETCWD_ABORT_BUG([gl_abort_bug=yes])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_getcwd], [_AC_CHECK_DECLS([getcwd])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_CHECK_FUNC_GETPAGESIZE
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETPAGESIZE$])
m4trace:configure.ac:1088: -1- gl_PATHMAX_SNIPPET
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MINIMALLY_WORKING_GETCWD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PARTLY_WORKING_GETCWD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETCWD_SHORTER$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([getcwd.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_GETCWD
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([getcwd])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_GETCWD$])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([getcwd])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getcwd])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getcwd]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([getcwd])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_GETCWD$])
m4trace:configure.ac:1088: -1- gl_FUNC_GETCWD_LGPL
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([getcwd-lgpl.c])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([getcwd])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getcwd])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getcwd]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([getcwd])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_GETCWD$])
m4trace:configure.ac:1088: -1- gl_FUNC_GETDTABLESIZE
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_getdtablesize], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" getdtablesize ]AS_TR_CPP([HAVE_getdtablesize])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_getdtablesize], [_AC_CHECK_DECLS([getdtablesize])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GETDTABLESIZE$])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([getdtablesize.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_GETDTABLESIZE
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([getdtablesize])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getdtablesize])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getdtablesize]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([getdtablesize])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_GETDTABLESIZE$])
m4trace:configure.ac:1088: -1- gl_FUNC_GETHOSTNAME
m4trace:configure.ac:1088: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETHOSTNAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GETHOSTNAME_LIB$])
m4trace:configure.ac:1088: -1- gl_PREREQ_HOST_NAME_MAX
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/param.h ]AS_TR_SH([sys/param.h]) AS_TR_CPP([HAVE_sys/param.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_netdb_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" netdb.h ]AS_TR_SH([netdb.h]) AS_TR_CPP([HAVE_netdb.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HOST_NAME_MAX$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([gethostname.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_GETHOSTNAME
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_UNAME$])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([gethostname])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([gethostname])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[gethostname]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([gethostname])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_GETHOSTNAME$])
m4trace:configure.ac:1088: -1- gl_FUNC_GETLOGIN_R
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_getlogin_r], [_AC_CHECK_DECLS([getlogin_r])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN_R$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_getlogin_r], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" getlogin_r ]AS_TR_CPP([HAVE_getlogin_r])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([getlogin_r.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_GETLOGIN_R
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_getlogin], [_AC_CHECK_DECLS([getlogin])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN$])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([getlogin_r])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getlogin_r])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getlogin_r]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([getlogin_r])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_GETLOGIN_R$])
m4trace:configure.ac:1088: -1- gl_LIB_GETLOGIN
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_GETLOGIN$])
m4trace:configure.ac:1088: -1- gl_FUNC_GETOPT_GNU
m4trace:configure.ac:1088: -1- gl_FUNC_GETOPT_POSIX
m4trace:configure.ac:1088: -1- gl_GETOPT_CHECK_HEADERS
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([getopt.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([getopt.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_getopt_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" getopt.h ]AS_TR_SH([getopt.h]) AS_TR_CPP([HAVE_getopt.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([getopt.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_GETOPT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_GETOPT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETOPT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETOPT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETOPT_LONG_ONLY$])
m4trace:configure.ac:1088: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2981: AC_RUN_IFELSE is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
m4/getopt.m4:48: gl_GETOPT_CHECK_HEADERS is expanded from...
m4/getopt.m4:8: gl_FUNC_GETOPT_POSIX is expanded from...
m4/gnulib-comp.m4:365: gl_INIT is expanded from...
configure.ac:1088: the top level])
m4trace:configure.ac:1088: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2981: AC_RUN_IFELSE is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
m4/getopt.m4:48: gl_GETOPT_CHECK_HEADERS is expanded from...
m4/getopt.m4:8: gl_FUNC_GETOPT_POSIX is expanded from...
m4/gnulib-comp.m4:365: gl_INIT is expanded from...
configure.ac:1088: the top level])
m4trace:configure.ac:1088: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2981: AC_RUN_IFELSE is expanded from...
lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
m4/getopt.m4:48: gl_GETOPT_CHECK_HEADERS is expanded from...
m4/getopt.m4:8: gl_FUNC_GETOPT_POSIX is expanded from...
m4/gnulib-comp.m4:365: gl_INIT is expanded from...
configure.ac:1088: the top level])
m4trace:configure.ac:1088: -1- GL_NOCRASH
m4trace:configure.ac:1088: -1- gl_GETOPT_SUBSTITUTE_HEADER
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_cdefs_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/cdefs.h ]AS_TR_SH([sys/cdefs.h]) AS_TR_CPP([HAVE_sys/cdefs.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_CDEFS_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^__GETOPT_PREFIX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GETOPT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GETOPT_CDEFS_H$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([getopt.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([getopt1.c])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_GETOPT$])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([getopt-posix])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getopt-posix])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getopt-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([getopt-posix])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_GETOPT_POSIX$])
m4trace:configure.ac:1088: -1- gl_FUNC_GETPROGNAME
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_getprogname], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" getprogname ]AS_TR_CPP([HAVE_getprogname])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_getexecname], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" getexecname ]AS_TR_CPP([HAVE_getexecname])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_NAME$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL___ARGV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_VAR___PROGNAME$])
m4trace:configure.ac:1088: -1- gl_FUNC_GETRANDOM
m4trace:configure.ac:1088: -1- gl_SYS_RANDOM_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETRANDOM$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GETRANDOM$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_getrandom], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" getrandom ]AS_TR_CPP([HAVE_getrandom])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_BCRYPT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LIB_BCRYPT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_GETRANDOM$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([getrandom.c])
m4trace:configure.ac:1088: -1- gl_SYS_RANDOM_MODULE_INDICATOR([getrandom])
m4trace:configure.ac:1088: -1- gl_SYS_RANDOM_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETRANDOM])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETRANDOM$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getrandom])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getrandom]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([getrandom])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_GETRANDOM$])
m4trace:configure.ac:1088: -1- gl_FUNC_GETRUSAGE
m4trace:configure.ac:1088: -1- gl_SYS_RESOURCE_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETRUSAGE$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_getrusage], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" getrusage ]AS_TR_CPP([HAVE_getrusage])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([getrusage.c])
m4trace:configure.ac:1088: -1- gl_SYS_RESOURCE_MODULE_INDICATOR([getrusage])
m4trace:configure.ac:1088: -1- gl_SYS_RESOURCE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETRUSAGE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETRUSAGE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getrusage])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getrusage]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([getrusage])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_GETRUSAGE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBINTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LTLIBINTL$])
m4trace:configure.ac:1088: -1- gl_FUNC_GETTIMEOFDAY
m4trace:configure.ac:1088: -1- gl_SYS_TIME_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETTIMEOFDAY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_TIMEVAL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_TIME_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GETTIMEOFDAY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRUCT_TIMEVAL$])
m4trace:configure.ac:1088: -1- gl_SYS_TIME_H
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([sys/time.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([sys/time.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([sys/time.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_SYS_TIME_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_TIME_H$])
m4trace:configure.ac:1088: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <time.h>
    ]], [gettimeofday])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_gettimeofday], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" gettimeofday ]AS_TR_CPP([HAVE_gettimeofday])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GETTIMEOFDAY_TIMEZONE$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([gettimeofday.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_GETTIMEOFDAY
m4trace:configure.ac:1088: -1- gl_SYS_TIME_MODULE_INDICATOR([gettimeofday])
m4trace:configure.ac:1088: -1- gl_SYS_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETTIMEOFDAY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETTIMEOFDAY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([gettimeofday])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[gettimeofday]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([gettimeofday])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_GETTIMEOFDAY$])
m4trace:configure.ac:1088: -1- gl_GLOB
m4trace:configure.ac:1088: -1- gl_GLOB_H
m4trace:configure.ac:1088: -1- gl_GLOB_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GLOB$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GLOB_PATTERN_P$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GLOB$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GLOB_PATTERN_P$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_glob_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" glob.h ]AS_TR_SH([glob.h]) AS_TR_CPP([HAVE_glob.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([glob.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([glob.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_glob_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" glob.h ]AS_TR_SH([glob.h]) AS_TR_CPP([HAVE_glob.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([glob.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_GLOB_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_GLOB_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GLOB_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GLOB_H$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_GLOB_H], [test -n "$GLOB_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_GLOB_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_GLOB_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_GLOB_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_GLOB_H_FALSE])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <glob.h>
    ]], [glob globfree glob_pattern_p])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_glob], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" glob ]AS_TR_CPP([HAVE_glob])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_glob_pattern_p], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" glob_pattern_p ]AS_TR_CPP([HAVE_glob_pattern_p])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_REPLACE_GLOB_H
m4trace:configure.ac:1088: -1- gl_GLOB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GLOB])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GLOB$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_GLOB_H], [test -n "$GLOB_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_GLOB_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_GLOB_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_GLOB_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_GLOB_H_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([glob.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([globfree.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_GLOB
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_getlogin_r], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" getlogin_r ]AS_TR_CPP([HAVE_getlogin_r])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_getpwnam_r], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" getpwnam_r ]AS_TR_CPP([HAVE_getpwnam_r])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([glob_pattern_p.c])
m4trace:configure.ac:1088: -1- gl_GLOB_MODULE_INDICATOR([glob])
m4trace:configure.ac:1088: -1- gl_GLOB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([glob])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[glob]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([glob])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_GLOB$])
m4trace:configure.ac:1088: -1- gl_GLOB_H
m4trace:configure.ac:1088: -1- gl_GLOB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_FUNC_SETLOCALE_NULL
m4trace:configure.ac:1088: -1- gl_PTHREADLIB
m4trace:configure.ac:1088: -1- gl_PTHREADLIB_BODY
m4trace:configure.ac:1088: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBPTHREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBPMULTITHREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PTHREAD_API$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_SCHED_YIELD$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" threads.h ]AS_TR_SH([threads.h]) AS_TR_CPP([HAVE_threads.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^SETLOCALE_NULL_ALL_MTSAFE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^SETLOCALE_NULL_ONE_MTSAFE$])
m4trace:configure.ac:1088: -1- gl_WEAK_SYMBOLS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WEAK_SYMBOLS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_SETLOCALE_NULL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_HARD_LOCALE$])
m4trace:configure.ac:1088: -1- AC_DEFUN([gl_HAVE_MODULE_HAVELIB])
m4trace:configure.ac:1088: -1- AM_ICONV
m4trace:configure.ac:1088: -1- AM_ICONV_LINK
m4trace:configure.ac:1088: -1- AM_ICONV_LINKFLAGS_BODY
m4trace:configure.ac:1088: -1- AC_LIB_PREPARE_PREFIX
m4trace:configure.ac:1088: -1- AC_LIB_RPATH
m4trace:configure.ac:1088: -1- AC_LIB_PROG_LD
m4trace:configure.ac:1088: -1- AC_LIB_PROG_LD_GNU
m4trace:configure.ac:1088: -1- AC_LIB_LINKFLAGS_BODY([iconv])
m4trace:configure.ac:1088: -1- AC_LIB_PREPARE_MULTILIB
m4trace:configure.ac:1088: -1- gl_HOST_CPU_C_ABI_32BIT
m4trace:configure.ac:1088: -1- AC_LIB_WITH_FINAL_PREFIX([
    eval additional_includedir=\"$includedir\"
    eval additional_libdir=\"$libdir\"
    eval additional_libdir2=\"$exec_prefix/$acl_libdirstem2\"
    eval additional_libdir3=\"$exec_prefix/$acl_libdirstem3\"
  ])
m4trace:configure.ac:1088: -1- AC_LIB_WITH_FINAL_PREFIX([
          eval additional_includedir=\"$includedir\"
          eval additional_libdir=\"$libdir\"
          eval additional_libdir2=\"$exec_prefix/$acl_libdirstem2\"
          eval additional_libdir3=\"$exec_prefix/$acl_libdirstem3\"
        ])
m4trace:configure.ac:1088: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:1088: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:1088: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:1088: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:1088: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:1088: -1- AC_LIB_APPENDTOVAR([CPPFLAGS], [$INCICONV])
m4trace:configure.ac:1088: -1- AC_LIB_WITH_FINAL_PREFIX([eval x=\"$x\"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ICONV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBICONV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LTLIBICONV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^ICONV_CONST$])
m4trace:configure.ac:1088: -1- gl_ICONV_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^ICONV_CONST$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ICONV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ICONV_OPEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ICONV_UTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^ICONV_H$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_ICONV_H], [test -n "$ICONV_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_ICONV_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_ICONV_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ICONV_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ICONV_H_FALSE])
m4trace:configure.ac:1088: -1- gl_ICONV_MODULE_INDICATOR([iconv])
m4trace:configure.ac:1088: -1- gl_ICONV_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ICONV])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ICONV$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([iconv])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[iconv]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_ICONV_H
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([iconv.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([iconv.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_iconv_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" iconv.h ]AS_TR_SH([iconv.h]) AS_TR_CPP([HAVE_iconv.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([iconv.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_ICONV_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_ICONV_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <iconv.h>
    ]], [iconv iconv_open])
m4trace:configure.ac:1088: -1- gl_ICONV_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_FUNC_ICONV_OPEN
m4trace:configure.ac:1088: -1- gl_REPLACE_ICONV_H
m4trace:configure.ac:1088: -1- gl_ICONV_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_ICONV_H], [test -n "$ICONV_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_ICONV_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_ICONV_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ICONV_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ICONV_H_FALSE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^ICONV_FLAVOR$])
m4trace:configure.ac:1088: -1- gl_REPLACE_ICONV_OPEN
m4trace:configure.ac:1088: -1- gl_REPLACE_ICONV_H
m4trace:configure.ac:1088: -1- gl_ICONV_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_ICONV_H], [test -n "$ICONV_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_ICONV_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_ICONV_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ICONV_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ICONV_H_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([iconv_open.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([iconv.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([iconv_close.c])
m4trace:configure.ac:1088: -1- gl_INLINE
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_INLINE$])
m4trace:configure.ac:1088: -1- gl_INTTYPES_INCOMPLETE
m4trace:configure.ac:1088: -1- gl_STDINT_H
m4trace:configure.ac:1088: -1- gl_LIMITS_H
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([limits.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([limits.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_limits_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" limits.h ]AS_TR_SH([limits.h]) AS_TR_CPP([HAVE_limits.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([limits.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_LIMITS_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_LIMITS_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIMITS_H$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [test -n "$LIMITS_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:1088: -1- gt_TYPE_WINT_T
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINT_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIBHEADERS_OVERRIDE_WINT_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LONG_LONG_INT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_UNSIGNED_LONG_LONG_INT$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" wchar.h ]AS_TR_SH([wchar.h]) AS_TR_CPP([HAVE_wchar.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_INTTYPES_H$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_types_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/types.h ]AS_TR_SH([sys/types.h]) AS_TR_CPP([HAVE_sys/types.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_TYPES_H$])
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([stdint.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([stdint.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_stdint_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdint.h ]AS_TR_SH([stdint.h]) AS_TR_CPP([HAVE_stdint.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([stdint.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_STDINT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDINT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:1088: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:1088: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:1088: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^__STDC_CONSTANT_MACROS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^__STDC_LIMIT_MACROS$])
m4trace:configure.ac:1088: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_INTTYPES_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_BITYPES_H$])
m4trace:configure.ac:1088: -1- gl_STDINT_TYPE_PROPERTIES
m4trace:configure.ac:1088: -1- gl_MULTIARCH
m4trace:configure.ac:1088: -1- m4_pattern_allow([^APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:1088: -1- gl_STDINT_BITSIZEOF([ptrdiff_t size_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:1088: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^BITSIZEOF_PTRDIFF_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^BITSIZEOF_SIZE_T$])
m4trace:configure.ac:1088: -1- gl_STDINT_BITSIZEOF([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:1088: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^BITSIZEOF_SIG_ATOMIC_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^BITSIZEOF_WCHAR_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^BITSIZEOF_WINT_T$])
m4trace:configure.ac:1088: -1- gl_CHECK_TYPES_SIGNED([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:1088: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SIGNED_SIG_ATOMIC_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SIGNED_WCHAR_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SIGNED_WINT_T$])
m4trace:configure.ac:1088: -1- gl_INTEGER_TYPE_SUFFIX([ptrdiff_t size_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:1088: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^PTRDIFF_T_SUFFIX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^SIZE_T_SUFFIX$])
m4trace:configure.ac:1088: -1- gl_INTEGER_TYPE_SUFFIX([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:1088: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^SIG_ATOMIC_T_SUFFIX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^WCHAR_T_SUFFIX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^WINT_T_SUFFIX$])
m4trace:configure.ac:1088: -1- gl_REPLACE_LIMITS_H
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [test -n "$LIMITS_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_C99_STDINT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_BITYPES_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_INTTYPES_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^STDINT_H$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_STDINT_H], [test -n "$STDINT_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_STDINT_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_STDINT_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDINT_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDINT_H_FALSE])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_INTTYPES_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_IMAXABS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_IMAXDIV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRTOIMAX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRTOUMAX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_IMAXDIV_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRTOIMAX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRTOUMAX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^INT32_MAX_LT_INTMAX_MAX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^INT64_MAX_EQ_LONG_MAX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^PRIPTR_PREFIX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^UINT32_MAX_LT_UINTMAX_MAX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^UINT64_MAX_EQ_ULONG_MAX$])
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([inttypes.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([inttypes.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([inttypes.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_INTTYPES_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_INTTYPES_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <inttypes.h>
    ]], [imaxabs imaxdiv strtoimax strtoumax])
m4trace:configure.ac:1088: -1- gl_INTTYPES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXABS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_IMAXABS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXDIV])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_IMAXDIV$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOIMAX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRTOIMAX$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUMAX])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRTOUMAX$])
m4trace:configure.ac:1088: -1- gl_FUNC_ISATTY
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([isatty.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_ISATTY
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([isatty])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([isatty])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[isatty]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([isatty])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_ISATTY$])
m4trace:configure.ac:1088: -1- gl_FUNC_ISBLANK
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_isblank], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" isblank ]AS_TR_CPP([HAVE_isblank])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([isblank.c])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([isblank])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_ISBLANK$])
m4trace:configure.ac:1088: -1- gl_CTYPE_MODULE_INDICATOR([isblank])
m4trace:configure.ac:1088: -1- gl_CTYPE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([isblank])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[isblank]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_FUNC_ISNAND_NO_LIBM
m4trace:configure.ac:1088: -1- gl_HAVE_ISNAND_NO_LIBM
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ISNAND_IN_LIBC$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([isnand.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_ISNAND
m4trace:configure.ac:1088: -1- gl_DOUBLE_EXPONENT_LOCATION
m4trace:configure.ac:1088: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^DBL_EXPBIT0_WORD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^DBL_EXPBIT0_BIT$])
m4trace:configure.ac:1088: -1- gl_LANGINFO_H
m4trace:configure.ac:1088: -1- gl_LANGINFO_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_NL_LANGINFO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_NL_LANGINFO$])
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([langinfo.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([langinfo.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_langinfo_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" langinfo.h ]AS_TR_SH([langinfo.h]) AS_TR_CPP([HAVE_langinfo.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([langinfo.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_LANGINFO_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_LANGINFO_H$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_langinfo_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" langinfo.h ]AS_TR_SH([langinfo.h]) AS_TR_CPP([HAVE_langinfo.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LANGINFO_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LANGINFO_CODESET$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LANGINFO_T_FMT_AMPM$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LANGINFO_ALTMON$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LANGINFO_ERA$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LANGINFO_YESEXPR$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <langinfo.h>
    ]], [nl_langinfo])
m4trace:configure.ac:1088: -1- gl_LANGINFO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NL_LANGINFO])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_NL_LANGINFO$])
m4trace:configure.ac:1088: -1- gl_VISIBILITY
m4trace:configure.ac:1088: -1- m4_pattern_allow([^CFLAG_VISIBILITY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_VISIBILITY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_VISIBILITY$])
m4trace:configure.ac:1088: -1- gl___INLINE
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE___INLINE$])
m4trace:configure.ac:1088: -1- gl_LIMITS_H
m4trace:configure.ac:1088: -1- gl_FUNC_LINK
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_link], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" link ]AS_TR_CPP([HAVE_link])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([link.c])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([link])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([link])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[link]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([link])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_LINK$])
m4trace:configure.ac:1088: -1- gl_LOCALCHARSET
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LOCALCHARSET_TESTS_ENVIRONMENT$])
m4trace:configure.ac:1088: -1- gl_LOCALE_H
m4trace:configure.ac:1088: -1- gl_LOCALE_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_NEWLOCALE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DUPLOCALE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FREELOCALE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOCALECONV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SETLOCALE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_NEWLOCALE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_DUPLOCALE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FREELOCALE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRUCT_LCONV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LOCALENAME_ENHANCE_LOCALE_FUNCS$])
m4trace:configure.ac:1088: -1- gl_STDDEF_H
m4trace:configure.ac:1088: -1- gl_STDDEF_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_NULL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MAX_ALIGN_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCHAR_T$])
m4trace:configure.ac:1088: -1- gt_TYPE_WCHAR_T
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCHAR_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^STDDEF_H$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_STDDEF_H], [test -n "$STDDEF_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_STDDEF_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_STDDEF_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDDEF_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDDEF_H_FALSE])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS([stddef.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([stddef.h], [assume])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([stddef.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_STDDEF_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDDEF_H$])
m4trace:configure.ac:1088: -1- gl_LOCALE_T
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_xlocale_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" xlocale.h ]AS_TR_SH([xlocale.h]) AS_TR_CPP([HAVE_xlocale.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_XLOCALE_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^_LCONV_C99$])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS([locale.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([locale.h], [assume])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([locale.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_LOCALE_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_LOCALE_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <locale.h>
/* Some systems provide declarations in a non-standard header.  */
#if HAVE_XLOCALE_H
# include <xlocale.h>
#endif
    ]], [setlocale newlocale duplocale freelocale])
m4trace:configure.ac:1088: -1- gl_LOCALE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALECONV])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOCALECONV$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETLOCALE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SETLOCALE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETLOCALE_NULL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SETLOCALE_NULL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUPLOCALE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_DUPLOCALE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALENAME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOCALENAME$])
m4trace:configure.ac:1088: -1- gl_LOCALENAME
m4trace:configure.ac:1088: -1- gt_LC_MESSAGES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LC_MESSAGES$])
m4trace:configure.ac:1088: -1- gt_INTL_THREAD_LOCALE_NAME
m4trace:configure.ac:1088: -1- gt_FUNC_USELOCALE
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_uselocale], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" uselocale ]AS_TR_CPP([HAVE_uselocale])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_xlocale_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" xlocale.h ]AS_TR_SH([xlocale.h]) AS_TR_CPP([HAVE_xlocale.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WORKING_USELOCALE$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_xlocale_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" xlocale.h ]AS_TR_SH([xlocale.h]) AS_TR_CPP([HAVE_xlocale.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FAKE_LOCALES$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SOLARIS114_LOCALES$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GETLOCALENAME_L$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_NAMELESS_LOCALES$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_GOOD_USELOCALE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LOCALENAME_ENHANCE_LOCALE_FUNCS$])
m4trace:configure.ac:1088: -1- gt_INTL_MACOSX
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_CFPREFERENCESCOPYAPPVALUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_CFLOCALECOPYPREFERREDLANGUAGES$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^INTL_MACOSX_LIBS$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_langinfo_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" langinfo.h ]AS_TR_SH([langinfo.h]) AS_TR_CPP([HAVE_langinfo.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_newlocale], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" newlocale ]AS_TR_CPP([HAVE_newlocale])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_duplocale], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" duplocale ]AS_TR_CPP([HAVE_duplocale])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_freelocale], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" freelocale ]AS_TR_CPP([HAVE_freelocale])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LOCALE_MODULE_INDICATOR([localename])
m4trace:configure.ac:1088: -1- gl_LOCALE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([localename])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[localename]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([localename])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_LOCALENAME$])
m4trace:configure.ac:1088: -1- gl_LOCK
m4trace:configure.ac:1088: -1- gl_THREADLIB
m4trace:configure.ac:1088: -1- gl_THREADLIB_BODY
m4trace:configure.ac:1088: -1- gl_WEAK_SYMBOLS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WEAK_SYMBOLS$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" threads.h ]AS_TR_SH([threads.h]) AS_TR_CPP([HAVE_threads.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" threads.h ]AS_TR_SH([threads.h]) AS_TR_CPP([HAVE_threads.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_PTHREADLIB_BODY
m4trace:configure.ac:1088: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBPTHREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBPMULTITHREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PTHREAD_API$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_SCHED_YIELD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^USE_ISOC_AND_POSIX_THREADS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^USE_POSIX_THREADS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^USE_POSIX_THREADS_FROM_LIBC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^USE_POSIX_THREADS_WEAK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:1088: -1- gl_STDTHREADLIB_BODY
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" threads.h ]AS_TR_SH([threads.h]) AS_TR_CPP([HAVE_threads.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_PTHREADLIB_BODY
m4trace:configure.ac:1088: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBPTHREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBPMULTITHREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PTHREAD_API$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_SCHED_YIELD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_THRD_CREATE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBSTDTHREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^USE_ISOC_THREADS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^USE_WINDOWS_THREADS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBTHREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LTLIBTHREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBMULTITHREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LTLIBMULTITHREAD$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK$])
m4trace:configure.ac:1088: -1- gl_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_RECURSIVE$])
m4trace:configure.ac:1088: -1- gl_PREREQ_LOCK
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([lock])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_LOCK$])
m4trace:configure.ac:1088: -1- gl_FUNC_LSEEK
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LSEEK_PIPE_BROKEN$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([lseek.c])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([lseek])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([lseek])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[lseek]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([lseek])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_LSEEK$])
m4trace:configure.ac:1088: -1- gl_FUNC_LSTAT
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([lstat.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_LSTAT
m4trace:configure.ac:1088: -1- gl_SYS_STAT_MODULE_INDICATOR([lstat])
m4trace:configure.ac:1088: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([lstat])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[lstat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([lstat])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_LSTAT$])
m4trace:configure.ac:1088: -1- gl_FUNC_MALLOC_GNU
m4trace:configure.ac:1088: -1- _AC_FUNC_MALLOC_IF([], [REPLACE_MALLOC=1])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([malloc.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([malloc.c])
m4trace:configure.ac:1088: -1- gl_STDLIB_MODULE_INDICATOR([malloc-posix])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([malloc-posix])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[malloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([malloc-posix])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MALLOC_POSIX$])
m4trace:configure.ac:1088: -1- gl_MALLOCA
m4trace:configure.ac:1088: -1- gl_EEMALLOC
m4trace:configure.ac:1088: -1- _AC_FUNC_MALLOC_IF([gl_cv_func_malloc_0_nonnull=1], [gl_cv_func_malloc_0_nonnull=0])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^MALLOC_0_IS_NONNULL$])
m4trace:configure.ac:1088: -1- gl_MATH_H
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([math.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([math.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_math_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" math.h ]AS_TR_SH([math.h]) AS_TR_CPP([HAVE_math.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([math.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_MATH_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_MATH_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <math.h>]], [acosf acosl asinf asinl atanf atanl
     cbrt cbrtf cbrtl ceilf ceill copysign copysignf copysignl cosf cosl coshf
     expf expl exp2 exp2f exp2l expm1 expm1f expm1l
     fabsf fabsl floorf floorl fma fmaf fmal
     fmod fmodf fmodl frexpf frexpl hypotf hypotl
     ilogb ilogbf ilogbl
     ldexpf ldexpl
     log logf logl log10 log10f log10l log1p log1pf log1pl log2 log2f log2l
     logb logbf logbl
     modf modff modfl powf
     remainder remainderf remainderl
     rint rintf rintl round roundf roundl sinf sinl sinhf sqrtf sqrtl
     tanf tanl tanhf trunc truncf truncl])
m4trace:configure.ac:1088: -1- gl_MATH_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_FUNC_MBRTOWC
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" threads.h ]AS_TR_SH([threads.h]) AS_TR_CPP([HAVE_threads.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_MBSTATE_T_BROKEN
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mbsinit], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mbsinit ]AS_TR_CPP([HAVE_mbsinit])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mbrtowc], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mbrtowc ]AS_TR_CPP([HAVE_mbrtowc])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_MBRTOWC_INCOMPLETE_STATE
m4trace:configure.ac:1088: -1- gt_LOCALE_JA
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LOCALE_JA$])
m4trace:configure.ac:1088: -1- gt_LOCALE_FR_UTF8
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LOCALE_FR_UTF8$])
m4trace:configure.ac:1088: -1- gl_MBRTOWC_SANITYCHECK
m4trace:configure.ac:1088: -1- gt_LOCALE_ZH_CN
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LOCALE_ZH_CN$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mbrtowc], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mbrtowc ]AS_TR_CPP([HAVE_mbrtowc])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_MBRTOWC$])
m4trace:configure.ac:1088: -1- gl_MBRTOWC_NULL_ARG1
m4trace:configure.ac:1088: -1- gl_MBRTOWC_NULL_ARG2
m4trace:configure.ac:1088: -1- gl_MBRTOWC_RETVAL
m4trace:configure.ac:1088: -1- gl_MBRTOWC_NUL_RETVAL
m4trace:configure.ac:1088: -1- gl_MBRTOWC_STORES_INCOMPLETE
m4trace:configure.ac:1088: -1- gl_MBRTOWC_EMPTY_INPUT
m4trace:configure.ac:1088: -1- gl_MBRTOWC_C_LOCALE
m4trace:configure.ac:1088: -1- m4_pattern_allow([^MBRTOWC_NULL_ARG1_BUG$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^MBRTOWC_NULL_ARG2_BUG$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^MBRTOWC_RETVAL_BUG$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^MBRTOWC_NUL_RETVAL_BUG$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^MBRTOWC_STORES_INCOMPLETE_BUG$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^MBRTOWC_EMPTY_INPUT_BUG$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^MBRTOWC_IN_C_LOCALE_MAYBE_EILSEQ$])
m4trace:configure.ac:1088: -1- gl_WEAK_SYMBOLS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WEAK_SYMBOLS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_MBRTOWC$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mbrtowc.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([lc-charset-dispatch.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mbtowc-lock.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_MBTOWC_LOCK
m4trace:configure.ac:1088: -1- gl_VISIBILITY
m4trace:configure.ac:1088: -1- m4_pattern_allow([^CFLAG_VISIBILITY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_VISIBILITY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_VISIBILITY$])
m4trace:configure.ac:1088: -1- gl_PREREQ_MBRTOWC
m4trace:configure.ac:1088: -1- gl_WCHAR_MODULE_INDICATOR([mbrtowc])
m4trace:configure.ac:1088: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbrtowc])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbrtowc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbrtowc])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MBRTOWC$])
m4trace:configure.ac:1088: -1- gl_FUNC_MBSINIT
m4trace:configure.ac:1088: -1- gl_MBSTATE_T_BROKEN
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mbsinit], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mbsinit ]AS_TR_CPP([HAVE_mbsinit])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mbrtowc], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mbrtowc ]AS_TR_CPP([HAVE_mbrtowc])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_MBRTOWC_INCOMPLETE_STATE
m4trace:configure.ac:1088: -1- gl_MBRTOWC_SANITYCHECK
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mbsinit], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mbsinit ]AS_TR_CPP([HAVE_mbsinit])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_MBSINIT$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mbsinit.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_MBSINIT
m4trace:configure.ac:1088: -1- gl_WCHAR_MODULE_INDICATOR([mbsinit])
m4trace:configure.ac:1088: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbsinit])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbsinit]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbsinit])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MBSINIT$])
m4trace:configure.ac:1088: -1- gl_FUNC_MBSRTOWCS
m4trace:configure.ac:1088: -1- gl_MBSTATE_T_BROKEN
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mbsinit], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mbsinit ]AS_TR_CPP([HAVE_mbsinit])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mbrtowc], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mbrtowc ]AS_TR_CPP([HAVE_mbrtowc])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_MBRTOWC_INCOMPLETE_STATE
m4trace:configure.ac:1088: -1- gl_MBRTOWC_SANITYCHECK
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mbsrtowcs], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mbsrtowcs ]AS_TR_CPP([HAVE_mbsrtowcs])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_MBSRTOWCS$])
m4trace:configure.ac:1088: -1- gl_MBSRTOWCS_WORKS
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mbsrtowcs.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mbsrtowcs-state.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_MBSRTOWCS
m4trace:configure.ac:1088: -1- gl_WCHAR_MODULE_INDICATOR([mbsrtowcs])
m4trace:configure.ac:1088: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbsrtowcs])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbsrtowcs]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbsrtowcs])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MBSRTOWCS$])
m4trace:configure.ac:1088: -1- gl_FUNC_MBTOWC
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MBTOWC$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mbtowc.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_MBTOWC
m4trace:configure.ac:1088: -1- gl_STDLIB_MODULE_INDICATOR([mbtowc])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mbtowc])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mbtowc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([mbtowc])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MBTOWC$])
m4trace:configure.ac:1088: -1- gl_FUNC_MEMCHR
m4trace:configure.ac:1088: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:1088: -1- m4_pattern_allow([^MAP_ANONYMOUS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MAP_ANONYMOUS$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/mman.h ]AS_TR_SH([sys/mman.h]) AS_TR_CPP([HAVE_sys/mman.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mprotect ]AS_TR_CPP([HAVE_mprotect])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_STRING_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MBSLEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_EXPLICIT_BZERO$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FFSL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FFSLL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_MEMMEM$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MEMPCPY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_MEMRCHR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_RAWMEMCHR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STPCPY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STPNCPY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRCHRNUL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRDUP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRNDUP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRNLEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRPBRK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRSEP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRCASESTR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRTOK_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRERRORNAME_NP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SIGABBREV_NP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SIGDESCR_NP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRSIGNAL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRVERSCMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FFSLL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MEMCHR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MEMMEM$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STPNCPY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRCHRNUL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRDUP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRNCAT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRNDUP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRNLEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRSTR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRCASESTR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRTOK_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRERROR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRERROR_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRERRORNAME_NP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRSIGNAL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^UNDEFINE_STRTOK_R$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([memchr.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_MEMCHR
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_BP_SYM_H$])
m4trace:configure.ac:1088: -1- gl_STRING_MODULE_INDICATOR([memchr])
m4trace:configure.ac:1088: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPLICIT_BZERO])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_EXPLICIT_BZERO$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FFSL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSLL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FFSLL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMCHR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MEMCHR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMMEM])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MEMMEM$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMPCPY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MEMPCPY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMRCHR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MEMRCHR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAWMEMCHR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RAWMEMCHR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPCPY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STPCPY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPNCPY])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STPNCPY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCHRNUL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRCHRNUL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRDUP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRDUP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNCAT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRNCAT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNDUP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRNDUP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNLEN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRNLEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPBRK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRPBRK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSEP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRSEP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSTR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRSTR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCASESTR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRCASESTR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOK_R])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRTOK_R$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSLEN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSLEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNLEN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSNLEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCHR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSCHR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRCHR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSRCHR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSTR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSSTR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASECMP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSCASECMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNCASECMP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSNCASECMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPCASECMP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSPCASECMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASESTR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSCASESTR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCSPN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSCSPN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPBRK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSPBRK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSPN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSSPN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSEP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSSEP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSTOK_R])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MBSTOK_R$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRERROR$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR_R])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRERROR_R$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERRORNAME_NP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRERRORNAME_NP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGABBREV_NP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SIGABBREV_NP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGDESCR_NP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SIGDESCR_NP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSIGNAL])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRSIGNAL$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRVERSCMP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRVERSCMP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MEMCCPY], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_MEMCCPY$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_STRDUP], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_STRDUP$])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([memchr])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[memchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([memchr])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MEMCHR$])
m4trace:configure.ac:1088: -1- gl_FUNC_MEMPCPY
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MEMPCPY$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mempcpy.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_MEMPCPY
m4trace:configure.ac:1088: -1- gl_STRING_MODULE_INDICATOR([mempcpy])
m4trace:configure.ac:1088: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mempcpy])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mempcpy]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([mempcpy])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MEMPCPY$])
m4trace:configure.ac:1088: -1- gl_FUNC_MEMRCHR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_memrchr], [_AC_CHECK_DECLS([memrchr])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_MEMRCHR$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MEMRCHR$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([memrchr.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_MEMRCHR
m4trace:configure.ac:1088: -1- gl_STRING_MODULE_INDICATOR([memrchr])
m4trace:configure.ac:1088: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([memrchr])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[memrchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([memrchr])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MEMRCHR$])
m4trace:configure.ac:1088: -1- gl_MINMAX
m4trace:configure.ac:1088: -1- gl_PREREQ_MINMAX
m4trace:configure.ac:1088: -1- gl_MINMAX_IN_HEADER([limits.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MINMAX_IN_LIMITS_H$])
m4trace:configure.ac:1088: -1- gl_MINMAX_IN_HEADER([sys/param.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MINMAX_IN_SYS_PARAM_H$])
m4trace:configure.ac:1088: -1- gl_FUNC_MKDIR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^FUNC_MKDIR_DOT_BUG$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mkdir.c])
m4trace:configure.ac:1088: -1- gl_SYS_STAT_MODULE_INDICATOR([mkdir])
m4trace:configure.ac:1088: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mkdir])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mkdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([mkdir])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MKDIR$])
m4trace:configure.ac:1088: -1- gl_FUNC_MKFIFO
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MKFIFO$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^MKFIFO_TRAILING_SLASH_BUG$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mkfifo.c])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([mkfifo])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mkfifo])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mkfifo]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([mkfifo])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MKFIFO$])
m4trace:configure.ac:1088: -1- gl_FUNC_MKOSTEMP
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mkostemp], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mkostemp ]AS_TR_CPP([HAVE_mkostemp])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mkostemp.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_MKOSTEMP
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([mkostemp])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_MKOSTEMP$])
m4trace:configure.ac:1088: -1- gl_STDLIB_MODULE_INDICATOR([mkostemp])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mkostemp])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mkostemp]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([mkostemp])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MKOSTEMP$])
m4trace:configure.ac:1088: -1- gl_FUNC_MKOSTEMPS
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_mkostemps], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mkostemps ]AS_TR_CPP([HAVE_mkostemps])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mkostemps.c])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([mkostemps])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_MKOSTEMPS$])
m4trace:configure.ac:1088: -1- gl_STDLIB_MODULE_INDICATOR([mkostemps])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mkostemps])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mkostemps]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([mkostemps])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MKOSTEMPS$])
m4trace:configure.ac:1088: -1- gl_FUNC_MKTIME
m4trace:configure.ac:1088: -1- gl_TIME_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_LOCALTIME_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_NANOSLEEP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRPTIME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TIMEGM$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TIMESPEC_GET$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TIMEZONE_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_CTIME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOCALTIME_R$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_MKTIME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_NANOSLEEP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRFTIME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_TIMEGM$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_TZSET$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_GETTIMEOFDAY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_GMTIME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_LOCALTIME$])
m4trace:configure.ac:1088: -1- gl_FUNC_MKTIME_WORKS
m4trace:configure.ac:1088: -1- gl_TIME_T_IS_SIGNED
m4trace:configure.ac:1088: -1- m4_pattern_allow([^TIME_T_IS_SIGNED$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEED_MKTIME_WORKING$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEED_MKTIME_WINDOWS$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mktime.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_MKTIME
m4trace:configure.ac:1088: -1- gl_TIME_MODULE_INDICATOR([mktime])
m4trace:configure.ac:1088: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CTIME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CTIME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKTIME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MKTIME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALTIME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LOCALTIME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NANOSLEEP])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_NANOSLEEP$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRFTIME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRFTIME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPTIME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_STRPTIME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMEGM])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TIMEGM$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMESPEC_GET])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TIMESPEC_GET$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_R])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TIME_R$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_RZ])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TIME_RZ$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TZSET])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TZSET$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TZSET], [1])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_MDA_TZSET$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mktime])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mktime]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([mktime])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_MKTIME$])
m4trace:configure.ac:1088: -1- gl_FUNC_MKTIME_INTERNAL
m4trace:configure.ac:1088: -1- m4_pattern_allow([^mktime_internal$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEED_MKTIME_INTERNAL$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([mktime.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_MKTIME
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([msvc-inval.c])
m4trace:configure.ac:1088: -1- gl_MSVC_NOTHROW
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([msvc-nothrow.c])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([msvc-nothrow])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_MSVC_NOTHROW$])
m4trace:configure.ac:1088: -1- gl_MULTIARCH
m4trace:configure.ac:1088: -1- gl_FUNC_NANOSLEEP
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_FUNC_SELECT
m4trace:configure.ac:1088: -1- gl_SYS_SELECT_H
m4trace:configure.ac:1088: -1- gl_SYS_SELECT_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PSELECT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_PSELECT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_SELECT$])
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([sys/select.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([sys/select.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/select.h ]AS_TR_SH([sys/select.h]) AS_TR_CPP([HAVE_sys/select.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([sys/select.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_SYS_SELECT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_SELECT_H$])
m4trace:configure.ac:1088: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#if !(defined __GLIBC__ && !defined __UCLIBC__) && HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <sys/select.h>
    ]], [pselect select])
m4trace:configure.ac:1088: -1- gl_SOCKETS
m4trace:configure.ac:1088: -1- gl_SOCKETLIB
m4trace:configure.ac:1088: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^WINDOWS_SOCKETS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBSOCKET$])
m4trace:configure.ac:1088: -1- gl_PREREQ_SOCKETS
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/select.h ]AS_TR_SH([sys/select.h]) AS_TR_CPP([HAVE_sys/select.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_SELECT$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_NANOSLEEP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_BUG_BIG_NANOSLEEP$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([nanosleep.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_NANOSLEEP
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/select.h ]AS_TR_SH([sys/select.h]) AS_TR_CPP([HAVE_sys/select.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_PREREQ_SIG_HANDLER_H
m4trace:configure.ac:1088: -1- gl_TIME_MODULE_INDICATOR([nanosleep])
m4trace:configure.ac:1088: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([nanosleep])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[nanosleep]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([nanosleep])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_NANOSLEEP$])
m4trace:configure.ac:1088: -1- gl_NPROC
m4trace:configure.ac:1088: -1- gl_PREREQ_NPROC
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_PSTAT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_SYSMP_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_PARAM_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_SYSCTL_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SCHED_GETAFFINITY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SCHED_GETAFFINITY_NP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PSTAT_GETDYNAMIC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYSMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYSCTL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SCHED_GETAFFINITY_LIKE_GLIBC$])
m4trace:configure.ac:1088: -1- gl_FUNC_GNU_STRFTIME
m4trace:configure.ac:1088: -1- m4_pattern_allow([^TM_IN_SYS_TIME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_TM_TM_ZONE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TM_ZONE$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_TZNAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TZNAME$])
m4trace:configure.ac:1088: -1- gl_TM_GMTOFF
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TM_GMTOFF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^my_strftime$])
m4trace:configure.ac:1088: -1- gl_FUNC_OPEN
m4trace:configure.ac:1088: -1- gl_PREPROC_O_CLOEXEC
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_OPEN_TRAILING_SLASH_BUG
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^OPEN_TRAILING_SLASH_BUG$])
m4trace:configure.ac:1088: -1- gl_TEST_FCHDIR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([open.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_OPEN
m4trace:configure.ac:1088: -1- gl_PROMOTED_TYPE_MODE_T
m4trace:configure.ac:1088: -1- m4_pattern_allow([^PROMOTED_MODE_T$])
m4trace:configure.ac:1088: -1- gl_FCNTL_MODULE_INDICATOR([open])
m4trace:configure.ac:1088: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([open])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[open]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([open])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_OPEN$])
m4trace:configure.ac:1088: -1- gl_FUNC_OPENAT
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_openat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" openat ]AS_TR_CPP([HAVE_openat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([openat.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_OPENAT
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([openat])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_OPENAT$])
m4trace:configure.ac:1088: -1- gl_FCNTL_MODULE_INDICATOR([openat])
m4trace:configure.ac:1088: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([openat])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[openat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([openat])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_OPENAT$])
m4trace:configure.ac:1088: -1- gl_FUNC_OPENDIR
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_OPENDIR$])
m4trace:configure.ac:1088: -1- gl_TEST_FCHDIR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([opendir.c])
m4trace:configure.ac:1088: -1- gl_DIRENT_MODULE_INDICATOR([opendir])
m4trace:configure.ac:1088: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([opendir])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[opendir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([opendir])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_OPENDIR$])
m4trace:configure.ac:1088: -1- gl_PATHMAX
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/param.h ]AS_TR_SH([sys/param.h]) AS_TR_CPP([HAVE_sys/param.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_FUNC_PIPE
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_pipe], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" pipe ]AS_TR_CPP([HAVE_pipe])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([pipe.c])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([pipe])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pipe])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pipe]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([pipe])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_PIPE$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_NAME$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME$])
m4trace:configure.ac:1088: -1- gl_FUNC_PUTENV
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([putenv.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_PUTENV
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL__PUTENV$])
m4trace:configure.ac:1088: -1- gl_STDLIB_MODULE_INDICATOR([putenv])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putenv])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[putenv]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([putenv])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_PUTENV$])
m4trace:configure.ac:1088: -1- gl_FUNC_RAISE
m4trace:configure.ac:1088: -1- gl_SIGNAL_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_POSIX_SIGNALBLOCKING$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_PTHREAD_SIGMASK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_RAISE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SIGSET_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SIGINFO_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SIGACTION$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_SIGACTION_SA_SIGACTION$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TYPE_VOLATILE_SIG_ATOMIC_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SIGHANDLER_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_PTHREAD_SIGMASK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_RAISE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_RAISE$])
m4trace:configure.ac:1088: -1- gl_SIGNALBLOCKING
m4trace:configure.ac:1088: -1- gl_CHECK_TYPE_SIGSET_T
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SIGSET_T$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([raise.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_RAISE
m4trace:configure.ac:1088: -1- gl_SIGNAL_MODULE_INDICATOR([raise])
m4trace:configure.ac:1088: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SIGMASK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_SIGMASK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAISE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RAISE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNAL_H_SIGPIPE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SIGNAL_H_SIGPIPE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGPROCMASK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SIGPROCMASK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGACTION])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SIGACTION$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([raise])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[raise]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([raise])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_RAISE$])
m4trace:configure.ac:1088: -1- gl_FUNC_RAWMEMCHR
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_RAWMEMCHR$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([rawmemchr.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_RAWMEMCHR
m4trace:configure.ac:1088: -1- gl_STRING_MODULE_INDICATOR([rawmemchr])
m4trace:configure.ac:1088: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([rawmemchr])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[rawmemchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([rawmemchr])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_RAWMEMCHR$])
m4trace:configure.ac:1088: -1- gl_FUNC_READDIR
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_READDIR$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([readdir.c])
m4trace:configure.ac:1088: -1- gl_DIRENT_MODULE_INDICATOR([readdir])
m4trace:configure.ac:1088: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([readdir])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[readdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([readdir])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_READDIR$])
m4trace:configure.ac:1088: -1- gl_FUNC_READLINK
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_readlink], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" readlink ]AS_TR_CPP([HAVE_readlink])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^READLINK_TRAILING_SLASH_BUG$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^READLINK_TRUNCATE_BUG$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([readlink.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_READLINK
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([readlink])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([readlink])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[readlink]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([readlink])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_READLINK$])
m4trace:configure.ac:1088: -1- gl_FUNC_REALLOC_GNU
m4trace:configure.ac:1088: -1- gl_FUNC_REALLOC_POSIX
m4trace:configure.ac:1088: -1- _AC_FUNC_REALLOC_IF([], [REPLACE_REALLOC=1])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([realloc.c])
m4trace:configure.ac:1088: -1- gl_FUNC_REALLOC_POSIX
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([realloc.c])
m4trace:configure.ac:1088: -1- gl_STDLIB_MODULE_INDICATOR([realloc-posix])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([realloc-posix])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[realloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([realloc-posix])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_REALLOC_POSIX$])
m4trace:configure.ac:1088: -1- gl_FUNC_REALLOCARRAY
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_REALLOCARRAY$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([reallocarray.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_REALLOCARRAY
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([reallocarray])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_REALLOCARRAY$])
m4trace:configure.ac:1088: -1- gl_STDLIB_MODULE_INDICATOR([reallocarray])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([reallocarray])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[reallocarray]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([reallocarray])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_REALLOCARRAY$])
m4trace:configure.ac:1088: -1- gl_FUNC_REWINDDIR
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_REWINDDIR$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([rewinddir.c])
m4trace:configure.ac:1088: -1- gl_DIRENT_MODULE_INDICATOR([rewinddir])
m4trace:configure.ac:1088: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([rewinddir])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[rewinddir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([rewinddir])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_REWINDDIR$])
m4trace:configure.ac:1088: -1- gl_FUNC_RMDIR
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([rmdir.c])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([rmdir])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([rmdir])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[rmdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([rmdir])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_RMDIR$])
m4trace:configure.ac:1088: -1- gl_SAVE_CWD
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_FUNC_SELECT
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/select.h ]AS_TR_SH([sys/select.h]) AS_TR_CPP([HAVE_sys/select.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_SELECT$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([select.c])
m4trace:configure.ac:1088: -1- gl_SYS_SELECT_MODULE_INDICATOR([select])
m4trace:configure.ac:1088: -1- gl_SYS_SELECT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PSELECT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_PSELECT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SELECT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SELECT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([select])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[select]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([select])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_SELECT$])
m4trace:configure.ac:1088: -1- gl_FUNC_SETENV
m4trace:configure.ac:1088: -1- gl_FUNC_SETENV_SEPARATE
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_setenv], [_AC_CHECK_DECLS([setenv])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_SETENV$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_setenv], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" setenv ]AS_TR_CPP([HAVE_setenv])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_PREREQ_SETENV
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SEARCH_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TSEARCH$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([setenv.c])
m4trace:configure.ac:1088: -1- gl_STDLIB_MODULE_INDICATOR([setenv])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([setenv])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[setenv]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([setenv])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_SETENV$])
m4trace:configure.ac:1088: -1- gl_FUNC_SETLOCALE
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEED_SETLOCALE_IMPROVED$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEED_SETLOCALE_MTSAFE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_SETLOCALE$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([setlocale.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_SETLOCALE
m4trace:configure.ac:1088: -1- gl_LOCALE_MODULE_INDICATOR([setlocale])
m4trace:configure.ac:1088: -1- gl_LOCALE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([setlocale])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[setlocale]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([setlocale])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_SETLOCALE$])
m4trace:configure.ac:1088: -1- gl_FUNC_SETLOCALE_NULL
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" threads.h ]AS_TR_SH([threads.h]) AS_TR_CPP([HAVE_threads.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^SETLOCALE_NULL_ALL_MTSAFE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^SETLOCALE_NULL_ONE_MTSAFE$])
m4trace:configure.ac:1088: -1- gl_WEAK_SYMBOLS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WEAK_SYMBOLS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIB_SETLOCALE_NULL$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([setlocale-lock.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_SETLOCALE_LOCK
m4trace:configure.ac:1088: -1- gl_VISIBILITY
m4trace:configure.ac:1088: -1- m4_pattern_allow([^CFLAG_VISIBILITY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_VISIBILITY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_VISIBILITY$])
m4trace:configure.ac:1088: -1- gl_LOCALE_MODULE_INDICATOR([setlocale_null])
m4trace:configure.ac:1088: -1- gl_LOCALE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([setlocale_null])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[setlocale_null]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([setlocale_null])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_SETLOCALE_NULL$])
m4trace:configure.ac:1088: -1- gl_SIGACTION
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_sigaction], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" sigaction ]AS_TR_CPP([HAVE_sigaction])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_SIGACTION_SA_SIGACTION$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([sigaction.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_SIGACTION
m4trace:configure.ac:1088: -1- m4_pattern_allow([^uid_t$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^gid_t$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_sigaltstack], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" sigaltstack ]AS_TR_CPP([HAVE_sigaltstack])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_siginterrupt], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" siginterrupt ]AS_TR_CPP([HAVE_siginterrupt])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SIGINFO_T$])
m4trace:configure.ac:1088: -1- gl_SIGNAL_MODULE_INDICATOR([sigaction])
m4trace:configure.ac:1088: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([sigaction])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sigaction]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([sigaction])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_SIGACTION$])
m4trace:configure.ac:1088: -1- gl_SIGNAL_H
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS([signal.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([signal.h], [assume])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([signal.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_SIGNAL_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SIGNAL_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <signal.h>
    ]], [pthread_sigmask sigaction
    sigaddset sigdelset sigemptyset sigfillset sigismember
    sigpending sigprocmask])
m4trace:configure.ac:1088: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_SIGNALBLOCKING
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([sigprocmask.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_SIGPROCMASK
m4trace:configure.ac:1088: -1- gl_SIGNAL_MODULE_INDICATOR([sigprocmask])
m4trace:configure.ac:1088: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([sigprocmask])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sigprocmask]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([sigprocmask])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_SIGPROCMASK$])
m4trace:configure.ac:1088: -1- gl_SIZE_MAX
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^SIZE_MAX$])
m4trace:configure.ac:1088: -1- gl_FUNC_SNPRINTF
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SNPRINTF$])
m4trace:configure.ac:1088: -1- gl_SNPRINTF_SIZE1
m4trace:configure.ac:1088: -1- gl_SNPRINTF_PRESENCE
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_snprintf], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" snprintf ]AS_TR_CPP([HAVE_snprintf])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_SNPRINTF_RETVAL_C99
m4trace:configure.ac:1088: -1- gl_PRINTF_POSITIONS
m4trace:configure.ac:1088: -1- gl_REPLACE_SNPRINTF
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([snprintf.c])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_snprintf], [_AC_CHECK_DECLS([snprintf])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_SNPRINTF$])
m4trace:configure.ac:1088: -1- gl_PREREQ_SNPRINTF
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_snprintf], [_AC_CHECK_DECLS([snprintf])])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([snprintf])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([snprintf])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[snprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([snprintf])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_SNPRINTF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([snprintf])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_SNPRINTF$])
m4trace:configure.ac:1088: -1- gl_TYPE_SOCKLEN_T
m4trace:configure.ac:1088: -1- gl_CHECK_SOCKET_HEADERS
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WS2TCPIP_H$])
m4trace:configure.ac:1088: -1- gl_SOCKET_HEADERS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^socklen_t$])
m4trace:configure.ac:1088: -1- gt_TYPE_SSIZE_T
m4trace:configure.ac:1088: -1- m4_pattern_allow([^ssize_t$])
m4trace:configure.ac:1088: -1- gl_FUNC_STAT
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_FUNC_STAT_FILE$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([stat.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([stat-w32.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_STAT
m4trace:configure.ac:1088: -1- gl_SYS_STAT_MODULE_INDICATOR([stat])
m4trace:configure.ac:1088: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([stat])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[stat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([stat])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_STAT$])
m4trace:configure.ac:1088: -1- gl_STAT_TIME
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIMENSEC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC$])
m4trace:configure.ac:1088: -1- gl_STAT_BIRTHTIME
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIMENSEC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIM_TV_NSEC$])
m4trace:configure.ac:1088: -1- gl_STDALIGN_H
m4trace:configure.ac:1088: -1- m4_pattern_allow([^STDALIGN_H$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_STDALIGN_H], [test -n "$STDALIGN_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_STDALIGN_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_STDALIGN_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDALIGN_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDALIGN_H_FALSE])
m4trace:configure.ac:1088: -1- AM_STDBOOL_H
m4trace:configure.ac:1088: -1- AC_CHECK_HEADER_STDBOOL
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^STDBOOL_H$])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([GL_GENERATE_STDBOOL_H], [test -n "$STDBOOL_H"])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_STDBOOL_H_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GENERATE_STDBOOL_H_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDBOOL_H_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDBOOL_H_FALSE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:1088: -1- gl_STDDEF_H
m4trace:configure.ac:1088: -1- gl_STDDEF_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDINT_H
m4trace:configure.ac:1088: -1- gl_STDIO_H
m4trace:configure.ac:1088: -1- m4_pattern_allow([^__USE_MINGW_ANSI_STDIO$])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS([stdio.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([stdio.h], [assume])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([stdio.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_STDIO_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDIO_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <stdio.h>
    ]], [dprintf fpurge fseeko ftello getdelim getline gets pclose popen
    renameat snprintf tmpfile vdprintf vsnprintf])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_fcloseall], [_AC_CHECK_DECLS([fcloseall])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FCLOSEALL$])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([fscanf])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fscanf])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fscanf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fscanf])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FSCANF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([fscanf])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_FSCANF$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([scanf])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([scanf])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[scanf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([scanf])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_SCANF$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([scanf])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_SCANF$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([fgetc])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fgetc])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fgetc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fgetc])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FGETC$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([getc])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getc])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([getc])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_GETC$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([getchar])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getchar])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getchar]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([getchar])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_GETCHAR$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([fgets])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fgets])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fgets]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fgets])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FGETS$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([fread])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fread])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fread]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fread])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FREAD$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([fprintf])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fprintf])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fprintf])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FPRINTF$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([printf])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([printf])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[printf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([printf])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_PRINTF$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([vfprintf])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vfprintf])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vfprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([vfprintf])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_VFPRINTF$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([vprintf])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vprintf])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([vprintf])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_VPRINTF$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([fputc])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fputc])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fputc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fputc])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FPUTC$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([putc])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putc])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[putc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([putc])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_PUTC$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([putchar])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putchar])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[putchar]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([putchar])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_PUTCHAR$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([fputs])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fputs])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fputs]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fputs])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FPUTS$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([puts])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([puts])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[puts]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([puts])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_PUTS$])
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([fwrite])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fwrite])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fwrite]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([fwrite])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_FWRITE$])
m4trace:configure.ac:1088: -1- gl_STDLIB_H
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS([stdlib.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([stdlib.h], [assume])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([stdlib.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_STDLIB_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDLIB_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <stdlib.h>
#if HAVE_SYS_LOADAVG_H
/* OpenIndiana has a bug: <sys/time.h> must be included before
   <sys/loadavg.h>.  */
# include <sys/time.h>
# include <sys/loadavg.h>
#endif
#if HAVE_RANDOM_H
# include <random.h>
#endif
    ]], [_Exit aligned_alloc atoll canonicalize_file_name free
    getloadavg getsubopt grantpt
    initstate initstate_r mbtowc mkdtemp mkostemp mkostemps mkstemp mkstemps
    posix_memalign posix_openpt ptsname ptsname_r qsort_r
    random random_r reallocarray realpath rpmatch secure_getenv setenv
    setstate setstate_r srandom srandom_r
    strtod strtol strtold strtoll strtoul strtoull unlockpt unsetenv])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_ecvt], [_AC_CHECK_DECLS([ecvt])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_ECVT$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_fcvt], [_AC_CHECK_DECLS([fcvt])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_FCVT$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_gcvt], [_AC_CHECK_DECLS([gcvt])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_GCVT$])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_FUNC_STPCPY
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STPCPY$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([stpcpy.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_STPCPY
m4trace:configure.ac:1088: -1- gl_STRING_MODULE_INDICATOR([stpcpy])
m4trace:configure.ac:1088: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([stpcpy])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[stpcpy]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([stpcpy])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_STPCPY$])
m4trace:configure.ac:1088: -1- gl_STRCASE
m4trace:configure.ac:1088: -1- gl_FUNC_STRCASECMP
m4trace:configure.ac:1088: -1- gl_STRINGS_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FFS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRCASECMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRNCASECMP$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRCASECMP$])
m4trace:configure.ac:1088: -1- gl_FUNC_STRNCASECMP
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRNCASECMP$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRNCASECMP$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([strcasecmp.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_STRCASECMP
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([strncasecmp.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_STRNCASECMP
m4trace:configure.ac:1088: -1- gl_FUNC_STRDUP_POSIX
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_strdup], [_AC_CHECK_DECLS([strdup])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRDUP$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([strdup.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_STRDUP
m4trace:configure.ac:1088: -1- gl_STRING_MODULE_INDICATOR([strdup])
m4trace:configure.ac:1088: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strdup])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strdup]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([strdup])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_STRDUP$])
m4trace:configure.ac:1088: -1- gl_FUNC_STRERROR
m4trace:configure.ac:1088: -1- gl_FUNC_STRERROR_0
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_STRERROR_0$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([strerror.c])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([strerror])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_STRERROR$])
m4trace:configure.ac:1088: -1- gl_STRING_MODULE_INDICATOR([strerror])
m4trace:configure.ac:1088: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strerror])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strerror]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([strerror])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_STRERROR$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([strerror-override.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- gl_STRING_H
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS([string.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([string.h], [assume])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([string.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_STRING_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STRING_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <string.h>
    ]], [ffsl ffsll memmem mempcpy memrchr rawmemchr stpcpy stpncpy strchrnul
     strdup strncat strndup strnlen strpbrk strsep strcasestr strtok_r
     strerror_r strerrorname_np sigabbrev_np sigdescr_np strsignal strverscmp])
m4trace:configure.ac:1088: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STRINGS_H
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([strings.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([strings.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_strings_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" strings.h ]AS_TR_SH([strings.h]) AS_TR_CPP([HAVE_strings.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([strings.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_STRINGS_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STRINGS_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRINGS_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[
    /* Minix 3.1.8 has a bug: <sys/types.h> must be included before
       <strings.h>.  */
    #include <sys/types.h>
    #include <strings.h>
    ]], [ffs strcasecmp strncasecmp])
m4trace:configure.ac:1088: -1- gl_STRINGS_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_FFS$])
m4trace:configure.ac:1088: -1- gl_FUNC_STRNLEN
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_strnlen], [_AC_CHECK_DECLS([strnlen])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRNLEN$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([strnlen.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_STRNLEN
m4trace:configure.ac:1088: -1- gl_STRING_MODULE_INDICATOR([strnlen])
m4trace:configure.ac:1088: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strnlen])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strnlen]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([strnlen])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_STRNLEN$])
m4trace:configure.ac:1088: -1- gl_FUNC_STRPTIME
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_strptime], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" strptime ]AS_TR_CPP([HAVE_strptime])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([strptime.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_STRPTIME
m4trace:configure.ac:1088: -1- gl_TIME_MODULE_INDICATOR([strptime])
m4trace:configure.ac:1088: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strptime])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strptime]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([strptime])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_STRPTIME$])
m4trace:configure.ac:1088: -1- gl_FUNC_STRSIGNAL
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_strsignal], [_AC_CHECK_DECLS([strsignal])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_STRSIGNAL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRSIGNAL$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([strsignal.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_STRSIGNAL
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_SYS_SIGLIST$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL__SYS_SIGLIST$])
m4trace:configure.ac:1088: -1- gl_STRING_MODULE_INDICATOR([strsignal])
m4trace:configure.ac:1088: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strsignal])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strsignal]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([strsignal])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_STRSIGNAL$])
m4trace:configure.ac:1088: -1- gl_FUNC_SYMLINK
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_symlink], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" symlink ]AS_TR_CPP([HAVE_symlink])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([symlink.c])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([symlink])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([symlink])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[symlink]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([symlink])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_SYMLINK$])
m4trace:configure.ac:1088: -1- gl_SYS_RANDOM_H
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([sys/random.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([sys/random.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_random_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/random.h ]AS_TR_SH([sys/random.h]) AS_TR_CPP([HAVE_sys/random.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([sys/random.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_SYS_RANDOM_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_RANDOM_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_RANDOM_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_RANDOM_H
/* Additional includes are needed before <sys/random.h> on uClibc
   and Mac OS X.  */
# include <sys/types.h>
# include <stdlib.h>
# include <sys/random.h>
#endif
    ]], [getrandom])
m4trace:configure.ac:1088: -1- gl_SYS_RANDOM_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_SYS_RESOURCE_H
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([sys/resource.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([sys/resource.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_resource_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/resource.h ]AS_TR_SH([sys/resource.h]) AS_TR_CPP([HAVE_sys/resource.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([sys/resource.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_SYS_RESOURCE_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_RESOURCE_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_RESOURCE_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_RESOURCE_H
/* At least FreeBSD 5.0 needs extra headers before <sys/resource.h>
   will compile.  */
# include <sys/types.h>
# include <sys/time.h>
# include <sys/resource.h>
#endif
    ]], [getrusage])
m4trace:configure.ac:1088: -1- gl_SYS_RESOURCE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_SYS_SELECT_H
m4trace:configure.ac:1088: -1- gl_SYS_SELECT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_SYS_SOCKET_H
m4trace:configure.ac:1088: -1- gl_SYS_SOCKET_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SA_FAMILY_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ACCEPT4$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^_POSIX_PII_SOCKET$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SHUTDOWN$])
m4trace:configure.ac:1088: -1- gl_PREREQ_SYS_H_SOCKET
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([sys/socket.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([sys/socket.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([sys/socket.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_SYS_SOCKET_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_SOCKET_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_SOCKET_H$])
m4trace:configure.ac:1088: -1- gl_PREREQ_SYS_H_WS2TCPIP
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WS2TCPIP_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SA_FAMILY_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY$])
m4trace:configure.ac:1088: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#include <sys/socket.h>
    ]], [socket connect accept bind getpeername getsockname getsockopt
    listen recv send recvfrom sendto setsockopt shutdown accept4])
m4trace:configure.ac:1088: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SOCKET])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SOCKET$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CONNECT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_CONNECT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ACCEPT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BIND])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_BIND$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPEERNAME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETPEERNAME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKNAME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETSOCKNAME$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKOPT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_GETSOCKOPT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LISTEN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_LISTEN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECV])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RECV$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SEND])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SEND$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECVFROM])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_RECVFROM$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SENDTO])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SENDTO$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETSOCKOPT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SETSOCKOPT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SHUTDOWN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_SHUTDOWN$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT4])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ACCEPT4$])
m4trace:configure.ac:1088: -1- gl_SYS_STAT_H
m4trace:configure.ac:1088: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_SYS_TIME_H
m4trace:configure.ac:1088: -1- gl_SYS_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_SYS_TIMES_H
m4trace:configure.ac:1088: -1- gl_SYS_TIMES_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_TMS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TIMES$])
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([sys/times.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([sys/times.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_times_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/times.h ]AS_TR_SH([sys/times.h]) AS_TR_CPP([HAVE_sys/times.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([sys/times.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_SYS_TIMES_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_TIMES_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_TMS$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_TIMES_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[
/* Some systems have incomplete headers.  */
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <time.h>
#endif
#include <sys/times.h>
    ]], [times])
m4trace:configure.ac:1088: -1- gl_SYS_TIMES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMES])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TIMES$])
m4trace:configure.ac:1088: -1- gl_SYS_TYPES_H
m4trace:configure.ac:1088: -1- gl_SYS_TYPES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_SYS_UIO_H
m4trace:configure.ac:1088: -1- gl_SYS_UIO_H_DEFAULTS
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([sys/uio.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([sys/uio.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_uio_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/uio.h ]AS_TR_SH([sys/uio.h]) AS_TR_CPP([HAVE_sys/uio.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([sys/uio.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_SYS_UIO_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_UIO_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_UIO_H$])
m4trace:configure.ac:1088: -1- gl_SYS_UIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_SYS_UTSNAME_H
m4trace:configure.ac:1088: -1- gl_SYS_UTSNAME_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_UNAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_UTSNAME$])
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([sys/utsname.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([sys/utsname.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_utsname_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/utsname.h ]AS_TR_SH([sys/utsname.h]) AS_TR_CPP([HAVE_sys/utsname.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([sys/utsname.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_SYS_UTSNAME_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_UTSNAME_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRUCT_UTSNAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_UTSNAME_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[
    /* Minix 3.1.8 has a bug: <stddef.h> must be included before
       <sys/utsname.h>.  */
    #include <stddef.h>
    #include <sys/utsname.h>
    ]], [uname])
m4trace:configure.ac:1088: -1- gl_SYS_UTSNAME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNAME])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_UNAME$])
m4trace:configure.ac:1088: -1- gl_SYS_WAIT_H
m4trace:configure.ac:1088: -1- gl_SYS_WAIT_H_DEFAULTS
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([sys/wait.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([sys/wait.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_wait_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/wait.h ]AS_TR_SH([sys/wait.h]) AS_TR_CPP([HAVE_sys/wait.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([sys/wait.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_SYS_WAIT_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_WAIT_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[#include <sys/wait.h>]], [waitpid])
m4trace:configure.ac:1088: -1- gl_SYS_WAIT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WAITPID])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WAITPID$])
m4trace:configure.ac:1088: -1- gl_FUNC_GEN_TEMPNAME
m4trace:configure.ac:1088: -1- gl_PREREQ_TEMPNAME
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([tempname])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEMPNAME$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SYS_SINGLE_THREADED_H$])
m4trace:configure.ac:1088: -1- gl_TIME_H
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS([time.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([time.h], [assume])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([time.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_TIME_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_TIME_H$])
m4trace:configure.ac:1088: -1- gl_CHECK_TYPE_STRUCT_TIMESPEC
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^TIME_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^SYS_TIME_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^PTHREAD_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^UNISTD_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^TIME_H_DEFINES_TIME_UTC$])
m4trace:configure.ac:1088: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_TIME_R
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_LOCALTIME_R$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_localtime_r], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" localtime_r ]AS_TR_CPP([HAVE_localtime_r])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([time_r.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_TIME_R
m4trace:configure.ac:1088: -1- gl_TIME_MODULE_INDICATOR([time_r])
m4trace:configure.ac:1088: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([time_r])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[time_r]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([time_r])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_TIME_R$])
m4trace:configure.ac:1088: -1- gl_TIME_RZ
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_LOCALTIME_INFLOOP_BUG$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TIMEZONE_T$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([time_rz.c])
m4trace:configure.ac:1088: -1- gl_TIME_MODULE_INDICATOR([time_rz])
m4trace:configure.ac:1088: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([time_rz])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[time_rz]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([time_rz])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_TIME_RZ$])
m4trace:configure.ac:1088: -1- gl_FUNC_TIMEGM
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_timegm], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" timegm ]AS_TR_CPP([HAVE_timegm])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([timegm.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_TIMEGM
m4trace:configure.ac:1088: -1- gl_TIME_MODULE_INDICATOR([timegm])
m4trace:configure.ac:1088: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([timegm])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[timegm]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([timegm])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_TIMEGM$])
m4trace:configure.ac:1088: -1- gl_TLS
m4trace:configure.ac:1088: -1- gl_FUNC_TZSET
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([tzset.c])
m4trace:configure.ac:1088: -1- gl_TIME_MODULE_INDICATOR([tzset])
m4trace:configure.ac:1088: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([tzset])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[tzset]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([tzset])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_TZSET$])
m4trace:configure.ac:1088: -1- gl_FUNC_UNAME
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_UNAME$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([uname.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_UNAME
m4trace:configure.ac:1088: -1- gl_SYS_UTSNAME_MODULE_INDICATOR([uname])
m4trace:configure.ac:1088: -1- gl_SYS_UTSNAME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([uname])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[uname]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_LIBHEADER([0.9.11], [unicase.h])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_LIB_PREPARE
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.11])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_UNICASE_H$])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.1], [unicase/empty-prefix-context])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICASE_EMPTY_PREFIX_CONTEXT], [gl_LIBUNISTRING_VERSION_CMP([0.9.1])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICASE_EMPTY_PREFIX_CONTEXT_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICASE_EMPTY_PREFIX_CONTEXT_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICASE_EMPTY_PREFIX_CONTEXT_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICASE_EMPTY_PREFIX_CONTEXT_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.1])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.1], [unicase/empty-suffix-context])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICASE_EMPTY_SUFFIX_CONTEXT], [gl_LIBUNISTRING_VERSION_CMP([0.9.1])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICASE_EMPTY_SUFFIX_CONTEXT_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICASE_EMPTY_SUFFIX_CONTEXT_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICASE_EMPTY_SUFFIX_CONTEXT_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICASE_EMPTY_SUFFIX_CONTEXT_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.1])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unicase/tolower])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICASE_TOLOWER], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICASE_TOLOWER_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICASE_TOLOWER_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICASE_TOLOWER_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICASE_TOLOWER_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unicase/toupper])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICASE_TOUPPER], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICASE_TOUPPER_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICASE_TOUPPER_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICASE_TOUPPER_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICASE_TOUPPER_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unicase/u8-tolower])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICASE_U8_TOLOWER], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICASE_U8_TOLOWER_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICASE_U8_TOLOWER_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICASE_U8_TOLOWER_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICASE_U8_TOLOWER_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unicase/u8-toupper])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICASE_U8_TOUPPER], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICASE_U8_TOUPPER_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICASE_U8_TOUPPER_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICASE_U8_TOUPPER_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICASE_U8_TOUPPER_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_LIBHEADER([0.9.11], [uniconv.h])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.11])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_UNICONV_H$])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [uniconv/u32-conv-to-enc])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICONV_U32_CONV_TO_ENC], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICONV_U32_CONV_TO_ENC_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICONV_U32_CONV_TO_ENC_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICONV_U32_CONV_TO_ENC_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICONV_U32_CONV_TO_ENC_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [uniconv/u8-conv-from-enc])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICONV_U8_CONV_FROM_ENC], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICONV_U8_CONV_FROM_ENC_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICONV_U8_CONV_FROM_ENC_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICONV_U8_CONV_FROM_ENC_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICONV_U8_CONV_FROM_ENC_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [uniconv/u8-conv-to-enc])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICONV_U8_CONV_TO_ENC], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICONV_U8_CONV_TO_ENC_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICONV_U8_CONV_TO_ENC_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICONV_U8_CONV_TO_ENC_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICONV_U8_CONV_TO_ENC_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_LIBHEADER([0.9.8], [unictype.h])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_UNICTYPE_H$])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/combining-class])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_COMBINING_CLASS], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_COMBINING_CLASS_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_COMBINING_CLASS_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_COMBINING_CLASS_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_COMBINING_CLASS_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-alnum])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_ALNUM], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_ALNUM_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_ALNUM_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_ALNUM_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_ALNUM_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-alpha])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_ALPHA], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_ALPHA_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_ALPHA_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_ALPHA_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_ALPHA_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-blank])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_BLANK], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_BLANK_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_BLANK_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_BLANK_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_BLANK_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-cntrl])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_CNTRL], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_CNTRL_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_CNTRL_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_CNTRL_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_CNTRL_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-digit])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_DIGIT], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_DIGIT_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_DIGIT_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_DIGIT_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_DIGIT_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-graph])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_GRAPH], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_GRAPH_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_GRAPH_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_GRAPH_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_GRAPH_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-lower])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_LOWER], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_LOWER_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_LOWER_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_LOWER_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_LOWER_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-print])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_PRINT], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_PRINT_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_PRINT_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_PRINT_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_PRINT_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-punct])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_PUNCT], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_PUNCT_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_PUNCT_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_PUNCT_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_PUNCT_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-space])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_SPACE], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_SPACE_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_SPACE_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_SPACE_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_SPACE_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-upper])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_UPPER], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_UPPER_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_UPPER_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_UPPER_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_UPPER_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/ctype-xdigit])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_XDIGIT], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_XDIGIT_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_XDIGIT_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_XDIGIT_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_CTYPE_XDIGIT_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [unictype/property-soft-dotted])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNICTYPE_PROPERTY_SOFT_DOTTED], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_PROPERTY_SOFT_DOTTED_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNICTYPE_PROPERTY_SOFT_DOTTED_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_PROPERTY_SOFT_DOTTED_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNICTYPE_PROPERTY_SOFT_DOTTED_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_LIBHEADER([0.9.11], [uninorm.h])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.11])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_UNINORM_H$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([uninorm/u8-normalize])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_UNINORM_U8_NORMALIZE$])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.8], [uninorm/u8-normalize])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNINORM_U8_NORMALIZE], [gl_LIBUNISTRING_VERSION_CMP([0.9.8])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNINORM_U8_NORMALIZE_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNINORM_U8_NORMALIZE_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNINORM_U8_NORMALIZE_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNINORM_U8_NORMALIZE_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.8])
m4trace:configure.ac:1088: -1- gl_UNISTD_H
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([unistd.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([unistd.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([unistd.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_UNISTD_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_UNISTD_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_UNISTD_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
/* Some systems declare various items in the wrong headers.  */
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <fcntl.h>
# include <stdio.h>
# include <stdlib.h>
# if defined _WIN32 && ! defined __CYGWIN__
#  include <io.h>
# endif
#endif
    ]], [access chdir chown copy_file_range dup dup2 dup3 environ euidaccess
    execl execle execlp execv execve execvp execvpe
    faccessat fchdir
    fchownat fdatasync fsync ftruncate getcwd getdomainname getdtablesize
    getentropy getgroups gethostname getlogin getlogin_r getpagesize getpass
    getusershell setusershell endusershell
    group_member isatty lchown link linkat lseek pipe pipe2 pread pwrite
    readlink readlinkat rmdir sethostname sleep symlink symlinkat
    truncate ttyname_r unlink unlinkat usleep])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_execvpe], [_AC_CHECK_DECLS([execvpe])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_EXECVPE$])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_UNISTD_SAFER
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_pipe], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" pipe ]AS_TR_CPP([HAVE_pipe])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_LIBHEADER([0.9.11], [unistr.h])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.11])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_UNISTR_H$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([unistr/u16-mbtoucr])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_UNISTR_U16_MBTOUCR$])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u16-mbtoucr])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U16_MBTOUCR], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U16_MBTOUCR_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U16_MBTOUCR_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U16_MBTOUCR_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U16_MBTOUCR_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.3], [unistr/u16-to-u8])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U16_TO_U8], [gl_LIBUNISTRING_VERSION_CMP([0.9.3])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U16_TO_U8_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U16_TO_U8_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U16_TO_U8_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U16_TO_U8_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.3])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([unistr/u16-uctomb])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_UNISTR_U16_UCTOMB$])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u16-uctomb])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U16_UCTOMB], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U16_UCTOMB_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U16_UCTOMB_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U16_UCTOMB_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U16_UCTOMB_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u32-mblen])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U32_MBLEN], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U32_MBLEN_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U32_MBLEN_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U32_MBLEN_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U32_MBLEN_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u32-to-u8])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U32_TO_U8], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U32_TO_U8_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U32_TO_U8_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U32_TO_U8_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U32_TO_U8_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-check])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_CHECK], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_CHECK_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_CHECK_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_CHECK_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_CHECK_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-cpy])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_CPY], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_CPY_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_CPY_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_CPY_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_CPY_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-mblen])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_MBLEN], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_MBLEN_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_MBLEN_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_MBLEN_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_MBLEN_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.4], [unistr/u8-mbsnlen])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_MBSNLEN], [gl_LIBUNISTRING_VERSION_CMP([0.9.4])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_MBSNLEN_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_MBSNLEN_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_MBSNLEN_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_MBSNLEN_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.4])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([unistr/u8-mbtouc])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_UNISTR_U8_MBTOUC$])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.4], [unistr/u8-mbtouc])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC], [gl_LIBUNISTRING_VERSION_CMP([0.9.4])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.4])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([unistr/u8-mbtouc-unsafe])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_UNISTR_U8_MBTOUC_UNSAFE$])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.4], [unistr/u8-mbtouc-unsafe])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC_UNSAFE], [gl_LIBUNISTRING_VERSION_CMP([0.9.4])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC_UNSAFE_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC_UNSAFE_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC_UNSAFE_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC_UNSAFE_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.4])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([unistr/u8-mbtoucr])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_UNISTR_U8_MBTOUCR$])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-mbtoucr])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-prev])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_PREV], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_PREV_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_PREV_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_PREV_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_PREV_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-strmblen])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_STRMBLEN], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_STRMBLEN_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_STRMBLEN_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_STRMBLEN_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_STRMBLEN_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-strmbtouc])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_STRMBTOUC], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_STRMBTOUC_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_STRMBTOUC_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_STRMBTOUC_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_STRMBTOUC_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.3], [unistr/u8-to-u16])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_TO_U16], [gl_LIBUNISTRING_VERSION_CMP([0.9.3])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_TO_U16_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_TO_U16_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_TO_U16_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_TO_U16_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.3])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9.3], [unistr/u8-to-u32])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_TO_U32], [gl_LIBUNISTRING_VERSION_CMP([0.9.3])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_TO_U32_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_TO_U32_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_TO_U32_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_TO_U32_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.3])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([unistr/u8-uctomb])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_UNISTR_U8_UCTOMB$])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_MODULE([0.9], [unistr/u8-uctomb])
m4trace:configure.ac:1088: -1- AM_CONDITIONAL([LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB], [gl_LIBUNISTRING_VERSION_CMP([0.9])])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB_TRUE$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB_FALSE$])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB_TRUE])
m4trace:configure.ac:1088: -1- _AM_SUBST_NOTMAKE([LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB_FALSE])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_LIBHEADER([0.9.11], [unitypes.h])
m4trace:configure.ac:1088: -1- gl_LIBUNISTRING_VERSION_CMP([0.9.11])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^LIBUNISTRING_UNITYPES_H$])
m4trace:configure.ac:1088: -1- gl_FUNC_UNLINK
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- m4_pattern_allow([^UNLINK_PARENT_BUG$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([unlink.c])
m4trace:configure.ac:1088: -1- gl_UNISTD_MODULE_INDICATOR([unlink])
m4trace:configure.ac:1088: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([unlink])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[unlink]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([unlink])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_UNLINK$])
m4trace:configure.ac:1088: -1- gl_FUNC_UNSETENV
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Check_Decl_unsetenv], [_AC_CHECK_DECLS([unsetenv])])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_UNSETENV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_UNSETENV$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^VOID_UNSETENV$])
m4trace:configure.ac:1088: -1- GL_MDA_DEFINES
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([unsetenv.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_UNSETENV
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_STDLIB_MODULE_INDICATOR([unsetenv])
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([unsetenv])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[unsetenv]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([unsetenv])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_UNSETENV$])
m4trace:configure.ac:1088: -1- gl_FUNC_VASNPRINTF
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_vasnprintf], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" vasnprintf ]AS_TR_CPP([HAVE_vasnprintf])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_REPLACE_VASNPRINTF
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_vasnprintf], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" vasnprintf ]AS_TR_CPP([HAVE_vasnprintf])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([vasnprintf.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([printf-args.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([printf-parse.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([asnprintf.c])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_VASNPRINTF$])
m4trace:configure.ac:1088: -1- gl_PREREQ_PRINTF_ARGS
m4trace:configure.ac:1088: -1- gl_PREREQ_PRINTF_PARSE
m4trace:configure.ac:1088: -1- gl_FEATURES_H
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_features_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" features.h ]AS_TR_SH([features.h]) AS_TR_CPP([HAVE_features.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_FEATURES_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^ptrdiff_t$])
m4trace:configure.ac:1088: -1- gt_AC_TYPE_INTMAX_T
m4trace:configure.ac:1088: -1- gl_AC_HEADER_INTTYPES_H
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_INTTYPES_H_WITH_UINTMAX$])
m4trace:configure.ac:1088: -1- gl_AC_HEADER_STDINT_H
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STDINT_H_WITH_UINTMAX$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_INTMAX_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^intmax_t$])
m4trace:configure.ac:1088: -1- gl_PREREQ_VASNPRINTF
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SNPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STRNLEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSLEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCSNLEN$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_MBRTOWC$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCRTOMB$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL__SNPRINTF$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SNPRINTF_RETVAL_C99$])
m4trace:configure.ac:1088: -1- gl_SNPRINTF_TRUNCATION_C99
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_SNPRINTF_TRUNCATION_C99$])
m4trace:configure.ac:1088: -1- gl_PREREQ_ASNPRINTF
m4trace:configure.ac:1088: -1- gl_FUNC_VASPRINTF
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_VASPRINTF$])
m4trace:configure.ac:1088: -1- gl_REPLACE_VASPRINTF
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([vasprintf.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([asprintf.c])
m4trace:configure.ac:1088: -1- gl_PREREQ_VASPRINTF_H
m4trace:configure.ac:1088: -1- gl_PREREQ_VASPRINTF
m4trace:configure.ac:1088: -1- gl_PREREQ_ASPRINTF
m4trace:configure.ac:1088: -1- gl_STDIO_MODULE_INDICATOR([vasprintf])
m4trace:configure.ac:1088: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vasprintf])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vasprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([vasprintf])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_VASPRINTF$])
m4trace:configure.ac:1088: -1- gl_FUNC_WAITPID
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([waitpid.c])
m4trace:configure.ac:1088: -1- gl_SYS_WAIT_MODULE_INDICATOR([waitpid])
m4trace:configure.ac:1088: -1- gl_SYS_WAIT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([waitpid])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[waitpid]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([waitpid])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_WAITPID$])
m4trace:configure.ac:1088: -1- gl_WCHAR_H
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([wchar.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([wchar.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" wchar.h ]AS_TR_SH([wchar.h]) AS_TR_CPP([HAVE_wchar.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([wchar.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_WCHAR_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_WCHAR_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINT_T$])
m4trace:configure.ac:1088: -1- gl_TYPE_WINT_T_PREREQ
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_crtdefs_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" crtdefs.h ]AS_TR_SH([crtdefs.h]) AS_TR_CPP([HAVE_crtdefs.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_CRTDEFS_H$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[
      #include <wchar.h>
    ]], [btowc wctob mbsinit mbrtowc mbrlen mbsrtowcs mbsnrtowcs wcrtomb
     wcsrtombs wcsnrtombs wcwidth
     wmemchr wmemcmp wmemcpy wmemmove wmempcpy wmemset
     wcslen wcsnlen wcscpy wcpcpy wcsncpy wcpncpy wcscat wcsncat wcscmp
     wcsncmp wcscasecmp wcsncasecmp wcscoll wcsxfrm wcsdup wcschr wcsrchr
     wcscspn wcsspn wcspbrk wcsstr wcstok wcswidth wcsftime
    ])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_WCSDUP$])
m4trace:configure.ac:1088: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_WCTYPE_H
m4trace:configure.ac:1088: -1- gl_WCTYPE_H_DEFAULTS
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ISWBLANK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCTYPE_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCTRANS_T$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ISWBLANK$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ISWDIGIT$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ISWXDIGIT$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_iswcntrl], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" iswcntrl ]AS_TR_CPP([HAVE_iswcntrl])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_ISWCNTRL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WINT_T$])
m4trace:configure.ac:1088: -1- gl_CHECK_NEXT_HEADERS([wctype.h])
m4trace:configure.ac:1088: -1- gl_NEXT_HEADERS_INTERNAL([wctype.h], [check])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Header_wctype_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" wctype.h ]AS_TR_SH([wctype.h]) AS_TR_CPP([HAVE_wctype.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_ABSOLUTE_HEADER_ONE([wctype.h])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_WCTYPE_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_WCTYPE_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_WCTYPE_H$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_ISWCNTRL$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_TOWLOWER$])
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_DECL_TOWLOWER$])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^REPLACE_TOWLOWER$])
m4trace:configure.ac:1088: -1- gl_WARN_ON_USE_PREPARE([[
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <wchar.h>
#endif
#include <wctype.h>
    ]], [wctype iswctype wctrans towctrans
    ])
m4trace:configure.ac:1088: -1- gl_WCTYPE_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWBLANK])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ISWBLANK$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWDIGIT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ISWDIGIT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWXDIGIT])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ISWXDIGIT$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTYPE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCTYPE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISWCTYPE])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_ISWCTYPE$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTRANS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_WCTRANS$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TOWCTRANS])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GL_GNULIB_TOWCTRANS$])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([windows-mutex.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([windows-once.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([windows-recmutex.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([windows-rwlock.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([windows-spawn.c])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([windows-tls.c])
m4trace:configure.ac:1088: -1- gl_FUNC_WMEMCHR
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([wmemchr.c])
m4trace:configure.ac:1088: -1- gl_WCHAR_MODULE_INDICATOR([wmemchr])
m4trace:configure.ac:1088: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([wmemchr])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[wmemchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([wmemchr])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_WMEMCHR$])
m4trace:configure.ac:1088: -1- gl_FUNC_WMEMPCPY
m4trace:configure.ac:1088: -1- AC_DEFUN([_AC_Func_wmempcpy], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" wmempcpy ]AS_TR_CPP([HAVE_wmempcpy])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1088: -1- gl_LIBSOURCES([wmempcpy.c])
m4trace:configure.ac:1088: -1- gl_WCHAR_MODULE_INDICATOR([wmempcpy])
m4trace:configure.ac:1088: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE([wmempcpy])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[wmempcpy]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR_FOR_TESTS([wmempcpy])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_TEST_WMEMPCPY$])
m4trace:configure.ac:1088: -1- gl_XALLOC
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([xalloc])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_XALLOC$])
m4trace:configure.ac:1088: -1- gl_MODULE_INDICATOR([xalloc-die])
m4trace:configure.ac:1088: -1- m4_pattern_allow([^GNULIB_XALLOC_DIE$])
m4trace:configure.ac:1088: -1- gl_XSIZE
m4trace:configure.ac:1088: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:1088: -1- gl_COMMON
m4trace:configure.ac:1088: -1- m4_pattern_allow([^gltests_WITNESS$])
m4trace:configure.ac:1092: -1- m4_pattern_allow([^HAVE_SYS_WAIT_H$])
m4trace:configure.ac:1097: -1- m4_pattern_allow([^HAVE_DLFCN_H$])
m4trace:configure.ac:1097: -1- m4_pattern_allow([^HAVE_FLOATINGPOINT_H$])
m4trace:configure.ac:1097: -1- m4_pattern_allow([^HAVE_FPU_CONTROL_H$])
m4trace:configure.ac:1097: -1- m4_pattern_allow([^HAVE_GRP_H$])
m4trace:configure.ac:1098: -1- m4_pattern_allow([^HAVE_IEEEFP_H$])
m4trace:configure.ac:1098: -1- m4_pattern_allow([^HAVE_PTHREAD_H$])
m4trace:configure.ac:1098: -1- m4_pattern_allow([^HAVE_PWD_H$])
m4trace:configure.ac:1098: -1- m4_pattern_allow([^HAVE_SYS_IOCTL_H$])
m4trace:configure.ac:1099: -1- m4_pattern_allow([^HAVE_STROPTS_H$])
m4trace:configure.ac:1099: -1- m4_pattern_allow([^HAVE_SYS_STROPTS_H$])
m4trace:configure.ac:1115: -1- m4_pattern_allow([^OCTAVE_STDATOMIC_H_OK$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_TERMIOS_H$])
m4trace:configure.ac:1122: -1- m4_pattern_allow([^HAVE_TERMIO_H$])
m4trace:configure.ac:1123: -1- m4_pattern_allow([^HAVE_SGTTY_H$])
m4trace:configure.ac:1124: -1- m4_pattern_allow([^HAVE_CONIO_H$])
m4trace:configure.ac:1134: -1- m4_pattern_allow([^NOMINMAX$])
m4trace:configure.ac:1139: -1- m4_pattern_allow([^int64_t$])
m4trace:configure.ac:1140: -1- m4_pattern_allow([^mode_t$])
m4trace:configure.ac:1141: -1- m4_pattern_allow([^off_t$])
m4trace:configure.ac:1142: -1- AC_TYPE_PID_T
m4trace:configure.ac:1142: -1- m4_pattern_allow([^pid_t$])
m4trace:configure.ac:1143: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:1144: -1- m4_pattern_allow([^ssize_t$])
m4trace:configure.ac:1145: -1- m4_pattern_allow([^uid_t$])
m4trace:configure.ac:1145: -1- m4_pattern_allow([^gid_t$])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^_UINT64_T$])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^uint64_t$])
m4trace:configure.ac:1147: -1- m4_pattern_allow([^HAVE_DEV_T$])
m4trace:configure.ac:1147: -1- m4_pattern_allow([^HAVE_INO_T$])
m4trace:configure.ac:1148: -1- m4_pattern_allow([^HAVE_PTRDIFF_T$])
m4trace:configure.ac:1150: -1- m4_pattern_allow([^HAVE_LONG_LONG_INT$])
m4trace:configure.ac:1152: -1- m4_pattern_allow([^OCTAVE_HAVE_LONG_LONG_INT$])
m4trace:configure.ac:1156: -1- m4_pattern_allow([^HAVE_UNSIGNED_LONG_LONG_INT$])
m4trace:configure.ac:1158: -1- m4_pattern_allow([^OCTAVE_HAVE_UNSIGNED_LONG_LONG_INT$])
m4trace:configure.ac:1163: -1- m4_pattern_allow([^SIZEOF_LONG_DOUBLE$])
m4trace:configure.ac:1167: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BLKSIZE$])
m4trace:configure.ac:1167: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BLOCKS$])
m4trace:configure.ac:1167: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_RDEV$])
m4trace:configure.ac:1169: -1- m4_pattern_allow([^HAVE_STRUCT_GROUP_GR_PASSWD$])
m4trace:configure.ac:1171: -1- m4_pattern_allow([^HAVE_STRUCT_TM_TM_ZONE$])
m4trace:configure.ac:1171: -1- m4_pattern_allow([^HAVE_TM_ZONE$])
m4trace:configure.ac:1171: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1171: -1- m4_pattern_allow([^HAVE_DECL_TZNAME$])
m4trace:configure.ac:1171: -1- m4_pattern_allow([^HAVE_TZNAME$])
m4trace:configure.ac:1188: -1- m4_pattern_allow([^OCTAVE_HAVE_OVERLOAD_CHAR_INT8_TYPES$])
m4trace:configure.ac:1193: -1- OCTAVE_MIPS_NAN
m4trace:configure.ac:1193: -1- m4_pattern_allow([^HAVE_MIPS_NAN$])
m4trace:configure.ac:1203: -1- m4_pattern_allow([^HAVE_CTERMID$])
m4trace:configure.ac:1203: -1- m4_pattern_allow([^HAVE_DUP2$])
m4trace:configure.ac:1204: -1- m4_pattern_allow([^HAVE_ENDGRENT$])
m4trace:configure.ac:1204: -1- m4_pattern_allow([^HAVE_ENDPWENT$])
m4trace:configure.ac:1204: -1- m4_pattern_allow([^HAVE_EXECVP$])
m4trace:configure.ac:1204: -1- m4_pattern_allow([^HAVE_FORK$])
m4trace:configure.ac:1205: -1- m4_pattern_allow([^HAVE_GETEGID$])
m4trace:configure.ac:1205: -1- m4_pattern_allow([^HAVE_GETEUID$])
m4trace:configure.ac:1205: -1- m4_pattern_allow([^HAVE_GETGID$])
m4trace:configure.ac:1205: -1- m4_pattern_allow([^HAVE_GETGRENT$])
m4trace:configure.ac:1205: -1- m4_pattern_allow([^HAVE_GETGRGID$])
m4trace:configure.ac:1205: -1- m4_pattern_allow([^HAVE_GETGRNAM$])
m4trace:configure.ac:1206: -1- m4_pattern_allow([^HAVE_GETPGRP$])
m4trace:configure.ac:1206: -1- m4_pattern_allow([^HAVE_GETPID$])
m4trace:configure.ac:1206: -1- m4_pattern_allow([^HAVE_GETPPID$])
m4trace:configure.ac:1206: -1- m4_pattern_allow([^HAVE_GETPWENT$])
m4trace:configure.ac:1206: -1- m4_pattern_allow([^HAVE_GETPWUID$])
m4trace:configure.ac:1206: -1- m4_pattern_allow([^HAVE_GETUID$])
m4trace:configure.ac:1207: -1- m4_pattern_allow([^HAVE_ISASCII$])
m4trace:configure.ac:1207: -1- m4_pattern_allow([^HAVE_KILL$])
m4trace:configure.ac:1208: -1- m4_pattern_allow([^HAVE_LGAMMA_R$])
m4trace:configure.ac:1208: -1- m4_pattern_allow([^HAVE_LGAMMAF_R$])
m4trace:configure.ac:1209: -1- m4_pattern_allow([^HAVE_REALPATH$])
m4trace:configure.ac:1209: -1- m4_pattern_allow([^HAVE_RESOLVEPATH$])
m4trace:configure.ac:1210: -1- m4_pattern_allow([^HAVE_SELECT$])
m4trace:configure.ac:1210: -1- m4_pattern_allow([^HAVE_SETGRENT$])
m4trace:configure.ac:1210: -1- m4_pattern_allow([^HAVE_SETPWENT$])
m4trace:configure.ac:1210: -1- m4_pattern_allow([^HAVE_SETSID$])
m4trace:configure.ac:1210: -1- m4_pattern_allow([^HAVE_SIGLONGJMP$])
m4trace:configure.ac:1210: -1- m4_pattern_allow([^HAVE_STRSIGNAL$])
m4trace:configure.ac:1211: -1- m4_pattern_allow([^HAVE_TCGETATTR$])
m4trace:configure.ac:1211: -1- m4_pattern_allow([^HAVE_TCSETATTR$])
m4trace:configure.ac:1211: -1- m4_pattern_allow([^HAVE_TOASCII$])
m4trace:configure.ac:1212: -1- m4_pattern_allow([^HAVE_UMASK$])
m4trace:configure.ac:1212: -1- m4_pattern_allow([^HAVE_WAITPID$])
m4trace:configure.ac:1213: -1- m4_pattern_allow([^HAVE__GETCH$])
m4trace:configure.ac:1213: -1- m4_pattern_allow([^HAVE__KBHIT$])
m4trace:configure.ac:1242: -1- m4_pattern_allow([^_USE_MATH_DEFINES$])
m4trace:configure.ac:1249: -1- m4_pattern_allow([^HAVE_MATH_DEFINES$])
m4trace:configure.ac:1258: -1- m4_pattern_allow([^_UNICODE$])
m4trace:configure.ac:1259: -1- m4_pattern_allow([^UNICODE$])
m4trace:configure.ac:1270: -1- m4_pattern_allow([^OCTAVE_UNICODE_EXE_LDFLAGS$])
m4trace:configure.ac:1275: -1- m4_pattern_allow([^HAVE_SETVBUF$])
m4trace:configure.ac:1287: -1- m4_pattern_allow([^HAVE_PSAPI_H$])
m4trace:configure.ac:1297: -1- m4_pattern_allow([^HAVE_SHLWAPI_H$])
m4trace:configure.ac:1305: -1- m4_pattern_allow([^HAVE_GETRUSAGE$])
m4trace:configure.ac:1308: -1- m4_pattern_allow([^RUSAGE_TIMES_ONLY$])
m4trace:configure.ac:1313: -1- m4_pattern_allow([^HAVE_GETPWNAM$])
m4trace:configure.ac:1313: -1- m4_pattern_allow([^HAVE_LIBSUN$])
m4trace:configure.ac:1315: -1- m4_pattern_allow([^CLOSEDIR_VOID$])
m4trace:configure.ac:1331: -1- m4_pattern_allow([^EXCEPTION_IN_MATH$])
m4trace:configure.ac:1337: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1337: -1- m4_pattern_allow([^HAVE_DECL_SYS_SIGLIST$])
m4trace:configure.ac:1353: -1- m4_pattern_allow([^OCTAVE_ENABLE_COMMAND_LINE_PUSH_PARSER$])
m4trace:configure.ac:1365: -1- m4_pattern_allow([^OCTAVE_ENABLE_VM_EVALUATOR$])
m4trace:configure.ac:1371: -1- OCTAVE_CHECK_LIB([pcre], [PCRE], [], [pcre.h pcre/pcre.h], [pcre_compile], [], [], [OCTAVE_CHECK_LIB_PCRE_OK([],
    [AC_MSG_ERROR([PCRE library must be built with UTF support (--enable-utf)])])
  ], [libpcre], [REQUIRED])
m4trace:configure.ac:1371: -1- m4_pattern_allow([^PCRE_CPPFLAGS$])
m4trace:configure.ac:1371: -1- m4_pattern_allow([^PCRE_LDFLAGS$])
m4trace:configure.ac:1371: -1- PKG_CHECK_EXISTS([libpcre], [
      if test -z "$m4_toupper([pcre])_CPPFLAGS"; then
        m4_toupper([pcre])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([libpcre], [pcre]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([pcre])_LDFLAGS"; then
        m4_toupper([pcre])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([libpcre], [pcre]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([pcre])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([libpcre], [pcre]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:1371: -1- OCTAVE_CHECK_LIB_PCRE_OK([], [AC_MSG_ERROR([PCRE library must be built with UTF support (--enable-utf)])])
m4trace:configure.ac:1371: -1- m4_pattern_allow([^PCRE_LIBS$])
m4trace:configure.ac:1371: -1- OCTAVE_CONFIGURE_WARNING([warn_pcre])
m4trace:configure.ac:1383: -1- OCTAVE_CHECK_LIB([qhull_r], [QHull], [Qhull library not found.  This will result in loss of functionality for some geometry functions.], [libqhull_r/libqhull_r.h libqhull_r.h], [qh_qhull], [], [], [warn_qhull_r=
  OCTAVE_CHECK_QHULL_VERSION
  OCTAVE_CHECK_LIB_QHULL_OK(
    [AC_DEFINE(HAVE_QHULL, 1, [Define to 1 if Qhull is available.])
     QHULL_CPPFLAGS="$QHULL_R_CPPFLAGS"
     QHULL_LDFLAGS="$QHULL_R_LDFLAGS"
     QHULL_LIBS="$QHULL_R_LIBS"],
    [warn_qhull_r="Qhull library found, but does not seem to work properly.  This will result in loss of functionality for some geometry functions.  Please try recompiling the library with -fno-strict-aliasing."])])
m4trace:configure.ac:1383: -1- m4_pattern_allow([^QHULL_R_CPPFLAGS$])
m4trace:configure.ac:1383: -1- m4_pattern_allow([^QHULL_R_LDFLAGS$])
m4trace:configure.ac:1383: -1- PKG_CHECK_EXISTS([qhull_r], [
      if test -z "$m4_toupper([qhull_r])_CPPFLAGS"; then
        m4_toupper([qhull_r])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [qhull_r]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([qhull_r])_LDFLAGS"; then
        m4_toupper([qhull_r])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [qhull_r]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([qhull_r])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [qhull_r]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:1383: -1- OCTAVE_CHECK_QHULL_VERSION
m4trace:configure.ac:1383: -1- m4_pattern_allow([^NEED_QHULL_R_VERSION$])
m4trace:configure.ac:1383: -1- OCTAVE_CHECK_LIB_QHULL_OK([AC_DEFINE(HAVE_QHULL, 1, [Define to 1 if Qhull is available.])
     QHULL_CPPFLAGS="$QHULL_R_CPPFLAGS"
     QHULL_LDFLAGS="$QHULL_R_LDFLAGS"
     QHULL_LIBS="$QHULL_R_LIBS"], [warn_qhull_r="Qhull library found, but does not seem to work properly.  This will result in loss of functionality for some geometry functions.  Please try recompiling the library with -fno-strict-aliasing."])
m4trace:configure.ac:1383: -1- m4_pattern_allow([^HAVE_QHULL$])
m4trace:configure.ac:1383: -1- m4_pattern_allow([^QHULL_R_LIBS$])
m4trace:configure.ac:1383: -1- OCTAVE_CONFIGURE_WARNING([warn_qhull_r])
m4trace:configure.ac:1395: -1- m4_pattern_allow([^QHULL_CPPFLAGS$])
m4trace:configure.ac:1396: -1- m4_pattern_allow([^QHULL_LDFLAGS$])
m4trace:configure.ac:1397: -1- m4_pattern_allow([^QHULL_LIBS$])
m4trace:configure.ac:1415: -1- m4_pattern_allow([^HAVE_RAPIDJSON$])
m4trace:configure.ac:1437: -1- m4_pattern_allow([^HAVE_RAPIDJSON_PRETTYWRITER$])
m4trace:configure.ac:1447: -1- OCTAVE_CONFIGURE_WARNING([warn_rapidjson])
m4trace:configure.ac:1452: -1- OCTAVE_ENABLE_READLINE
m4trace:configure.ac:1452: -1- OCTAVE_CHECK_LIB_TERMLIB
m4trace:configure.ac:1452: -1- m4_pattern_allow([^TERM_LIBS$])
m4trace:configure.ac:1452: -1- m4_pattern_allow([^USE_READLINE$])
m4trace:configure.ac:1452: -1- m4_pattern_allow([^READLINE_LIBS$])
m4trace:configure.ac:1455: -1- OCTAVE_CHECK_LIB_TERMLIB
m4trace:configure.ac:1455: -1- m4_pattern_allow([^TERM_LIBS$])
m4trace:configure.ac:1459: -1- OCTAVE_CHECK_LIB([z], [ZLIB], [ZLIB library not found.  Octave will not be able to load or save compressed data files or HDF5 files.], [zlib.h], [gzclearerr])
m4trace:configure.ac:1459: -1- m4_pattern_allow([^Z_CPPFLAGS$])
m4trace:configure.ac:1459: -1- m4_pattern_allow([^Z_LDFLAGS$])
m4trace:configure.ac:1459: -1- PKG_CHECK_EXISTS([z], [
      if test -z "$m4_toupper([z])_CPPFLAGS"; then
        m4_toupper([z])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [z]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([z])_LDFLAGS"; then
        m4_toupper([z])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [z]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([z])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [z]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:1459: -1- m4_pattern_allow([^HAVE_ZLIB_H$])
m4trace:configure.ac:1459: -1- m4_pattern_allow([^HAVE_Z$])
m4trace:configure.ac:1459: -1- m4_pattern_allow([^Z_LIBS$])
m4trace:configure.ac:1459: -1- OCTAVE_CONFIGURE_WARNING([warn_z])
m4trace:configure.ac:1465: -1- m4_pattern_allow([^HAVE_ZLIB$])
m4trace:configure.ac:1470: -1- OCTAVE_CHECK_LIB([bz2], [BZIP2], [BZIP2 library not found.  Octave will not be able to compress or decompress bzip2 files.], [bzlib.h], [BZ2_bzCompressInit])
m4trace:configure.ac:1470: -1- m4_pattern_allow([^BZ2_CPPFLAGS$])
m4trace:configure.ac:1470: -1- m4_pattern_allow([^BZ2_LDFLAGS$])
m4trace:configure.ac:1470: -1- PKG_CHECK_EXISTS([bz2], [
      if test -z "$m4_toupper([bz2])_CPPFLAGS"; then
        m4_toupper([bz2])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [bz2]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([bz2])_LDFLAGS"; then
        m4_toupper([bz2])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [bz2]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([bz2])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [bz2]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:1470: -1- m4_pattern_allow([^HAVE_BZLIB_H$])
m4trace:configure.ac:1470: -1- m4_pattern_allow([^HAVE_BZ2$])
m4trace:configure.ac:1470: -1- m4_pattern_allow([^BZ2_LIBS$])
m4trace:configure.ac:1470: -1- OCTAVE_CONFIGURE_WARNING([warn_bz2])
m4trace:configure.ac:1480: -1- OCTAVE_CHECK_LIB([hdf5], [HDF5], [HDF5 library not found.  Octave will not be able to load or save HDF5 data files.], [hdf5.h], [H5Gget_num_objs], [], [], [warn_hdf5=
   OCTAVE_CHECK_HDF5_HAS_VER_16_API
   OCTAVE_CHECK_HDF5_HAS_UTF8_API
   AC_DEFINE(HAVE_HDF5, 1,
     [Define to 1 if HDF5 is available and newer than version 1.6.])
   if test $have_msvc = yes; then
     OCTAVE_CHECK_LIB_HDF5_DLL
   fi
  ])
m4trace:configure.ac:1480: -1- m4_pattern_allow([^HDF5_CPPFLAGS$])
m4trace:configure.ac:1480: -1- m4_pattern_allow([^HDF5_LDFLAGS$])
m4trace:configure.ac:1480: -1- PKG_CHECK_EXISTS([hdf5], [
      if test -z "$m4_toupper([hdf5])_CPPFLAGS"; then
        m4_toupper([hdf5])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [hdf5]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([hdf5])_LDFLAGS"; then
        m4_toupper([hdf5])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [hdf5]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([hdf5])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [hdf5]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:1480: -1- m4_pattern_allow([^HAVE_HDF5_H$])
m4trace:configure.ac:1480: -1- OCTAVE_CHECK_HDF5_HAS_VER_16_API
m4trace:configure.ac:1480: -1- m4_pattern_allow([^HAVE_HDF5_18$])
m4trace:configure.ac:1480: -1- OCTAVE_CHECK_HDF5_HAS_UTF8_API
m4trace:configure.ac:1480: -1- m4_pattern_allow([^HAVE_HDF5_UTF8$])
m4trace:configure.ac:1480: -1- m4_pattern_allow([^HAVE_HDF5$])
m4trace:configure.ac:1480: -1- OCTAVE_CHECK_LIB_HDF5_DLL
m4trace:configure.ac:1480: -1- m4_pattern_allow([^_HDF5USEDLL_$])
m4trace:configure.ac:1480: -1- m4_pattern_allow([^HDF5_LIBS$])
m4trace:configure.ac:1480: -1- OCTAVE_CONFIGURE_WARNING([warn_hdf5])
m4trace:configure.ac:1499: -1- m4_pattern_allow([^HAVE_HDF5_INT2FLOAT_CONVERSIONS$])
m4trace:configure.ac:1507: -1- OCTAVE_CHECK_LIB([fftw3], [FFTW3], [FFTW3 library not found.  The slower FFTPACK library will be used instead.], [fftw3.h], [fftw_plan_dft_1d])
m4trace:configure.ac:1507: -1- m4_pattern_allow([^FFTW3_CPPFLAGS$])
m4trace:configure.ac:1507: -1- m4_pattern_allow([^FFTW3_LDFLAGS$])
m4trace:configure.ac:1507: -1- PKG_CHECK_EXISTS([fftw3], [
      if test -z "$m4_toupper([fftw3])_CPPFLAGS"; then
        m4_toupper([fftw3])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [fftw3]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([fftw3])_LDFLAGS"; then
        m4_toupper([fftw3])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [fftw3]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([fftw3])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [fftw3]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:1507: -1- m4_pattern_allow([^HAVE_FFTW3_H$])
m4trace:configure.ac:1507: -1- m4_pattern_allow([^HAVE_FFTW3$])
m4trace:configure.ac:1507: -1- m4_pattern_allow([^FFTW3_LIBS$])
m4trace:configure.ac:1507: -1- OCTAVE_CONFIGURE_WARNING([warn_fftw3])
m4trace:configure.ac:1511: -1- OCTAVE_CHECK_LIB([fftw3f], [FFTW3F], [FFTW3F library not found.  The slower FFTPACK library will be used instead.], [fftw3.h], [fftwf_plan_dft_1d])
m4trace:configure.ac:1511: -1- m4_pattern_allow([^FFTW3F_CPPFLAGS$])
m4trace:configure.ac:1511: -1- m4_pattern_allow([^FFTW3F_LDFLAGS$])
m4trace:configure.ac:1511: -1- PKG_CHECK_EXISTS([fftw3f], [
      if test -z "$m4_toupper([fftw3f])_CPPFLAGS"; then
        m4_toupper([fftw3f])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [fftw3f]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([fftw3f])_LDFLAGS"; then
        m4_toupper([fftw3f])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [fftw3f]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([fftw3f])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [fftw3f]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:1511: -1- m4_pattern_allow([^HAVE_FFTW3_H$])
m4trace:configure.ac:1511: -1- m4_pattern_allow([^HAVE_FFTW3F$])
m4trace:configure.ac:1511: -1- m4_pattern_allow([^FFTW3F_LIBS$])
m4trace:configure.ac:1511: -1- OCTAVE_CONFIGURE_WARNING([warn_fftw3f])
m4trace:configure.ac:1528: -1- AM_CONDITIONAL([AMCOND_HAVE_FFTW], [test -n "$FFTW3_LIBS" && test -n "$FFTW3F_LIBS"])
m4trace:configure.ac:1528: -1- m4_pattern_allow([^AMCOND_HAVE_FFTW_TRUE$])
m4trace:configure.ac:1528: -1- m4_pattern_allow([^AMCOND_HAVE_FFTW_FALSE$])
m4trace:configure.ac:1528: -1- _AM_SUBST_NOTMAKE([AMCOND_HAVE_FFTW_TRUE])
m4trace:configure.ac:1528: -1- _AM_SUBST_NOTMAKE([AMCOND_HAVE_FFTW_FALSE])
m4trace:configure.ac:1532: -1- m4_pattern_allow([^HAVE_FFTW$])
m4trace:configure.ac:1542: -1- OCTAVE_CHECK_FFTW_THREADS([fftw3], [fftw_plan_with_nthreads])
m4trace:configure.ac:1542: -1- m4_pattern_allow([^HAVE_FFTW3_THREADS$])
m4trace:configure.ac:1543: -1- OCTAVE_CHECK_FFTW_THREADS([fftw3f], [fftwf_plan_with_nthreads])
m4trace:configure.ac:1543: -1- m4_pattern_allow([^HAVE_FFTW3F_THREADS$])
m4trace:configure.ac:1558: -1- m4_pattern_allow([^FFTW_XCPPFLAGS$])
m4trace:configure.ac:1559: -1- m4_pattern_allow([^FFTW_XLDFLAGS$])
m4trace:configure.ac:1560: -1- m4_pattern_allow([^FFTW_XLIBS$])
m4trace:configure.ac:1564: -1- m4_pattern_allow([^FFT_DIR$])
m4trace:configure.ac:1572: -1- OCTAVE_CHECK_LIB([glpk], [GLPK], [GLPK library not found.  The glpk function for solving linear programs will be disabled.], [glpk.h glpk/glpk.h], [glp_simplex], [], [], [warn_glpk=
   OCTAVE_CHECK_LIB_GLPK_OK(
    [AC_DEFINE(HAVE_GLPK, 1, [Define to 1 if GLPK is available.])],
    [warn_glpk="GLPK library found, but does not seem to work properly; disabling glpk function"])])
m4trace:configure.ac:1572: -1- m4_pattern_allow([^GLPK_CPPFLAGS$])
m4trace:configure.ac:1572: -1- m4_pattern_allow([^GLPK_LDFLAGS$])
m4trace:configure.ac:1572: -1- PKG_CHECK_EXISTS([glpk], [
      if test -z "$m4_toupper([glpk])_CPPFLAGS"; then
        m4_toupper([glpk])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [glpk]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([glpk])_LDFLAGS"; then
        m4_toupper([glpk])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [glpk]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([glpk])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [glpk]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:1572: -1- OCTAVE_CHECK_LIB_GLPK_OK([AC_DEFINE(HAVE_GLPK, 1, [Define to 1 if GLPK is available.])], [warn_glpk="GLPK library found, but does not seem to work properly; disabling glpk function"])
m4trace:configure.ac:1572: -1- m4_pattern_allow([^HAVE_GLPK$])
m4trace:configure.ac:1572: -1- m4_pattern_allow([^GLPK_LIBS$])
m4trace:configure.ac:1572: -1- OCTAVE_CONFIGURE_WARNING([warn_glpk])
m4trace:configure.ac:1588: -1- OCTAVE_CHECK_LIB([curl], [cURL], [cURL library not found.  The ftp objects, urlread, and urlwrite functions will be disabled.], [curl/curl.h], [curl_easy_escape])
m4trace:configure.ac:1588: -1- m4_pattern_allow([^CURL_CPPFLAGS$])
m4trace:configure.ac:1588: -1- m4_pattern_allow([^CURL_LDFLAGS$])
m4trace:configure.ac:1588: -1- PKG_CHECK_EXISTS([curl], [
      if test -z "$m4_toupper([curl])_CPPFLAGS"; then
        m4_toupper([curl])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [curl]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([curl])_LDFLAGS"; then
        m4_toupper([curl])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [curl]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([curl])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [curl]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:1588: -1- m4_pattern_allow([^HAVE_CURL_CURL_H$])
m4trace:configure.ac:1588: -1- m4_pattern_allow([^HAVE_CURL$])
m4trace:configure.ac:1588: -1- m4_pattern_allow([^CURL_LIBS$])
m4trace:configure.ac:1588: -1- OCTAVE_CONFIGURE_WARNING([warn_curl])
m4trace:configure.ac:1604: -1- m4_pattern_allow([^CURLOPT_DIRLISTONLY$])
m4trace:configure.ac:1613: -1- OCTAVE_CHECK_LIB([sndfile], [sndfile], [sndfile library not found.  The audioinfo, audioread, and audiowrite functions will be disabled.], [sndfile.h], [sf_open], [], [don't use sndfile library, disable audio file I/O], [warn_sndfile=
   OCTAVE_CHECK_LIB_SNDFILE_OK(
    [AC_DEFINE(HAVE_SNDFILE, 1, [Define to 1 if sndfile is available.])],
    [warn_sndfile="sndfile library found, but does not seem to work properly; disabling audio file I/O functions"])])
m4trace:configure.ac:1613: -1- m4_pattern_allow([^SNDFILE_CPPFLAGS$])
m4trace:configure.ac:1613: -1- m4_pattern_allow([^SNDFILE_LDFLAGS$])
m4trace:configure.ac:1613: -1- PKG_CHECK_EXISTS([sndfile], [
      if test -z "$m4_toupper([sndfile])_CPPFLAGS"; then
        m4_toupper([sndfile])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [sndfile]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([sndfile])_LDFLAGS"; then
        m4_toupper([sndfile])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [sndfile]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([sndfile])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [sndfile]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:1613: -1- m4_pattern_allow([^HAVE_SNDFILE_H$])
m4trace:configure.ac:1613: -1- OCTAVE_CHECK_LIB_SNDFILE_OK([AC_DEFINE(HAVE_SNDFILE, 1, [Define to 1 if sndfile is available.])], [warn_sndfile="sndfile library found, but does not seem to work properly; disabling audio file I/O functions"])
m4trace:configure.ac:1613: -1- m4_pattern_allow([^HAVE_SNDFILE$])
m4trace:configure.ac:1613: -1- m4_pattern_allow([^SNDFILE_LIBS$])
m4trace:configure.ac:1613: -1- OCTAVE_CONFIGURE_WARNING([warn_sndfile])
m4trace:configure.ac:1624: -1- OCTAVE_CHECK_LIB([portaudio], [PortAudio], [PortAudio library not found.  The audioplayer, audiorecorder, and audiodevinfo functions will be disabled.], [portaudio.h], [Pa_GetDeviceCount], [], [don't use PortAudio library, disable audio playback and recording], [], [portaudio-2.0])
m4trace:configure.ac:1624: -1- m4_pattern_allow([^PORTAUDIO_CPPFLAGS$])
m4trace:configure.ac:1624: -1- m4_pattern_allow([^PORTAUDIO_LDFLAGS$])
m4trace:configure.ac:1624: -1- PKG_CHECK_EXISTS([portaudio-2.0], [
      if test -z "$m4_toupper([portaudio])_CPPFLAGS"; then
        m4_toupper([portaudio])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([portaudio-2.0], [portaudio]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([portaudio])_LDFLAGS"; then
        m4_toupper([portaudio])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([portaudio-2.0], [portaudio]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([portaudio])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([portaudio-2.0], [portaudio]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:1624: -1- m4_pattern_allow([^HAVE_PORTAUDIO_H$])
m4trace:configure.ac:1624: -1- m4_pattern_allow([^HAVE_PORTAUDIO$])
m4trace:configure.ac:1624: -1- m4_pattern_allow([^PORTAUDIO_LIBS$])
m4trace:configure.ac:1624: -1- OCTAVE_CONFIGURE_WARNING([warn_portaudio])
m4trace:configure.ac:1649: -1- PKG_CHECK_EXISTS([$magick], [
    dnl We are using --cflags now instead of --cflags-only-I because some
    dnl Graphics/ImageMagick++ packages will provide -D options for
    dnl MAGICKCORE_HDRI_ENABLE and MAGICKCORE_QUANTUM_DEPTH that are needed
    dnl for building with a particular verison of the library.  If there
    dnl are other flags in the output from pkg-config --cflags that cause
    dnl trouble, then we may need to go back to using --cflags-only-I and
    dnl have a configure test to determine the proper definitions of
    dnl MAGICKCORE_HDRI_ENABLE and MAGICKCORE_QUANTUM_DEPTH.
    dnl See also bug #49563.
    MAGICK_CPPFLAGS="$($PKG_CONFIG --cflags $magick | $SED -e 's/^ *$//')"
    MAGICK_LDFLAGS="$($PKG_CONFIG --libs-only-L $magick | $SED -e 's/^ *$//')"
    MAGICK_LIBS="$($PKG_CONFIG --libs-only-l $magick | $SED -e 's/^ *$//')"

    warn_magick="$magick library fails tests.  The imread, imwrite, and imfinfo functions for reading and writing image files will not be fully functional."

    save_CPPFLAGS="$CPPFLAGS"
    save_LIBS="$LIBS"
    CPPFLAGS="$MAGICK_CPPFLAGS $CPPFLAGS"
    LIBS="$MAGICK_LDFLAGS $MAGICK_LIBS $LIBS"
    AC_LANG_PUSH(C++)
    AC_CHECK_HEADER([Magick++.h], [
      AC_CACHE_CHECK([for Magick::ColorRGB in Magick++.h],
        [octave_cv_func_magick_colorrgb],
        [AC_LINK_IFELSE([AC_LANG_PROGRAM([[
          #include <Magick++.h>
          ]], [[
          Magick::ColorRGB c;
          ]])],
          octave_cv_func_magick_colorrgb=yes,
          octave_cv_func_magick_colorrgb=no)
        ])
      if test $octave_cv_func_magick_colorrgb = yes; then
        use_magick=yes
        warn_magick=
      fi
    ])
    AC_LANG_POP(C++)
    CPPFLAGS="$save_CPPFLAGS"
    LIBS="$save_LIBS"
  ], [use_magick=no
   warn_magick="$magick library not found.  The imread, imwrite, and imfinfo functions for reading and writing image files will not be fully functional."])
m4trace:configure.ac:1695: -1- m4_pattern_allow([^HAVE_MAGICK$])
m4trace:configure.ac:1699: -1- OCTAVE_CONFIGURE_WARNING([warn_magick])
m4trace:configure.ac:1705: -1- m4_pattern_allow([^MAGICK_CPPFLAGS$])
m4trace:configure.ac:1706: -1- m4_pattern_allow([^MAGICK_LDFLAGS$])
m4trace:configure.ac:1707: -1- m4_pattern_allow([^MAGICK_LIBS$])
m4trace:configure.ac:1711: -1- m4_pattern_allow([^XMKMF$])
m4trace:configure.ac:1713: -1- m4_pattern_allow([^HAVE_X_WINDOWS$])
m4trace:configure.ac:1718: -1- m4_pattern_allow([^X11_INCFLAGS$])
m4trace:configure.ac:1726: -1- m4_pattern_allow([^X11_LIBS$])
m4trace:configure.ac:1731: -1- OCTAVE_HAVE_FRAMEWORK([Carbon], [[#include <Carbon/Carbon.h>]], [[CGMainDisplayID ()]], [have_framework_carbon=yes], [have_framework_carbon=no])
m4trace:configure.ac:1735: -1- m4_pattern_allow([^HAVE_FRAMEWORK_CARBON$])
m4trace:configure.ac:1739: -1- m4_pattern_allow([^CARBON_LIBS$])
m4trace:configure.ac:1744: -1- OCTAVE_CARBON_CGDISPLAYBITSPERPIXEL
m4trace:configure.ac:1744: -1- m4_pattern_allow([^HAVE_CARBON_CGDISPLAYBITSPERPIXEL$])
m4trace:configure.ac:1759: -1- OCTAVE_CHECK_LIB_OPENGL
m4trace:configure.ac:1759: -1- OCTAVE_HAVE_FRAMEWORK([OpenGL], [[
    #include <OpenGL/gl.h>
    #include <OpenGL/glu.h>
    ]], [[
    GLint par; glGetIntegerv (GL_VIEWPORT, &par);
    ]], [have_framework_opengl=yes], [have_framework_opengl=no])
m4trace:configure.ac:1759: -1- m4_pattern_allow([^HAVE_FRAMEWORK_OPENGL$])
m4trace:configure.ac:1759: -1- OCTAVE_CHECK_FUNC_GLUTESSCALLBACK_THREEDOTS
m4trace:configure.ac:1759: -1- m4_pattern_allow([^HAVE_GLUTESSCALLBACK_THREEDOTS$])
m4trace:configure.ac:1759: -1- m4_pattern_allow([^HAVE_WINDOWS_H$])
m4trace:configure.ac:1759: -1- m4_pattern_allow([^HAVE_GL_GLEXT_H$])
m4trace:configure.ac:1759: -1- m4_pattern_allow([^HAVE_OPENGL_GLEXT_H$])
m4trace:configure.ac:1759: -1- m4_pattern_allow([^OPENGL_LIBS$])
m4trace:configure.ac:1759: -1- m4_pattern_allow([^HAVE_OPENGL$])
m4trace:configure.ac:1762: -1- OCTAVE_CONFIGURE_WARNING([warn_opengl_libs])
m4trace:configure.ac:1778: -1- PKG_CHECK_MODULES([FT2], [freetype2], [
    min_ft2_version=9.03
    AC_MSG_CHECKING([for FreeType2 version >= $min_ft2_version])
    $PKG_CONFIG freetype2 --atleast-version=$min_ft2_version
    ac_status=$?
    if test "$ac_status" = 0; then
      AC_MSG_RESULT(yes)
      AC_DEFINE(HAVE_FREETYPE, 1, [Define to 1 if Freetype is available.])
      save_LIBS="$LIBS"
      LIBS="$FT2_LIBS $LIBS"
      AC_CHECK_FUNCS([FT_Reference_Face])
      LIBS="$save_LIBS"
    else
      AC_MSG_RESULT(no)
      warn_freetype="FreeType library >= 9.03 not found.  OpenGL graphics will not be fully functional."
    fi], [warn_freetype="FreeType library not found.  OpenGL graphics will not be fully functional."])
m4trace:configure.ac:1778: -1- m4_pattern_allow([^FT2_CFLAGS$])
m4trace:configure.ac:1778: -1- m4_pattern_allow([^FT2_LIBS$])
m4trace:configure.ac:1778: -1- PKG_CHECK_EXISTS([freetype2], [pkg_cv_[]FT2_CFLAGS=`$PKG_CONFIG --[]cflags "freetype2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1778: -1- PKG_CHECK_EXISTS([freetype2], [pkg_cv_[]FT2_LIBS=`$PKG_CONFIG --[]libs "freetype2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1778: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1778: -1- m4_pattern_allow([^HAVE_FREETYPE$])
m4trace:configure.ac:1778: -1- m4_pattern_allow([^HAVE_FT_REFERENCE_FACE$])
m4trace:configure.ac:1800: -1- OCTAVE_CONFIGURE_WARNING([warn_freetype])
m4trace:configure.ac:1805: -1- m4_pattern_allow([^FT2_CPPFLAGS$])
m4trace:configure.ac:1810: -1- OCTAVE_CHECK_LIB([fontconfig], [fontconfig], [Fontconfig library not found.  OpenGL graphics will not be fully functional.], [fontconfig.h fontconfig/fontconfig.h], [FcInit], [], [don't use fontconfig library, OpenGL graphics will not be fully functional])
m4trace:configure.ac:1810: -1- m4_pattern_allow([^FONTCONFIG_CPPFLAGS$])
m4trace:configure.ac:1810: -1- m4_pattern_allow([^FONTCONFIG_LDFLAGS$])
m4trace:configure.ac:1810: -1- PKG_CHECK_EXISTS([fontconfig], [
      if test -z "$m4_toupper([fontconfig])_CPPFLAGS"; then
        m4_toupper([fontconfig])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [fontconfig]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([fontconfig])_LDFLAGS"; then
        m4_toupper([fontconfig])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [fontconfig]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([fontconfig])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [fontconfig]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:1810: -1- m4_pattern_allow([^HAVE_FONTCONFIG$])
m4trace:configure.ac:1810: -1- m4_pattern_allow([^FONTCONFIG_LIBS$])
m4trace:configure.ac:1810: -1- OCTAVE_CONFIGURE_WARNING([warn_fontconfig])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QT([$QT_VERSIONS])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QT_VERSION([$ver])
m4trace:configure.ac:1841: -1- PKG_CHECK_MODULES([QT], [$QT_MODULES], [], [build_qt_gui=no
     warn_qt_libraries="Qt libraries not found; disabling Qt GUI"])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QT_CFLAGS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QT_LIBS$])
m4trace:configure.ac:1841: -1- PKG_CHECK_EXISTS([$QT_MODULES], [pkg_cv_[]QT_CFLAGS=`$PKG_CONFIG --[]cflags "$QT_MODULES" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1841: -1- PKG_CHECK_EXISTS([$QT_MODULES], [pkg_cv_[]QT_LIBS=`$PKG_CONFIG --[]libs "$QT_MODULES" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1841: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1841: -1- AM_CONDITIONAL([AMCOND_LINK_ALL_DEPS], [test $link_all_deps = yes])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^AMCOND_LINK_ALL_DEPS_TRUE$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^AMCOND_LINK_ALL_DEPS_FALSE$])
m4trace:configure.ac:1841: -1- _AM_SUBST_NOTMAKE([AMCOND_LINK_ALL_DEPS_TRUE])
m4trace:configure.ac:1841: -1- _AM_SUBST_NOTMAKE([AMCOND_LINK_ALL_DEPS_FALSE])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QTCHOOSER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_QTCHOOSER$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QT_TOOL([moc])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^MOC_QTVER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_MOC_QTVER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^MOC$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_MOC$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QT_TOOL([uic])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^UIC_QTVER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_UIC_QTVER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^UIC$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_UIC$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QT_TOOL([rcc])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^RCC_QTVER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_RCC_QTVER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^RCC$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_RCC$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QT_TOOL([lrelease])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^LRELEASE_QTVER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_LRELEASE_QTVER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^LRELEASE$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_LRELEASE$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QT_TOOL([qcollectiongenerator])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QCOLLECTIONGENERATOR_QTVER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_QCOLLECTIONGENERATOR_QTVER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QCOLLECTIONGENERATOR$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_QCOLLECTIONGENERATOR$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QT_TOOL([qhelpgenerator])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QHELPGENERATOR_QTVER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_QHELPGENERATOR_QTVER$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QHELPGENERATOR$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^ac_ct_QHELPGENERATOR$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_SETVBUF$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_PTY_H$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_LIBUTIL_H$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_UTIL_H$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_OPENPTY$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QT$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QSTANDARDPATHS$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_FUNC_QFONTMETRICS_HORIZONTAL_ADVANCE
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QFONTMETRICS_HORIZONTAL_ADVANCE$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_FUNC_QGUIAPPLICATION_SETDESKTOPFILENAME
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QGUIAPPLICATION_SETDESKTOPFILENAME$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_FUNC_QHELPSEARCHQUERYWIDGET_SEARCHINPUT
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QHELPSEARCHQUERYWIDGET_SEARCHINPUT$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_NEW_QHELPINDEXWIDGET_API
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_NEW_QHELPINDEXWIDGET_API$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_FUNC_QLIST_ITERATOR_CONSTRUCTOR
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QLIST_ITERATOR_CONSTRUCTOR$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_FUNC_QMAINWINDOW_RESIZEDOCKS
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QMAINWINDOW_RESIZEDOCKS$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_FUNC_QPRINTER_SETPAGESIZE
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QPRINTER_SETPAGESIZE$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_FUNC_QSCREEN_DEVICEPIXELRATIO
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QSCREEN_DEVICEPIXELRATIO$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_FUNC_QHELPENGINE_DOCUMENTSFORIDENTIFIER
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QHELPENGINE_DOCUMENTSFORIDENTIFIER$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_FUNC_QWHEELEVENT_ANGLEDELTA
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QWHEELEVENT_ANGLEDELTA$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_FUNC_QWHEELEVENT_POSITION
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QWHEELEVENT_POSITION$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QOVERLOAD_TEMPLATE
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QOVERLOAD_TEMPLATE$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QREGION_ITERATORS
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QREGION_ITERATORS$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QT_IMCURSORRECTANGLE_ENUM_VALUE
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QT_IMCURSORRECTANGLE_ENUM_VALUE$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QT_SPLITBEHAVIOR_ENUM
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QT_SPLITBEHAVIOR_ENUM$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QT_OPENGL_OK([build_qt_graphics=yes], [warn_qt_opengl="Qt does not work with the OpenGL libs (GL and GLU); disabling OpenGL graphics with Qt GUI"])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QOPENGLWIDGET$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QGLWIDGET$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QGLFUNCTIONS_1_1$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QT_GRAPHICS$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QT_OPENGL_OFFSCREEN_OK([have_qt_opengl_offscreen=yes])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QOFFSCREENSURFACE$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QT_OFFSCREEN$])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QSCINTILLA([$qt_version])
m4trace:configure.ac:1841: -1- OCTAVE_CHECK_QSCINTILLA_VERSION
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QSCI_VERSION_2_6_0$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QSCINTILLA$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QSCI_QSCILEXEROCTAVE_H$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QSCI_QSCILEXERMATLAB_H$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^MOCFLAGS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^UICFLAGS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^RCCFLAGS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^LRELEASEFLAGS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QCOLLECTIONGENERATORFLAGS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QHELPGENERATORFLAGS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QT_CPPFLAGS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QT_LDFLAGS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QT_LIBS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QT_OPENGL_CPPFLAGS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QT_OPENGL_LDFLAGS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^QT_OPENGL_LIBS$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^HAVE_QT5$])
m4trace:configure.ac:1841: -1- OCTAVE_CONFIGURE_WARNING([warn_qt_modules])
m4trace:configure.ac:1841: -1- OCTAVE_CONFIGURE_WARNING([warn_qt_libraries])
m4trace:configure.ac:1841: -1- OCTAVE_CONFIGURE_WARNING([warn_qt_version])
m4trace:configure.ac:1841: -1- OCTAVE_CONFIGURE_WARNING([warn_qt_tools])
m4trace:configure.ac:1841: -1- OCTAVE_CONFIGURE_WARNING([warn_qt_setvbuf])
m4trace:configure.ac:1841: -1- OCTAVE_CONFIGURE_WARNING([warn_qt_lib_fcns])
m4trace:configure.ac:1841: -1- OCTAVE_CONFIGURE_WARNING([warn_qt_abstract_item_model])
m4trace:configure.ac:1841: -1- OCTAVE_CONFIGURE_WARNING([warn_qt_opengl])
m4trace:configure.ac:1841: -1- OCTAVE_CONFIGURE_WARNING([warn_qscintilla])
m4trace:configure.ac:1841: -1- AM_CONDITIONAL([AMCOND_BUILD_QT_GUI], [test $build_qt_gui = yes])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^AMCOND_BUILD_QT_GUI_TRUE$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^AMCOND_BUILD_QT_GUI_FALSE$])
m4trace:configure.ac:1841: -1- _AM_SUBST_NOTMAKE([AMCOND_BUILD_QT_GUI_TRUE])
m4trace:configure.ac:1841: -1- _AM_SUBST_NOTMAKE([AMCOND_BUILD_QT_GUI_FALSE])
m4trace:configure.ac:1841: -1- AM_CONDITIONAL([AMCOND_BUILD_QT_GRAPHICS], [test $build_qt_graphics = yes])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^AMCOND_BUILD_QT_GRAPHICS_TRUE$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^AMCOND_BUILD_QT_GRAPHICS_FALSE$])
m4trace:configure.ac:1841: -1- _AM_SUBST_NOTMAKE([AMCOND_BUILD_QT_GRAPHICS_TRUE])
m4trace:configure.ac:1841: -1- _AM_SUBST_NOTMAKE([AMCOND_BUILD_QT_GRAPHICS_FALSE])
m4trace:configure.ac:1841: -1- AM_CONDITIONAL([AMCOND_HAVE_QSCINTILLA], [test $use_qscintilla = yes])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^AMCOND_HAVE_QSCINTILLA_TRUE$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^AMCOND_HAVE_QSCINTILLA_FALSE$])
m4trace:configure.ac:1841: -1- _AM_SUBST_NOTMAKE([AMCOND_HAVE_QSCINTILLA_TRUE])
m4trace:configure.ac:1841: -1- _AM_SUBST_NOTMAKE([AMCOND_HAVE_QSCINTILLA_FALSE])
m4trace:configure.ac:1841: -1- AM_CONDITIONAL([WIN32_TERMINAL], [test $win32_terminal = yes])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^WIN32_TERMINAL_TRUE$])
m4trace:configure.ac:1841: -1- m4_pattern_allow([^WIN32_TERMINAL_FALSE$])
m4trace:configure.ac:1841: -1- _AM_SUBST_NOTMAKE([WIN32_TERMINAL_TRUE])
m4trace:configure.ac:1841: -1- _AM_SUBST_NOTMAKE([WIN32_TERMINAL_FALSE])
m4trace:configure.ac:1854: -1- m4_pattern_allow([^DEFAULT_TERMINAL_FONT$])
m4trace:configure.ac:1855: -1- m4_pattern_allow([^DEFAULT_TERMINAL_FONT_SIZE$])
m4trace:configure.ac:1900: -1- m4_pattern_allow([^FLTK_CONFIG$])
m4trace:configure.ac:1907: -1- OCTAVE_CONFIGURE_WARNING([warn_fltk_config])
m4trace:configure.ac:1958: -1- m4_pattern_allow([^HAVE_FLTK$])
m4trace:configure.ac:1963: -1- OCTAVE_CONFIGURE_WARNING([warn_fltk_opengl])
m4trace:configure.ac:1968: -1- m4_pattern_allow([^FLTK_CPPFLAGS$])
m4trace:configure.ac:1969: -1- m4_pattern_allow([^FLTK_LDFLAGS$])
m4trace:configure.ac:1970: -1- m4_pattern_allow([^FLTK_LIBS$])
m4trace:configure.ac:1982: -1- m4_pattern_allow([^HAVE_GL2PS_H$])
m4trace:configure.ac:1987: -1- OCTAVE_CONFIGURE_WARNING([warn_gl2ps])
m4trace:configure.ac:1991: -1- m4_pattern_allow([^HAVE_GL2PSLINEJOIN$])
m4trace:configure.ac:1995: -1- m4_pattern_allow([^GL2PS_LIBS$])
m4trace:configure.ac:2020: -1- m4_pattern_allow([^SYSTEM_FREEFONT_DIR$])
m4trace:configure.ac:2023: -1- AM_CONDITIONAL([AMCOND_INSTALL_INTERNAL_FONT_FILES], [test -z "$SYSTEM_FREEFONT_DIR"])
m4trace:configure.ac:2023: -1- m4_pattern_allow([^AMCOND_INSTALL_INTERNAL_FONT_FILES_TRUE$])
m4trace:configure.ac:2023: -1- m4_pattern_allow([^AMCOND_INSTALL_INTERNAL_FONT_FILES_FALSE$])
m4trace:configure.ac:2023: -1- _AM_SUBST_NOTMAKE([AMCOND_INSTALL_INTERNAL_FONT_FILES_TRUE])
m4trace:configure.ac:2023: -1- _AM_SUBST_NOTMAKE([AMCOND_INSTALL_INTERNAL_FONT_FILES_FALSE])
m4trace:configure.ac:2032: -1- OCTAVE_CHECK_LIB([qrupdate], [qrupdate], [qrupdate not found.  The QR & Cholesky updating functions will be slow.], [], [sqr1up], [Fortran 77], [don't use qrupdate, disable QR & Cholesky updating functions])
m4trace:configure.ac:2032: -1- m4_pattern_allow([^QRUPDATE_CPPFLAGS$])
m4trace:configure.ac:2032: -1- m4_pattern_allow([^QRUPDATE_LDFLAGS$])
m4trace:configure.ac:2032: -1- PKG_CHECK_EXISTS([qrupdate], [
      if test -z "$m4_toupper([qrupdate])_CPPFLAGS"; then
        m4_toupper([qrupdate])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [qrupdate]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([qrupdate])_LDFLAGS"; then
        m4_toupper([qrupdate])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [qrupdate]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([qrupdate])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [qrupdate]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2032: -1- m4_pattern_allow([^HAVE_QRUPDATE$])
m4trace:configure.ac:2032: -1- m4_pattern_allow([^QRUPDATE_LIBS$])
m4trace:configure.ac:2032: -1- OCTAVE_CONFIGURE_WARNING([warn_qrupdate])
m4trace:configure.ac:2049: -1- m4_pattern_allow([^HAVE_QRUPDATE_LUU$])
m4trace:configure.ac:2071: -1- OCTAVE_CHECK_LIB([suitesparseconfig], [SUITESPARSECONFIG], [], [], [SuiteSparse_time], [], [don't link directly with suitesparseconfig library])
m4trace:configure.ac:2071: -1- m4_pattern_allow([^SUITESPARSECONFIG_CPPFLAGS$])
m4trace:configure.ac:2071: -1- m4_pattern_allow([^SUITESPARSECONFIG_LDFLAGS$])
m4trace:configure.ac:2071: -1- PKG_CHECK_EXISTS([suitesparseconfig], [
      if test -z "$m4_toupper([suitesparseconfig])_CPPFLAGS"; then
        m4_toupper([suitesparseconfig])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [suitesparseconfig]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([suitesparseconfig])_LDFLAGS"; then
        m4_toupper([suitesparseconfig])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [suitesparseconfig]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([suitesparseconfig])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [suitesparseconfig]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2071: -1- m4_pattern_allow([^HAVE_SUITESPARSECONFIG$])
m4trace:configure.ac:2071: -1- m4_pattern_allow([^SUITESPARSECONFIG_LIBS$])
m4trace:configure.ac:2071: -1- OCTAVE_CONFIGURE_WARNING([warn_suitesparseconfig])
m4trace:configure.ac:2086: -1- OCTAVE_CHECK_LIB([amd], [AMD], [AMD library not found.  This will result in some lack of functionality for sparse matrices.], [amd.h suitesparse/amd.h amd/amd.h], [amd_postorder], [], [don't use AMD library, disable some sparse matrix functionality])
m4trace:configure.ac:2086: -1- m4_pattern_allow([^AMD_CPPFLAGS$])
m4trace:configure.ac:2086: -1- m4_pattern_allow([^AMD_LDFLAGS$])
m4trace:configure.ac:2086: -1- PKG_CHECK_EXISTS([amd], [
      if test -z "$m4_toupper([amd])_CPPFLAGS"; then
        m4_toupper([amd])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [amd]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([amd])_LDFLAGS"; then
        m4_toupper([amd])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [amd]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([amd])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [amd]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2086: -1- m4_pattern_allow([^HAVE_AMD$])
m4trace:configure.ac:2086: -1- m4_pattern_allow([^AMD_LIBS$])
m4trace:configure.ac:2086: -1- OCTAVE_CONFIGURE_WARNING([warn_amd])
m4trace:configure.ac:2094: -1- OCTAVE_CHECK_LIB([camd], [CAMD], [CAMD library not found.  This will result in some lack of functionality for sparse matrices.], [camd.h suitesparse/camd.h camd/camd.h], [camd_postorder], [], [don't use CAMD library, disable some sparse matrix functionality])
m4trace:configure.ac:2094: -1- m4_pattern_allow([^CAMD_CPPFLAGS$])
m4trace:configure.ac:2094: -1- m4_pattern_allow([^CAMD_LDFLAGS$])
m4trace:configure.ac:2094: -1- PKG_CHECK_EXISTS([camd], [
      if test -z "$m4_toupper([camd])_CPPFLAGS"; then
        m4_toupper([camd])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [camd]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([camd])_LDFLAGS"; then
        m4_toupper([camd])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [camd]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([camd])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [camd]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2094: -1- m4_pattern_allow([^HAVE_CAMD$])
m4trace:configure.ac:2094: -1- m4_pattern_allow([^CAMD_LIBS$])
m4trace:configure.ac:2094: -1- OCTAVE_CONFIGURE_WARNING([warn_camd])
m4trace:configure.ac:2102: -1- OCTAVE_CHECK_LIB([colamd], [COLAMD], [COLAMD library not found.  This will result in some lack of functionality for sparse matrices.], [colamd.h suitesparse/colamd.h colamd/colamd.h], [colamd], [], [don't use COLAMD library, disable some sparse matrix functionality])
m4trace:configure.ac:2102: -1- m4_pattern_allow([^COLAMD_CPPFLAGS$])
m4trace:configure.ac:2102: -1- m4_pattern_allow([^COLAMD_LDFLAGS$])
m4trace:configure.ac:2102: -1- PKG_CHECK_EXISTS([colamd], [
      if test -z "$m4_toupper([colamd])_CPPFLAGS"; then
        m4_toupper([colamd])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [colamd]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([colamd])_LDFLAGS"; then
        m4_toupper([colamd])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [colamd]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([colamd])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [colamd]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2102: -1- m4_pattern_allow([^HAVE_COLAMD$])
m4trace:configure.ac:2102: -1- m4_pattern_allow([^COLAMD_LIBS$])
m4trace:configure.ac:2102: -1- OCTAVE_CONFIGURE_WARNING([warn_colamd])
m4trace:configure.ac:2110: -1- OCTAVE_CHECK_LIB([ccolamd], [CCOLAMD], [CCOLAMD library not found.  This will result in some lack of functionality for sparse matrices.], [ccolamd.h suitesparse/ccolamd.h ccolamd/ccolamd.h], [ccolamd], [], [don't use CCOLAMD library, disable some sparse matrix functionality])
m4trace:configure.ac:2110: -1- m4_pattern_allow([^CCOLAMD_CPPFLAGS$])
m4trace:configure.ac:2110: -1- m4_pattern_allow([^CCOLAMD_LDFLAGS$])
m4trace:configure.ac:2110: -1- PKG_CHECK_EXISTS([ccolamd], [
      if test -z "$m4_toupper([ccolamd])_CPPFLAGS"; then
        m4_toupper([ccolamd])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [ccolamd]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([ccolamd])_LDFLAGS"; then
        m4_toupper([ccolamd])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [ccolamd]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([ccolamd])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [ccolamd]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2110: -1- m4_pattern_allow([^HAVE_CCOLAMD$])
m4trace:configure.ac:2110: -1- m4_pattern_allow([^CCOLAMD_LIBS$])
m4trace:configure.ac:2110: -1- OCTAVE_CONFIGURE_WARNING([warn_ccolamd])
m4trace:configure.ac:2122: -1- OCTAVE_CHECK_LIB([cholmod], [CHOLMOD], [CHOLMOD library not found.  This will result in some lack of functionality for sparse matrices.], [cholmod.h suitesparse/cholmod.h cholmod/cholmod.h], [cholmod${CHOLMOD_TAG}start], [], [don't use CHOLMOD library, disable some sparse matrix functionality])
m4trace:configure.ac:2122: -1- m4_pattern_allow([^CHOLMOD_CPPFLAGS$])
m4trace:configure.ac:2122: -1- m4_pattern_allow([^CHOLMOD_LDFLAGS$])
m4trace:configure.ac:2122: -1- PKG_CHECK_EXISTS([cholmod], [
      if test -z "$m4_toupper([cholmod])_CPPFLAGS"; then
        m4_toupper([cholmod])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [cholmod]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([cholmod])_LDFLAGS"; then
        m4_toupper([cholmod])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [cholmod]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([cholmod])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [cholmod]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2122: -1- m4_pattern_allow([^HAVE_CHOLMOD$])
m4trace:configure.ac:2122: -1- m4_pattern_allow([^CHOLMOD_LIBS$])
m4trace:configure.ac:2122: -1- OCTAVE_CONFIGURE_WARNING([warn_cholmod])
m4trace:configure.ac:2133: -1- OCTAVE_CHECK_LIB([spqr], [SPQR], [SPQR library not found.  This will result in some lack of functionality for sparse matrices.], [SuiteSparseQR.hpp suitesparse/SuiteSparseQR.hpp], [SuiteSparseQR_C], [C++], [don't use SPQR library, disable some sparse matrix functionality])
m4trace:configure.ac:2133: -1- m4_pattern_allow([^SPQR_CPPFLAGS$])
m4trace:configure.ac:2133: -1- m4_pattern_allow([^SPQR_LDFLAGS$])
m4trace:configure.ac:2133: -1- PKG_CHECK_EXISTS([spqr], [
      if test -z "$m4_toupper([spqr])_CPPFLAGS"; then
        m4_toupper([spqr])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [spqr]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([spqr])_LDFLAGS"; then
        m4_toupper([spqr])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [spqr]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([spqr])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [spqr]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2133: -1- m4_pattern_allow([^HAVE_SPQR$])
m4trace:configure.ac:2133: -1- m4_pattern_allow([^SPQR_LIBS$])
m4trace:configure.ac:2133: -1- OCTAVE_CONFIGURE_WARNING([warn_spqr])
m4trace:configure.ac:2142: -1- OCTAVE_CHECK_LIB([cxsparse], [CXSparse], [CXSparse library not found.  This will result in some lack of functionality for sparse matrices.], [cs.h suitesparse/cs.h cxsparse/cs.h], [cs${CXSPARSE_TAG}sqr], [C++], [don't use CXSparse library, disable some sparse matrix functionality])
m4trace:configure.ac:2142: -1- m4_pattern_allow([^CXSPARSE_CPPFLAGS$])
m4trace:configure.ac:2142: -1- m4_pattern_allow([^CXSPARSE_LDFLAGS$])
m4trace:configure.ac:2142: -1- PKG_CHECK_EXISTS([cxsparse], [
      if test -z "$m4_toupper([cxsparse])_CPPFLAGS"; then
        m4_toupper([cxsparse])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [cxsparse]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([cxsparse])_LDFLAGS"; then
        m4_toupper([cxsparse])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [cxsparse]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([cxsparse])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [cxsparse]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2142: -1- m4_pattern_allow([^HAVE_CXSPARSE$])
m4trace:configure.ac:2142: -1- m4_pattern_allow([^CXSPARSE_LIBS$])
m4trace:configure.ac:2142: -1- OCTAVE_CONFIGURE_WARNING([warn_cxsparse])
m4trace:configure.ac:2151: -1- OCTAVE_CHECK_CXSPARSE_VERSION_OK
m4trace:configure.ac:2151: -1- m4_pattern_allow([^HAVE_CXSPARSE_VERSION_OK$])
m4trace:configure.ac:2164: -1- OCTAVE_CHECK_LIB([umfpack], [UMFPACK], [UMFPACK not found.  This will result in some lack of functionality for sparse matrices.], [umfpack.h suitesparse/umfpack.h umfpack/umfpack.h], [umfpack${UMFPACK_TAG}get_determinant], [], [don't use UMFPACK, disable some sparse matrix functionality])
m4trace:configure.ac:2164: -1- m4_pattern_allow([^UMFPACK_CPPFLAGS$])
m4trace:configure.ac:2164: -1- m4_pattern_allow([^UMFPACK_LDFLAGS$])
m4trace:configure.ac:2164: -1- PKG_CHECK_EXISTS([umfpack], [
      if test -z "$m4_toupper([umfpack])_CPPFLAGS"; then
        m4_toupper([umfpack])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [umfpack]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([umfpack])_LDFLAGS"; then
        m4_toupper([umfpack])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [umfpack]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([umfpack])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [umfpack]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2164: -1- m4_pattern_allow([^HAVE_UMFPACK$])
m4trace:configure.ac:2164: -1- m4_pattern_allow([^UMFPACK_LIBS$])
m4trace:configure.ac:2164: -1- OCTAVE_CONFIGURE_WARNING([warn_umfpack])
m4trace:configure.ac:2178: -1- OCTAVE_CHECK_LIB([umfpack], [UMFPACK], [UMFPACK not found.  This will result in some lack of functionality for sparse matrices.], [umfpack.h suitesparse/umfpack.h umfpack/umfpack.h], [umfpack${UMFPACK_TAG}get_determinant], [], [don't use UMFPACK, disable some sparse matrix functionality])
m4trace:configure.ac:2178: -1- m4_pattern_allow([^UMFPACK_CPPFLAGS$])
m4trace:configure.ac:2178: -1- m4_pattern_allow([^UMFPACK_LDFLAGS$])
m4trace:configure.ac:2178: -1- PKG_CHECK_EXISTS([umfpack], [
      if test -z "$m4_toupper([umfpack])_CPPFLAGS"; then
        m4_toupper([umfpack])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [umfpack]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([umfpack])_LDFLAGS"; then
        m4_toupper([umfpack])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [umfpack]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([umfpack])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [umfpack]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2178: -1- m4_pattern_allow([^HAVE_UMFPACK$])
m4trace:configure.ac:2178: -1- m4_pattern_allow([^UMFPACK_LIBS$])
m4trace:configure.ac:2178: -1- OCTAVE_CONFIGURE_WARNING([warn_umfpack])
m4trace:configure.ac:2191: -1- OCTAVE_CHECK_LIB([klu], [KLU], [KLU library not found.  This will result in some lack of functionality for sparse matrices.], [klu.h suitesparse/klu.h klu/klu.h], [klu_solve], [], [don't use KLU library, disable some sparse matrix functionality])
m4trace:configure.ac:2191: -1- m4_pattern_allow([^KLU_CPPFLAGS$])
m4trace:configure.ac:2191: -1- m4_pattern_allow([^KLU_LDFLAGS$])
m4trace:configure.ac:2191: -1- PKG_CHECK_EXISTS([klu], [
      if test -z "$m4_toupper([klu])_CPPFLAGS"; then
        m4_toupper([klu])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [klu]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([klu])_LDFLAGS"; then
        m4_toupper([klu])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [klu]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([klu])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [klu]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2191: -1- m4_pattern_allow([^HAVE_KLU$])
m4trace:configure.ac:2191: -1- m4_pattern_allow([^KLU_LIBS$])
m4trace:configure.ac:2191: -1- OCTAVE_CONFIGURE_WARNING([warn_klu])
m4trace:configure.ac:2211: -1- m4_pattern_allow([^SPARSE_XCPPFLAGS$])
m4trace:configure.ac:2212: -1- m4_pattern_allow([^SPARSE_XLDFLAGS$])
m4trace:configure.ac:2213: -1- m4_pattern_allow([^SPARSE_XLIBS$])
m4trace:configure.ac:2225: -1- OCTAVE_UMFPACK_SEPARATE_SPLIT
m4trace:configure.ac:2225: -1- m4_pattern_allow([^UMFPACK_SEPARATE_SPLIT$])
m4trace:configure.ac:2234: -1- OCTAVE_CHECK_LIB([sundials_nvecserial], [SUNDIALS NVECTOR], [SUNDIALS NVECTOR serial library not found.  The solvers ode15i and ode15s will be disabled.], [nvector_serial.h nvector/nvector_serial.h], [N_VNew_Serial], [], [don't use SUNDIALS NVECTOR library, disable solvers ode15i and ode15s])
m4trace:configure.ac:2234: -1- m4_pattern_allow([^SUNDIALS_NVECSERIAL_CPPFLAGS$])
m4trace:configure.ac:2234: -1- m4_pattern_allow([^SUNDIALS_NVECSERIAL_LDFLAGS$])
m4trace:configure.ac:2234: -1- PKG_CHECK_EXISTS([sundials_nvecserial], [
      if test -z "$m4_toupper([sundials_nvecserial])_CPPFLAGS"; then
        m4_toupper([sundials_nvecserial])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [sundials_nvecserial]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([sundials_nvecserial])_LDFLAGS"; then
        m4_toupper([sundials_nvecserial])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [sundials_nvecserial]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([sundials_nvecserial])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [sundials_nvecserial]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2234: -1- m4_pattern_allow([^HAVE_SUNDIALS_NVECSERIAL$])
m4trace:configure.ac:2234: -1- m4_pattern_allow([^SUNDIALS_NVECSERIAL_LIBS$])
m4trace:configure.ac:2234: -1- OCTAVE_CONFIGURE_WARNING([warn_sundials_nvecserial])
m4trace:configure.ac:2249: -1- OCTAVE_CHECK_LIB([sundials_ida], [SUNDIALS IDA], [SUNDIALS IDA library not found.  The solvers ode15i and ode15s will be disabled.], [ida.h ida/ida.h], [IDAInit], [], [don't use SUNDIALS IDA library, disable solvers ode15i and ode15s])
m4trace:configure.ac:2249: -1- m4_pattern_allow([^SUNDIALS_IDA_CPPFLAGS$])
m4trace:configure.ac:2249: -1- m4_pattern_allow([^SUNDIALS_IDA_LDFLAGS$])
m4trace:configure.ac:2249: -1- PKG_CHECK_EXISTS([sundials_ida], [
      if test -z "$m4_toupper([sundials_ida])_CPPFLAGS"; then
        m4_toupper([sundials_ida])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [sundials_ida]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([sundials_ida])_LDFLAGS"; then
        m4_toupper([sundials_ida])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [sundials_ida]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([sundials_ida])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [sundials_ida]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2249: -1- m4_pattern_allow([^HAVE_SUNDIALS_IDA$])
m4trace:configure.ac:2249: -1- m4_pattern_allow([^SUNDIALS_IDA_LIBS$])
m4trace:configure.ac:2249: -1- OCTAVE_CONFIGURE_WARNING([warn_sundials_ida])
m4trace:configure.ac:2273: -1- OCTAVE_CHECK_SUNDIALS_COMPATIBLE_API
m4trace:configure.ac:2273: -1- m4_pattern_allow([^HAVE_IDASETJACFN$])
m4trace:configure.ac:2273: -1- m4_pattern_allow([^HAVE_IDASETLINEARSOLVER$])
m4trace:configure.ac:2273: -1- m4_pattern_allow([^HAVE_SUNLINSOL_DENSE$])
m4trace:configure.ac:2273: -1- m4_pattern_allow([^HAVE_SUNSPARSEMATRIX_REALLOCATE$])
m4trace:configure.ac:2273: -1- m4_pattern_allow([^HAVE_SUNCONTEXT_CREATE$])
m4trace:configure.ac:2273: -1- m4_pattern_allow([^HAVE_IDA_IDA_DIRECT_H$])
m4trace:configure.ac:2273: -1- m4_pattern_allow([^HAVE_IDA_DIRECT_H$])
m4trace:configure.ac:2273: -1- m4_pattern_allow([^HAVE_IDADLSSETJACFN$])
m4trace:configure.ac:2273: -1- m4_pattern_allow([^HAVE_IDADLSSETLINEARSOLVER$])
m4trace:configure.ac:2273: -1- m4_pattern_allow([^HAVE_SUNDENSELINEARSOLVER$])
m4trace:configure.ac:2273: -1- m4_pattern_allow([^HAVE_SUNDIALS_SUNCONTEXT$])
m4trace:configure.ac:2273: -1- OCTAVE_CONFIGURE_WARNING([warn_sundials_disabled])
m4trace:configure.ac:2276: -1- OCTAVE_CHECK_SUNDIALS_SIZEOF_REALTYPE
m4trace:configure.ac:2276: -1- OCTAVE_CONFIGURE_WARNING([warn_sundials_disabled])
m4trace:configure.ac:2279: -1- OCTAVE_CHECK_SUNDIALS_SUNLINSOL_DENSE
m4trace:configure.ac:2279: -1- m4_pattern_allow([^HAVE_SUNLINSOL_SUNLINSOL_DENSE_H$])
m4trace:configure.ac:2284: -1- OCTAVE_CHECK_SUNDIALS_SUNLINSOL_KLU
m4trace:configure.ac:2284: -1- m4_pattern_allow([^HAVE_KLU_H$])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^HAVE_KLU_KLU_H$])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^HAVE_SUITESPARSE_KLU_H$])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^HAVE_UFSPARSE_KLU_H$])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^HAVE_SUNLINSOL_SUNLINSOL_KLU_H$])
m4trace:configure.ac:2284: -1- OCTAVE_CHECK_LIB([sundials_sunlinsolklu], [SUNLINSOL_KLU], [], [], [SUNLinSol_KLU], [], [don't use SUNDIALS SUNLINSOL_KLU library, disable ode15i and ode15s sparse Jacobian], [AC_CHECK_FUNCS([SUNLinSol_KLU])
     AC_CACHE_CHECK([whether compiling a program that calls SUNLinSol_KLU works],
      [octave_cv_sundials_sunlinsol_klu],
      [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #if defined (HAVE_IDA_IDA_H)
         #include <ida/ida.h>
         #endif
         #if defined (HAVE_KLU_H)
         #include <klu.h>
         #endif
         #if defined (HAVE_KLU_KLU_H)
         #include <klu/klu.h>
         #endif
         #if defined (HAVE_SUITESPARSE_KLU_H)
         #include <suitesparse/klu.h>
         #endif
         #if defined (HAVE_UFPARSE_KLU_H)
         #include <ufsparse/klu.h>
         #endif
         #if defined (HAVE_SUNLINSOL_SUNLINSOL_KLU_H)
         #include <sunlinsol/sunlinsol_klu.h>
         #endif
         ]], [[
         #if defined (HAVE_SUNCONTEXT_CREATE)
           SUNContext *sunContext;
           if (SUNContext_Create (NULL, sunContext) < 0)
             1/0;  // provoke an error
           SUNLinSol_KLU (0, 0, *sunContext);
           SUNContext_Free (sunContext);
         #else
           SUNLinSol_KLU (0, 0);
         #endif
      ]])],
      octave_cv_sundials_sunlinsol_klu=yes,
      octave_cv_sundials_sunlinsol_klu=no)
    ])])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^SUNDIALS_SUNLINSOLKLU_CPPFLAGS$])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^SUNDIALS_SUNLINSOLKLU_LDFLAGS$])
m4trace:configure.ac:2284: -1- PKG_CHECK_EXISTS([sundials_sunlinsolklu], [
      if test -z "$m4_toupper([sundials_sunlinsolklu])_CPPFLAGS"; then
        m4_toupper([sundials_sunlinsolklu])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [sundials_sunlinsolklu]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([sundials_sunlinsolklu])_LDFLAGS"; then
        m4_toupper([sundials_sunlinsolklu])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [sundials_sunlinsolklu]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([sundials_sunlinsolklu])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [sundials_sunlinsolklu]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^HAVE_SUNLINSOL_KLU$])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^SUNDIALS_SUNLINSOLKLU_LIBS$])
m4trace:configure.ac:2284: -1- OCTAVE_CONFIGURE_WARNING([warn_sundials_sunlinsolklu])
m4trace:configure.ac:2284: -1- OCTAVE_CHECK_LIB([sundials_sunlinsolklu], [SUNLINSOL_KLU], [], [], [SUNKLU], [], [don't use SUNDIALS SUNLINSOL_KLU library, disable ode15i and ode15s sparse Jacobian], [AC_CHECK_FUNCS([SUNKLU])
       AC_CACHE_CHECK([whether compiling a program that calls SUNLinSol_KLU works],
        [octave_cv_sundials_sunlinsol_klu],
        [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
           #if defined (HAVE_IDA_IDA_H)
           #include <ida/ida.h>
           #endif
           #if defined (HAVE_KLU_H)
           #include <klu.h>
           #endif
           #if defined (HAVE_KLU_KLU_H)
           #include <klu/klu.h>
           #endif
           #if defined (HAVE_SUITESPARSE_KLU_H)
           #include <suitesparse/klu.h>
           #endif
           #if defined (HAVE_UFPARSE_KLU_H)
           #include <ufsparse/klu.h>
           #endif
           #if defined (HAVE_SUNLINSOL_SUNLINSOL_KLU_H)
           #include <sunlinsol/sunlinsol_klu.h>
           #endif
           ]], [[
           SUNKLU (0, 0);
        ]])],
        octave_cv_sundials_sunlinsol_klu=yes,
        octave_cv_sundials_sunlinsol_klu=no)
      ])])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^SUNDIALS_SUNLINSOLKLU_CPPFLAGS$])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^SUNDIALS_SUNLINSOLKLU_LDFLAGS$])
m4trace:configure.ac:2284: -1- PKG_CHECK_EXISTS([sundials_sunlinsolklu], [
      if test -z "$m4_toupper([sundials_sunlinsolklu])_CPPFLAGS"; then
        m4_toupper([sundials_sunlinsolklu])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [sundials_sunlinsolklu]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([sundials_sunlinsolklu])_LDFLAGS"; then
        m4_toupper([sundials_sunlinsolklu])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [sundials_sunlinsolklu]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([sundials_sunlinsolklu])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [sundials_sunlinsolklu]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^HAVE_SUNKLU$])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^SUNDIALS_SUNLINSOLKLU_LIBS$])
m4trace:configure.ac:2284: -1- OCTAVE_CONFIGURE_WARNING([warn_sundials_sunlinsolklu])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^HAVE_SUNDIALS_SUNLINSOL_KLU$])
m4trace:configure.ac:2284: -1- OCTAVE_CONFIGURE_WARNING([warn_sundials_sunlinsol_klu])
m4trace:configure.ac:2303: -1- m4_pattern_allow([^HAVE_SUNDIALS$])
m4trace:configure.ac:2327: -1- OCTAVE_CONFIGURE_WARNING([warn_sundials_disabled])
m4trace:configure.ac:2332: -1- m4_pattern_allow([^SUNDIALS_XCPPFLAGS$])
m4trace:configure.ac:2333: -1- m4_pattern_allow([^SUNDIALS_XLDFLAGS$])
m4trace:configure.ac:2334: -1- m4_pattern_allow([^SUNDIALS_XLIBS$])
m4trace:configure.ac:2340: -1- OCTAVE_CHECK_LIB([arpack], [ARPACK], [ARPACK not found.  The eigs function will be disabled.], [], [dseupd], [Fortran 77], [don't use the ARPACK library, disable eigs function], [warn_arpack=
   OCTAVE_CHECK_LIB_ARPACK_OK_1(
     [AC_DEFINE(HAVE_ARPACK, 1, [Define to 1 if ARPACK is available.])],
     [warn_arpack="ARPACK library found, but does not seem to work properly; disabling eigs function"])
   if test -n "$ARPACK_LIBS"; then
     OCTAVE_CHECK_LIB_ARPACK_OK_2([],
       [AC_MSG_WARN([ARPACK library found, but is buggy; upgrade library (>= v3.3.0) for better results])])
   fi
   ])
m4trace:configure.ac:2340: -1- m4_pattern_allow([^ARPACK_CPPFLAGS$])
m4trace:configure.ac:2340: -1- m4_pattern_allow([^ARPACK_LDFLAGS$])
m4trace:configure.ac:2340: -1- PKG_CHECK_EXISTS([arpack], [
      if test -z "$m4_toupper([arpack])_CPPFLAGS"; then
        m4_toupper([arpack])_CPPFLAGS="$($PKG_CONFIG --cflags-only-I m4_default([], [arpack]) | $SED -e 's/^ *$//')"
      fi
      if test -z "$m4_toupper([arpack])_LDFLAGS"; then
        m4_toupper([arpack])_LDFLAGS="$($PKG_CONFIG --libs-only-L m4_default([], [arpack]) | $SED -e 's/^ *$//')"
      fi
      m4_toupper([arpack])_LIBS="$($PKG_CONFIG --libs-only-l m4_default([], [arpack]) | $SED -e 's/^ *$//')"
    ])
m4trace:configure.ac:2340: -1- OCTAVE_CHECK_LIB_ARPACK_OK_1([AC_DEFINE(HAVE_ARPACK, 1, [Define to 1 if ARPACK is available.])], [warn_arpack="ARPACK library found, but does not seem to work properly; disabling eigs function"])
m4trace:configure.ac:2340: -1- m4_pattern_allow([^HAVE_ARPACK$])
m4trace:configure.ac:2340: -1- OCTAVE_CHECK_LIB_ARPACK_OK_2([], [AC_MSG_WARN([ARPACK library found, but is buggy; upgrade library (>= v3.3.0) for better results])])
m4trace:configure.ac:2340: -1- m4_pattern_allow([^ARPACK_LIBS$])
m4trace:configure.ac:2340: -1- OCTAVE_CONFIGURE_WARNING([warn_arpack])
m4trace:configure.ac:2383: -1- m4_pattern_allow([^JAVA_HOME$])
m4trace:configure.ac:2403: -1- OCTAVE_CONFIGURE_WARNING([warn_java_home])
m4trace:configure.ac:2412: -1- m4_pattern_allow([^JAVA$])
m4trace:configure.ac:2445: -1- m4_pattern_allow([^JAVAC$])
m4trace:configure.ac:2446: -1- m4_pattern_allow([^JAR$])
m4trace:configure.ac:2476: -1- m4_pattern_allow([^HAVE_JAVA$])
m4trace:configure.ac:2490: -1- m4_pattern_allow([^HAVE_JAVA$])
m4trace:configure.ac:2611: -1- m4_pattern_allow([^HAVE_JAVA$])
m4trace:configure.ac:2616: -1- OCTAVE_CONFIGURE_WARNING([warn_java])
m4trace:configure.ac:2619: -1- AM_CONDITIONAL([AMCOND_HAVE_JAVA], [test $build_java = yes])
m4trace:configure.ac:2619: -1- m4_pattern_allow([^AMCOND_HAVE_JAVA_TRUE$])
m4trace:configure.ac:2619: -1- m4_pattern_allow([^AMCOND_HAVE_JAVA_FALSE$])
m4trace:configure.ac:2619: -1- _AM_SUBST_NOTMAKE([AMCOND_HAVE_JAVA_TRUE])
m4trace:configure.ac:2619: -1- _AM_SUBST_NOTMAKE([AMCOND_HAVE_JAVA_FALSE])
m4trace:configure.ac:2620: -1- m4_pattern_allow([^JAVA$])
m4trace:configure.ac:2621: -1- m4_pattern_allow([^JAVAC$])
m4trace:configure.ac:2622: -1- m4_pattern_allow([^JAR$])
m4trace:configure.ac:2623: -1- m4_pattern_allow([^JAVA_CPPFLAGS$])
m4trace:configure.ac:2624: -1- m4_pattern_allow([^JAVA_LIBS$])
m4trace:configure.ac:2625: -1- m4_pattern_allow([^JAVA_HOME$])
m4trace:configure.ac:2626: -1- m4_pattern_allow([^JAVA_LDPATH$])
m4trace:configure.ac:2631: -1- OCTAVE_CONFIGURE_WARNING([warn_docs])
m4trace:configure.ac:2644: -1- OCTAVE_CONFIGURE_WARNING([warn_docs_graphics])
m4trace:configure.ac:2650: -1- OCTAVE_CONFIGURE_WARNING([warn_docs_makeinfo])
m4trace:configure.ac:2654: -1- m4_pattern_allow([^ENABLE_DOCS$])
m4trace:configure.ac:2658: -1- AM_CONDITIONAL([AMCOND_BUILD_DOCS], [test $ENABLE_DOCS = yes])
m4trace:configure.ac:2658: -1- m4_pattern_allow([^AMCOND_BUILD_DOCS_TRUE$])
m4trace:configure.ac:2658: -1- m4_pattern_allow([^AMCOND_BUILD_DOCS_FALSE$])
m4trace:configure.ac:2658: -1- _AM_SUBST_NOTMAKE([AMCOND_BUILD_DOCS_TRUE])
m4trace:configure.ac:2658: -1- _AM_SUBST_NOTMAKE([AMCOND_BUILD_DOCS_FALSE])
m4trace:configure.ac:2660: -1- AM_CONDITIONAL([AMCOND_BUILD_QT_DOCS], [test $ENABLE_DOCS = yes && test $build_qt_gui = yes])
m4trace:configure.ac:2660: -1- m4_pattern_allow([^AMCOND_BUILD_QT_DOCS_TRUE$])
m4trace:configure.ac:2660: -1- m4_pattern_allow([^AMCOND_BUILD_QT_DOCS_FALSE$])
m4trace:configure.ac:2660: -1- _AM_SUBST_NOTMAKE([AMCOND_BUILD_QT_DOCS_TRUE])
m4trace:configure.ac:2660: -1- _AM_SUBST_NOTMAKE([AMCOND_BUILD_QT_DOCS_FALSE])
m4trace:configure.ac:2668: -1- m4_pattern_allow([^OCTAVE_RELOCATE_ALL$])
m4trace:configure.ac:2670: -1- m4_pattern_allow([^OCTAVE_REPLACE_PREFIX$])
m4trace:configure.ac:2672: -1- AM_CONDITIONAL([AMCOND_RELOCATE_ALL], [test $OCTAVE_RELOCATE_ALL = yes])
m4trace:configure.ac:2672: -1- m4_pattern_allow([^AMCOND_RELOCATE_ALL_TRUE$])
m4trace:configure.ac:2672: -1- m4_pattern_allow([^AMCOND_RELOCATE_ALL_FALSE$])
m4trace:configure.ac:2672: -1- _AM_SUBST_NOTMAKE([AMCOND_RELOCATE_ALL_TRUE])
m4trace:configure.ac:2672: -1- _AM_SUBST_NOTMAKE([AMCOND_RELOCATE_ALL_FALSE])
m4trace:configure.ac:2681: -1- AM_CONDITIONAL([AMCOND_ENABLE_HG_ID], [test $ENABLE_HG_ID = yes])
m4trace:configure.ac:2681: -1- m4_pattern_allow([^AMCOND_ENABLE_HG_ID_TRUE$])
m4trace:configure.ac:2681: -1- m4_pattern_allow([^AMCOND_ENABLE_HG_ID_FALSE$])
m4trace:configure.ac:2681: -1- _AM_SUBST_NOTMAKE([AMCOND_ENABLE_HG_ID_TRUE])
m4trace:configure.ac:2681: -1- _AM_SUBST_NOTMAKE([AMCOND_ENABLE_HG_ID_FALSE])
m4trace:configure.ac:2690: -1- AM_CONDITIONAL([AMCOND_INSTALL_BUILD_LOGS], [test $install_build_logs = yes])
m4trace:configure.ac:2690: -1- m4_pattern_allow([^AMCOND_INSTALL_BUILD_LOGS_TRUE$])
m4trace:configure.ac:2690: -1- m4_pattern_allow([^AMCOND_INSTALL_BUILD_LOGS_FALSE$])
m4trace:configure.ac:2690: -1- _AM_SUBST_NOTMAKE([AMCOND_INSTALL_BUILD_LOGS_TRUE])
m4trace:configure.ac:2690: -1- _AM_SUBST_NOTMAKE([AMCOND_INSTALL_BUILD_LOGS_FALSE])
m4trace:configure.ac:2717: -1- m4_pattern_allow([^OCTAVE_ENABLE_LIB_VISIBILITY_FLAGS$])
m4trace:configure.ac:2727: -1- AM_CONDITIONAL([AMCOND_LIB_VISIBILITY_FLAGS], [test $ENABLE_LIB_VISIBILITY_FLAGS = yes])
m4trace:configure.ac:2727: -1- m4_pattern_allow([^AMCOND_LIB_VISIBILITY_FLAGS_TRUE$])
m4trace:configure.ac:2727: -1- m4_pattern_allow([^AMCOND_LIB_VISIBILITY_FLAGS_FALSE$])
m4trace:configure.ac:2727: -1- _AM_SUBST_NOTMAKE([AMCOND_LIB_VISIBILITY_FLAGS_TRUE])
m4trace:configure.ac:2727: -1- _AM_SUBST_NOTMAKE([AMCOND_LIB_VISIBILITY_FLAGS_FALSE])
m4trace:configure.ac:2751: -1- m4_pattern_allow([^EXTERNAL_DLL_DEFS$])
m4trace:configure.ac:2752: -1- m4_pattern_allow([^OCTAVE_DLL_DEFS$])
m4trace:configure.ac:2753: -1- m4_pattern_allow([^OCTINTERP_DLL_DEFS$])
m4trace:configure.ac:2754: -1- m4_pattern_allow([^OCTGUI_DLL_DEFS$])
m4trace:configure.ac:2755: -1- m4_pattern_allow([^OCTGRAPHICS_DLL_DEFS$])
m4trace:configure.ac:2781: -1- OCTAVE_CC_FLAG([$flag], [
      WARN_CFLAGS="$WARN_CFLAGS $flag";
      AC_MSG_RESULT([adding $flag to WARN_CFLAGS])])
m4trace:configure.ac:2786: -1- OCTAVE_CXX_FLAG([$flag], [
      WARN_CXXFLAGS="$WARN_CXXFLAGS $flag";
      AC_MSG_RESULT([adding $flag to WARN_CXXFLAGS])])
m4trace:configure.ac:2807: -1- OCTAVE_CC_FLAG([$flag], [
      WARN_CFLAGS="$WARN_CFLAGS $flag";
      AC_MSG_RESULT([adding $flag to WARN_CFLAGS])])
m4trace:configure.ac:2812: -1- OCTAVE_CXX_FLAG([$flag], [
      WARN_CXXFLAGS="$WARN_CXXFLAGS $flag";
      AC_MSG_RESULT([adding $flag to WARN_CXXFLAGS])])
m4trace:configure.ac:2834: -1- m4_pattern_allow([^ADDRESS_SANITIZER_OPTIONS$])
m4trace:configure.ac:2837: -1- AM_CONDITIONAL([AMCOND_ADDRESS_SANITIZER_ENABLED], [test $try_address_sanitizer_flags = yes])
m4trace:configure.ac:2837: -1- m4_pattern_allow([^AMCOND_ADDRESS_SANITIZER_ENABLED_TRUE$])
m4trace:configure.ac:2837: -1- m4_pattern_allow([^AMCOND_ADDRESS_SANITIZER_ENABLED_FALSE$])
m4trace:configure.ac:2837: -1- _AM_SUBST_NOTMAKE([AMCOND_ADDRESS_SANITIZER_ENABLED_TRUE])
m4trace:configure.ac:2837: -1- _AM_SUBST_NOTMAKE([AMCOND_ADDRESS_SANITIZER_ENABLED_FALSE])
m4trace:configure.ac:2844: -1- OCTAVE_CC_FLAG([$flag], [
      WARN_CFLAGS="$WARN_CFLAGS $flag";
      AC_MSG_RESULT([adding $flag to WARN_CFLAGS])])
m4trace:configure.ac:2849: -1- OCTAVE_CXX_FLAG([$flag], [
      WARN_CXXFLAGS="$WARN_CXXFLAGS $flag";
      AC_MSG_RESULT([adding $flag to WARN_CXXFLAGS])])
m4trace:configure.ac:2855: -1- OCTAVE_CC_FLAG([$flag], [
      WARN_LDFLAGS="$WARN_LDFLAGS $flag";
      AC_MSG_RESULT([adding $flag to WARN_LDFLAGS])])
m4trace:configure.ac:2860: -1- m4_pattern_allow([^ADDRESS_SANITIZER_ENABLED$])
m4trace:configure.ac:2862: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:2863: -1- m4_pattern_allow([^WARN_CXXFLAGS$])
m4trace:configure.ac:2864: -1- m4_pattern_allow([^WARN_LDFLAGS$])
m4trace:configure.ac:2883: -1- m4_pattern_allow([^HAVE_PRAGMA_GCC_DIAGNOSTIC$])
m4trace:configure.ac:2899: -1- m4_pattern_allow([^HAVE_PRAGMA_GCC_VISIBILITY$])
m4trace:configure.ac:2905: -1- OCTAVE_CC_FLAG([-Wimplicit-fallthrough], [AC_DEFINE(HAVE_WARN_IMPLICIT_FALLTHROUGH, 1,
      [Define to 1 if compiler supports -Wimplicit-fallthrough warning])])
m4trace:configure.ac:2905: -1- m4_pattern_allow([^HAVE_WARN_IMPLICIT_FALLTHROUGH$])
m4trace:configure.ac:2932: -1- m4_pattern_allow([^GNULIB_LINK_DEPS$])
m4trace:configure.ac:2944: -1- m4_pattern_allow([^LIBOCTAVE_LINK_DEPS$])
m4trace:configure.ac:2945: -1- m4_pattern_allow([^LIBOCTAVE_LINK_OPTS$])
m4trace:configure.ac:2961: -1- m4_pattern_allow([^OCTAVE_LINK_ALL_DEPS$])
m4trace:configure.ac:2983: -1- m4_pattern_allow([^LIBOCTINTERP_LINK_DEPS$])
m4trace:configure.ac:2984: -1- m4_pattern_allow([^LIBOCTINTERP_LINK_OPTS$])
m4trace:configure.ac:2986: -1- m4_pattern_allow([^OCTAVE_LINK_DEPS$])
m4trace:configure.ac:2987: -1- m4_pattern_allow([^OCTAVE_LINK_OPTS$])
m4trace:configure.ac:2989: -1- m4_pattern_allow([^OCT_LINK_DEPS$])
m4trace:configure.ac:2990: -1- m4_pattern_allow([^OCT_LINK_OPTS$])
m4trace:configure.ac:2992: -1- m4_pattern_allow([^OCT_GUI_LINK_DEPS$])
m4trace:configure.ac:2993: -1- m4_pattern_allow([^OCT_GUI_LINK_OPTS$])
m4trace:configure.ac:2995: -1- m4_pattern_allow([^MKOCTFILE_OCTAVE_LINK_DEPS$])
m4trace:configure.ac:2996: -1- m4_pattern_allow([^MKOCTFILE_OCT_LINK_DEPS$])
m4trace:configure.ac:3017: -1- m4_pattern_allow([^LIBOCTGUI_LINK_DEPS$])
m4trace:configure.ac:3018: -1- m4_pattern_allow([^LIBOCTGUI_LINK_OPTS$])
m4trace:configure.ac:3020: -1- m4_pattern_allow([^OCTAVE_GUI_LINK_DEPS$])
m4trace:configure.ac:3021: -1- m4_pattern_allow([^OCTAVE_GUI_LINK_OPTS$])
m4trace:configure.ac:3118: -1- m4_pattern_allow([^AUTOCONF_SUBST_VARS$])
m4trace:configure.ac:3119: -1- m4_pattern_allow([^ac_config_files$])
m4trace:configure.ac:3120: -1- m4_pattern_allow([^ac_config_headers$])
m4trace:configure.ac:3145: -1- OCTAVE_CONFIG_MOVE_IF_CHANGE_FILES([
  liboctave/external/mk-f77-def.sh
  liboctave/mk-version-h.sh
  libinterp/corefcn/mk-mxtypes-h.sh
  build-aux/subst-config-vals.sh
  build-aux/subst-cross-config-vals.sh
  build-aux/subst-script-vals.sh])
m4trace:configure.ac:3153: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:3153: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:3153: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:3153: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:3153: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:3153: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:3153: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:3153: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:3153: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:3153: -1- m4_pattern_allow([^gltests_LIBOBJS$])
m4trace:configure.ac:3153: -1- m4_pattern_allow([^gltests_LTLIBOBJS$])
m4trace:configure.ac:3153: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:3153: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:3153: -1- AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles])
m4trace:configure.ac:3153: -1- _LT_PROG_LTMAIN
m4trace:configure.ac:3305: -1- OCTAVE_CONFIGURE_WARNING_SUMMARY
